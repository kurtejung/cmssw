// Class: ReadBDTG
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.0         [262656]
ROOT Release   : 5.34/30       [336414]
Creator        : kjung
Date           : Thu Apr 21 16:56:02 2016
Host           : Darwin Kurt-Jungs-MacBook-Pro.local 14.3.0 Darwin Kernel Version 14.3.0: Mon Mar 23 11:59:05 PDT 2015; root:xnu-2782.20.48~5/RELEASE_X86_64 x86_64
Dir            : /Users/kjung/charmJets/pPb/tmvaTesting
Training events: 646659
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "2000" [Number of trees in the forest]
MaxDepth: "8" [Max depth of the decision tree allowed]
MinNodeSize: "5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "50" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
Shrinkage: "5.000000e-01" [Learning rate for GradBoost algorithm]
UseBaggedGrad: "True" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "3.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "5" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option]
BaggedSampleFraction: "3.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "ignorenegweightsintraining" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 20
trackMax/jtpt                 trackMax_D_jtpt               trackMax/jtpt                 trackMax                      units                             'F'    [0,47.2205314636]
trackHardSum/jtpt             trackHardSum_D_jtpt           trackHardSum/jtpt             trackHardSum                  units                             'F'    [0,47.4694213867]
trackHardN/jtpt               trackHardN_D_jtpt             trackHardN/jtpt               trackHardN                    units                             'F'    [0,0.158009335399]
chargedN/jtpt                 chargedN_D_jtpt               chargedN/jtpt                 chargedN                      units                             'F'    [0,1.86040794849]
chargedHardSum/jtpt           chargedHardSum_D_jtpt         chargedHardSum/jtpt           chargedHardSum                units                             'F'    [0,3.94857025146]
chargedHardN/jtpt             chargedHardN_D_jtpt           chargedHardN/jtpt             chargedHardN                  units                             'F'    [0,0.158009335399]
photonN/jtpt                  photonN_D_jtpt                photonN/jtpt                  photonN                       units                             'F'    [0,1.73374676704]
photonHardSum/jtpt            photonHardSum_D_jtpt          photonHardSum/jtpt            photonHardSum                 units                             'F'    [0,2.483741045]
photonHardN/jtpt              photonHardN_D_jtpt            photonHardN/jtpt              photonHardN                   units                             'F'    [0,0.207149863243]
neutralN/jtpt                 neutralN_D_jtpt               neutralN/jtpt                 neutralN                      units                             'F'    [0,0.208033442497]
hcalSum/jtpt                  hcalSum_D_jtpt                hcalSum/jtpt                  hcalSum                       units                             'F'    [0,2.69965457916]
ecalSum/jtpt                  ecalSum_D_jtpt                ecalSum/jtpt                  ecalSum                       units                             'F'    [0,3.40169453621]
chargedMax/jtpt               chargedMax_D_jtpt             chargedMax/jtpt               chargedMax                    units                             'F'    [0,0.980084896088]
chargedSum/jtpt               chargedSum_D_jtpt             chargedSum/jtpt               chargedSum                    units                             'F'    [0,4.4954252243]
neutralMax/jtpt               neutralMax_D_jtpt             neutralMax/jtpt               neutralMax                    units                             'F'    [0,1.06544232368]
neutralSum/jtpt               neutralSum_D_jtpt             neutralSum/jtpt               neutralSum                    units                             'F'    [0,1.26892828941]
photonMax/jtpt                photonMax_D_jtpt              photonMax/jtpt                photonMax                     units                             'F'    [0,2.02898597717]
photonSum/jtpt                photonSum_D_jtpt              photonSum/jtpt                photonSum                     units                             'F'    [0,2.98977375031]
eSum/jtpt                     eSum_D_jtpt                   eSum/jtpt                     eSum                          units                             'F'    [0,1.35813510418]
muSum/jtpt                    muSum_D_jtpt                  muSum/jtpt                    muSum                         units                             'F'    [0,0.896171271801]
NSpec 10
refpt                         refpt                         refpt                         ref pT                        units                             'F'    [-999,862.445129395]
rawpt                         rawpt                         rawpt                         raw pT                        units                             'F'    [35.9885978699,1003.8939209]
refparton_flavorForB          refparton_flavorForB          refparton_flavorForB          jet flavor                    units                             'F'    [-5,21]
pthat                         pthat                         pthat                         pthat                         units                             'F'    [30.000793457,852.989501953]
bin                           bin                           bin                           centrality                    units                             'F'    [0,198]
jtpt                          jtpt                          jtpt                          Jet pT                        units                             'F'    [50.0000305176,1036.75964355]
jteta                         jteta                         jteta                         Jet eta                       units                             'F'    [-1.99999761581,1.99999964237]
jtphi                         jtphi                         jtphi                         Jet Phi                       units                             'F'    [-3.14159202576,3.14158964157]
closestGenJetPt               closestGenJetPt               closestGenJetPt               closestGenJetPt               units                             'F'    [0,862.445129395]
closestGenJetDR               closestGenJetDR               closestGenJetDR               closestGenJetDR               units                             'F'    [1.32472578116e-05,999]


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#define NN new BDTGNode
   
#ifndef BDTGNode__def
#define BDTGNode__def
   
class BDTGNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDTGNode ( BDTGNode* left,BDTGNode* right,
                          int selector, double cutValue, bool cutType, 
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTGNode();

   // test event if it decends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTGNode* GetRight( void )  {return fRight; };

   // test event if it decends the tree at this node to the left 
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTGNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTGNode*   fLeft;     // pointer to the left daughter node
   BDTGNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)   
   double                  fCutValue; // cut value appplied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
   BDTGNode::~BDTGNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
bool BDTGNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
bool BDTGNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDTG : public IClassifierReader {

 public:

   // constructor
   ReadBDTG( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG" ),
        fNvars( 20 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "trackMax/jtpt", "trackHardSum/jtpt", "trackHardN/jtpt", "chargedN/jtpt", "chargedHardSum/jtpt", "chargedHardN/jtpt", "photonN/jtpt", "photonHardSum/jtpt", "photonHardN/jtpt", "neutralN/jtpt", "hcalSum/jtpt", "ecalSum/jtpt", "chargedMax/jtpt", "chargedSum/jtpt", "neutralMax/jtpt", "neutralSum/jtpt", "photonMax/jtpt", "photonSum/jtpt", "eSum/jtpt", "muSum/jtpt" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;
      fVmin[9] = 0;
      fVmax[9] = 0;
      fVmin[10] = 0;
      fVmax[10] = 0;
      fVmin[11] = 0;
      fVmax[11] = 0;
      fVmin[12] = 0;
      fVmax[12] = 0;
      fVmin[13] = 0;
      fVmax[13] = 0;
      fVmin[14] = 0;
      fVmax[14] = 0;
      fVmin[15] = 0;
      fVmax[15] = 0;
      fVmin[16] = 0;
      fVmax[16] = 0;
      fVmin[17] = 0;
      fVmax[17] = 0;
      fVmin[18] = 0;
      fVmax[18] = 0;
      fVmin[19] = 0;
      fVmax[19] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';
      fType[9] = 'F';
      fType[10] = 'F';
      fType[11] = 'F';
      fType[12] = 'F';
      fType[13] = 'F';
      fType[14] = 'F';
      fType[15] = 'F';
      fType[16] = 'F';
      fType[17] = 'F';
      fType[18] = 'F';
      fType[19] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[20];
   double fVmax[20];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[20];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41158,-0.00305445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120488,-0.0103837) , 
3, 0.526625, 1, 0, 0.162481,-0.337519) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998958,0.0397771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983465,0.0405605) , 
16, 0.0878413, 1, 0, 0.990576,0.490576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912865,0.0225531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831727,0.0162133) , 
3, 0.377806, 1, 0, 0.879281,0.379281) , 
3, 0.231589, 1, 0, 0.942675,0.442675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448898,-0.00164779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73824,0.00933311) , 
12, 0.148321, 1, 0, 0.566593,0.0665928) , 
3, 0.507823, 1, 0, 0.775575,0.275575) , 
4, 0.0774229, 1, 0, 0.501202,0.00120238)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528284,0.00111153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183642,-0.00880124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0990301,-0.0108102) , 
7, 0.681811, 1, 0, 0.139743,-0.355887) , 
17, 0.762099, 1, 0, 0.1833,-0.312688) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999526,0.0435513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993518,0.0419677) , 
6, 0.144854, 1, 0, 0.996995,0.476905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945652,0.0289315) , 
3, 0.168394, 1, 0, 0.976104,0.457801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877962,0.0183955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740855,0.00949254) , 
15, 0.122643, 1, 0, 0.812179,0.306303) , 
3, 0.315346, 1, 0, 0.905628,0.392668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562193,0.00210193) , 
17, 0.849065, 1, 0, 0.815484,0.305449) , 
4, 0.0939201, 1, 0, 0.500337,-0.00269544)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691801,0.00770992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208496,-0.00807988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102766,-0.010667) , 
7, 0.659528, 1, 0, 0.154544,-0.336893) , 
17, 0.687808, 1, 0, 0.20799,-0.284608) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998723,0.0346094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987836,0.0340218) , 
15, 0.0990739, 1, 0, 0.993142,0.45624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965648,0.0282548) , 
12, 0.267127, 1, 0, 0.984137,0.446896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934569,0.0301315) , 
11, 0.488431, 1, 0, 0.967109,0.431689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821339,0.0146017) , 
3, 0.363867, 1, 0, 0.933624,0.403239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656622,0.00553365) , 
3, 0.543578, 1, 0, 0.834755,0.313252) , 
4, 0.10792, 1, 0, 0.509821,0.00330314)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577211,0.0030404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221459,-0.00775707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0944682,-0.0105921) , 
7, 0.577204, 1, 0, 0.139953,-0.347298) , 
10, 0.475336, 1, 0, 0.201287,-0.287617) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99935,0.0342206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970484,0.0281233) , 
3, 0.154072, 1, 0, 0.988178,0.434557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940885,0.0305522) , 
11, 0.507208, 1, 0, 0.975235,0.423058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830339,0.0151756) , 
3, 0.310045, 1, 0, 0.935857,0.391111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603747,0.00343661) , 
3, 0.507419, 1, 0, 0.798553,0.269434) , 
12, 0.0867607, 1, 0, 0.49573,-0.0129991)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706763,0.00912631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201924,-0.00812837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0963799,-0.0104988) , 
16, 0.294331, 1, 0, 0.147033,-0.336394) , 
3, 0.437743, 1, 0, 0.204015,-0.281583) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985171,0.0333627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999319,0.0313569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996986,0.035723) , 
16, 0.0786381, 1, 0, 0.998149,0.429605) , 
5, 0.0328532, 1, 0, 0.993649,0.424988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946665,0.0253808) , 
6, 0.221099, 1, 0, 0.975856,0.412648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812086,0.0125539) , 
3, 0.414037, 1, 0, 0.929995,0.379096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608672,0.00352411) , 
17, 0.78511, 1, 0, 0.836503,0.297615) , 
4, 0.108214, 1, 0, 0.513732,0.00203883)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679163,0.00719729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23015,-0.00732761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102208,-0.0101645) , 
7, 0.621925, 1, 0, 0.160311,-0.319404) , 
3, 0.424228, 1, 0, 0.214687,-0.268734) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999617,0.0322208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998818,0.0355157) , 
10, 0.19521, 1, 0, 0.999212,0.414945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971223,0.0320295) , 
10, 0.33186, 1, 0, 0.988013,0.403069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90412,0.0188041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806958,0.0133849) , 
11, 0.645234, 1, 0, 0.849774,0.308469) , 
3, 0.235895, 1, 0, 0.921837,0.357783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608191,0.00334484) , 
3, 0.633196, 1, 0, 0.829079,0.280455) , 
1, 0.128265, 1, 0, 0.502796,-0.011201)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587923,0.00349044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141444,-0.00915212) , 
3, 0.494933, 1, 0, 0.193008,-0.284328) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999047,0.0336091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971625,0.0331374) , 
16, 0.0910176, 1, 0, 0.985041,0.382716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930862,0.0191117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863638,0.0187111) , 
7, 0.111404, 1, 0, 0.899411,0.33675) , 
3, 0.219048, 1, 0, 0.948667,0.36319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775588,0.0101819) , 
3, 0.503756, 1, 0, 0.909242,0.337762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597296,0.00300156) , 
17, 0.849065, 1, 0, 0.831005,0.274471) , 
4, 0.10792, 1, 0, 0.495432,-0.0194459)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731177,0.0102522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104889,-0.00994106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239082,-0.00689967) , 
12, 0.0606144, 1, 0, 0.158345,-0.313482) , 
3, 0.423421, 1, 0, 0.217073,-0.260316) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993773,0.0350314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968618,0.0250863) , 
9, 0.0281573, 1, 0, 0.981258,0.373699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954933,0.0231286) , 
12, 0.254235, 1, 0, 0.97214,0.363626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838966,0.013833) , 
3, 0.353241, 1, 0, 0.941166,0.345811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644095,0.00461057) , 
3, 0.527632, 1, 0, 0.830703,0.264517) , 
12, 0.0960868, 1, 0, 0.50284,-0.0159019)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619234,0.00447318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190269,-0.00789701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0970618,-0.00995888) , 
16, 0.295765, 1, 0, 0.142188,-0.323355) , 
3, 0.46269, 1, 0, 0.192508,-0.278123) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998637,0.0308878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989167,0.0315176) , 
2, 0.0390201, 1, 0, 0.994382,0.362581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922667,0.0183626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862183,0.0163583) , 
7, 0.117294, 1, 0, 0.899294,0.31716) , 
3, 0.190229, 1, 0, 0.946648,0.33978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748782,0.00922396) , 
17, 0.635469, 1, 0, 0.911308,0.315155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591762,0.00256859) , 
3, 0.636476, 1, 0, 0.818861,0.245466) , 
4, 0.108214, 1, 0, 0.494665,-0.0255399)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690157,0.0078587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205049,-0.00751822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103511,-0.00967624) , 
16, 0.294331, 1, 0, 0.151662,-0.31054) , 
3, 0.437743, 1, 0, 0.205252,-0.263363) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991783,0.0282565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96969,0.0233941) , 
12, 0.259923, 1, 0, 0.983762,0.349643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957859,0.0242505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885158,0.0192016) , 
10, 0.260001, 1, 0, 0.923662,0.311502) , 
11, 0.471794, 1, 0, 0.958173,0.333404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78729,0.0104369) , 
3, 0.437213, 1, 0, 0.908332,0.308331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550297,0.00136731) , 
17, 0.863112, 1, 0, 0.819133,0.24137) , 
12, 0.0884941, 1, 0, 0.506783,-0.0154433)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595628,0.00363654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201469,-0.00749945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100676,-0.00968682) , 
10, 0.70273, 1, 0, 0.144721,-0.313771) , 
17, 0.736937, 1, 0, 0.193124,-0.270367) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984723,0.0282678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978903,0.0250843) , 
6, 0.170049, 1, 0, 0.982066,0.341297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923631,0.0177179) , 
9, 0.0387163, 1, 0, 0.965733,0.327465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904981,0.0188439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793268,0.0111975) , 
10, 0.406498, 1, 0, 0.856086,0.267693) , 
17, 0.443635, 1, 0, 0.924109,0.304774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574916,0.00186164) , 
3, 0.61546, 1, 0, 0.81713,0.22781) , 
4, 0.108127, 1, 0, 0.493185,-0.0308117)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587438,0.00296201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131865,-0.00886786) , 
3, 0.465287, 1, 0, 0.178842,-0.27948) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993806,0.0312699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993923,0.0267196) , 
3, 0.158222, 1, 0, 0.993851,0.334629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952702,0.0251837) , 
10, 0.425264, 1, 0, 0.982697,0.325867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90187,0.0176834) , 
6, 0.273882, 1, 0, 0.95688,0.314595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773477,0.00954323) , 
3, 0.494766, 1, 0, 0.91521,0.295234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540444,0.000873287) , 
17, 0.847292, 1, 0, 0.813993,0.222365) , 
4, 0.0939201, 1, 0, 0.491624,-0.032345)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580234,0.00285028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193418,-0.00744488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.091116,-0.00970181) , 
16, 0.315226, 1, 0, 0.142207,-0.307553) , 
17, 0.744677, 1, 0, 0.195301,-0.261302) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988052,0.0265362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949114,0.0205014) , 
3, 0.207801, 1, 0, 0.973081,0.318628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97203,0.0252608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848932,0.0146497) , 
11, 0.455015, 1, 0, 0.912054,0.275792) , 
10, 0.30333, 1, 0, 0.945485,0.299257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8212,0.0110519) , 
10, 0.515664, 1, 0, 0.913073,0.278568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583891,0.00214653) , 
3, 0.650501, 1, 0, 0.821278,0.218104) , 
4, 0.108214, 1, 0, 0.494025,-0.0325237)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827906,0.014381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103517,-0.00936753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25097,-0.00617016) , 
12, 0.0591448, 1, 0, 0.170458,-0.281943) , 
3, 0.401264, 1, 0, 0.234642,-0.228638) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980365,0.0271672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95242,0.0191275) , 
13, 0.711922, 1, 0, 0.969041,0.30956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94962,0.0220029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78732,0.010195) , 
11, 0.640121, 1, 0, 0.884543,0.25998) , 
10, 0.333827, 1, 0, 0.929998,0.286651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821715,0.0104271) , 
15, 0.198148, 1, 0, 0.908742,0.269599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606008,0.00298741) , 
17, 0.837977, 1, 0, 0.843186,0.229097) , 
4, 0.154846, 1, 0, 0.495209,-0.0326443)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64415,0.00520704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142831,-0.00831167) , 
3, 0.450009, 1, 0, 0.192291,-0.25575) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981039,0.0265221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930443,0.0193626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967091,0.0253688) , 
8, 0.0186082, 1, 0, 0.951181,0.286099) , 
8, 0.0136496, 1, 0, 0.963354,0.297236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885915,0.0135104) , 
9, 0.0454464, 1, 0, 0.944352,0.284362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799043,0.0095452) , 
8, 0.0366413, 1, 0, 0.91827,0.267688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564355,0.00151596) , 
3, 0.632417, 1, 0, 0.810138,0.199312) , 
4, 0.0939201, 1, 0, 0.49592,-0.0321182)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595571,0.00402126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231002,-0.00651023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101569,-0.00919532) , 
16, 0.248556, 1, 0, 0.148226,-0.293101) , 
10, 0.410578, 1, 0, 0.198004,-0.248965) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951813,0.024723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983908,0.0228142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984064,0.0248061) , 
16, 0.0731605, 1, 0, 0.983987,0.300567) , 
9, 0.0175983, 1, 0, 0.971362,0.285299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930765,0.0173458) , 
14, 0.114894, 1, 0, 0.96092,0.277802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899288,0.0162067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75001,0.00746568) , 
10, 0.400603, 1, 0, 0.827468,0.216584) , 
17, 0.477221, 1, 0, 0.914767,0.256631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576944,0.00170784) , 
17, 0.78511, 1, 0, 0.817219,0.196498) , 
4, 0.108127, 1, 0, 0.492747,-0.0369271)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510187,0.000461693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124135,-0.00854266) , 
3, 0.491516, 1, 0, 0.168446,-0.269549) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972251,0.023985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982173,0.0250283) , 
2, 0.0262224, 1, 0, 0.97882,0.283589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922399,0.017943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894432,0.0140322) , 
0, 0.25308, 1, 0, 0.9104,0.245373) , 
13, 0.643804, 1, 0, 0.94402,0.264152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727067,0.00684091) , 
3, 0.533033, 1, 0, 0.893799,0.243921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478637,-0.000703701) , 
17, 0.887269, 1, 0, 0.776005,0.16865) , 
4, 0.0774229, 1, 0, 0.501817,-0.0291063)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595489,0.00344384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192519,-0.00708647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100602,-0.00905741) , 
10, 0.714604, 1, 0, 0.141441,-0.289817) , 
17, 0.74515, 1, 0, 0.193463,-0.246568) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956724,0.0241756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82119,0.00944405) , 
6, 0.272373, 1, 0, 0.890352,0.221356) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977914,0.0237847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949202,0.0192521) , 
13, 0.789155, 1, 0, 0.967094,0.278981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917517,0.0167236) , 
5, 0.055873, 1, 0, 0.951572,0.267333) , 
4, 0.3174, 1, 0, 0.931506,0.252263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574789,0.00141075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736061,0.00797578) , 
4, 0.266586, 1, 0, 0.638918,0.0998727) , 
17, 0.702923, 1, 0, 0.830607,0.199711) , 
4, 0.103268, 1, 0, 0.499612,-0.0321297)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530974,0.00144772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135706,-0.00817714) , 
17, 0.794323, 1, 0, 0.183533,-0.25008) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989758,0.0252695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851997,0.0106113) , 
3, 0.206152, 1, 0, 0.92119,0.230536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968558,0.026592) , 
7, 0.168033, 1, 0, 0.938006,0.246422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843306,0.010978) , 
8, 0.0347902, 1, 0, 0.915677,0.233382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964034,0.0205331) , 
2, 0.0493111, 1, 0, 0.930951,0.245206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756332,0.00704356) , 
10, 0.606664, 1, 0, 0.904549,0.230243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577707,0.0017004) , 
3, 0.686469, 1, 0, 0.813015,0.179764) , 
4, 0.0939201, 1, 0, 0.502441,-0.0323128)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61635,0.00379685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144747,-0.00790823) , 
3, 0.461157, 1, 0, 0.196277,-0.23806) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994673,0.0270757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962599,0.0202202) , 
13, 0.477152, 1, 0, 0.976348,0.240995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969153,0.0227187) , 
13, 0.645705, 1, 0, 0.973319,0.249186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858651,0.0118674) , 
6, 0.357595, 1, 0, 0.950397,0.240183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757097,0.00745588) , 
3, 0.500989, 1, 0, 0.916123,0.228213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57417,0.0014338) , 
3, 0.670985, 1, 0, 0.826228,0.178973) , 
4, 0.108127, 1, 0, 0.493598,-0.0412307)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586596,0.00335824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171166,-0.00742266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.093162,-0.00894902) , 
10, 0.714604, 1, 0, 0.126803,-0.291457) , 
17, 0.762479, 1, 0, 0.17958,-0.248158) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999191,0.0283338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976383,0.0214917) , 
14, 0.0432648, 1, 0, 0.985917,0.238281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939393,0.0155441) , 
3, 0.25445, 1, 0, 0.971647,0.247827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909356,0.0153915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777315,0.00795835) , 
10, 0.338972, 1, 0, 0.836058,0.195914) , 
17, 0.474107, 1, 0, 0.926019,0.230358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605622,0.00269859) , 
17, 0.780049, 1, 0, 0.827415,0.182476) , 
4, 0.0939201, 1, 0, 0.50983,-0.0286316)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578728,0.00239333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181475,-0.00700954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0887755,-0.00903646) , 
7, 0.641309, 1, 0, 0.128896,-0.287999) , 
17, 0.761421, 1, 0, 0.181457,-0.247503) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99452,0.0262908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994458,0.022328) , 
5, 0.0373971, 1, 0, 0.994488,0.240463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937186,0.0174585) , 
13, 0.702063, 1, 0, 0.974702,0.228669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938271,0.016309) , 
6, 0.300389, 1, 0, 0.962706,0.242223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908505,0.0153147) , 
16, 0.185878, 1, 0, 0.952581,0.235596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604677,0.00232617) , 
3, 0.543578, 1, 0, 0.82177,0.171527) , 
12, 0.0875632, 1, 0, 0.491186,-0.0448119)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491535,0.000870902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190817,-0.00685234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0931873,-0.00873142) , 
16, 0.288155, 1, 0, 0.134454,-0.278274) , 
10, 0.468487, 1, 0, 0.182942,-0.237246) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824424,0.00837632) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993842,0.0217472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993166,0.0208956) , 
13, 0.653304, 1, 0, 0.993508,0.237705) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892342,0.0143064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906112,0.0145617) , 
9, 0.018936, 1, 0, 0.900161,0.216406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861724,0.0107421) , 
12, 0.255686, 1, 0, 0.887976,0.201536) , 
11, 0.411852, 1, 0, 0.92807,0.215277) , 
4, 0.241468, 1, 0, 0.902978,0.199994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549548,0.000771313) , 
17, 0.837977, 1, 0, 0.807213,0.151868) , 
4, 0.0940064, 1, 0, 0.502024,-0.0383593)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635061,0.00430505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202838,-0.00650145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0963896,-0.00860187) , 
7, 0.640763, 1, 0, 0.146092,-0.264712) , 
3, 0.458706, 1, 0, 0.200177,-0.225062) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96154,0.0206169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993742,0.0215237) , 
2, 0.0487754, 1, 0, 0.977304,0.218771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918309,0.0159426) , 
6, 0.311076, 1, 0, 0.95672,0.23337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901495,0.0141727) , 
16, 0.153155, 1, 0, 0.942509,0.222138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911665,0.0128713) , 
0, 0.284174, 1, 0, 0.934832,0.211576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674448,0.00449126) , 
6, 0.587606, 1, 0, 0.861299,0.186163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560321,-6.62494e-05) , 
7, 0.434007, 1, 0, 0.824725,0.163332) , 
12, 0.0884941, 1, 0, 0.5075,-0.0339434)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55224,0.0014725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135834,-0.00776301) , 
3, 0.494933, 1, 0, 0.192141,-0.229825) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996284,0.0283431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949738,0.0200179) , 
3, 0.1446, 1, 0, 0.976464,0.2005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926532,0.0153614) , 
3, 0.259714, 1, 0, 0.959299,0.216636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903055,0.0115559) , 
9, 0.0432006, 1, 0, 0.946264,0.207911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696028,0.00519348) , 
17, 0.660043, 1, 0, 0.874422,0.18499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524248,-0.00115739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732351,0.00559063) , 
2, 0.0285667, 1, 0, 0.630914,0.0509483) , 
10, 0.594357, 1, 0, 0.810649,0.149885) , 
12, 0.0875632, 1, 0, 0.494363,-0.0442869)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607482,0.00366667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198106,-0.0062615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0949721,-0.00861885) , 
7, 0.673405, 1, 0, 0.145247,-0.258229) , 
17, 0.762479, 1, 0, 0.203505,-0.213969) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999319,0.0250787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960479,0.0174479) , 
14, 0.0626731, 1, 0, 0.980255,0.194364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950253,0.0162397) , 
3, 0.204724, 1, 0, 0.96768,0.208194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918824,0.0166573) , 
7, 0.192265, 1, 0, 0.951788,0.197937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569121,0.00058647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751825,0.006743) , 
4, 0.345631, 1, 0, 0.634868,0.0674663) , 
3, 0.470581, 1, 0, 0.81496,0.141607) , 
4, 0.108127, 1, 0, 0.499317,-0.041947)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539093,0.00252293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20835,-0.00617894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.097207,-0.00835527) , 
16, 0.280965, 1, 0, 0.142246,-0.258009) , 
10, 0.43998, 1, 0, 0.192758,-0.21656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676247,0.00353144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590634,-0.000455684) , 
14, 0.0765013, 1, 0, 0.626032,0.0274684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854121,0.0101852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887155,0.0125437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940169,0.0166565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804038,0.00778243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922686,0.0149119) , 
1, 0.350842, 1, 0, 0.875521,0.191755) , 
9, 0.02381, 1, 0, 0.89991,0.207549) , 
9, 0.010559, 1, 0, 0.897707,0.199797) , 
2, 0.0300529, 1, 0, 0.889336,0.189987) , 
4, 0.211976, 1, 0, 0.820299,0.147375) , 
4, 0.0940064, 1, 0, 0.504787,-0.0356024)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435236,-0.000553828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122823,-0.00783846) , 
10, 0.505327, 1, 0, 0.167626,-0.234449) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994601,0.0258886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998886,0.0240485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971668,0.0197319) , 
6, 0.146298, 1, 0, 0.987284,0.189157) , 
4, 0.307244, 1, 0, 0.989636,0.201888) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809222,0.00715112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897416,0.0123187) , 
5, 0.0395419, 1, 0, 0.853894,0.178699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757415,0.00479484) , 
7, 0.192782, 1, 0, 0.825952,0.15299) , 
3, 0.22271, 1, 0, 0.903064,0.176026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506635,-0.000253563) , 
17, 0.788684, 1, 0, 0.770873,0.114886) , 
4, 0.0774229, 1, 0, 0.506007,-0.0384955)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6661,0.00470612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0988679,-0.00834754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246227,-0.00536198) , 
12, 0.0607232, 1, 0, 0.159983,-0.243428) , 
17, 0.762479, 1, 0, 0.233935,-0.19199) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988159,0.0244918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958265,0.015776) , 
9, 0.0281573, 1, 0, 0.973663,0.184573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921553,0.0143576) , 
6, 0.323613, 1, 0, 0.957257,0.197665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969904,0.020909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800427,0.00656841) , 
6, 0.234404, 1, 0, 0.888694,0.151635) , 
16, 0.126266, 1, 0, 0.93298,0.181366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623536,0.00229643) , 
3, 0.610424, 1, 0, 0.842,0.146709) , 
4, 0.154846, 1, 0, 0.49955,-0.0440391)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755585,0.00902809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25002,-0.00511269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106733,-0.0080056) , 
16, 0.26422, 1, 0, 0.167995,-0.231944) , 
3, 0.423421, 1, 0, 0.225471,-0.192446) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989269,0.0200092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948159,0.0190464) , 
11, 0.390027, 1, 0, 0.971675,0.175511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910035,0.0130148) , 
6, 0.306847, 1, 0, 0.952958,0.186991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733269,0.00592112) , 
17, 0.643985, 1, 0, 0.904593,0.17801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605563,0.000253071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787563,0.00717597) , 
1, 0.259907, 1, 0, 0.698199,0.0718177) , 
8, 0.0327103, 1, 0, 0.846011,0.147869) , 
4, 0.144169, 1, 0, 0.500719,-0.0414952)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690857,0.00660453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198297,-0.00594834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108848,-0.00780609) , 
10, 0.723205, 1, 0, 0.149865,-0.2379) , 
3, 0.437743, 1, 0, 0.202399,-0.200721) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999565,0.0272446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943395,0.0138786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900316,0.0106217) , 
7, 0.125113, 1, 0, 0.927637,0.150715) , 
3, 0.124466, 1, 0, 0.952095,0.161079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89271,0.0131014) , 
11, 0.647824, 1, 0, 0.938121,0.171422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676532,0.00423892) , 
17, 0.701296, 1, 0, 0.868282,0.154018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621329,0.000867186) , 
10, 0.658855, 1, 0, 0.82833,0.132624) , 
4, 0.108127, 1, 0, 0.497302,-0.0436683)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582338,0.00300652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180931,-0.00626964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100437,-0.00794277) , 
10, 0.714604, 1, 0, 0.13614,-0.246104) , 
17, 0.762099, 1, 0, 0.185608,-0.210417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591987,0.000102396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978512,0.0190701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934449,0.0157607) , 
11, 0.53684, 1, 0, 0.958436,0.183195) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955515,0.0184851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959666,0.0165216) , 
15, 0.140776, 1, 0, 0.957603,0.173731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757407,0.00403091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722445,0.00557226) , 
6, 0.473506, 1, 0, 0.73429,0.115252) , 
13, 0.845816, 1, 0, 0.82693,0.139511) , 
10, 0.299055, 1, 0, 0.868962,0.153473) , 
4, 0.182483, 1, 0, 0.81026,0.121501) , 
4, 0.0940064, 1, 0, 0.498628,-0.0440895)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595057,0.0024898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.099673,-0.00796363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206224,-0.00565777) , 
12, 0.0574401, 1, 0, 0.147234,-0.235814) , 
17, 0.762099, 1, 0, 0.208042,-0.195255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606386,-0.000475019) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999224,0.0273734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986842,0.0202718) , 
13, 0.527539, 1, 0, 0.992057,0.164103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95771,0.0171961) , 
3, 0.200105, 1, 0, 0.982108,0.173901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708003,0.00425018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852569,0.0106065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819118,0.00727265) , 
12, 0.220509, 1, 0, 0.831216,0.160167) , 
12, 0.162454, 1, 0, 0.791834,0.139724) , 
13, 0.784584, 1, 0, 0.880649,0.155677) , 
4, 0.188168, 1, 0, 0.836896,0.128984) , 
4, 0.12209, 1, 0, 0.494301,-0.0476587)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619045,0.00545721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212493,-0.00574105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101399,-0.00781949) , 
16, 0.267072, 1, 0, 0.144864,-0.237379) , 
10, 0.429446, 1, 0, 0.200293,-0.193859) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990251,0.0213752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968852,0.0157082) , 
12, 0.205541, 1, 0, 0.979461,0.151182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992014,0.0210156) , 
10, 0.372696, 1, 0, 0.984262,0.162767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846736,0.00805495) , 
17, 0.423646, 1, 0, 0.934507,0.145207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871786,0.0110767) , 
13, 0.87899, 1, 0, 0.919408,0.156028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586451,0.00105144) , 
3, 0.65411, 1, 0, 0.824817,0.12012) , 
4, 0.10792, 1, 0, 0.501351,-0.0425028)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505678,0.00142234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157861,-0.00681989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115325,-0.0075362) , 
10, 0.740252, 1, 0, 0.134492,-0.242857) , 
10, 0.507527, 1, 0, 0.200593,-0.192807) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935265,0.0129562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963907,0.0164715) , 
8, 0.0169891, 1, 0, 0.949579,0.143249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985761,0.0223604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918712,0.0149767) , 
6, 0.245422, 1, 0, 0.954703,0.180521) , 
10, 0.301773, 1, 0, 0.952396,0.163737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819024,0.00755802) , 
7, 0.316067, 1, 0, 0.926662,0.154029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826926,0.00540467) , 
9, 0.0518035, 1, 0, 0.907384,0.142279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566389,0.000304124) , 
3, 0.672421, 1, 0, 0.815058,0.106109) , 
4, 0.108127, 1, 0, 0.496268,-0.0489718)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616645,0.0046184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27349,-0.00463903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108306,-0.00757596) , 
7, 0.438307, 1, 0, 0.149872,-0.229545) , 
10, 0.407527, 1, 0, 0.19798,-0.194744) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922212,0.0108787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983258,0.0196574) , 
4, 0.412305, 1, 0, 0.956687,0.138217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981599,0.0190192) , 
8, 0.0187436, 1, 0, 0.964203,0.145524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959078,0.0163885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832818,0.00844808) , 
10, 0.36426, 1, 0, 0.900038,0.195113) , 
11, 0.58288, 1, 0, 0.939479,0.164632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643749,0.0034832) , 
17, 0.79445, 1, 0, 0.874462,0.148507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528663,-0.00124145) , 
10, 0.688147, 1, 0, 0.81358,0.116258) , 
12, 0.0861993, 1, 0, 0.505794,-0.0392359)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420081,-0.00103928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114253,-0.00737946) , 
17, 0.861169, 1, 0, 0.168796,-0.209402) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696777,0.00418064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614061,0.000566461) , 
5, 0.0192635, 1, 0, 0.654467,0.0539168) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95591,0.0158044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975743,0.0176066) , 
5, 0.0500953, 1, 0, 0.965508,0.142879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855242,0.0106666) , 
11, 0.596151, 1, 0, 0.916727,0.171625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855094,0.00849588) , 
16, 0.129812, 1, 0, 0.896773,0.156565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881989,0.00825032) , 
12, 0.302393, 1, 0, 0.893623,0.14615) , 
4, 0.209196, 1, 0, 0.83238,0.122531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450662,-0.00290176) , 
7, 0.473043, 1, 0, 0.783097,0.096146) , 
4, 0.0814414, 1, 0, 0.503134,-0.0431047)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553872,0.00233105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229465,-0.00535375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0944152,-0.00779287) , 
7, 0.571591, 1, 0, 0.144101,-0.229959) , 
10, 0.468487, 1, 0, 0.207721,-0.184866) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990238,0.0197655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985627,0.019328) , 
16, 0.0720557, 1, 0, 0.988191,0.147564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92832,0.0136342) , 
11, 0.437076, 1, 0, 0.969346,0.136652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897996,0.0105188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896826,0.0126078) , 
16, 0.0840973, 1, 0, 0.897405,0.176946) , 
6, 0.30162, 1, 0, 0.941958,0.151992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855023,0.00862021) , 
16, 0.193454, 1, 0, 0.926777,0.144449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591644,0.000833705) , 
3, 0.651401, 1, 0, 0.831056,0.109941) , 
4, 0.125227, 1, 0, 0.492086,-0.0503752)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587838,0.00412484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216487,-0.00530236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0957383,-0.00764282) , 
7, 0.625305, 1, 0, 0.145791,-0.220768) , 
10, 0.468487, 1, 0, 0.210969,-0.17269) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979473,0.018442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950196,0.0147264) , 
11, 0.426741, 1, 0, 0.967456,0.146186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986057,0.0218591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849532,0.00551087) , 
13, 0.55524, 1, 0, 0.917845,0.110898) , 
16, 0.112838, 1, 0, 0.948264,0.132535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875294,0.012126) , 
11, 0.750509, 1, 0, 0.934693,0.142459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604893,0.00126045) , 
3, 0.615472, 1, 0, 0.8337,0.109533) , 
4, 0.108127, 1, 0, 0.50802,-0.0380658)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493367,0.00100422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157056,-0.00644933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107277,-0.00730586) , 
3, 0.716803, 1, 0, 0.128021,-0.230839) , 
10, 0.473825, 1, 0, 0.179339,-0.194533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76116,0.00342046) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992876,0.021871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890477,0.00742357) , 
3, 0.175, 1, 0, 0.946343,0.107835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968759,0.0150104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94486,0.0156433) , 
17, 0.274037, 1, 0, 0.956813,0.14127) , 
10, 0.346668, 1, 0, 0.951075,0.122947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850273,0.00955631) , 
3, 0.459829, 1, 0, 0.932093,0.132342) , 
4, 0.211981, 1, 0, 0.895873,0.117633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532269,-0.000639134) , 
3, 0.687153, 1, 0, 0.799891,0.0816754) , 
4, 0.0940064, 1, 0, 0.489263,-0.0565858)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609593,0.00452658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138613,-0.00660646) , 
3, 0.474222, 1, 0, 0.18655,-0.186833) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987639,0.0204419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975114,0.0178949) , 
4, 0.346686, 1, 0, 0.980273,0.136804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927123,0.0138192) , 
6, 0.338782, 1, 0, 0.966381,0.152628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923506,0.0120766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724144,0.00237414) , 
7, 0.16022, 1, 0, 0.840031,0.102103) , 
10, 0.437767, 1, 0, 0.921594,0.134718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560521,6.02455e-05) , 
3, 0.671399, 1, 0, 0.815775,0.0957471) , 
4, 0.097672, 1, 0, 0.493835,-0.0488336)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412938,-0.00089892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115072,-0.00700712) , 
17, 0.884324, 1, 0, 0.167514,-0.196047) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811024,0.00761228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425549,-0.00301818) , 
10, 0.436848, 1, 0, 0.566206,-0.00768296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831934,0.00514477) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930731,0.0107697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965336,0.0139131) , 
14, 0.0376986, 1, 0, 0.952028,0.125517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911143,0.00983937) , 
16, 0.105221, 1, 0, 0.938615,0.114965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80051,0.00854807) , 
11, 0.85034, 1, 0, 0.899237,0.134976) , 
2, 0.0304846, 1, 0, 0.885609,0.122264) , 
4, 0.229235, 1, 0, 0.765778,0.073512) , 
4, 0.0774229, 1, 0, 0.498591,-0.0468744)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50228,0.00139385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185436,-0.00565708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0909981,-0.00743333) , 
16, 0.288155, 1, 0, 0.129816,-0.220381) , 
10, 0.468487, 1, 0, 0.179236,-0.186175) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979569,0.0167323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992661,0.0216621) , 
17, 0.23447, 1, 0, 0.98579,0.126897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899534,0.0103832) , 
11, 0.478622, 1, 0, 0.945738,0.115771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857316,0.00899565) , 
6, 0.429275, 1, 0, 0.928761,0.122481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866156,0.00646511) , 
14, 0.131112, 1, 0, 0.916121,0.114364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558575,-0.000246859) , 
3, 0.615692, 1, 0, 0.798522,0.0744315) , 
4, 0.0940064, 1, 0, 0.48307,-0.0583162)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479314,0.000159332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1301,-0.006542) , 
3, 0.493991, 1, 0, 0.173155,-0.186867) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95892,0.015942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944296,0.0118235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961752,0.0153612) , 
10, 0.254954, 1, 0, 0.951395,0.114382) , 
1, 0.280096, 1, 0, 0.953698,0.133741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968545,0.0153917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764824,0.00342029) , 
17, 0.41495, 1, 0, 0.880133,0.101736) , 
10, 0.361194, 1, 0, 0.922943,0.12036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589502,0.00159059) , 
17, 0.783801, 1, 0, 0.84147,0.101484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529901,-0.0012927) , 
10, 0.635213, 1, 0, 0.769796,0.0703349) , 
4, 0.0774229, 1, 0, 0.507393,-0.0427827)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24383,-0.00452747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102469,-0.00716136) , 
10, 0.676893, 1, 0, 0.155506,-0.198759) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987643,0.0239659) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867106,0.00577394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966745,0.0172885) , 
2, 0.0450167, 1, 0, 0.916813,0.102246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942957,0.0118195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860156,0.00902671) , 
6, 0.3394, 1, 0, 0.903019,0.135905) , 
9, 0.0221472, 1, 0, 0.909212,0.120794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782947,0.00261503) , 
8, 0.0305476, 1, 0, 0.88496,0.106016) , 
13, 0.508384, 1, 0, 0.907667,0.117742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543707,0.000797339) , 
17, 0.779202, 1, 0, 0.803186,0.0903311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327098,-0.00391177) , 
7, 0.530406, 1, 0, 0.736445,0.0614296) , 
2, 0.00304846, 1, 0, 0.506198,-0.0416924)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650763,0.00544154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135756,-0.00646566) , 
3, 0.452091, 1, 0, 0.187475,-0.177441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629714,6.52995e-05) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986741,0.0194582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997551,0.0220052) , 
10, 0.284208, 1, 0, 0.992057,0.114508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921722,0.0095686) , 
6, 0.188418, 1, 0, 0.96804,0.0998999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900496,0.0109662) , 
6, 0.3003, 1, 0, 0.94885,0.109175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782997,0.00247447) , 
10, 0.517672, 1, 0, 0.906607,0.0913953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75536,0.00605717) , 
6, 0.567257, 1, 0, 0.86811,0.105512) , 
4, 0.183648, 1, 0, 0.826391,0.087324) , 
4, 0.108589, 1, 0, 0.493411,-0.0506621)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217505,-0.00495794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114838,-0.00670773) , 
17, 1.05521, 1, 0, 0.155532,-0.191803) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988145,0.0246787) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990273,0.0185179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937847,0.0134705) , 
7, 0.102357, 1, 0, 0.963802,0.10513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848512,0.00912223) , 
3, 0.408995, 1, 0, 0.926408,0.125642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789361,0.00287595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815631,0.00519029) , 
14, 0.107581, 1, 0, 0.803667,0.0681752) , 
15, 0.11342, 1, 0, 0.878075,0.103013) , 
13, 0.455662, 1, 0, 0.89631,0.113636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65103,0.000902918) , 
10, 0.647128, 1, 0, 0.858231,0.0992421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440256,-0.00103758) , 
17, 0.932318, 1, 0, 0.74062,0.0626046) , 
2, 0.00304846, 1, 0, 0.513624,-0.0360977)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641412,0.00415778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0956634,-0.0072225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181775,-0.00543812) , 
12, 0.0564548, 1, 0, 0.137222,-0.205688) , 
3, 0.437743, 1, 0, 0.189254,-0.174642) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822373,0.00440614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972511,0.0140132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863366,0.00808809) , 
17, 0.294229, 1, 0, 0.92451,0.115094) , 
12, 0.17928, 1, 0, 0.887244,0.0977803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953608,0.0135266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798356,0.00747239) , 
11, 0.719063, 1, 0, 0.882893,0.129382) , 
16, 0.0973871, 1, 0, 0.885287,0.111995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772607,0.00266073) , 
15, 0.266077, 1, 0, 0.870387,0.103649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645353,-0.000191289) , 
7, 0.354783, 1, 0, 0.830121,0.0843458) , 
4, 0.10792, 1, 0, 0.502286,-0.0481394)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221521,-0.00475118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102106,-0.0069401) , 
17, 1.05592, 1, 0, 0.148523,-0.192997) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854921,0.012109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935881,0.0125702) , 
4, 0.20669, 1, 0, 0.895327,0.147558) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978063,0.0194368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837843,0.00486438) , 
13, 0.698276, 1, 0, 0.909949,0.0862423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967959,0.0154632) , 
5, 0.050091, 1, 0, 0.934628,0.10016) , 
5, 0.0304846, 1, 0, 0.921179,0.11638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644566,0.00230754) , 
13, 1.14589, 1, 0, 0.849508,0.101593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599805,-0.00122757) , 
9, 0.0563147, 1, 0, 0.800006,0.0757645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333588,-0.00398949) , 
7, 0.504993, 1, 0, 0.725975,0.0453054) , 
2, 0.00304846, 1, 0, 0.495897,-0.0496433)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673873,0.0063618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268512,-0.00403405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107218,-0.00692225) , 
16, 0.222534, 1, 0, 0.158391,-0.19113) , 
10, 0.374317, 1, 0, 0.206732,-0.16006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642343,-0.000633344) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958866,0.0124165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881504,0.00545501) , 
10, 0.270525, 1, 0, 0.925838,0.0862356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897857,0.00761907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888961,0.0102979) , 
7, 0.0157054, 1, 0, 0.893133,0.120826) , 
10, 0.372885, 1, 0, 0.909244,0.103786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87346,0.0108213) , 
7, 0.20026, 1, 0, 0.902582,0.113803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821748,0.00509266) , 
16, 0.174625, 1, 0, 0.88808,0.106026) , 
4, 0.211993, 1, 0, 0.837527,0.0812945) , 
4, 0.125342, 1, 0, 0.495708,-0.0494924)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570723,0.00189244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141973,-0.00604264) , 
3, 0.474222, 1, 0, 0.188649,-0.168171) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98466,0.0155555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969616,0.0148494) , 
7, 0.0795505, 1, 0, 0.978618,0.103739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882767,0.00469504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923573,0.00987317) , 
2, 0.0390688, 1, 0, 0.903527,0.0641658) , 
11, 0.425663, 1, 0, 0.945292,0.0861763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929325,0.0133937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772426,0.00527959) , 
10, 0.400603, 1, 0, 0.844566,0.126444) , 
17, 0.497515, 1, 0, 0.912852,0.0991451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536431,-0.000695443) , 
3, 0.651893, 1, 0, 0.799178,0.0631979) , 
12, 0.087073, 1, 0, 0.4849,-0.0559023)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222175,-0.00452429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0832583,-0.00721087) , 
7, 0.615559, 1, 0, 0.142234,-0.192023) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873652,0.0120844) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970312,0.0148491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992484,0.0210206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887075,0.00609811) , 
3, 0.233189, 1, 0, 0.946773,0.083358) , 
5, 0.0383907, 1, 0, 0.956757,0.0983275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911688,0.00846912) , 
16, 0.153357, 1, 0, 0.94594,0.0916209) , 
4, 0.179867, 1, 0, 0.933784,0.105616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618907,0.00132348) , 
3, 0.53513, 1, 0, 0.842608,0.0848846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39982,-0.00206246) , 
17, 0.985855, 1, 0, 0.729228,0.0470798) , 
2, 0.0028889, 1, 0, 0.492538,-0.0493322)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228482,-0.00435995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.095466,-0.00686606) , 
7, 0.620379, 1, 0, 0.153614,-0.178696) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929748,0.0154295) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977894,0.017192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983902,0.0188363) , 
2, 0.0409523, 1, 0, 0.980878,0.101878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933469,0.00843221) , 
9, 0.0293688, 1, 0, 0.961744,0.0877126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958763,0.0144428) , 
10, 0.441638, 1, 0, 0.960868,0.0974992) , 
12, 0.121902, 1, 0, 0.954335,0.111724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663551,0.00197729) , 
3, 0.501647, 1, 0, 0.87296,0.0939569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431329,-0.00153031) , 
17, 0.89901, 1, 0, 0.738172,0.0513777) , 
2, 0.00309822, 1, 0, 0.51099,-0.038038)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822871,0.0110334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266232,-0.00394266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125272,-0.00637317) , 
10, 0.710738, 1, 0, 0.190046,-0.165004) , 
3, 0.401264, 1, 0, 0.252353,-0.131698) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891952,0.00762798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973655,0.0139712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935665,0.0118414) , 
11, 0.453269, 1, 0, 0.953271,0.103498) , 
12, 0.161613, 1, 0, 0.933031,0.0927597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743066,0.00602358) , 
11, 0.994357, 1, 0, 0.885868,0.10427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87462,0.00472561) , 
12, 0.329691, 1, 0, 0.883972,0.0959505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788831,0.00282101) , 
15, 0.198148, 1, 0, 0.863951,0.0860794) , 
1, 0.176781, 1, 0, 0.504844,-0.0417913)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586778,0.00386937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260658,-0.00372351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119451,-0.00621044) , 
7, 0.505002, 1, 0, 0.163704,-0.169693) , 
10, 0.393745, 1, 0, 0.205802,-0.143343) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668457,0.0018593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658489,-0.00116334) , 
4, 0.161569, 1, 0, 0.663636,0.010977) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989234,0.0170393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876873,0.00459139) , 
7, 0.169496, 1, 0, 0.941395,0.0803805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774398,0.00596016) , 
13, 0.927883, 1, 0, 0.875676,0.0994059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887709,0.00757719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853356,0.00330589) , 
2, 0.0356537, 1, 0, 0.869813,0.0659849) , 
12, 0.224163, 1, 0, 0.87311,0.0847782) , 
4, 0.208663, 1, 0, 0.825041,0.0678427) , 
4, 0.108589, 1, 0, 0.503718,-0.0417416)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671115,0.0054784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216538,-0.00443865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0977737,-0.00680556) , 
10, 0.715881, 1, 0, 0.151729,-0.179425) , 
17, 0.703476, 1, 0, 0.204186,-0.148816) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920582,0.00794601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912061,0.00955525) , 
10, 0.307363, 1, 0, 0.916305,0.10363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921582,0.00739814) , 
4, 0.520134, 1, 0, 0.918108,0.0878133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82046,0.00107386) , 
7, 0.153616, 1, 0, 0.894405,0.069544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904431,0.0104963) , 
7, 0.230426, 1, 0, 0.896512,0.0798843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888247,0.0102824) , 
10, 0.559905, 1, 0, 0.895108,0.0918513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782487,0.002716) , 
9, 0.0530208, 1, 0, 0.871701,0.0832416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66973,0.000830319) , 
7, 0.367268, 1, 0, 0.84141,0.0733798) , 
4, 0.11751, 1, 0, 0.506177,-0.0435136)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572571,0.00219261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148355,-0.00550508) , 
3, 0.461157, 1, 0, 0.192888,-0.147199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64447,0.000711858) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993771,0.0208242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913058,0.00655198) , 
3, 0.182273, 1, 0, 0.963013,0.0756548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930607,0.0119581) , 
17, 0.358159, 1, 0, 0.952946,0.0880904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819835,0.00297258) , 
7, 0.265438, 1, 0, 0.924015,0.0768978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764842,0.00545872) , 
6, 0.521915, 1, 0, 0.878363,0.0898361) , 
1, 0.197215, 1, 0, 0.825629,0.0733558) , 
1, 0.0995787, 1, 0, 0.505697,-0.0381631)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978666,0.0216364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595984,-0.00176679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899486,0.00583135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965009,0.0124852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921049,0.0106794) , 
11, 0.513119, 1, 0, 0.94519,0.0956898) , 
2, 0.0391141, 1, 0, 0.928183,0.082801) , 
4, 0.287787, 1, 0, 0.830975,0.0465827) , 
13, 0.515067, 1, 0, 0.866829,0.0743842) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103581,-0.0066345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303694,-0.00365529) , 
12, 0.0678238, 1, 0, 0.161492,-0.178901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668636,0.00278328) , 
12, 0.115304, 1, 0, 0.243072,-0.139013) , 
17, 0.749175, 1, 0, 0.494345,-0.0530487)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450309,-0.000208236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110288,-0.00630846) , 
3, 0.512002, 1, 0, 0.155887,-0.169622) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90297,0.00954761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873924,0.00628099) , 
15, 0.0938387, 1, 0, 0.890733,0.0936484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910589,0.00523333) , 
12, 0.216483, 1, 0, 0.898371,0.0754459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964686,0.0172496) , 
16, 0.168293, 1, 0, 0.914483,0.0957365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868294,0.0065593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575257,-0.000680304) , 
6, 0.495052, 1, 0, 0.721919,0.0266417) , 
10, 0.404789, 1, 0, 0.832316,0.0662539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463907,-0.00303295) , 
10, 0.688147, 1, 0, 0.762336,0.0377366) , 
4, 0.0774229, 1, 0, 0.495632,-0.0534553)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141807,-0.0059122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16156,-0.00512123) , 
6, 0.342264, 1, 0, 0.153074,-0.16476) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709723,0.00226953) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998651,0.021707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910348,0.00697191) , 
11, 0.472274, 1, 0, 0.956065,0.0678256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976843,0.0161576) , 
14, 0.0618448, 1, 0, 0.963053,0.078464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786657,0.00593164) , 
3, 0.46837, 1, 0, 0.901036,0.0951003) , 
2, 0.0213527, 1, 0, 0.857694,0.0837443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864655,0.00908158) , 
15, 0.225494, 1, 0, 0.858644,0.0908989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665072,0.000922753) , 
9, 0.0563147, 1, 0, 0.818542,0.0762886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405165,-0.00224411) , 
7, 0.459085, 1, 0, 0.744572,0.0515813) , 
2, 0.00309822, 1, 0, 0.513708,-0.0328574)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209321,-0.00441778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0982391,-0.0065471) , 
8, 0.0487115, 1, 0, 0.141324,-0.172976) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964294,0.0168984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961607,0.0112717) , 
12, 0.205993, 1, 0, 0.962952,0.0778839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67951,0.000442971) , 
13, 0.907046, 1, 0, 0.84517,0.0495556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738069,0.00363817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929868,0.0102243) , 
12, 0.151047, 1, 0, 0.85133,0.0923034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871242,0.0101674) , 
16, 0.138644, 1, 0, 0.856501,0.106503) , 
9, 0.0208011, 1, 0, 0.850969,0.0787019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659618,0.000420392) , 
9, 0.0558344, 1, 0, 0.811067,0.0642092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378861,-0.00323387) , 
7, 0.442005, 1, 0, 0.731665,0.0361233) , 
2, 0.00299812, 1, 0, 0.497252,-0.046906)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760218,0.00825817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55199,-0.000184101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0971327,-0.00655457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205081,-0.00483844) , 
12, 0.0591355, 1, 0, 0.146173,-0.178158) , 
17, 0.703476, 1, 0, 0.184711,-0.161668) , 
10, 0.338446, 1, 0, 0.239557,-0.131848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721846,0.000601012) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989625,0.0162865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962908,0.011696) , 
4, 0.509425, 1, 0, 0.977674,0.0700742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949577,0.0119835) , 
6, 0.244162, 1, 0, 0.968821,0.0828735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851021,0.00286214) , 
8, 0.0218835, 1, 0, 0.934968,0.0676566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778065,0.00528438) , 
6, 0.478979, 1, 0, 0.887582,0.081591) , 
12, 0.13743, 1, 0, 0.852192,0.066592) , 
12, 0.106193, 1, 0, 0.492243,-0.0499996)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211728,-0.00417251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107378,-0.00611284) , 
16, 0.299714, 1, 0, 0.154935,-0.155976) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852104,0.0111108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930105,0.0099249) , 
12, 0.110585, 1, 0, 0.894869,0.122524) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995575,0.0200234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961315,0.0108005) , 
3, 0.126972, 1, 0, 0.978427,0.0635102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966589,0.0129476) , 
6, 0.203602, 1, 0, 0.974526,0.07295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853302,0.002524) , 
17, 0.417443, 1, 0, 0.942336,0.060068) , 
4, 0.282019, 1, 0, 0.925732,0.0819158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379815,-0.0029315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738684,0.00354636) , 
4, 0.286851, 1, 0, 0.484315,-0.040099) , 
3, 0.540427, 1, 0, 0.72308,0.0258995) , 
2, 0.00299812, 1, 0, 0.500761,-0.0452699)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628034,0.00559734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233709,-0.00396247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108453,-0.00602551) , 
7, 0.535709, 1, 0, 0.15009,-0.160737) , 
10, 0.408345, 1, 0, 0.199909,-0.130399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62785,-0.00139005) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972764,0.0144201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92617,0.0089054) , 
6, 0.273436, 1, 0, 0.9568,0.0752895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99074,0.017274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898045,0.0040651) , 
6, 0.161566, 1, 0, 0.941684,0.0558105) , 
12, 0.225884, 1, 0, 0.950278,0.0668853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797829,0.00576555) , 
17, 0.632328, 1, 0, 0.922893,0.0741065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667554,0.0014495) , 
13, 1.17409, 1, 0, 0.860693,0.0649226) , 
4, 0.17566, 1, 0, 0.8266,0.0508427) , 
4, 0.10792, 1, 0, 0.501485,-0.0431818)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794267,0.00890192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239942,-0.00404857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0997925,-0.00644222) , 
10, 0.709582, 1, 0, 0.163235,-0.16209) , 
3, 0.429496, 1, 0, 0.233747,-0.128246) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990747,0.0198029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994708,0.0180684) , 
15, 0.0636113, 1, 0, 0.992996,0.073386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879405,0.00178761) , 
3, 0.198863, 1, 0, 0.953875,0.0539101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746195,0.00326893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788719,0.00359125) , 
5, 0.0267264, 1, 0, 0.767161,0.0645425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867161,0.00849484) , 
2, 0.0389756, 1, 0, 0.808524,0.0945267) , 
11, 0.593303, 1, 0, 0.885321,0.0730667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657625,0.000532026) , 
10, 0.679265, 1, 0, 0.852883,0.0644255) , 
12, 0.10426, 1, 0, 0.501701,-0.0448601)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975454,0.0247523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522766,-0.00152407) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993704,0.0198189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961422,0.0100021) , 
12, 0.244192, 1, 0, 0.9791,0.0686004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829267,0.00149713) , 
3, 0.33844, 1, 0, 0.93886,0.0556619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857234,0.00716769) , 
17, 0.579238, 1, 0, 0.924058,0.0666983) , 
4, 0.215841, 1, 0, 0.818313,0.0390436) , 
13, 0.392639, 1, 0, 0.836815,0.0555624) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126822,-0.00607916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226962,-0.00360053) , 
11, 1.03534, 1, 0, 0.174209,-0.147605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638646,0.00121083) , 
4, 0.179508, 1, 0, 0.243942,-0.120724) , 
17, 0.820722, 1, 0, 0.50508,-0.0430768)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893847,0.0138218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356708,-0.00225621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148408,-0.0055433) , 
10, 0.599262, 1, 0, 0.209759,-0.136277) , 
3, 0.328307, 1, 0, 0.270245,-0.11033) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918693,0.00956074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823215,-0.000413489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916303,0.00918357) , 
14, 0.039661, 1, 0, 0.866991,0.0382194) , 
9, 0.012301, 1, 0, 0.886587,0.0560679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919688,0.00940115) , 
9, 0.0285165, 1, 0, 0.898472,0.0731361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758501,0.000244032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86258,0.00470773) , 
14, 0.125749, 1, 0, 0.81508,0.0357374) , 
15, 0.147038, 1, 0, 0.872463,0.0614719) , 
1, 0.199157, 1, 0, 0.508487,-0.0423637)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566827,0.00262599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137302,-0.00525127) , 
3, 0.474222, 1, 0, 0.183494,-0.133395) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993924,0.0259262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99915,0.018484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95319,0.0115509) , 
11, 0.366695, 1, 0, 0.974171,0.0626377) , 
13, 0.514268, 1, 0, 0.980198,0.069835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867768,0.00788382) , 
3, 0.325559, 1, 0, 0.940418,0.0849357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822746,0.00232751) , 
9, 0.0454464, 1, 0, 0.91004,0.0714298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573349,-0.000270876) , 
3, 0.687153, 1, 0, 0.818711,0.0500008) , 
4, 0.0939201, 1, 0, 0.495422,-0.0433371)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549858,0.00146419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184983,-0.00440065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0867811,-0.00646654) , 
10, 0.714604, 1, 0, 0.128908,-0.165678) , 
17, 0.786066, 1, 0, 0.186913,-0.137843) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855557,0.00600192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53887,-0.00235057) , 
10, 0.420483, 1, 0, 0.659808,-0.0103107) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953611,0.0123461) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981258,0.0139988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938822,0.00801323) , 
7, 0.10541, 1, 0, 0.961229,0.0604281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850915,0.00233202) , 
10, 0.467855, 1, 0, 0.93336,0.0516673) , 
2, 0.0309822, 1, 0, 0.937459,0.0590332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765766,0.00440331) , 
6, 0.517208, 1, 0, 0.891652,0.0682412) , 
4, 0.23368, 1, 0, 0.826195,0.0460636) , 
4, 0.108589, 1, 0, 0.494686,-0.049304)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959033,0.0188076) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98432,0.0142154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874049,0.00560645) , 
10, 0.343902, 1, 0, 0.925872,0.0699875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830345,0.00368395) , 
7, 0.139785, 1, 0, 0.893281,0.0598251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837124,0.00592969) , 
13, 1.02565, 1, 0, 0.883408,0.0672756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614424,-2.23467e-05) , 
7, 0.297046, 1, 0, 0.837842,0.0558019) , 
13, 0.453657, 1, 0, 0.856191,0.0671795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400453,-0.00199788) , 
3, 0.729572, 1, 0, 0.717372,0.0289677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476823,-0.000370369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124895,-0.00604259) , 
10, 0.564733, 1, 0, 0.171705,-0.155358) , 
7, 0.459085, 1, 0, 0.502179,-0.0437245)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22063,-0.0038434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11595,-0.00556912) , 
13, 0.814257, 1, 0, 0.1519,-0.144027) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711644,0.00338656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333622,-0.00300189) , 
10, 0.4869, 1, 0, 0.476082,-0.0302576) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909971,0.00463336) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999725,0.0209718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955405,0.00742397) , 
3, 0.124055, 1, 0, 0.977123,0.0499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891356,0.00610806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900317,0.00790442) , 
14, 0.070126, 1, 0, 0.89582,0.0823146) , 
3, 0.21374, 1, 0, 0.937042,0.0658799) , 
9, 0.0154288, 1, 0, 0.929554,0.0556105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769731,0.00498289) , 
6, 0.533223, 1, 0, 0.885029,0.0707805) , 
4, 0.19003, 1, 0, 0.742097,0.0354664) , 
2, 0.00309822, 1, 0, 0.509318,-0.0353271)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981334,0.0246173) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949785,0.00823812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95499,0.0111656) , 
15, 0.106431, 1, 0, 0.952203,0.0672881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959585,0.0117832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779852,-0.00111289) , 
10, 0.295111, 1, 0, 0.867324,0.030221) , 
7, 0.144492, 1, 0, 0.918264,0.0524667) , 
13, 0.398777, 1, 0, 0.928321,0.0720755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546613,-0.00133572) , 
3, 0.512076, 1, 0, 0.826417,0.0438681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474997,-0.000263007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0947563,-0.00604234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351527,-0.00327556) , 
2, 0.010346, 1, 0, 0.178291,-0.149493) , 
10, 0.507527, 1, 0, 0.233443,-0.123053) , 
17, 0.820722, 1, 0, 0.492754,-0.0500573)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21216,-0.00405646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975924,-0.00597981) , 
17, 1.05781, 1, 0, 0.141143,-0.150949) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989202,0.0248138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537189,-7.09014e-05) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976804,0.0145467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922082,0.00785888) , 
3, 0.223085, 1, 0, 0.950502,0.0574891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921228,0.00340202) , 
12, 0.23483, 1, 0, 0.937259,0.0417897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80686,0.00643735) , 
17, 0.591962, 1, 0, 0.900273,0.064988) , 
1, 0.205825, 1, 0, 0.808409,0.048083) , 
13, 0.426845, 1, 0, 0.829102,0.0552014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448851,-0.0029116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443372,-0.00287662) , 
15, 0.195123, 1, 0, 0.445858,-0.0754264) , 
10, 0.636716, 1, 0, 0.729399,0.0212178) , 
2, 0.00299812, 1, 0, 0.496295,-0.0470054)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233568,-0.00340207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0904112,-0.0061166) , 
10, 0.676893, 1, 0, 0.143095,-0.147311) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731635,0.00677737) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99356,0.0184154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968989,0.011362) , 
8, 0.0154794, 1, 0, 0.981034,0.058047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834766,0.000769364) , 
3, 0.313023, 1, 0, 0.947253,0.0468862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862653,0.00685396) , 
11, 0.715141, 1, 0, 0.929764,0.0551572) , 
4, 0.152058, 1, 0, 0.897423,0.065952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464444,-0.00134848) , 
3, 0.633588, 1, 0, 0.735181,0.0268364) , 
2, 0.00280091, 1, 0, 0.499539,-0.0424719)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9778,0.0223652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409876,-0.00189986) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97026,0.0104432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904405,0.00808637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892435,0.00607025) , 
0, 0.205408, 1, 0, 0.898554,0.0860463) , 
6, 0.203329, 1, 0, 0.925919,0.0690007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858292,0.00318091) , 
16, 0.120641, 1, 0, 0.904497,0.0586418) , 
12, 0.101514, 1, 0, 0.786605,0.0322167) , 
13, 0.457545, 1, 0, 0.816687,0.0503141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112282,-0.00564725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46038,-0.000902784) , 
0, 0.0733767, 1, 0, 0.230989,-0.11595) , 
17, 0.864143, 1, 0, 0.500881,-0.039335)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376373,-0.000809577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114679,-0.00547892) , 
10, 0.553181, 1, 0, 0.165057,-0.129409) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76683,0.00567194) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975875,0.0122261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926591,0.00385771) , 
16, 0.103913, 1, 0, 0.951078,0.0389243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967004,0.0120378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885966,0.00751925) , 
6, 0.30162, 1, 0, 0.937148,0.0649982) , 
10, 0.28023, 1, 0, 0.942784,0.0544479) , 
4, 0.196752, 1, 0, 0.899225,0.0654013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607557,0.000724064) , 
13, 1.16327, 1, 0, 0.824102,0.053483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457999,-0.00223216) , 
10, 0.714604, 1, 0, 0.763432,0.0347389) , 
4, 0.0720845, 1, 0, 0.506127,-0.0358457)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541194,0.00242946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197717,-0.00393648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0869196,-0.00613894) , 
16, 0.279432, 1, 0, 0.132598,-0.14858) , 
10, 0.44828, 1, 0, 0.18172,-0.123487) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751023,-0.00157159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735552,0.00416905) , 
8, 0.0313578, 1, 0, 0.743802,0.0275528) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993339,0.0165346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973425,0.0106638) , 
8, 0.0154654, 1, 0, 0.983225,0.0499953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95946,0.0102762) , 
13, 0.71616, 1, 0, 0.97326,0.0590726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8554,0.00700012) , 
17, 0.48426, 1, 0, 0.938566,0.0755334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765321,0.00170592) , 
8, 0.0358535, 1, 0, 0.907078,0.067155) , 
12, 0.129119, 1, 0, 0.864631,0.0568595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578591,-0.00142578) , 
10, 0.679265, 1, 0, 0.820406,0.0425861) , 
4, 0.0940064, 1, 0, 0.504566,-0.0395394)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462763,0.000338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107415,-0.00562957) , 
3, 0.5107, 1, 0, 0.156665,-0.137116) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994852,0.0196243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946243,0.00672481) , 
13, 0.630072, 1, 0, 0.971643,0.0514309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875375,0.00882579) , 
17, 0.516977, 1, 0, 0.939874,0.0751495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445083,-0.00235329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696767,-0.000816215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856164,0.00182549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821579,0.00500786) , 
10, 0.504441, 1, 0, 0.83966,0.0496066) , 
2, 0.0243877, 1, 0, 0.799513,0.031152) , 
12, 0.113477, 1, 0, 0.691421,0.00223996) , 
10, 0.317606, 1, 0, 0.767962,0.0247012) , 
4, 0.0774229, 1, 0, 0.493125,-0.0480511)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984498,0.0229112) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97334,0.0111114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911733,0.00967943) , 
3, 0.22861, 1, 0, 0.94249,0.0734084) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872488,0.00479433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516146,-0.00428251) , 
16, 0.0949982, 1, 0, 0.682519,-0.0235008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75419,0.00345937) , 
13, 0.905662, 1, 0, 0.707539,0.00593468) , 
10, 0.404446, 1, 0, 0.827447,0.0403699) , 
13, 0.451331, 1, 0, 0.85206,0.0553963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41343,-0.00151298) , 
3, 0.715827, 1, 0, 0.703911,0.0218984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360045,-0.00200462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126631,-0.00555227) , 
10, 0.594357, 1, 0, 0.168104,-0.137812) , 
7, 0.487008, 1, 0, 0.502748,-0.0380633)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978866,0.020512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54785,-0.00149075) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971258,0.0116047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975263,0.0120639) , 
14, 0.0626731, 1, 0, 0.972801,0.0518836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873238,0.00233386) , 
6, 0.29097, 1, 0, 0.947731,0.0446734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870204,0.00652585) , 
6, 0.436465, 1, 0, 0.929874,0.0577499) , 
12, 0.120047, 1, 0, 0.830416,0.0337105) , 
13, 0.412906, 1, 0, 0.851458,0.0487539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108706,-0.00547524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464524,-0.00107592) , 
1, 0.0684167, 1, 0, 0.239864,-0.107693) , 
17, 0.79912, 1, 0, 0.501601,-0.0407401)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230835,-0.00324119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106887,-0.00530391) , 
17, 1.05521, 1, 0, 0.151943,-0.125131) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903733,0.0085089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976257,0.0122402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917475,0.00216073) , 
7, 0.132991, 1, 0, 0.951468,0.0345588) , 
1, 0.28545, 1, 0, 0.938624,0.047247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729651,0.000486617) , 
13, 1.01677, 1, 0, 0.891974,0.038731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691713,-0.00193148) , 
15, 0.194163, 1, 0, 0.861187,0.0275178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882734,0.00829213) , 
14, 0.171608, 1, 0, 0.864026,0.0372603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43434,-0.00138158) , 
17, 0.887269, 1, 0, 0.729346,0.0132107) , 
2, 0.00299812, 1, 0, 0.503986,-0.040784)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868268,0.0104908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997333,0.0182031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959286,0.00916867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889633,0.0015803) , 
10, 0.248327, 1, 0, 0.92433,0.0251349) , 
11, 0.427556, 1, 0, 0.958373,0.0402098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954556,0.00910705) , 
9, 0.0444936, 1, 0, 0.957563,0.0448399) , 
4, 0.156533, 1, 0, 0.942355,0.0632152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575665,-0.000596081) , 
3, 0.498827, 1, 0, 0.84963,0.0436554) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176035,-0.00408016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0942075,-0.00574959) , 
16, 0.320875, 1, 0, 0.134192,-0.136428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544107,-0.000370111) , 
12, 0.0847818, 1, 0, 0.244882,-0.102316) , 
17, 0.795258, 1, 0, 0.500128,-0.0407056)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200996,-0.00372746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0928006,-0.00583211) , 
16, 0.294591, 1, 0, 0.143385,-0.132514) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985201,0.0184383) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949479,0.00661658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956413,0.00958736) , 
9, 0.0277718, 1, 0, 0.953112,0.0536225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909274,0.00045386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711627,-0.00107801) , 
10, 0.37, 1, 0, 0.809515,-0.00714945) , 
16, 0.0856513, 1, 0, 0.88526,0.0249065) , 
13, 0.528414, 1, 0, 0.914451,0.0395387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716655,0.0019024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738962,0.00457883) , 
6, 0.506327, 1, 0, 0.7302,0.0731936) , 
11, 0.740996, 1, 0, 0.85506,0.0503868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412251,-0.00161) , 
17, 0.985855, 1, 0, 0.74329,0.025861) , 
2, 0.00300529, 1, 0, 0.504906,-0.0370725)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722556,0.00471878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139137,-0.00511074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180266,-0.00368129) , 
11, 1.00904, 1, 0, 0.158297,-0.12491) , 
3, 0.425683, 1, 0, 0.215286,-0.103651) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983324,0.0162357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922671,0.00939775) , 
6, 0.228907, 1, 0, 0.953613,0.0723058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933201,0.0084077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721915,3.41122e-05) , 
8, 0.016627, 1, 0, 0.80966,0.0241403) , 
10, 0.314614, 1, 0, 0.875493,0.0461676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641256,-0.00209208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858429,0.00409394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821767,-0.000593162) , 
0, 0.22869, 1, 0, 0.842272,0.0258689) , 
4, 0.246643, 1, 0, 0.768813,-0.000315742) , 
9, 0.031677, 1, 0, 0.822313,0.0229955) , 
4, 0.124916, 1, 0, 0.500593,-0.0441261)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572774,0.002172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203557,-0.00375852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112994,-0.0054677) , 
3, 0.744945, 1, 0, 0.153995,-0.130584) , 
10, 0.475336, 1, 0, 0.223535,-0.100644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70283,0.000111348) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916882,0.00508137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844395,-0.00337204) , 
14, 0.0133979, 1, 0, 0.880359,0.00461455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956717,0.0109705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899021,0.0018478) , 
9, 0.0373081, 1, 0, 0.931106,0.0457462) , 
15, 0.0455607, 1, 0, 0.906715,0.0259768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91342,0.00563054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791787,0.00532534) , 
6, 0.401432, 1, 0, 0.849949,0.0774983) , 
10, 0.428867, 1, 0, 0.882811,0.0476719) , 
4, 0.210602, 1, 0, 0.853028,0.0401497) , 
4, 0.144169, 1, 0, 0.505643,-0.037547)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993258,0.0215585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477396,-0.00120243) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975833,0.0128767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874333,0.00180555) , 
13, 0.737037, 1, 0, 0.93839,0.0413259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899192,-0.00253656) , 
12, 0.282635, 1, 0, 0.927189,0.0250861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858785,0.00743599) , 
11, 0.731345, 1, 0, 0.909418,0.0471233) , 
2, 0.017554, 1, 0, 0.831593,0.0335476) , 
13, 0.451331, 1, 0, 0.856867,0.0486397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387224,-0.00205344) , 
3, 0.711831, 1, 0, 0.703154,0.0134023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419886,-0.000780558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123515,-0.00535273) , 
10, 0.564733, 1, 0, 0.166376,-0.127309) , 
7, 0.481004, 1, 0, 0.494713,-0.0412385)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467705,0.000687141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132051,-0.00454984) , 
17, 0.820722, 1, 0, 0.177914,-0.10496) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90721,0.00750836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904442,0.00488958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915826,0.00210749) , 
4, 0.485991, 1, 0, 0.909486,0.0322588) , 
2, 0.0354073, 1, 0, 0.908693,0.0488948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698203,-0.0027321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857725,0.00339542) , 
5, 0.0376058, 1, 0, 0.780833,-0.00240572) , 
8, 0.018797, 1, 0, 0.865533,0.0315776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929638,0.00860927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720817,0.00608932) , 
17, 0.772652, 1, 0, 0.823895,0.0955109) , 
7, 0.262317, 1, 0, 0.855616,0.0468037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5349,-0.00230982) , 
10, 0.705916, 1, 0, 0.811853,0.0324117) , 
1, 0.0903784, 1, 0, 0.49594,-0.036045)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510955,0.00128477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189587,-0.00366245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102363,-0.00529892) , 
3, 0.707047, 1, 0, 0.136091,-0.127515) , 
10, 0.443647, 1, 0, 0.181407,-0.108235) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856318,0.00603045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452889,-0.00411001) , 
10, 0.470799, 1, 0, 0.651644,-0.0170085) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99875,0.0187363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984143,0.0137861) , 
4, 0.460534, 1, 0, 0.991574,0.0434785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987033,0.0183313) , 
11, 0.479233, 1, 0, 0.990122,0.0499636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771898,0.000547251) , 
3, 0.329808, 1, 0, 0.902049,0.0334566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831256,0.00511874) , 
10, 0.564881, 1, 0, 0.88596,0.0448364) , 
4, 0.241247, 1, 0, 0.811083,0.0250734) , 
4, 0.0939201, 1, 0, 0.496148,-0.0416011)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596769,0.00239007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138988,-0.00449779) , 
3, 0.474222, 1, 0, 0.186436,-0.106146) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982876,0.015453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952403,0.00672145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751837,-0.00120062) , 
3, 0.334803, 1, 0, 0.864345,0.00608904) , 
6, 0.154862, 1, 0, 0.906299,0.022498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933738,0.00782419) , 
9, 0.0332485, 1, 0, 0.913491,0.0327298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735807,0.00365801) , 
6, 0.526639, 1, 0, 0.864151,0.0466092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877076,0.00322236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628318,-0.00183445) , 
10, 0.515412, 1, 0, 0.735362,-0.00879544) , 
15, 0.152931, 1, 0, 0.820125,0.027669) , 
1, 0.104765, 1, 0, 0.50093,-0.0397348)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719172,0.00591215) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926388,0.00105187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97734,0.0108794) , 
12, 0.169852, 1, 0, 0.952344,0.0273057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907998,0.0078869) , 
17, 0.497643, 1, 0, 0.936983,0.0448404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990453,0.0171039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850698,-0.00263932) , 
3, 0.228943, 1, 0, 0.932113,0.0153495) , 
1, 0.419059, 1, 0, 0.93474,0.0312575) , 
4, 0.154846, 1, 0, 0.890959,0.047525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274963,-0.00308087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720618,0.00239058) , 
4, 0.221009, 1, 0, 0.411866,-0.0456467) , 
3, 0.576456, 1, 0, 0.674068,0.00534505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139747,-0.0049855) , 
7, 0.556828, 1, 0, 0.495137,-0.0410309)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898771,0.00979092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985772,0.0135296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945041,0.00574334) , 
7, 0.115531, 1, 0, 0.965573,0.0379667) , 
4, 0.227457, 1, 0, 0.950442,0.0537123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767733,-0.000377364) , 
10, 0.471914, 1, 0, 0.90851,0.0402835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892566,0.0112809) , 
14, 0.167128, 1, 0, 0.905917,0.0530108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296142,-0.00235641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685159,0.00138698) , 
12, 0.120952, 1, 0, 0.431945,-0.0327465) , 
3, 0.572661, 1, 0, 0.688784,0.0137243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266979,-0.00266675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12152,-0.00520586) , 
10, 0.646547, 1, 0, 0.154962,-0.122905) , 
7, 0.535709, 1, 0, 0.504431,-0.03346)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752608,0.00762168) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983206,0.0137107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974607,0.0166331) , 
17, 0.368385, 1, 0, 0.979453,0.0560348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96721,0.00833495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821455,-0.00174613) , 
11, 0.500698, 1, 0, 0.906428,0.0130331) , 
9, 0.0243781, 1, 0, 0.940076,0.0328472) , 
4, 0.125227, 1, 0, 0.908276,0.0508626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464174,-0.00200432) , 
3, 0.568713, 1, 0, 0.785216,0.0224167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126176,-0.00473178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576828,2.31038e-05) , 
1, 0.109947, 1, 0, 0.21979,-0.10106) , 
17, 0.894665, 1, 0, 0.493006,-0.0413956)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589982,0.00272092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241512,-0.00316637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0933751,-0.00549968) , 
7, 0.503124, 1, 0, 0.140529,-0.12748) , 
10, 0.407527, 1, 0, 0.192388,-0.105744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583097,-0.000929619) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963972,0.00718289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992449,0.0168282) , 
2, 0.0492875, 1, 0, 0.974912,0.0298246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848511,0.00504555) , 
6, 0.307155, 1, 0, 0.924967,0.0470744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775685,-0.00125934) , 
10, 0.467834, 1, 0, 0.887564,0.0307737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789818,0.0042958) , 
10, 0.611794, 1, 0, 0.869093,0.0401903) , 
4, 0.177297, 1, 0, 0.817332,0.02904) , 
12, 0.0884941, 1, 0, 0.490676,-0.0414109)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577204,0.00178024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260687,-0.00276982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106698,-0.0050823) , 
16, 0.217354, 1, 0, 0.149979,-0.118106) , 
10, 0.411958, 1, 0, 0.196396,-0.101102) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996847,0.0211619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957319,0.00578406) , 
3, 0.13932, 1, 0, 0.980744,0.0319485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975784,0.0142968) , 
6, 0.216021, 1, 0, 0.979242,0.040027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714077,-0.000430116) , 
3, 0.366999, 1, 0, 0.919602,0.0294101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737387,0.00304559) , 
6, 0.440705, 1, 0, 0.854716,0.041879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690268,-0.000646532) , 
9, 0.0551839, 1, 0, 0.820269,0.030396) , 
12, 0.0884941, 1, 0, 0.500586,-0.0369859)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378887,-0.00119517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108061,-0.00515626) , 
10, 0.520641, 1, 0, 0.153642,-0.11768) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822559,0.00506547) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952489,0.00548121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962363,0.00929062) , 
16, 0.0571825, 1, 0, 0.957325,0.0406271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849913,-0.00301688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890212,0.00323977) , 
16, 0.12289, 1, 0, 0.875693,0.00715132) , 
7, 0.108018, 1, 0, 0.915816,0.023605) , 
5, 0.0182908, 1, 0, 0.899899,0.0311455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580341,-0.000544276) , 
13, 1.06711, 1, 0, 0.792248,0.0160469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369639,-0.00273227) , 
7, 0.459085, 1, 0, 0.720771,0.000972746) , 
0, 0.0715461, 1, 0, 0.489066,-0.0475039)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17624,-0.00420494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144618,-0.00359266) , 
11, 0.909734, 1, 0, 0.158209,-0.100485) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987119,0.016104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960155,0.00438883) , 
12, 0.243804, 1, 0, 0.975944,0.0313488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960603,0.010607) , 
6, 0.239783, 1, 0, 0.97187,0.040773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852002,-0.00106091) , 
17, 0.445103, 1, 0, 0.94399,0.0291464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655036,0.00116452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736125,0.00473089) , 
16, 0.119175, 1, 0, 0.698017,0.0639403) , 
17, 0.582068, 1, 0, 0.849063,0.0425743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626971,-0.000894847) , 
9, 0.0563147, 1, 0, 0.803143,0.0298509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349012,-0.00254259) , 
7, 0.504993, 1, 0, 0.732969,0.0147784) , 
2, 0.00300529, 1, 0, 0.50498,-0.0309431)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227707,-0.0026262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104044,-0.0049944) , 
13, 0.829386, 1, 0, 0.148821,-0.107537) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971896,0.0099364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70877,-0.000999767) , 
11, 0.559026, 1, 0, 0.840695,0.010356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965278,0.00992493) , 
5, 0.0457269, 1, 0, 0.890877,0.0281317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884563,0.00898125) , 
7, 0.280793, 1, 0, 0.889468,0.0425054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505825,-0.00137657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885275,0.00569283) , 
4, 0.286851, 1, 0, 0.672713,0.00757042) , 
10, 0.438692, 1, 0, 0.8022,0.0284402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424558,-0.00184299) , 
10, 0.721719, 1, 0, 0.736653,0.0150885) , 
2, 0.00304846, 1, 0, 0.503565,-0.0335349)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706611,0.00703228) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997516,0.0160105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960297,0.00411763) , 
17, 0.207167, 1, 0, 0.978603,0.0274807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95817,0.0091774) , 
17, 0.320176, 1, 0, 0.970343,0.0363088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878024,-0.000848765) , 
8, 0.0280274, 1, 0, 0.944753,0.0245189) , 
4, 0.13153, 1, 0, 0.895147,0.047354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545998,-0.00111266) , 
13, 1.01376, 1, 0, 0.794964,0.0258508) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72341,0.000484637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446908,-0.00262184) , 
16, 0.0892781, 1, 0, 0.562022,-0.0349141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636048,0.00294502) , 
14, 0.167128, 1, 0, 0.584788,-0.00604229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135928,-0.00547062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175061,-0.00395087) , 
6, 0.312207, 1, 0, 0.156886,-0.120928) , 
16, 0.168639, 1, 0, 0.288044,-0.0857143) , 
10, 0.510432, 1, 0, 0.499563,-0.0391623)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968906,0.0183823) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93931,0.00710396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9673,0.00797982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687785,-0.00212991) , 
11, 0.518082, 1, 0, 0.836255,-0.00135128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809542,0.00373504) , 
8, 0.019621, 1, 0, 0.828449,0.0129041) , 
14, 0.0283954, 1, 0, 0.866433,0.0252678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779196,0.00404298) , 
14, 0.131652, 1, 0, 0.846772,0.0336806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578103,-0.00269609) , 
16, 0.196041, 1, 0, 0.800185,0.0193245) , 
13, 0.406707, 1, 0, 0.820872,0.0302675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204373,-0.00301491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0899087,-0.00541069) , 
7, 0.659528, 1, 0, 0.140721,-0.112933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582074,-0.000155154) , 
12, 0.0992204, 1, 0, 0.227988,-0.0914391) , 
17, 0.844961, 1, 0, 0.500308,-0.0355376)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215291,-0.00280222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121275,-0.00425519) , 
13, 0.843975, 1, 0, 0.157343,-0.0945609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637419,0.00436115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823642,0.000296009) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951626,0.00293972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975799,0.0114678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960573,0.00585961) , 
5, 0.0427245, 1, 0, 0.968373,0.0362572) , 
9, 0.0182982, 1, 0, 0.961642,0.0247794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899766,0.00679631) , 
6, 0.340046, 1, 0, 0.942734,0.0398132) , 
4, 0.243818, 1, 0, 0.91866,0.0324992) , 
4, 0.144169, 1, 0, 0.869888,0.0416262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445107,-0.00153187) , 
3, 0.684541, 1, 0, 0.730991,0.0139485) , 
2, 0.00300877, 1, 0, 0.502032,-0.0293607)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735907,0.00472745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302401,-0.00265747) , 
10, 0.415725, 1, 0, 0.422958,-0.0278814) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95558,0.0061794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961644,0.00905353) , 
9, 0.0210643, 1, 0, 0.959037,0.0393876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918276,0.000187152) , 
12, 0.247784, 1, 0, 0.943411,0.0246837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821262,0.00586061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742685,0.00315055) , 
8, 0.0332947, 1, 0, 0.782026,0.0873653) , 
17, 0.607875, 1, 0, 0.896879,0.0427565) , 
1, 0.210306, 1, 0, 0.673294,0.00943122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134885,-0.00461915) , 
7, 0.58441, 1, 0, 0.502042,-0.0308757)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986314,0.0206303) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598236,-0.000976202) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994422,0.0163407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916527,-0.00196571) , 
11, 0.396109, 1, 0, 0.956963,0.0158762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835204,0.00365674) , 
17, 0.411889, 1, 0, 0.912323,0.0281002) , 
4, 0.335621, 1, 0, 0.776084,0.00663291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754786,0.00468356) , 
9, 0.03972, 1, 0, 0.772816,0.0170665) , 
13, 0.480201, 1, 0, 0.80218,0.0264507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49299,-0.00187248) , 
9, 0.0547541, 1, 0, 0.714548,0.00678149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545956,0.000967329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140524,-0.0044533) , 
10, 0.529785, 1, 0, 0.191043,-0.0980241) , 
7, 0.442005, 1, 0, 0.500959,-0.035979)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92905,0.0135877) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361542,-0.00190441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135273,-0.00474284) , 
10, 0.600076, 1, 0, 0.202378,-0.103523) , 
3, 0.320324, 1, 0, 0.267046,-0.0838824) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999295,0.0207911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926082,0.00337874) , 
10, 0.377537, 1, 0, 0.971047,0.0324266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854171,-0.00695563) , 
6, 0.213466, 1, 0, 0.939144,0.0110989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815319,0.00156756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783028,0.00367013) , 
10, 0.488104, 1, 0, 0.799988,0.0449903) , 
6, 0.302428, 1, 0, 0.870956,0.0277062) , 
1, 0.210306, 1, 0, 0.491135,-0.042476)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386815,-0.00163672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108058,-0.00467444) , 
17, 0.844503, 1, 0, 0.153623,-0.104797) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741446,0.00510977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920283,0.00154748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982031,0.00957543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971145,0.0120595) , 
17, 0.281764, 1, 0, 0.976246,0.0384585) , 
4, 0.330304, 1, 0, 0.958519,0.0290197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913924,0.00703329) , 
10, 0.406498, 1, 0, 0.942499,0.0394532) , 
12, 0.115304, 1, 0, 0.898022,0.0477423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728372,0.000699642) , 
9, 0.0526608, 1, 0, 0.861691,0.0399803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445353,-0.00155801) , 
3, 0.720569, 1, 0, 0.74031,0.0156698) , 
2, 0.0120351, 1, 0, 0.499686,-0.0337386)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197517,-0.00346385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0959348,-0.00498863) , 
16, 0.292734, 1, 0, 0.141673,-0.108221) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626294,-0.000679203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990033,0.0132965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921152,-0.00261294) , 
11, 0.442664, 1, 0, 0.965196,0.017631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808125,0.00356765) , 
6, 0.352564, 1, 0, 0.901793,0.0354094) , 
0, 0.108843, 1, 0, 0.847588,0.025702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841827,0.00601139) , 
16, 0.193454, 1, 0, 0.846494,0.0337308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341037,-0.00253872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788462,0.00182405) , 
4, 0.25817, 1, 0, 0.483355,-0.0393467) , 
10, 0.564733, 1, 0, 0.719712,0.00821727) , 
2, 0.00294643, 1, 0, 0.488111,-0.0384356)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675912,0.00307571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15984,-0.00408967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299506,-0.00174172) , 
14, 0.17222, 1, 0, 0.187855,-0.0940934) , 
10, 0.429446, 1, 0, 0.267788,-0.0688933) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946858,-0.00257551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873969,0.00469059) , 
17, 0.332123, 1, 0, 0.901332,0.0302459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88553,-0.00226876) , 
12, 0.260132, 1, 0, 0.896567,0.0163822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822564,0.00460462) , 
10, 0.544986, 1, 0, 0.881343,0.0285258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789102,-0.00150983) , 
16, 0.19273, 1, 0, 0.865152,0.0202008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915368,0.00754691) , 
14, 0.141546, 1, 0, 0.872164,0.0281408) , 
4, 0.188016, 1, 0, 0.500456,-0.031538)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831954,0.00893112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911119,-0.00819208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963396,0.00236869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994168,0.016313) , 
15, 0.103159, 1, 0, 0.978371,0.0231389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944596,0.00830402) , 
6, 0.229173, 1, 0, 0.963412,0.0383619) , 
9, 0.0140787, 1, 0, 0.951178,0.0231496) , 
4, 0.154902, 1, 0, 0.930619,0.0409664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300923,-0.0021043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73301,0.00219985) , 
12, 0.120612, 1, 0, 0.4582,-0.0198977) , 
3, 0.504399, 1, 0, 0.684445,0.0092505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24133,-0.00289155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126409,-0.00417317) , 
3, 0.624406, 1, 0, 0.157168,-0.0939332) , 
7, 0.549693, 1, 0, 0.509108,-0.0250615)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25764,-0.00199293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100388,-0.00464775) , 
7, 0.503886, 1, 0, 0.149608,-0.0927226) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739363,0.00450694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83249,-0.00201113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884451,0.0040438) , 
8, 0.0196204, 1, 0, 0.85782,0.00716805) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991707,0.0134416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938113,0.00290855) , 
11, 0.461829, 1, 0, 0.972974,0.0254545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855339,0.00475812) , 
3, 0.414079, 1, 0, 0.942673,0.0361081) , 
4, 0.330477, 1, 0, 0.910254,0.0250511) , 
4, 0.135267, 1, 0, 0.887275,0.03303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586489,-0.00121678) , 
10, 0.635213, 1, 0, 0.83297,0.022273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385853,-0.00176687) , 
17, 0.9989, 1, 0, 0.731691,0.00598314) , 
2, 0.00902632, 1, 0, 0.503853,-0.032652)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756517,0.00597788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1702,-0.00465157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166986,-0.00348172) , 
11, 0.903753, 1, 0, 0.16819,-0.100758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324436,-0.000809982) , 
14, 0.189442, 1, 0, 0.191873,-0.0883446) , 
10, 0.338446, 1, 0, 0.247182,-0.069711) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997368,0.0191917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925783,0.00160712) , 
3, 0.166577, 1, 0, 0.95986,0.0207289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976704,0.0102582) , 
8, 0.0167539, 1, 0, 0.966277,0.0283624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816788,-0.000653196) , 
11, 0.636287, 1, 0, 0.930828,0.0197115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718853,0.00286315) , 
17, 0.682488, 1, 0, 0.881892,0.0303259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657925,-0.00139939) , 
7, 0.347206, 1, 0, 0.845262,0.0208652) , 
12, 0.105248, 1, 0, 0.503733,-0.0308577)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752594,0.00486592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250129,-0.002504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110152,-0.00433295) , 
16, 0.251486, 1, 0, 0.163225,-0.0919515) , 
3, 0.401264, 1, 0, 0.2176,-0.0764253) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698082,0.000112699) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976537,0.0116637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915819,0.000130744) , 
15, 0.093895, 1, 0, 0.953346,0.0241488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784171,0.0028414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873224,0.00715414) , 
12, 0.19736, 1, 0, 0.825536,0.0795263) , 
6, 0.317369, 1, 0, 0.892772,0.0503943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873533,-0.000102) , 
12, 0.330602, 1, 0, 0.889371,0.0413216) , 
12, 0.130754, 1, 0, 0.8501,0.0332711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685555,-0.00269517) , 
15, 0.266077, 1, 0, 0.828422,0.0222398) , 
12, 0.0960868, 1, 0, 0.49582,-0.0314849)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684593,0.00380551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278952,-0.0020359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114201,-0.00447982) , 
16, 0.238704, 1, 0, 0.175467,-0.0897458) , 
10, 0.372291, 1, 0, 0.225749,-0.0736898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846735,-0.00209545) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851832,0.00391371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913553,-0.00158772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733562,0.00147046) , 
6, 0.283887, 1, 0, 0.802578,0.0151571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856598,-0.00331506) , 
12, 0.232514, 1, 0, 0.818578,0.00263639) , 
2, 0.0286717, 1, 0, 0.828118,0.0159783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929487,0.00811134) , 
2, 0.0541579, 1, 0, 0.849862,0.029277) , 
15, 0.0218473, 1, 0, 0.849236,0.0196443) , 
4, 0.143894, 1, 0, 0.500727,-0.0325264)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22105,-0.00267555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100762,-0.00436372) , 
7, 0.609005, 1, 0, 0.151723,-0.0889837) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988836,0.0205128) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838372,0.00427564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852575,-0.00110801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944777,0.00321744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957111,0.00823945) , 
15, 0.065195, 1, 0, 0.950574,0.0275925) , 
4, 0.335621, 1, 0, 0.924047,0.0171949) , 
2, 0.0271747, 1, 0, 0.905031,0.0256317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516739,-0.000590381) , 
7, 0.393475, 1, 0, 0.844141,0.0195072) , 
13, 0.428772, 1, 0, 0.862554,0.0256051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460616,-0.00117214) , 
3, 0.67624, 1, 0, 0.727783,0.00613082) , 
2, 0.00304846, 1, 0, 0.500758,-0.0313538)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279909,-0.00200339) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561606,-0.000658855) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952021,0.00223974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986446,0.0119295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978971,0.0121883) , 
6, 0.182579, 1, 0, 0.982794,0.0372378) , 
16, 0.0570983, 1, 0, 0.970757,0.0259052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923601,-0.00246954) , 
8, 0.0222733, 1, 0, 0.959989,0.0179604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782132,0.00321414) , 
3, 0.434692, 1, 0, 0.895552,0.03371) , 
1, 0.180757, 1, 0, 0.829209,0.0240801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711605,0.00450492) , 
7, 0.364083, 1, 0, 0.816369,0.0308909) , 
12, 0.0701653, 1, 0, 0.709667,0.0143886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344714,-0.00242546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116422,-0.00466589) , 
10, 0.566963, 1, 0, 0.147483,-0.105856) , 
7, 0.488655, 1, 0, 0.495643,-0.0313887)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71987,0.00551536) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953728,0.00332567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978764,0.00777841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992864,0.0143537) , 
17, 0.255942, 1, 0, 0.9855,0.0337429) , 
5, 0.0335629, 1, 0, 0.976183,0.0273119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864819,-0.00115793) , 
11, 0.561865, 1, 0, 0.940217,0.0157083) , 
4, 0.164514, 1, 0, 0.890187,0.0342007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260252,-0.00273461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733407,0.00205511) , 
4, 0.225105, 1, 0, 0.395668,-0.0410742) , 
3, 0.572589, 1, 0, 0.66019,-0.000809041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124611,-0.00445769) , 
7, 0.625305, 1, 0, 0.504787,-0.0314466)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606335,-0.00135286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749137,0.00603423) , 
16, 0.15827, 1, 0, 0.670404,0.0271271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461852,-0.000355085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131191,-0.00420105) , 
7, 0.340906, 1, 0, 0.202329,-0.0825555) , 
10, 0.44828, 1, 0, 0.294549,-0.0609457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807022,-0.00144139) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947748,-0.00102097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98095,0.0107067) , 
4, 0.416108, 1, 0, 0.968855,0.017247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910631,0.00674718) , 
11, 0.576735, 1, 0, 0.951886,0.0309381) , 
4, 0.287787, 1, 0, 0.916067,0.0192246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724123,0.0036983) , 
11, 0.977608, 1, 0, 0.867667,0.0352486) , 
2, 0.0216876, 1, 0, 0.512942,-0.0242899)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887863,0.0072597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953032,-0.00159867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990071,0.0138517) , 
9, 0.0206925, 1, 0, 0.971598,0.0174245) , 
4, 0.23106, 1, 0, 0.950446,0.0332341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601215,-0.00167792) , 
13, 0.907046, 1, 0, 0.827372,0.00844422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775855,0.00691645) , 
7, 0.369241, 1, 0, 0.819342,0.0232545) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25399,-0.00255255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13358,-0.00405893) , 
10, 0.751373, 1, 0, 0.195013,-0.0819026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809337,-0.00156654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810468,0.00455182) , 
10, 0.633482, 1, 0, 0.809792,0.0205702) , 
4, 0.216253, 1, 0, 0.321698,-0.0607864) , 
10, 0.466995, 1, 0, 0.500944,-0.0305158)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720027,0.00613607) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989022,0.0136838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931231,0.00690508) , 
3, 0.204097, 1, 0, 0.958068,0.0424327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939146,9.363e-05) , 
4, 0.487796, 1, 0, 0.951758,0.0283915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888845,-0.00359235) , 
16, 0.178548, 1, 0, 0.940171,0.0196273) , 
4, 0.10792, 1, 0, 0.907357,0.0346086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284477,-0.00246566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726752,0.0015832) , 
4, 0.236262, 1, 0, 0.414398,-0.039488) , 
3, 0.572661, 1, 0, 0.676086,-0.00015364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276814,-0.00182951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109206,-0.00480371) , 
10, 0.658855, 1, 0, 0.152257,-0.0968499) , 
7, 0.535709, 1, 0, 0.493763,-0.0338095)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80306,0.00809507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966882,0.0104602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974796,0.0101203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966269,0.00345521) , 
12, 0.187018, 1, 0, 0.970863,0.0235853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888218,-0.00200239) , 
13, 0.812443, 1, 0, 0.949493,0.0140999) , 
5, 0.0297887, 1, 0, 0.953605,0.0214094) , 
4, 0.154902, 1, 0, 0.925745,0.0389165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285794,-0.00219201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740238,0.00211134) , 
12, 0.135957, 1, 0, 0.402433,-0.0321254) , 
3, 0.504399, 1, 0, 0.638753,-4.38628e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126862,-0.0041336) , 
7, 0.663596, 1, 0, 0.506472,-0.0250909)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81553,0.00716694) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999338,0.0213454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945895,-0.00108718) , 
6, 0.162991, 1, 0, 0.971795,0.0137684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886549,0.00401594) , 
3, 0.31978, 1, 0, 0.944339,0.0237417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901066,-0.00449069) , 
12, 0.288877, 1, 0, 0.933096,0.0114469) , 
12, 0.104488, 1, 0, 0.913564,0.0265517) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650399,0.00214372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108804,-0.00415726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410354,-0.00265403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491492,-0.000108634) , 
11, 1.01803, 1, 0, 0.458708,-0.0294277) , 
2, 0.00267014, 1, 0, 0.246905,-0.0717027) , 
10, 0.365511, 1, 0, 0.289573,-0.0592564) , 
17, 0.644853, 1, 0, 0.499936,-0.0303283)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979055,0.0193399) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971758,0.00861664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803206,-0.0026351) , 
7, 0.12967, 1, 0, 0.885737,0.00448519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700158,0.00463126) , 
11, 0.835979, 1, 0, 0.819533,0.0365659) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686604,0.00239127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957851,0.000940626) , 
4, 0.318539, 1, 0, 0.815813,0.0205938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5031,-0.00189729) , 
13, 0.851596, 1, 0, 0.65183,-0.0134204) , 
9, 0.0277718, 1, 0, 0.730269,0.00995949) , 
13, 0.426845, 1, 0, 0.762226,0.0204971) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184911,-0.00429947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163411,-0.00301473) , 
11, 0.908627, 1, 0, 0.171598,-0.0859344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787801,0.00150782) , 
4, 0.232269, 1, 0, 0.264543,-0.0692924) , 
10, 0.582278, 1, 0, 0.511674,-0.0247062)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596567,0.00235881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137797,-0.00374279) , 
13, 0.581951, 1, 0, 0.182914,-0.0787358) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980956,0.0109473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954878,0.000702883) , 
4, 0.403468, 1, 0, 0.966938,0.019159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958264,0.0079276) , 
10, 0.347551, 1, 0, 0.963986,0.0252065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74985,-0.00190899) , 
17, 0.56564, 1, 0, 0.918032,0.0139904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700623,0.00278045) , 
11, 1.02244, 1, 0, 0.86667,0.0254495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917961,0.00234771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589547,-0.00241921) , 
13, 0.777327, 1, 0, 0.731711,-0.0275069) , 
15, 0.151244, 1, 0, 0.819392,0.00689828) , 
1, 0.104765, 1, 0, 0.493997,-0.0368816)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684642,0.00386352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135792,-0.00438227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27434,-0.00161005) , 
14, 0.155408, 1, 0, 0.173558,-0.0896976) , 
10, 0.411993, 1, 0, 0.247049,-0.066243) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947612,0.00127711) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999905,0.0203984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985409,0.0117559) , 
6, 0.124494, 1, 0, 0.992611,0.0259926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960594,0.00957753) , 
3, 0.212703, 1, 0, 0.981666,0.0341595) , 
4, 0.336636, 1, 0, 0.971823,0.0254627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801331,-0.00236975) , 
6, 0.396844, 1, 0, 0.935023,0.0133976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722636,0.00247348) , 
17, 0.676528, 1, 0, 0.872623,0.0254746) , 
4, 0.180719, 1, 0, 0.499377,-0.0292484)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644714,0.00304735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0974406,-0.00494064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177243,-0.00312114) , 
12, 0.0525823, 1, 0, 0.142118,-0.0938614) , 
10, 0.380269, 1, 0, 0.192891,-0.0780906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976232,0.011343) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869702,0.000568405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808771,-0.00669998) , 
9, 0.0352659, 1, 0, 0.846287,-0.0217984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884105,0.00128343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797134,0.0046736) , 
8, 0.0171767, 1, 0, 0.835745,0.048274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811353,0.00218124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497696,-0.00156419) , 
7, 0.183634, 1, 0, 0.624777,-0.0116504) , 
10, 0.586708, 1, 0, 0.725144,0.0168582) , 
10, 0.406879, 1, 0, 0.772699,0.00168331) , 
10, 0.211738, 1, 0, 0.807351,0.00963911) , 
12, 0.086508, 1, 0, 0.49571,-0.0348556)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839265,0.00648252) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999723,0.0204217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970883,0.00522657) , 
6, 0.160433, 1, 0, 0.986613,0.0200483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937696,0.00682133) , 
3, 0.243431, 1, 0, 0.969247,0.0333594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866055,-0.00179023) , 
10, 0.404446, 1, 0, 0.93213,0.0160806) , 
5, 0.018787, 1, 0, 0.912067,0.0306248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665914,0.0023638) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215173,-0.00321592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163216,-0.00478461) , 
9, 0.0387788, 1, 0, 0.18533,-0.101446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331998,-0.00108609) , 
11, 1.09837, 1, 0, 0.240932,-0.073197) , 
10, 0.366774, 1, 0, 0.284263,-0.0606985) , 
17, 0.659898, 1, 0, 0.50044,-0.0292524)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516452,0.00308178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693668,0.000778658) , 
2, 0.0151366, 1, 0, 0.610797,0.0408575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137442,-0.00386694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259805,-0.00175013) , 
14, 0.155408, 1, 0, 0.170244,-0.0799623) , 
10, 0.476403, 1, 0, 0.250494,-0.0579541) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905307,-0.000155907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974671,0.00467322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972334,0.011851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968255,0.00736532) , 
5, 0.0368419, 1, 0, 0.970299,0.0412765) , 
11, 0.366799, 1, 0, 0.972106,0.0287275) , 
12, 0.156731, 1, 0, 0.952885,0.0202125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733409,-0.00182419) , 
13, 0.99287, 1, 0, 0.912591,0.0110033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739188,0.00266275) , 
6, 0.562289, 1, 0, 0.868617,0.0230725) , 
1, 0.180757, 1, 0, 0.500687,-0.0251575)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989297,0.0179447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972887,0.00445167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998446,0.0183157) , 
4, 0.450061, 1, 0, 0.985605,0.0190434) , 
5, 0.0338174, 1, 0, 0.986836,0.0329578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578595,-0.00154747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866787,0.00382002) , 
2, 0.0410926, 1, 0, 0.671123,-0.00882854) , 
3, 0.291829, 1, 0, 0.827699,0.0118952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835483,0.00657796) , 
16, 0.232145, 1, 0, 0.828826,0.0207452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148778,-0.00400587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285184,-0.00171683) , 
14, 0.167365, 1, 0, 0.178095,-0.085353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792104,0.00318326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809943,-0.00106444) , 
12, 0.204397, 1, 0, 0.802201,0.016685) , 
4, 0.215841, 1, 0, 0.310784,-0.0636591) , 
10, 0.470611, 1, 0, 0.502494,-0.0324239)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983841,0.0199465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666458,-0.0013628) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995533,0.015259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918902,-0.00375687) , 
11, 0.425198, 1, 0, 0.964711,0.0127162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899013,0.00511398) , 
6, 0.335871, 1, 0, 0.944335,0.0256882) , 
4, 0.313355, 1, 0, 0.844482,0.00762473) , 
13, 0.457545, 1, 0, 0.868662,0.0196154) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452942,-0.00062444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149861,-0.00396086) , 
10, 0.529344, 1, 0, 0.193527,-0.0826294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403242,-0.000419008) , 
11, 1.27719, 1, 0, 0.247576,-0.0641587) , 
17, 0.749175, 1, 0, 0.492539,-0.0311173)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236203,-0.00216491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0912033,-0.00442807) , 
10, 0.683341, 1, 0, 0.145413,-0.0813072) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98775,0.0164648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983287,0.0097879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997895,0.0170502) , 
12, 0.217897, 1, 0, 0.9914,0.0268155) , 
12, 0.146994, 1, 0, 0.990238,0.0380952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912099,0.00134006) , 
9, 0.0442944, 1, 0, 0.9716,0.0310215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770048,-0.00376336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90047,0.00242242) , 
2, 0.0455435, 1, 0, 0.830036,-0.0180337) , 
13, 0.779933, 1, 0, 0.920896,0.0134515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530505,0.00130813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804506,0.00511655) , 
12, 0.126625, 1, 0, 0.656007,0.0610188) , 
17, 0.676475, 1, 0, 0.851545,0.0259051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388949,-0.00160233) , 
17, 0.985855, 1, 0, 0.738855,0.00884497) , 
2, 0.00299812, 1, 0, 0.511452,-0.0257007)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979164,0.0176407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245871,-0.00218056) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995667,0.0185451) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925669,-0.00174313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845235,-0.00665374) , 
13, 0.736334, 1, 0, 0.882785,-0.0314696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807442,0.000868692) , 
11, 0.612902, 1, 0, 0.850186,-0.0128073) , 
3, 0.164981, 1, 0, 0.890149,-0.00285378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680162,0.00237219) , 
11, 0.933672, 1, 0, 0.821694,0.0160588) , 
12, 0.086118, 1, 0, 0.652478,-0.00575531) , 
13, 0.476142, 1, 0, 0.692618,0.00293313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213579,-0.00244351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119868,-0.00426823) , 
14, 0.0683952, 1, 0, 0.152537,-0.0831191) , 
7, 0.520809, 1, 0, 0.496893,-0.0282522)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420937,-0.000186227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109095,-0.00395392) , 
17, 0.851366, 1, 0, 0.159427,-0.0770201) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6833,0.0030569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977916,0.00808893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795917,-0.000668104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655395,-0.00549212) , 
14, 0.0636215, 1, 0, 0.731464,-0.0515919) , 
17, 0.42283, 1, 0, 0.835526,-0.0199151) , 
4, 0.15961, 1, 0, 0.79736,0.000676249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463569,-0.00229893) , 
10, 0.623807, 1, 0, 0.696524,-0.0168968) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9841,0.0109812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90218,-0.0035485) , 
7, 0.0823974, 1, 0, 0.94235,0.00446824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826282,0.00525012) , 
6, 0.423399, 1, 0, 0.90331,0.0324639) , 
2, 0.0419737, 1, 0, 0.761213,-0.00145531) , 
4, 0.0774229, 1, 0, 0.490032,-0.0355069)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327841,-0.000996686) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991411,0.0143191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724433,-0.00142932) , 
3, 0.208657, 1, 0, 0.83837,-0.000617392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938788,0.0034566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962548,0.00922806) , 
9, 0.0204406, 1, 0, 0.950119,0.0341122) , 
2, 0.0402882, 1, 0, 0.887912,0.0147795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903651,0.0042082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675258,0.00391628) , 
11, 0.847868, 1, 0, 0.784303,0.0589743) , 
8, 0.0221693, 1, 0, 0.84717,0.0321584) , 
2, 0.0121939, 1, 0, 0.744761,0.0209961) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220589,-0.00284114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0896288,-0.00462641) , 
16, 0.278488, 1, 0, 0.143701,-0.0896177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715911,0.000522953) , 
12, 0.121636, 1, 0, 0.247921,-0.0713966) , 
10, 0.594357, 1, 0, 0.50474,-0.0236384)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985289,0.0193733) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996865,0.0182656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921091,-0.00218573) , 
3, 0.20162, 1, 0, 0.966298,0.0108413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805644,0.00406515) , 
3, 0.405629, 1, 0, 0.909644,0.0295301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615289,-0.00311988) , 
15, 0.147219, 1, 0, 0.830991,0.00611761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743501,0.00379773) , 
14, 0.146237, 1, 0, 0.814438,0.01637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483463,-0.00463794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372962,-0.00200109) , 
16, 0.271893, 1, 0, 0.429768,-0.0645672) , 
16, 0.194038, 1, 0, 0.712509,-0.00507665) , 
13, 0.406707, 1, 0, 0.742326,0.00654543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113589,-0.00453692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309774,-0.00141316) , 
11, 1.14634, 1, 0, 0.196141,-0.0758382) , 
17, 0.964466, 1, 0, 0.4956,-0.0306694)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283563,-0.00219018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0977166,-0.00416781) , 
13, 0.687644, 1, 0, 0.133875,-0.0854409) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858507,0.00631698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917497,0.00123189) , 
1, 0.4344, 1, 0, 0.884048,0.0480704) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969603,0.0104755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844116,0.00103317) , 
13, 0.626409, 1, 0, 0.902127,0.0191837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569734,-0.00123932) , 
13, 0.939649, 1, 0, 0.764597,-0.000408828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741279,0.00293783) , 
9, 0.036748, 1, 0, 0.758361,0.0117919) , 
9, 0.0170459, 1, 0, 0.800518,0.0239601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901257,0.0044579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487919,-0.000980528) , 
13, 0.705165, 1, 0, 0.595204,-0.00881871) , 
9, 0.0457557, 1, 0, 0.731019,0.0128644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289515,-0.0033675) , 
16, 0.330889, 1, 0, 0.67532,0.00175194) , 
0, 0.0627208, 1, 0, 0.490497,-0.0280114)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498974,-0.00337866) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99,0.0131591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879126,-0.00514189) , 
3, 0.220134, 1, 0, 0.943671,-0.0050648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801045,0.00337474) , 
11, 0.736962, 1, 0, 0.898809,0.0152372) , 
12, 0.122588, 1, 0, 0.802287,-0.00704116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877185,0.00153764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695828,0.00400945) , 
8, 0.0300136, 1, 0, 0.776838,0.04237) , 
16, 0.136487, 1, 0, 0.793464,0.0100906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780709,0.0063362) , 
15, 0.216267, 1, 0, 0.791579,0.0208914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473697,-0.00146548) , 
9, 0.0530281, 1, 0, 0.691407,0.00454884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206213,-0.0020913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126653,-0.00370083) , 
14, 0.0738256, 1, 0, 0.157041,-0.06894) , 
7, 0.535709, 1, 0, 0.502178,-0.0214749)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409141,0.000271235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117756,-0.00354825) , 
10, 0.520641, 1, 0, 0.165831,-0.0648336) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985372,0.00742483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983074,0.013281) , 
17, 0.262698, 1, 0, 0.984138,0.027264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916936,-3.82649e-05) , 
8, 0.028116, 1, 0, 0.963446,0.0188111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738408,-0.00380209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695408,0.000817647) , 
16, 0.0884242, 1, 0, 0.715532,-0.0180787) , 
13, 0.838862, 1, 0, 0.868339,0.00465915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856337,0.000416547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628159,0.00275685) , 
11, 0.727892, 1, 0, 0.726681,0.0387153) , 
10, 0.485751, 1, 0, 0.826959,0.0146075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481779,-0.00161995) , 
10, 0.688147, 1, 0, 0.767698,0.00534689) , 
4, 0.0774229, 1, 0, 0.49823,-0.0260743)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425152,-0.00236842) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978493,0.00622527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870495,0.00412504) , 
17, 0.31223, 1, 0, 0.931916,0.0319573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978856,0.00873171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751658,-0.00272253) , 
13, 0.657162, 1, 0, 0.854532,-0.0117266) , 
7, 0.113369, 1, 0, 0.89628,0.0118406) , 
12, 0.087073, 1, 0, 0.818548,0.000245515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709345,0.00449326) , 
7, 0.321224, 1, 0, 0.794237,0.015238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262528,-0.0022385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0956762,-0.00437639) , 
7, 0.522004, 1, 0, 0.152177,-0.0843332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776724,0.00166093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713269,-0.00194167) , 
14, 0.100599, 1, 0, 0.746314,-0.0023121) , 
4, 0.189374, 1, 0, 0.267207,-0.0684532) , 
10, 0.526465, 1, 0, 0.490267,-0.0330318)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840585,0.00671544) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992763,0.0134122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911267,-0.00649971) , 
11, 0.396109, 1, 0, 0.956216,0.00174076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884023,0.00402044) , 
6, 0.387226, 1, 0, 0.938082,0.0121466) , 
5, 0.0231112, 1, 0, 0.913183,0.0306828) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880386,0.00918535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90773,-0.0066502) , 
4, 0.249165, 1, 0, 0.893701,0.0315287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277371,-0.00276722) , 
10, 0.462823, 1, 0, 0.544474,-0.0211392) , 
16, 0.142858, 1, 0, 0.74173,0.00658518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189214,-0.00353132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362783,-0.00103647) , 
11, 1.226, 1, 0, 0.247272,-0.0642034) , 
3, 0.648512, 1, 0, 0.496207,-0.0285649)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802204,0.00590491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943921,0.00478865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901026,-0.00669581) , 
12, 0.224921, 1, 0, 0.927123,0.00294943) , 
1, 0.229337, 1, 0, 0.887804,0.028902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325765,-0.00199948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876093,1.86712e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883133,0.00441932) , 
10, 0.465733, 1, 0, 0.879303,0.0223923) , 
4, 0.238948, 1, 0, 0.586603,-0.0164012) , 
10, 0.335886, 1, 0, 0.717264,0.00325133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810622,0.00542535) , 
14, 0.162448, 1, 0, 0.726799,0.00952325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726131,0.00398722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0952123,-0.00405451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498868,-0.00114247) , 
4, 0.0876371, 1, 0, 0.178398,-0.0764877) , 
8, 0.0183392, 1, 0, 0.237851,-0.0612061) , 
10, 0.611794, 1, 0, 0.497146,-0.0236974)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799797,0.00469047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21095,-0.00228846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135233,-0.00402333) , 
3, 0.720305, 1, 0, 0.163424,-0.0816536) , 
3, 0.423421, 1, 0, 0.231173,-0.0665073) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999451,0.0178558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947634,-0.00725744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942938,0.0032543) , 
6, 0.212655, 1, 0, 0.945093,0.00136699) , 
6, 0.136077, 1, 0, 0.966539,0.0111235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848603,-0.0042214) , 
17, 0.413455, 1, 0, 0.932939,-0.0019983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723246,-0.000142706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753697,0.0034446) , 
9, 0.0201385, 1, 0, 0.741458,0.0404324) , 
11, 0.763959, 1, 0, 0.867005,0.0126123) , 
1, 0.176781, 1, 0, 0.486439,-0.0347433)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98042,0.0160697) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978628,0.0104721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955367,0.00979107) , 
9, 0.0212889, 1, 0, 0.966964,0.0377105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950732,0.000439717) , 
12, 0.23231, 1, 0, 0.959443,0.0209159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689723,-0.00274188) , 
15, 0.213633, 1, 0, 0.899486,0.00707964) , 
13, 0.417869, 1, 0, 0.913618,0.0170851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899525,0.00753849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624153,0.00162172) , 
10, 0.410359, 1, 0, 0.749711,0.0558955) , 
11, 0.716662, 1, 0, 0.867888,0.0279133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408125,-0.00092153) , 
3, 0.693093, 1, 0, 0.707927,0.00965929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248687,-0.00104645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13075,-0.00372972) , 
9, 0.0340446, 1, 0, 0.177323,-0.0586212) , 
7, 0.481004, 1, 0, 0.507221,-0.0161685)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87404,0.0065727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912772,-0.00651609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972455,0.00647629) , 
4, 0.402146, 1, 0, 0.944074,-0.00432873) , 
4, 0.216717, 1, 0, 0.928016,0.013864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353591,-0.00365943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864073,0.000837088) , 
2, 0.0301761, 1, 0, 0.559258,-0.0452372) , 
10, 0.431419, 1, 0, 0.770688,-0.0113511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594819,0.00345329) , 
11, 1.03317, 1, 0, 0.748636,-0.00132237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770095,0.00742634) , 
14, 0.20891, 1, 0, 0.750814,0.0091156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35346,-0.0019128) , 
3, 0.802529, 1, 0, 0.64236,-0.00730616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133963,-0.00336954) , 
7, 0.625305, 1, 0, 0.50018,-0.0255187)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744052,0.00531956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939746,-0.00248552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993015,0.0150808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984682,0.00777334) , 
4, 0.399452, 1, 0, 0.988659,0.0244147) , 
5, 0.0320044, 1, 0, 0.974202,0.0149864) , 
4, 0.140992, 1, 0, 0.923857,0.0287761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729962,-0.00198438) , 
13, 0.801005, 1, 0, 0.870387,0.0137692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690867,0.00345364) , 
11, 0.865962, 1, 0, 0.826554,0.0274598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383613,-0.00158188) , 
10, 0.640637, 1, 0, 0.711259,0.0113548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236928,-0.00185701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181594,-0.00292984) , 
17, 1.20207, 1, 0, 0.206485,-0.0570667) , 
17, 1.01664, 1, 0, 0.504743,-0.0166381)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671774,0.00514389) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997952,0.018983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986034,0.0093953) , 
12, 0.22973, 1, 0, 0.992349,0.0209648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876784,-0.00101705) , 
3, 0.237999, 1, 0, 0.939553,0.00761616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944892,0.00678341) , 
16, 0.134635, 1, 0, 0.941221,0.0169764) , 
12, 0.0875632, 1, 0, 0.898733,0.0282177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421073,-0.00149895) , 
3, 0.602166, 1, 0, 0.768469,0.0106003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127422,-0.00366871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307246,-0.00115909) , 
11, 1.08405, 1, 0, 0.215283,-0.0561053) , 
17, 0.937968, 1, 0, 0.503559,-0.0213438)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53256,0.000901953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131401,-0.00327943) , 
3, 0.493991, 1, 0, 0.186434,-0.0620179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592049,-0.00196317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812483,0.00225666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924075,0.0038789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762702,-0.00353335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847833,0.00135266) , 
5, 0.033228, 1, 0, 0.804546,-0.0155299) , 
16, 0.0767403, 1, 0, 0.840828,-0.00188196) , 
2, 0.0189538, 1, 0, 0.83296,0.00747459) , 
12, 0.11237, 1, 0, 0.789808,-0.00168163) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99402,0.015505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89901,-0.00210511) , 
6, 0.198844, 1, 0, 0.953171,0.00810259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84294,0.0059974) , 
6, 0.422553, 1, 0, 0.914293,0.0399637) , 
2, 0.0402769, 1, 0, 0.838067,0.0144633) , 
4, 0.10792, 1, 0, 0.494905,-0.0258132)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516089,0.000625186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217925,-0.00154831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0929227,-0.00389605) , 
16, 0.278488, 1, 0, 0.142228,-0.0642174) , 
10, 0.473825, 1, 0, 0.195661,-0.0529999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76202,-0.00463028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910344,0.00259557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887906,-0.00543199) , 
4, 0.513017, 1, 0, 0.899798,-0.00275903) , 
12, 0.165026, 1, 0, 0.856266,-0.0214787) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981967,0.0129949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908617,0.00276189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628169,-0.0025663) , 
7, 0.253598, 1, 0, 0.771712,-0.0145546) , 
10, 0.329427, 1, 0, 0.867519,0.00847897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703493,0.00300261) , 
6, 0.564323, 1, 0, 0.813588,0.0293281) , 
7, 0.0868014, 1, 0, 0.82825,0.0118735) , 
4, 0.10792, 1, 0, 0.498952,-0.0218967)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883296,0.00702108) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995317,0.0153342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948509,-0.00243926) , 
6, 0.147476, 1, 0, 0.972794,0.00557654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96211,0.00728342) , 
17, 0.331042, 1, 0, 0.968467,0.0160724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910251,-0.00275194) , 
15, 0.178028, 1, 0, 0.955191,0.00880469) , 
12, 0.121228, 1, 0, 0.942171,0.0197763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813803,0.00365301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164145,-0.00441523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184598,-0.00219059) , 
11, 0.9144, 1, 0, 0.17663,-0.070586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639191,-0.00270893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688823,0.00161363) , 
14, 0.0775454, 1, 0, 0.662414,-0.013033) , 
5, 0.0210614, 1, 0, 0.286701,-0.0575454) , 
10, 0.254725, 1, 0, 0.324317,-0.0500154) , 
17, 0.527607, 1, 0, 0.4947,-0.0307693)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123905,-0.00401846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157589,-0.00247772) , 
0, 0.0498939, 1, 0, 0.142876,-0.0686557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816136,0.00186381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340966,-0.00207858) , 
13, 0.751719, 1, 0, 0.506365,-0.0289347) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989569,0.0151353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979086,0.00354906) , 
4, 0.376682, 1, 0, 0.983944,0.0189418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869681,-0.00218769) , 
13, 0.768569, 1, 0, 0.952109,0.00905084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786253,-0.00432497) , 
6, 0.365195, 1, 0, 0.917468,-0.00375799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71124,0.000589087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703289,0.00259424) , 
9, 0.0198445, 1, 0, 0.706475,0.0396188) , 
11, 0.853454, 1, 0, 0.847022,0.0107246) , 
2, 0.0207643, 1, 0, 0.725739,-0.00339514) , 
2, 0.00300877, 1, 0, 0.493624,-0.029384)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975585,0.0125604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993622,0.0156535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959328,-0.00681234) , 
16, 0.0841771, 1, 0, 0.97779,0.00612179) , 
4, 0.325839, 1, 0, 0.977057,0.0159409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766457,-0.00268871) , 
3, 0.290369, 1, 0, 0.917543,0.00223851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722793,0.00352487) , 
11, 0.757818, 1, 0, 0.88424,0.00990363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824656,0.00711075) , 
14, 0.172676, 1, 0, 0.874314,0.0207256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24199,-0.00319015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225737,-0.00112719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657981,0.00068501) , 
2, 0.0209869, 1, 0, 0.350886,-0.0138017) , 
11, 1.04811, 1, 0, 0.294069,-0.0435971) , 
3, 0.5107, 1, 0, 0.506168,-0.020085)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911657,0.0104166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177911,-0.00387981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21167,-0.00187794) , 
11, 0.958115, 1, 0, 0.197023,-0.0641706) , 
3, 0.355916, 1, 0, 0.261282,-0.051545) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960852,0.00170799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937803,0.008352) , 
10, 0.350891, 1, 0, 0.948821,0.0346334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985247,0.00789702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987413,0.0114546) , 
13, 0.637967, 1, 0, 0.986344,0.0185413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799339,-0.00544994) , 
13, 0.813414, 1, 0, 0.917876,-0.00875489) , 
2, 0.0382321, 1, 0, 0.930282,0.0086396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774136,0.00326694) , 
6, 0.544371, 1, 0, 0.888462,0.0241306) , 
1, 0.210306, 1, 0, 0.495283,-0.0233104)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616318,-0.00139246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645849,0.00128814) , 
14, 0.0796244, 1, 0, 0.630888,-0.00204049) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996005,0.0179625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9712,0.00202687) , 
15, 0.0823601, 1, 0, 0.986105,0.0177701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827083,0.00208515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858912,0.00535278) , 
15, 0.0723117, 1, 0, 0.842572,0.0525739) , 
6, 0.318529, 1, 0, 0.926774,0.0321566) , 
2, 0.020625, 1, 0, 0.831383,0.0211317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632467,0.0049121) , 
7, 0.411332, 1, 0, 0.804037,0.0298851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255028,-0.00161862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121801,-0.00339791) , 
3, 0.625972, 1, 0, 0.152987,-0.0658708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787659,-0.00146209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729954,0.00293649) , 
16, 0.0963651, 1, 0, 0.756085,0.0238563) , 
12, 0.115304, 1, 0, 0.271382,-0.0482564) , 
10, 0.526465, 1, 0, 0.494022,-0.0155946)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870903,0.00741083) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997908,0.0206729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975777,0.00528408) , 
0, 0.219705, 1, 0, 0.986886,0.0182329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958097,-0.00168088) , 
14, 0.0560437, 1, 0, 0.973237,0.00769412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815571,-0.00187348) , 
3, 0.354527, 1, 0, 0.932355,-0.000237778) , 
5, 0.0185989, 1, 0, 0.920633,0.0147773) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277247,-0.00349309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257472,-0.00447128) , 
6, 0.295559, 1, 0, 0.265358,-0.0896699) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216093,-0.00265979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204259,-0.00102068) , 
15, 0.149472, 1, 0, 0.209283,-0.0388925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666946,0.00066101) , 
2, 0.0252082, 1, 0, 0.316139,-0.026273) , 
11, 0.868524, 1, 0, 0.301722,-0.0442709) , 
17, 0.609136, 1, 0, 0.501802,-0.0251819)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31028,-0.00109108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481176,0.00103566) , 
12, 0.0583742, 1, 0, 0.403325,0.00159512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124743,-0.00307292) , 
10, 0.586227, 1, 0, 0.202786,-0.0466578) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979301,0.00935082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844573,-0.00222188) , 
10, 0.237165, 1, 0, 0.912365,0.00594093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954828,0.0101358) , 
15, 0.0386148, 1, 0, 0.926111,0.0192248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945434,0.00313631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745241,-0.00366419) , 
16, 0.10232, 1, 0, 0.847966,-0.0142717) , 
15, 0.078776, 1, 0, 0.890989,0.00416988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732037,0.00309294) , 
6, 0.557618, 1, 0, 0.850564,0.0203025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679396,-0.00140656) , 
9, 0.0530208, 1, 0, 0.812353,0.0100445) , 
12, 0.0875632, 1, 0, 0.500781,-0.0189382)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140299,-0.00280027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140428,-0.00349405) , 
15, 0.199048, 1, 0, 0.140364,-0.0675191) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641222,0.00305944) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990599,0.0128439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955327,-0.00669447) , 
7, 0.0840165, 1, 0, 0.968882,0.000817607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984361,0.00993308) , 
9, 0.0377851, 1, 0, 0.973269,0.00776386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837947,-0.00559318) , 
3, 0.327523, 1, 0, 0.945664,-0.0027223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807059,0.0023377) , 
3, 0.464, 1, 0, 0.916126,0.00553929) , 
1, 0.156125, 1, 0, 0.8613,0.0158157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431867,-0.00145265) , 
3, 0.67624, 1, 0, 0.714874,-0.00275097) , 
2, 0.00304846, 1, 0, 0.490612,-0.0280334)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230256,-0.00160606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0938629,-0.00364712) , 
10, 0.683341, 1, 0, 0.147227,-0.0587796) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834569,0.00575595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996164,0.0163181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943537,-0.00286695) , 
7, 0.188498, 1, 0, 0.97671,0.0121509) , 
1, 0.207012, 1, 0, 0.939667,0.0237108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428913,-0.00285187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853258,0.000570493) , 
2, 0.0333615, 1, 0, 0.665175,-0.0241881) , 
13, 0.78249, 1, 0, 0.822476,0.00326103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584213,0.00177993) , 
11, 1.0672, 1, 0, 0.764318,0.0127206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567164,-0.00137372) , 
9, 0.056808, 1, 0, 0.723896,0.00414433) , 
2, 0.00304846, 1, 0, 0.48907,-0.021479)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154961,-0.00256967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151823,-0.00223681) , 
9, 0.0407909, 1, 0, 0.153305,-0.0505807) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940234,0.00712292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928457,-0.00249665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982555,0.00561522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950824,0.00706105) , 
13, 0.778653, 1, 0, 0.96989,0.0218791) , 
5, 0.039188, 1, 0, 0.952653,0.00846697) , 
5, 0.0210371, 1, 0, 0.950115,0.0162105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728073,-0.00380566) , 
17, 0.600633, 1, 0, 0.912282,0.00410303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58717,0.00367669) , 
17, 0.806162, 1, 0, 0.861229,0.0164366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455788,-0.000534449) , 
3, 0.720569, 1, 0, 0.744896,0.00768731) , 
2, 0.00300877, 1, 0, 0.508053,-0.0156403)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629253,0.00267444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318785,0.000474462) , 
16, 0.234003, 1, 0, 0.452524,0.0269829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140496,-0.0027993) , 
3, 0.598433, 1, 0, 0.216315,-0.0398716) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966342,0.00851217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983456,0.00831742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988937,0.0107038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890615,-0.00233647) , 
6, 0.170752, 1, 0, 0.932028,-0.00344336) , 
10, 0.254732, 1, 0, 0.950085,0.00354781) , 
5, 0.0263309, 1, 0, 0.953474,0.0108862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6742,-0.00310131) , 
7, 0.321359, 1, 0, 0.898348,-0.000621895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711662,0.00215214) , 
6, 0.483885, 1, 0, 0.831987,0.0161866) , 
0, 0.093977, 1, 0, 0.508547,-0.0132633)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363927,-9.5122e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10933,-0.00328411) , 
3, 0.583657, 1, 0, 0.158239,-0.0565752) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959943,0.00932158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981132,0.0078037) , 
5, 0.0299667, 1, 0, 0.969206,0.0308093) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76487,-0.00103233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582108,0.0017805) , 
7, 0.265598, 1, 0, 0.683073,0.0101581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512266,-0.00146025) , 
15, 0.161119, 1, 0, 0.608472,-0.0101816) , 
13, 0.648378, 1, 0, 0.719781,0.00246669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973911,0.00872152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950675,-0.00146654) , 
5, 0.0570924, 1, 0, 0.963262,0.0134109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808823,0.00487922) , 
11, 0.82984, 1, 0, 0.914104,0.0378658) , 
5, 0.0414407, 1, 0, 0.781049,0.0136276) , 
4, 0.077451, 1, 0, 0.502728,-0.0177445)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99325,0.0245603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999339,0.0200806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985127,0.0050205) , 
4, 0.432856, 1, 0, 0.99198,0.0131161) , 
2, 0.0288669, 1, 0, 0.992373,0.0303023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435898,-0.00376407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766242,-0.000275996) , 
13, 0.711839, 1, 0, 0.582454,-0.0367087) , 
3, 0.228145, 1, 0, 0.825306,0.00299124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840787,0.00662279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53861,0.000642878) , 
15, 0.174167, 1, 0, 0.697749,0.0457237) , 
6, 0.337212, 1, 0, 0.781984,0.0175042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158893,-0.00275424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677357,0.000449258) , 
4, 0.180211, 1, 0, 0.264463,-0.0477467) , 
3, 0.612484, 1, 0, 0.498068,-0.0182929)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635897,0.00355267) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996176,0.0152121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923414,-0.0088276) , 
6, 0.171029, 1, 0, 0.96773,-0.00165257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972857,0.00831537) , 
17, 0.324857, 1, 0, 0.969673,0.0100036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834579,-0.00625813) , 
11, 0.638163, 1, 0, 0.943191,-0.000644469) , 
4, 0.143894, 1, 0, 0.875142,0.01256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210642,-0.00307882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145177,-0.00220682) , 
8, 0.0514554, 1, 0, 0.174332,-0.0585981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679699,0.000904204) , 
2, 0.0210614, 1, 0, 0.294929,-0.0397609) , 
3, 0.504399, 1, 0, 0.505781,-0.0207472)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83661,0.00875637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941787,0.00460438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935103,-0.00142426) , 
12, 0.188012, 1, 0, 0.938296,0.00920625) , 
4, 0.180694, 1, 0, 0.912259,0.0378723) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909173,0.00476639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932213,-0.00115217) , 
4, 0.475222, 1, 0, 0.917451,0.0213398) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22384,-0.0042736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208753,-0.00232396) , 
11, 0.873189, 1, 0, 0.215673,-0.069981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350894,-0.000496034) , 
11, 1.11641, 1, 0, 0.26239,-0.0497873) , 
17, 0.559151, 1, 0, 0.385669,-0.0364015) , 
10, 0.326022, 1, 0, 0.497068,-0.020689)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965823,0.0139072) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999336,0.0183416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904089,-0.0107173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847968,0.000343581) , 
17, 0.303084, 1, 0, 0.872094,-0.0165242) , 
3, 0.151852, 1, 0, 0.914514,-0.00538723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886465,0.00343369) , 
8, 0.0249116, 1, 0, 0.908842,0.000942693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375091,-0.00224131) , 
7, 0.330157, 1, 0, 0.778062,-0.00992573) , 
13, 0.383188, 1, 0, 0.802463,0.00048576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579284,0.00443309) , 
11, 0.882876, 1, 0, 0.761588,0.0146998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320023,-0.00141175) , 
3, 0.684541, 1, 0, 0.595741,-0.00355996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171933,-0.00313362) , 
10, 0.800038, 1, 0, 0.5026,-0.0172889)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525724,0.000809372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133056,-0.00423886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14744,-0.00213157) , 
11, 0.904906, 1, 0, 0.142317,-0.060165) , 
11, 0.673884, 1, 0, 0.191586,-0.05052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575405,-0.00220567) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93648,-0.000531215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925557,0.00602538) , 
10, 0.331098, 1, 0, 0.932641,0.0141214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981094,0.00361031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789757,-0.00346575) , 
6, 0.253251, 1, 0, 0.88728,-0.0189213) , 
15, 0.0823601, 1, 0, 0.912848,-0.000296173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852461,0.00431658) , 
10, 0.582278, 1, 0, 0.902537,0.00985262) , 
4, 0.21521, 1, 0, 0.810861,-0.00630306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533505,0.00154806) , 
8, 0.0409385, 1, 0, 0.748728,0.00292776) , 
5, 0.0154911, 1, 0, 0.496866,-0.0212339)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198333,-0.0021207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10002,-0.0034492) , 
16, 0.292734, 1, 0, 0.144845,-0.05706) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740778,0.00225291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605104,-0.00364264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883802,0.00262677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863526,-0.00613029) , 
4, 0.377717, 1, 0, 0.873538,-0.00741906) , 
0, 0.15139, 1, 0, 0.769726,-0.0324844) , 
2, 0.0187994, 1, 0, 0.762148,-0.0147028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998246,0.0203134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933555,0.00114472) , 
13, 0.751359, 1, 0, 0.968381,0.0123824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821841,0.00356485) , 
17, 0.492908, 1, 0, 0.921945,0.0260481) , 
2, 0.0412656, 1, 0, 0.824726,0.00125561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615414,-0.000493613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56874,0.00429366) , 
11, 0.88413, 1, 0, 0.592143,0.0449233) , 
7, 0.308898, 1, 0, 0.77061,0.0114158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392677,-0.00222064) , 
16, 0.332541, 1, 0, 0.734894,0.00588602) , 
2, 0.00299812, 1, 0, 0.50621,-0.0185098)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495808,0.000572813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627242,0.0040622) , 
14, 0.070379, 1, 0, 0.565249,0.0479472) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948959,-0.00129425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966283,0.00780911) , 
10, 0.169464, 1, 0, 0.958669,0.0170995) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932127,0.00134819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826408,0.000149348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769374,-0.00657452) , 
15, 0.100818, 1, 0, 0.798859,-0.0355674) , 
8, 0.0147846, 1, 0, 0.852204,-0.0186697) , 
10, 0.270086, 1, 0, 0.89529,-0.00419412) , 
4, 0.164514, 1, 0, 0.789326,0.0125465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285593,-0.00172322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0974018,-0.00393789) , 
16, 0.244681, 1, 0, 0.159742,-0.0673082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795697,0.00160287) , 
1, 0.219894, 1, 0, 0.266296,-0.0518684) , 
10, 0.529785, 1, 0, 0.490406,-0.0242677)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891924,0.00739015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123253,-0.00354713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231754,-0.0020873) , 
6, 0.38012, 1, 0, 0.184207,-0.0593973) , 
3, 0.391507, 1, 0, 0.277522,-0.0434615) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987397,0.0107946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898038,-0.00197109) , 
10, 0.336756, 1, 0, 0.937416,0.00535264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846182,-0.0188928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856144,-0.000628516) , 
8, 0.0197466, 1, 0, 0.851422,-0.0457583) , 
16, 0.097491, 1, 0, 0.899308,-0.0172969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714893,0.00276054) , 
11, 0.908884, 1, 0, 0.844409,0.00605692) , 
2, 0.0210371, 1, 0, 0.493823,-0.0245672)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966331,0.013953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209204,-0.00324321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206648,-0.00168675) , 
11, 0.960454, 1, 0, 0.207862,-0.0531464) , 
3, 0.286331, 1, 0, 0.28497,-0.040598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944948,0.00780381) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990916,0.00781078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966868,0.00682626) , 
3, 0.175084, 1, 0, 0.979049,0.0156877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939156,-0.00281838) , 
16, 0.115002, 1, 0, 0.966162,0.00764548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757473,-0.00406106) , 
6, 0.376846, 1, 0, 0.904699,-0.0115908) , 
5, 0.0340804, 1, 0, 0.913583,0.00123089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664247,0.0022493) , 
17, 0.791734, 1, 0, 0.85179,0.0144884) , 
2, 0.0216876, 1, 0, 0.504805,-0.0192333)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939923,-0.00300141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94246,0.00488322) , 
8, 0.0167105, 1, 0, 0.94107,0.0038467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937052,0.0066151) , 
14, 0.0635431, 1, 0, 0.939758,0.0153814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716488,-0.00370628) , 
10, 0.458936, 1, 0, 0.884475,0.00179489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845038,0.00578339) , 
14, 0.135037, 1, 0, 0.8745,0.0158276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764437,0.00271023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317303,-0.00293064) , 
15, 0.129551, 1, 0, 0.477299,-0.0295192) , 
8, 0.031565, 1, 0, 0.72913,-0.000768701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47063,0.00320865) , 
11, 0.999142, 1, 0, 0.683366,0.0112487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447631,-0.0012432) , 
13, 1.22718, 1, 0, 0.630616,0.00169014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116474,-0.0033298) , 
7, 0.688627, 1, 0, 0.498167,-0.015943)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930306,0.00778154) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35587,-0.00125013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128141,-0.00345927) , 
3, 0.60552, 1, 0, 0.195909,-0.0599978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263017,-0.000647623) , 
11, 1.12573, 1, 0, 0.217101,-0.045914) , 
3, 0.291829, 1, 0, 0.277813,-0.038651) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935727,-0.00316492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912071,0.000163229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979586,0.0116509) , 
5, 0.0409202, 1, 0, 0.939626,0.0146693) , 
8, 0.00462545, 1, 0, 0.938412,0.00638039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749062,0.0032267) , 
11, 0.968131, 1, 0, 0.891757,0.0214693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872328,-0.00128871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699953,-0.00297224) , 
16, 0.0841771, 1, 0, 0.78382,-0.0318525) , 
15, 0.152931, 1, 0, 0.85954,0.0055538) , 
12, 0.122789, 1, 0, 0.488845,-0.022615)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26768,-0.00117383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118166,-0.00292274) , 
16, 0.278488, 1, 0, 0.179892,-0.0427129) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724653,0.00186984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401292,-0.00113885) , 
8, 0.0305985, 1, 0, 0.516436,-0.00564825) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986301,0.00962997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935702,-0.00839628) , 
7, 0.117811, 1, 0, 0.960716,0.00119406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971682,0.00838376) , 
9, 0.0377851, 1, 0, 0.963989,0.0107037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789733,0.00425896) , 
3, 0.513208, 1, 0, 0.903738,0.0360099) , 
4, 0.214784, 1, 0, 0.7324,0.0175808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869204,-0.00253424) , 
12, 0.275393, 1, 0, 0.755026,0.0113185) , 
2, 0.0144445, 1, 0, 0.504508,-0.0122166)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604664,0.00148671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283248,-0.000683673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117429,-0.00256348) , 
16, 0.203563, 1, 0, 0.159612,-0.041613) , 
10, 0.390406, 1, 0, 0.205682,-0.0341466) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995709,0.014791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976402,-7.91637e-05) , 
10, 0.258151, 1, 0, 0.987319,0.0112832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764863,-0.00446526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794593,0.00162694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620022,-0.000682353) , 
7, 0.286306, 1, 0, 0.70581,0.00467449) , 
16, 0.0890318, 1, 0, 0.72707,-0.0178993) , 
3, 0.252199, 1, 0, 0.838032,-0.00545679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956172,-0.00450901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736463,0.00319779) , 
3, 0.266389, 1, 0, 0.806508,0.0397956) , 
15, 0.142422, 1, 0, 0.826897,0.0105278) , 
0, 0.0903784, 1, 0, 0.504756,-0.0126388)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847419,-0.00543427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896271,0.00118089) , 
9, 0.0188809, 1, 0, 0.872582,-0.0156074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916966,0.00734368) , 
7, 0.199568, 1, 0, 0.889625,0.0105896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967896,0.00263564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516564,-0.00299013) , 
3, 0.342432, 1, 0, 0.649989,-0.0448731) , 
10, 0.319671, 1, 0, 0.765191,-0.01821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548736,0.00220496) , 
10, 0.582278, 1, 0, 0.723398,-0.00635425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756491,-0.00139574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351537,-0.00383792) , 
10, 0.516704, 1, 0, 0.500573,-0.060057) , 
14, 0.119624, 1, 0, 0.667904,-0.0197289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705828,0.00495346) , 
14, 0.21792, 1, 0, 0.671158,-0.0115154) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17341,-0.00211394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110624,-0.00410293) , 
16, 0.373319, 1, 0, 0.143571,-0.0595417) , 
7, 0.535709, 1, 0, 0.491987,-0.0278253)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129113,-0.00343976) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782044,0.00431033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99382,0.0134274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994615,0.0170794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861768,-0.00320164) , 
3, 0.192335, 1, 0, 0.918582,-0.00873036) , 
10, 0.214658, 1, 0, 0.941058,0.00193195) , 
5, 0.0231733, 1, 0, 0.894765,0.0149032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668919,-0.00244517) , 
9, 0.0456394, 1, 0, 0.829541,0.00104107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603457,0.00331889) , 
11, 0.933672, 1, 0, 0.795901,0.00960498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317891,-0.00109767) , 
3, 0.687353, 1, 0, 0.590768,-0.0056757) , 
12, 0.0516363, 1, 0, 0.498452,-0.0179472)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230282,-0.00127679) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988401,0.0119002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969805,-0.00938666) , 
4, 0.389304, 1, 0, 0.97845,0.00322412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781034,-0.00498401) , 
3, 0.269552, 1, 0, 0.922921,-0.0128748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874928,0.00244717) , 
9, 0.0387163, 1, 0, 0.90793,-0.00241438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660509,0.00404377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769083,0.000426835) , 
5, 0.0355657, 1, 0, 0.708065,0.0472658) , 
11, 0.719908, 1, 0, 0.83152,0.016579) , 
5, 0.00304846, 1, 0, 0.688724,0.00627089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184384,-0.00252332) , 
17, 1.04885, 1, 0, 0.498652,-0.0166476)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581906,0.00126727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108489,-0.0034821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187009,-0.00175065) , 
15, 0.248809, 1, 0, 0.137638,-0.0577309) , 
10, 0.406136, 1, 0, 0.190464,-0.0476005) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796045,-0.00559308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949036,0.00381434) , 
5, 0.0413587, 1, 0, 0.868159,-0.0241922) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985285,0.00827303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924081,-0.00537172) , 
13, 0.582571, 1, 0, 0.95622,-0.00300801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854216,0.00549308) , 
11, 0.621741, 1, 0, 0.926105,0.0150372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611011,-0.00238983) , 
13, 0.928076, 1, 0, 0.851071,0.000486372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662047,0.00179085) , 
6, 0.559872, 1, 0, 0.787383,0.0146003) , 
8, 0.00327103, 1, 0, 0.806655,0.00534517) , 
12, 0.0865915, 1, 0, 0.500663,-0.0209469)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14208,-0.00320494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167562,-0.00183689) , 
12, 0.0499482, 1, 0, 0.155986,-0.0483186) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983355,0.00929246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95803,-0.00452378) , 
12, 0.195384, 1, 0, 0.967399,0.00278847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979024,0.00976349) , 
17, 0.328217, 1, 0, 0.970459,0.0114435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79517,-0.00371851) , 
17, 0.418484, 1, 0, 0.919449,-0.00281535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746786,0.00456334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405955,-0.000235068) , 
16, 0.231208, 1, 0, 0.603421,0.041863) , 
11, 0.704741, 1, 0, 0.803889,0.0135218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492079,-0.00153587) , 
13, 1.19756, 1, 0, 0.721145,-0.000277214) , 
12, 0.0688484, 1, 0, 0.50091,-0.0189983)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989998,0.0194028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998583,0.0154996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971474,-0.00436995) , 
17, 0.280129, 1, 0, 0.987629,0.00765281) , 
4, 0.250453, 1, 0, 0.98828,0.0243777) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8397,-0.00315646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72458,0.000974537) , 
14, 0.0822828, 1, 0, 0.781755,-0.00641018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26088,-0.00287072) , 
16, 0.185733, 1, 0, 0.546599,-0.0292461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442403,0.0017536) , 
11, 0.919673, 1, 0, 0.514986,-0.0105223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24559,-0.00191467) , 
3, 0.733864, 1, 0, 0.386145,-0.0261894) , 
3, 0.218872, 1, 0, 0.50221,-0.0164424)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939145,-0.00196446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844027,0.0042652) , 
7, 0.16908, 1, 0, 0.893149,0.0110784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554256,-0.0018854) , 
13, 1.07151, 1, 0, 0.778437,-0.00732553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737608,0.000169683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714674,0.00363406) , 
9, 0.0257536, 1, 0, 0.723686,0.0333869) , 
14, 0.0558614, 1, 0, 0.759623,0.00666456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799568,0.00103776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568543,-0.000600111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258969,-0.00245503) , 
16, 0.116095, 1, 0, 0.361893,-0.0413919) , 
10, 0.452328, 1, 0, 0.450938,-0.0305396) , 
15, 0.149949, 1, 0, 0.621839,-0.00994173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724853,0.00548462) , 
14, 0.229801, 1, 0, 0.629391,-0.0035374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111846,-0.00359572) , 
7, 0.66333, 1, 0, 0.490628,-0.0214525)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822378,0.00434189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71024,-0.000870688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657163,0.00443189) , 
7, 0.261983, 1, 0, 0.678875,0.0347441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496227,-0.000817827) , 
14, 0.0987393, 1, 0, 0.604633,0.0142934) , 
7, 0.114588, 1, 0, 0.663029,0.0250232) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804605,-0.00609969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818683,-0.000816531) , 
16, 0.102788, 1, 0, 0.81203,-0.0350312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974185,-0.00249557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865674,0.0031343) , 
13, 0.857835, 1, 0, 0.921606,0.0157387) , 
4, 0.431681, 1, 0, 0.867208,-0.00946564) , 
2, 0.0371787, 1, 0, 0.745767,0.0110476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413084,-0.00150187) , 
9, 0.0625761, 1, 0, 0.678118,0.00220108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130001,-0.00285477) , 
7, 0.58441, 1, 0, 0.505908,-0.0158227)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132123,-0.00408925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164141,-0.00195575) , 
12, 0.0454001, 1, 0, 0.154931,-0.0501711) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9941,0.0172765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948611,-0.0128545) , 
12, 0.199491, 1, 0, 0.970692,0.00278046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881558,0.00493767) , 
3, 0.350385, 1, 0, 0.9432,0.0194523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494367,-0.000742756) , 
17, 0.762099, 1, 0, 0.792664,0.00697637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79393,0.00479011) , 
9, 0.0426567, 1, 0, 0.792841,0.0153986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549688,-0.00133359) , 
9, 0.055784, 1, 0, 0.736244,0.00550923) , 
12, 0.0701653, 1, 0, 0.497651,-0.0173441)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999339,0.0273727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995215,0.0136203) , 
2, 0.036727, 1, 0, 0.997245,0.0229249) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928826,0.00257335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484854,-0.00232443) , 
16, 0.138656, 1, 0, 0.657532,-0.0165401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589518,-0.00640476) , 
13, 0.744679, 1, 0, 0.639611,-0.0341128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835207,0.00142824) , 
13, 0.842194, 1, 0, 0.698435,-0.0191823) , 
3, 0.147601, 1, 0, 0.7787,-0.00787164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754831,0.00533093) , 
14, 0.187927, 1, 0, 0.775371,0.00169219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20788,-0.00242833) , 
3, 0.627303, 1, 0, 0.590457,-0.0153072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473501,0.0036906) , 
11, 1.12237, 1, 0, 0.577149,-0.00543487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261202,-0.00222457) , 
3, 0.864683, 1, 0, 0.500361,-0.0169592)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902423,-0.00549466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976523,0.00613061) , 
2, 0.0403162, 1, 0, 0.938261,-0.00685128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688073,0.0032262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930802,0.00245992) , 
4, 0.262947, 1, 0, 0.841004,0.0283568) , 
10, 0.372885, 1, 0, 0.889148,0.0109281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898668,0.00202482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218284,-0.00326148) , 
10, 0.430935, 1, 0, 0.428521,-0.0417773) , 
16, 0.178573, 1, 0, 0.71439,-0.00906796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526666,0.00344756) , 
11, 1.03195, 1, 0, 0.695683,-0.00212203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172182,-0.00321605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374013,-0.000577967) , 
11, 1.1893, 1, 0, 0.254417,-0.0457039) , 
3, 0.684541, 1, 0, 0.497419,-0.0217037)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941763,0.0062452) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596769,-0.00238114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198788,-0.00408973) , 
7, 0.349411, 1, 0, 0.371817,-0.0675645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142097,-0.00179742) , 
10, 0.634269, 1, 0, 0.218615,-0.0456983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901343,-0.00861488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893783,-0.00369443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811153,0.00219682) , 
6, 0.347879, 1, 0, 0.857097,0.00362096) , 
10, 0.309314, 1, 0, 0.868113,-0.00717206) , 
12, 0.123892, 1, 0, 0.461445,-0.0312944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402623,0.000121454) , 
11, 1.2006, 1, 0, 0.448227,-0.0236131) , 
10, 0.211738, 1, 0, 0.502803,-0.0175927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573227,0.00357417) , 
14, 0.207211, 1, 0, 0.509373,-0.0105644)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122383,-0.00325686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155723,-0.00177469) , 
0, 0.0500735, 1, 0, 0.14141,-0.0470357) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948655,0.006613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95661,-0.000670231) , 
5, 0.0218276, 1, 0, 0.953461,0.011052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709826,0.00365631) , 
3, 0.381475, 1, 0, 0.857727,0.0324905) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995017,0.0145823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945458,-0.00432357) , 
6, 0.133496, 1, 0, 0.967721,-0.00125588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828263,-0.00734549) , 
11, 0.549219, 1, 0, 0.923602,-0.0185331) , 
4, 0.387115, 1, 0, 0.885462,0.0110084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443029,-0.00100309) , 
3, 0.648512, 1, 0, 0.72077,-0.00275401) , 
2, 0.00292566, 1, 0, 0.492837,-0.0201754)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238428,-0.000843444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0998687,-0.00299715) , 
3, 0.671695, 1, 0, 0.147254,-0.0433645) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957445,0.00273825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759608,0.0026212) , 
6, 0.328332, 1, 0, 0.869383,0.0243417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866685,-0.0049609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960365,0.00641205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901444,-0.00532052) , 
2, 0.0590628, 1, 0, 0.935645,0.00402916) , 
2, 0.0440213, 1, 0, 0.91093,-0.0101702) , 
5, 0.0352195, 1, 0, 0.892697,0.00497498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425282,-0.00182496) , 
7, 0.383201, 1, 0, 0.784725,-0.00495078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563198,0.0016039) , 
11, 1.11584, 1, 0, 0.733003,0.00546861) , 
5, 0.00299812, 1, 0, 0.50283,-0.0137206)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873585,0.00155687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408848,-0.00200623) , 
13, 0.777469, 1, 0, 0.561866,-0.0288575) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969074,0.0021379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996291,0.015036) , 
14, 0.0304998, 1, 0, 0.981696,0.0192817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91619,-0.00129456) , 
15, 0.119747, 1, 0, 0.96069,0.0105528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821869,0.00377834) , 
11, 0.705193, 1, 0, 0.914634,0.0277366) , 
12, 0.159289, 1, 0, 0.738404,-0.000535706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794692,0.0070513) , 
14, 0.220682, 1, 0, 0.743554,0.00802947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751243,0.00491482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133685,-0.0036678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134211,-0.00271245) , 
11, 0.962139, 1, 0, 0.13395,-0.0635902) , 
10, 0.466995, 1, 0, 0.202438,-0.0488874) , 
7, 0.384803, 1, 0, 0.497623,-0.0178385)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331927,0.00039172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114144,-0.00244149) , 
3, 0.583657, 1, 0, 0.160718,-0.0353583) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994589,0.0149133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925605,-0.00325789) , 
6, 0.230141, 1, 0, 0.970648,0.00817119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859526,0.00573339) , 
3, 0.353817, 1, 0, 0.942007,0.0239568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500047,-0.000330483) , 
10, 0.584819, 1, 0, 0.812018,0.0148007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92244,-0.00558183) , 
4, 0.486706, 1, 0, 0.838877,0.00635157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627295,0.00202816) , 
6, 0.558932, 1, 0, 0.770675,0.0199254) , 
4, 0.0719469, 1, 0, 0.509667,-0.00373114)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224605,-0.00106024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104011,-0.00256388) , 
17, 1.05376, 1, 0, 0.148915,-0.037928) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968009,0.00902545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991166,0.0102926) , 
12, 0.145004, 1, 0, 0.980202,0.019997) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934893,-0.00704135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941601,0.0044759) , 
14, 0.0417821, 1, 0, 0.938876,0.00709467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691972,-0.00521577) , 
7, 0.114574, 1, 0, 0.834382,-0.0231279) , 
13, 0.572841, 1, 0, 0.885408,-0.00803738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504889,0.000310528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679045,0.00525485) , 
6, 0.473919, 1, 0, 0.599813,0.0574111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555695,9.13398e-05) , 
13, 1.17382, 1, 0, 0.576757,0.0286137) , 
11, 0.787127, 1, 0, 0.747468,0.00834247) , 
2, 0.00300529, 1, 0, 0.511664,-0.00988607)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937153,0.00684106) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980768,0.00491037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920452,-0.00410725) , 
10, 0.318477, 1, 0, 0.951325,-0.00435426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978322,0.00881793) , 
1, 0.550036, 1, 0, 0.960023,0.0053481) , 
5, 0.0292566, 1, 0, 0.954066,0.015333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5353,-0.00184426) , 
17, 0.464553, 1, 0, 0.758862,-0.0111355) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845389,0.00491785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640601,0.000278881) , 
16, 0.223444, 1, 0, 0.746274,0.0243191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336363,-0.00195665) , 
15, 0.199048, 1, 0, 0.576357,-0.00212309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47323,0.00300059) , 
11, 1.05207, 1, 0, 0.537232,0.024741) , 
7, 0.211644, 1, 0, 0.661225,0.00466955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140074,-0.00209182) , 
7, 0.599661, 1, 0, 0.505096,-0.00846778)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634387,-0.00366688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999673,0.0209695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955816,-0.00428662) , 
13, 0.64687, 1, 0, 0.978523,0.00363255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869358,0.00343255) , 
6, 0.317363, 1, 0, 0.939006,0.017695) , 
2, 0.021916, 1, 0, 0.858476,-0.00386452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868731,0.00994708) , 
7, 0.300142, 1, 0, 0.860779,0.0198022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121141,-0.00265228) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46904,0.000500739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639354,0.00373381) , 
15, 0.136116, 1, 0, 0.557975,0.038337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828501,0.0023952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718186,-0.00303397) , 
9, 0.0289842, 1, 0, 0.772741,-0.00951037) , 
5, 0.0309822, 1, 0, 0.667945,0.013837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470454,-0.00159855) , 
9, 0.052795, 1, 0, 0.592944,-0.00478915) , 
12, 0.0680232, 1, 0, 0.356299,-0.0276698) , 
10, 0.404973, 1, 0, 0.505311,-0.0136477)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425507,0.00106908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121813,-0.00229427) , 
10, 0.513577, 1, 0, 0.16727,-0.0329286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456539,0.00147831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657965,-0.00262281) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975915,-0.00276249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989861,0.0152003) , 
17, 0.291162, 1, 0, 0.983021,0.0103961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95406,-0.00928109) , 
4, 0.522108, 1, 0, 0.973514,0.00164056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865166,-0.00590923) , 
6, 0.297925, 1, 0, 0.94606,-0.00876984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756883,0.00166401) , 
3, 0.472514, 1, 0, 0.881912,0.0051309) , 
4, 0.229234, 1, 0, 0.840045,-0.00530476) , 
4, 0.154846, 1, 0, 0.730324,0.00574156) , 
12, 0.0701653, 1, 0, 0.511241,-0.00930487)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203129,-0.00168703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113863,-0.00236883) , 
13, 0.830761, 1, 0, 0.147822,-0.040615) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577415,-0.00363926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617817,0.00022822) , 
15, 0.225494, 1, 0, 0.593127,-0.034709) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972107,-0.000264994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948194,0.00560181) , 
17, 0.328582, 1, 0, 0.959162,0.0138322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933179,-0.00868912) , 
4, 0.472473, 1, 0, 0.948218,-0.00185661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888485,0.00444137) , 
6, 0.410301, 1, 0, 0.936385,0.00832348) , 
4, 0.242736, 1, 0, 0.805377,-0.00810032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545649,0.000917236) , 
11, 1.02781, 1, 0, 0.730437,0.000689478) , 
2, 0.00300877, 1, 0, 0.496243,-0.0159137)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120632,-0.00344085) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99695,0.0143214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928832,-0.00708739) , 
11, 0.30265, 1, 0, 0.964773,0.00374838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957298,0.00785911) , 
11, 0.404816, 1, 0, 0.962135,0.0143433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816023,-0.00497922) , 
11, 0.528145, 1, 0, 0.923649,-0.000327696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818479,0.00484313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691639,0.00153599) , 
16, 0.118819, 1, 0, 0.753019,0.0457108) , 
11, 0.672295, 1, 0, 0.875779,0.0125885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290834,-0.00269686) , 
7, 0.46614, 1, 0, 0.76438,-0.000360781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587858,0.00491896) , 
11, 1.06915, 1, 0, 0.744765,0.00993009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310704,-0.00148178) , 
3, 0.768499, 1, 0, 0.601408,-0.00503229) , 
12, 0.0530965, 1, 0, 0.491507,-0.0185961)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509881,0.00390325) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987937,0.0153139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933333,-0.00226171) , 
9, 0.0182189, 1, 0, 0.958894,0.00697253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922223,0.0046458) , 
9, 0.0387163, 1, 0, 0.946642,0.0142165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945392,-0.0119689) , 
12, 0.237879, 1, 0, 0.946267,0.00290667) , 
4, 0.0805432, 1, 0, 0.855511,0.0171676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777232,-5.75361e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332374,-0.00399887) , 
8, 0.0194758, 1, 0, 0.561846,-0.0396656) , 
13, 0.823674, 1, 0, 0.744485,-0.00431931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583086,0.00301357) , 
11, 0.991673, 1, 0, 0.717399,0.00667573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0996222,-0.00372722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311712,-0.000717191) , 
11, 1.14303, 1, 0, 0.194247,-0.0473799) , 
17, 0.994072, 1, 0, 0.490896,-0.0167281)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771938,0.00572532) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978097,0.00180992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990161,0.00898881) , 
0, 0.197547, 1, 0, 0.984041,0.00948641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796117,-0.00431856) , 
11, 0.642222, 1, 0, 0.922831,-0.00983339) , 
4, 0.160977, 1, 0, 0.886704,0.014549) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554634,-0.000880936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117894,-0.00320591) , 
17, 0.755001, 1, 0, 0.19912,-0.0558343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188587,-0.00116629) , 
11, 0.992364, 1, 0, 0.194268,-0.0415277) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72268,-0.0043013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882779,0.00266275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879781,-0.00417765) , 
4, 0.436925, 1, 0, 0.881088,-0.00384254) , 
1, 0.308565, 1, 0, 0.830443,-0.0239808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763148,0.0018642) , 
10, 0.597862, 1, 0, 0.808875,-0.00551429) , 
1, 0.176781, 1, 0, 0.39674,-0.0296637) , 
10, 0.317606, 1, 0, 0.500657,-0.0202865)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572289,-0.00351014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489181,0.000117355) , 
8, 0.0284568, 1, 0, 0.532593,-0.0320573) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936817,-0.00418513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913458,0.00312775) , 
10, 0.233525, 1, 0, 0.922921,0.00808186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916355,-0.00772235) , 
4, 0.524281, 1, 0, 0.921178,-0.00157845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87811,0.00491512) , 
10, 0.47641, 1, 0, 0.910681,0.0126267) , 
12, 0.123892, 1, 0, 0.797339,-0.000768459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533237,0.00274445) , 
8, 0.0468178, 1, 0, 0.751615,0.00916705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665291,-0.000627529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295052,-0.00215296) , 
10, 0.556113, 1, 0, 0.407404,-0.0354954) , 
15, 0.187137, 1, 0, 0.6431,-0.0049131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631699,0.00303559) , 
14, 0.202555, 1, 0, 0.641975,4.67373e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119531,-0.00257673) , 
7, 0.651011, 1, 0, 0.496347,-0.0132302)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171396,-0.00239045) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960208,0.0016019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988873,0.0109452) , 
12, 0.21753, 1, 0, 0.970057,0.0122659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927973,-0.00665684) , 
12, 0.308169, 1, 0, 0.960395,0.00412707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821198,-0.00529799) , 
17, 0.460205, 1, 0, 0.918409,-0.0114207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575744,0.00149445) , 
17, 0.711229, 1, 0, 0.848112,-0.00259027) , 
2, 0.00914539, 1, 0, 0.681186,-0.0135419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177915,-0.00309415) , 
3, 0.690939, 1, 0, 0.504354,-0.0309805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425816,0.000684737) , 
11, 1.2673, 1, 0, 0.491347,-0.0230733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617999,0.00479059) , 
14, 0.250692, 1, 0, 0.497712,-0.018401)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968989,0.00197995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955999,0.00920999) , 
15, 0.157006, 1, 0, 0.964279,0.018529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68838,-0.0035795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686902,0.000313719) , 
10, 0.423475, 1, 0, 0.687639,-0.0261731) , 
13, 0.79331, 1, 0, 0.818343,-0.00505263) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776298,0.00182452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496889,-0.00141072) , 
16, 0.193231, 1, 0, 0.635329,-0.00159668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520952,0.0026334) , 
11, 0.948824, 1, 0, 0.583149,0.0261253) , 
7, 0.213839, 1, 0, 0.727348,0.00700997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420962,-0.00137496) , 
9, 0.0611863, 1, 0, 0.661983,-0.000662331) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268945,-0.00425233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237793,-0.00234701) , 
16, 0.350173, 1, 0, 0.254824,-0.0589874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154464,-0.00177092) , 
11, 0.915908, 1, 0, 0.197771,-0.0439038) , 
16, 0.262393, 1, 0, 0.49576,-0.0161461)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958736,0.0143607) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810053,0.00753209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994855,0.0147021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910564,-0.00368034) , 
17, 0.287341, 1, 0, 0.950576,0.00162997) , 
1, 0.35603, 1, 0, 0.903311,0.0227545) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682121,-0.00262435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584185,0.00269845) , 
13, 0.607241, 1, 0, 0.634842,0.00305481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682631,-0.00201503) , 
13, 0.752138, 1, 0, 0.651048,-0.00857292) , 
15, 0.0873893, 1, 0, 0.753621,0.00416518) , 
13, 0.400256, 1, 0, 0.778776,0.0111841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14374,-0.00228153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641584,0.000364157) , 
12, 0.104536, 1, 0, 0.258521,-0.0338623) , 
3, 0.620136, 1, 0, 0.498151,-0.0131139)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630282,0.00276228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18078,-0.00186126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0950959,-0.00318845) , 
10, 0.710713, 1, 0, 0.133982,-0.0506684) , 
10, 0.394297, 1, 0, 0.188192,-0.0390066) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938402,-0.0102445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976161,0.00360368) , 
12, 0.194687, 1, 0, 0.958506,-0.00842614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958892,0.00519494) , 
10, 0.382097, 1, 0, 0.958649,0.0028481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814741,-0.00662692) , 
17, 0.4778, 1, 0, 0.930279,-0.00961838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782216,0.00410731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648352,0.00038297) , 
14, 0.0556971, 1, 0, 0.703224,0.0365118) , 
17, 0.6092, 1, 0, 0.842111,0.00829448) , 
1, 0.12925, 1, 0, 0.503634,-0.0161892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62899,0.00513473) , 
14, 0.25833, 1, 0, 0.51022,-0.0111835)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934801,-0.00317603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955843,0.00489573) , 
9, 0.0246377, 1, 0, 0.944695,0.00298578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628159,-0.00202402) , 
6, 0.429358, 1, 0, 0.834363,-0.0118898) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865596,0.00254447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428074,-0.00181066) , 
7, 0.369782, 1, 0, 0.642112,-0.00759894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634,0.00459987) , 
11, 0.865217, 1, 0, 0.639444,0.0231793) , 
8, 0.0281422, 1, 0, 0.764914,0.000605197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258586,-0.00151501) , 
17, 1.02666, 1, 0, 0.612308,-0.0097663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698129,0.00348709) , 
14, 0.175721, 1, 0, 0.62139,-0.00360689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194676,-0.00232518) , 
10, 0.741082, 1, 0, 0.498341,-0.0154966)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95326,0.0138604) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251661,-0.00180127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25313,-3.00059e-05) , 
15, 0.170105, 1, 0, 0.252512,-0.0149383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154481,-0.00250778) , 
3, 0.778596, 1, 0, 0.205491,-0.0332898) , 
3, 0.315975, 1, 0, 0.269069,-0.0244135) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998917,0.0167657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98761,0.00378408) , 
11, 0.313194, 1, 0, 0.992959,0.00820161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903442,-0.00462692) , 
3, 0.193786, 1, 0, 0.959977,-0.00387083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94083,0.00465168) , 
17, 0.389709, 1, 0, 0.954918,0.00410472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807729,-0.00333136) , 
17, 0.523032, 1, 0, 0.923323,-0.00494038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713353,0.00276222) , 
17, 0.720938, 1, 0, 0.866148,0.013543) , 
12, 0.115304, 1, 0, 0.509266,-0.00914416)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82054,0.00144299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434985,-0.002098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246329,-0.00323373) , 
7, 0.234037, 1, 0, 0.336596,-0.0605464) , 
10, 0.326022, 1, 0, 0.476526,-0.0386386) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98183,0.00888163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921647,-0.014311) , 
12, 0.228695, 1, 0, 0.949659,-0.0117587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790545,0.00203802) , 
3, 0.424144, 1, 0, 0.891333,0.00589263) , 
12, 0.140101, 1, 0, 0.703637,-0.0142572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442889,0.00158643) , 
8, 0.0484099, 1, 0, 0.655429,-0.00544117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680324,0.00410559) , 
14, 0.207211, 1, 0, 0.657835,0.000422299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140372,-0.00190708) , 
7, 0.59681, 1, 0, 0.498396,-0.0104591)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966357,-0.0043633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903111,0.00717411) , 
11, 0.577289, 1, 0, 0.935704,0.0264356) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634162,-0.00393293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901439,-0.00275873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928202,0.00288041) , 
7, 0.0126089, 1, 0, 0.915311,0.000945269) , 
2, 0.0317779, 1, 0, 0.822689,-0.0189227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839481,0.00499798) , 
14, 0.157279, 1, 0, 0.826633,-0.00265231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192652,-0.00273209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808208,-0.000216319) , 
5, 0.0198237, 1, 0, 0.32475,-0.0405505) , 
8, 0.0205822, 1, 0, 0.540131,-0.0242867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463873,0.000605266) , 
11, 1.14694, 1, 0, 0.522344,-0.0152238) , 
10, 0.233529, 1, 0, 0.583894,-0.00902064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177034,-0.0025889) , 
10, 0.794016, 1, 0, 0.493047,-0.0182627)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249518,5.24576e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69248,0.00511883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986813,0.00892666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91544,-0.0051082) , 
10, 0.30222, 1, 0, 0.953569,-0.00347461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846391,0.00314916) , 
13, 0.726026, 1, 0, 0.911852,0.0143774) , 
4, 0.155941, 1, 0, 0.846954,0.0346017) , 
1, 0.0082472, 1, 0, 0.643761,0.0231744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998936,0.0193122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886248,-0.00343166) , 
3, 0.159103, 1, 0, 0.929403,-0.00764508) , 
1, 0.420612, 1, 0, 0.720527,0.0148917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171157,-0.002941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343529,-0.000489567) , 
11, 1.12295, 1, 0, 0.253816,-0.0361693) , 
3, 0.67624, 1, 0, 0.504827,-0.00870727)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971688,0.0143983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234459,-0.00334397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209001,-0.000876752) , 
11, 0.865973, 1, 0, 0.217201,-0.0346012) , 
3, 0.286331, 1, 0, 0.286612,-0.0262692) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920113,0.00315118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83965,-0.0063068) , 
14, 0.011503, 1, 0, 0.879153,-0.0139223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830977,-0.00294198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954969,0.00521581) , 
4, 0.351695, 1, 0, 0.906514,0.00384386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831549,0.00316839) , 
8, 0.0213648, 1, 0, 0.882469,0.0156708) , 
9, 0.0175983, 1, 0, 0.881273,0.00499365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752166,0.0035371) , 
10, 0.635213, 1, 0, 0.858851,0.0163955) , 
2, 0.0209869, 1, 0, 0.503627,-0.0100891)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.516726,0.000319696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121369,-0.00217295) , 
17, 0.820722, 1, 0, 0.184463,-0.0330667) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918354,0.00328737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702388,0.00271756) , 
6, 0.283405, 1, 0, 0.804097,0.0325634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881157,-0.00320448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975381,-0.00124425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935355,0.00533041) , 
11, 0.488759, 1, 0, 0.958332,0.0113994) , 
2, 0.0382886, 1, 0, 0.933828,0.0010327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852996,-0.00629392) , 
14, 0.118124, 1, 0, 0.915129,-0.0104684) , 
5, 0.0290083, 1, 0, 0.87758,0.00408447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554898,-0.00216318) , 
13, 1.17382, 1, 0, 0.798306,-0.01015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515113,0.00287363) , 
8, 0.0491341, 1, 0, 0.74691,0.00306412) , 
2, 0.0147321, 1, 0, 0.500784,-0.0127467)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841563,0.00316195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981873,0.00480239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881083,-0.00759664) , 
11, 0.541066, 1, 0, 0.956262,-0.00449743) , 
12, 0.123892, 1, 0, 0.927453,0.00457574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4144,-0.00307016) , 
7, 0.37143, 1, 0, 0.840707,-0.00521713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578936,0.00290461) , 
11, 0.884074, 1, 0, 0.805395,0.00273766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507155,-0.00122941) , 
13, 1.05809, 1, 0, 0.714005,-0.00682233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409671,0.00179861) , 
10, 0.638317, 1, 0, 0.652454,0.0014901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239159,-0.00200182) , 
16, 0.332541, 1, 0, 0.589775,-0.00376519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170342,-0.00248228) , 
10, 0.794016, 1, 0, 0.495088,-0.0137161)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743551,-0.000826892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607515,0.00259912) , 
10, 0.370311, 1, 0, 0.684391,0.0152597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745009,0.00772001) , 
16, 0.212876, 1, 0, 0.701066,0.0368557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956948,-0.00156225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990705,0.0113062) , 
2, 0.0461872, 1, 0, 0.974703,0.00765722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71741,-0.00337402) , 
13, 0.899703, 1, 0, 0.885813,-0.0144455) , 
5, 0.0324107, 1, 0, 0.801493,0.0089688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186141,-0.00360141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154489,-0.00165438) , 
11, 0.875448, 1, 0, 0.165974,-0.0476007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80673,0.00414614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815941,-0.00225803) , 
4, 0.407068, 1, 0, 0.811123,0.0272515) , 
4, 0.216253, 1, 0, 0.288163,-0.0334239) , 
10, 0.510432, 1, 0, 0.495641,-0.0162896)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317623,-0.000222844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104246,-0.0024058) , 
3, 0.583657, 1, 0, 0.146607,-0.035712) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959342,0.0163673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972837,-0.00612499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993845,0.011111) , 
2, 0.0421384, 1, 0, 0.983389,0.000287825) , 
4, 0.281777, 1, 0, 0.975188,0.0195371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671952,-0.00150435) , 
13, 0.759315, 1, 0, 0.899655,0.0103293) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600289,-0.00328815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902897,0.000101437) , 
12, 0.148363, 1, 0, 0.756162,-0.026424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562951,0.000342169) , 
11, 0.838875, 1, 0, 0.680504,-0.013376) , 
6, 0.232896, 1, 0, 0.776653,-0.00297563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60002,0.00166442) , 
13, 1.17382, 1, 0, 0.733431,0.00754707) , 
2, 0.00914539, 1, 0, 0.506133,-0.00920868)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473655,0.00412551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977891,-0.00249275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971423,0.00708068) , 
15, 0.117635, 1, 0, 0.974657,0.0104057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963984,0.00189119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798415,-0.00576416) , 
15, 0.0908044, 1, 0, 0.888595,-0.0198297) , 
16, 0.104326, 1, 0, 0.931419,-0.00478457) , 
5, 0.0142721, 1, 0, 0.811159,0.0152259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53324,0.00198388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856475,-0.00370459) , 
12, 0.197408, 1, 0, 0.663853,0.00766552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333641,-0.00297713) , 
9, 0.0380848, 1, 0, 0.4836,-0.0295783) , 
13, 0.780961, 1, 0, 0.651213,-0.00665185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475487,0.00145331) , 
11, 1.11656, 1, 0, 0.608006,0.00355114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25827,-0.00166829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131071,-0.00265778) , 
6, 0.206484, 1, 0, 0.164683,-0.040396) , 
16, 0.332541, 1, 0, 0.506692,-0.00649227)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884286,0.00314367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243903,-0.00262126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156719,-0.00151244) , 
8, 0.0406176, 1, 0, 0.18777,-0.0412042) , 
3, 0.328307, 1, 0, 0.249145,-0.0355534) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771226,-0.00243628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917372,0.0050422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869619,-0.00402298) , 
4, 0.364174, 1, 0, 0.89294,0.00602626) , 
4, 0.288617, 1, 0, 0.842855,-0.0100054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833972,0.00209964) , 
9, 0.0447433, 1, 0, 0.84023,0.0012967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952748,0.00842834) , 
4, 0.442761, 1, 0, 0.860276,0.0104667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876697,-0.00562335) , 
4, 0.514823, 1, 0, 0.864098,7.57724e-05) , 
4, 0.180719, 1, 0, 0.492457,-0.0214564)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984797,0.00740061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874925,0.00595391) , 
11, 0.588489, 1, 0, 0.934343,0.0370153) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719054,-0.00582168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555991,-0.000751978) , 
10, 0.452378, 1, 0, 0.640726,-0.044732) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59121,-0.0007376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630639,0.000705098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510933,0.00274832) , 
6, 0.324185, 1, 0, 0.553682,0.0374286) , 
14, 0.0715975, 1, 0, 0.566826,0.0201447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34689,-0.00192548) , 
9, 0.0579755, 1, 0, 0.479054,-0.00366493) , 
9, 0.023466, 1, 0, 0.519079,-0.0138319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664567,0.00394015) , 
14, 0.229801, 1, 0, 0.530784,-0.00845003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123855,-0.00262373) , 
16, 0.332541, 1, 0, 0.425089,-0.0183732) , 
10, 0.264672, 1, 0, 0.501359,-0.0100778)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140654,-0.00200692) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916364,-0.00339987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977374,0.00448306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990115,0.013586) , 
15, 0.0518233, 1, 0, 0.983736,0.0200381) , 
2, 0.0362188, 1, 0, 0.960123,0.00736597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659587,-0.002258) , 
13, 1.01376, 1, 0, 0.854803,-0.0112593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903315,-0.00560679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524421,0.00159354) , 
3, 0.425683, 1, 0, 0.65065,0.0169938) , 
7, 0.241639, 1, 0, 0.772627,0.000113188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636359,-0.00426943) , 
14, 0.122509, 1, 0, 0.75627,-0.00768391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831418,0.00468455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489202,0.000294204) , 
16, 0.105901, 1, 0, 0.643397,0.0306907) , 
15, 0.240321, 1, 0, 0.733371,0.000101436) , 
2, 0.00309822, 1, 0, 0.500094,-0.0143691)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994011,0.0148064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877623,-0.00242534) , 
3, 0.227589, 1, 0, 0.952419,0.00266831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74978,0.00496911) , 
17, 0.633479, 1, 0, 0.898126,0.0266873) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102242,-0.00318341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232073,-0.000990957) , 
12, 0.0543773, 1, 0, 0.172836,-0.0360058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446146,-0.00311708) , 
5, 0.0185364, 1, 0, 0.222834,-0.0433101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961066,0.00251739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731667,-0.0030718) , 
13, 0.957909, 1, 0, 0.866924,-0.0165962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7998,0.00332197) , 
8, 0.0291587, 1, 0, 0.847649,0.00419667) , 
4, 0.252296, 1, 0, 0.384257,-0.0310366) , 
10, 0.323979, 1, 0, 0.490583,-0.0190928)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983782,0.0163166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757423,0.00464223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907422,-0.00797051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960474,0.00596173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914567,-0.00223419) , 
7, 0.106972, 1, 0, 0.940921,0.0109501) , 
16, 0.051497, 1, 0, 0.930149,-0.00377632) , 
2, 0.0239129, 1, 0, 0.891647,0.0128885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804521,0.00311357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322586,-0.0022544) , 
15, 0.105229, 1, 0, 0.473933,-0.0209686) , 
7, 0.202063, 1, 0, 0.700926,-0.00257008) , 
13, 0.401715, 1, 0, 0.733649,0.0034571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483213,0.00379342) , 
11, 0.991673, 1, 0, 0.685505,0.0173278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444885,-0.000689687) , 
13, 1.28053, 1, 0, 0.636483,0.0102754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121089,-0.00207446) , 
7, 0.687117, 1, 0, 0.505148,-0.00151253)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987182,0.016241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560259,-0.00431161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370612,-0.000654835) , 
8, 0.0254747, 1, 0, 0.437718,-0.036533) , 
3, 0.194809, 1, 0, 0.565397,-0.0223634) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982563,0.00208306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992911,0.0129996) , 
11, 0.342725, 1, 0, 0.988247,0.0160515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843351,-0.00229289) , 
11, 0.542416, 1, 0, 0.94676,0.00587166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815004,0.00255506) , 
6, 0.43292, 1, 0, 0.90688,0.0163414) , 
2, 0.0330582, 1, 0, 0.735025,-0.00313722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550578,0.0026439) , 
15, 0.349557, 1, 0, 0.712554,0.00310243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269337,-0.0023743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150089,-0.00141181) , 
10, 0.69027, 1, 0, 0.201609,-0.0387152) , 
17, 0.996591, 1, 0, 0.495656,-0.0146493)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41401,7.08687e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724248,-0.00604) , 
5, 0.0318839, 1, 0, 0.523393,-0.0285925) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950403,0.00217693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898414,-0.00746997) , 
0, 0.258304, 1, 0, 0.932137,-0.00777473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844698,0.00086699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929009,0.00699279) , 
5, 0.0389756, 1, 0, 0.884981,0.0313839) , 
10, 0.383093, 1, 0, 0.911653,0.00923471) , 
0, 0.138714, 1, 0, 0.762182,-0.00532796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502676,0.0014874) , 
8, 0.0448422, 1, 0, 0.710922,0.00159776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674887,0.00533721) , 
15, 0.296116, 1, 0, 0.707514,0.00881477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357183,-0.00152025) , 
9, 0.0652654, 1, 0, 0.638715,0.000853791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123915,-0.00208843) , 
7, 0.666348, 1, 0, 0.505064,-0.00885004)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139202,-0.00229992) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988358,0.00520732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999373,0.0202501) , 
9, 0.021118, 1, 0, 0.994246,0.0111032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936985,-0.0112614) , 
3, 0.170802, 1, 0, 0.977121,0.000159789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897235,0.00437321) , 
3, 0.261704, 1, 0, 0.950076,0.0139657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451491,-0.00286532) , 
17, 0.592762, 1, 0, 0.848296,-0.000936001) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.525536,0.00170306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535842,0.0040229) , 
13, 0.949474, 1, 0, 0.531893,0.0614962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486045,-0.000196982) , 
13, 1.23658, 1, 0, 0.508434,0.0275141) , 
11, 0.838509, 1, 0, 0.690962,0.0122345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223267,-0.00271749) , 
16, 0.349857, 1, 0, 0.629911,0.00415468) , 
12, 0.0576521, 1, 0, 0.491949,-0.00839026)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408181,0.000458823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0937113,-0.00271646) , 
10, 0.515538, 1, 0, 0.140628,-0.0385131) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885885,-0.00364508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907035,0.00347347) , 
16, 0.10232, 1, 0, 0.896297,-0.0013314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782138,-0.00767575) , 
9, 0.0174556, 1, 0, 0.861668,-0.023552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927534,-0.00281103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746119,0.00232428) , 
6, 0.340767, 1, 0, 0.844786,0.0127788) , 
9, 0.0207033, 1, 0, 0.853437,-0.00583921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628051,-0.00276733) , 
9, 0.052795, 1, 0, 0.798389,-0.0164483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504241,0.00182655) , 
8, 0.041846, 1, 0, 0.727214,-0.00316618) , 
12, 0.0701653, 1, 0, 0.493091,-0.0172742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604457,0.00377533) , 
14, 0.256264, 1, 0, 0.49884,-0.0133545)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970944,0.0138048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996575,0.0145359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961887,-0.0049793) , 
6, 0.143175, 1, 0, 0.977868,0.000596909) , 
12, 0.122789, 1, 0, 0.976204,0.0133351) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217269,-0.00310669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.175945,-0.000532022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182902,-0.00205706) , 
13, 0.981952, 1, 0, 0.180066,-0.029646) , 
11, 0.865319, 1, 0, 0.191735,-0.04044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790158,-0.0030256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819526,0.0030781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618278,-0.000779439) , 
7, 0.229542, 1, 0, 0.7372,0.02144) , 
10, 0.376489, 1, 0, 0.75506,0.000524688) , 
12, 0.115147, 1, 0, 0.354531,-0.0286016) , 
3, 0.291829, 1, 0, 0.499445,-0.018826)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13564,-0.00242988) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999478,0.0164318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951599,-0.0056274) , 
6, 0.154458, 1, 0, 0.974556,-0.000172603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954041,0.0058342) , 
10, 0.367753, 1, 0, 0.965556,0.0116264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859801,-0.00256136) , 
11, 0.567849, 1, 0, 0.933444,0.00212497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615931,0.00509185) , 
17, 0.716588, 1, 0, 0.883089,0.0162247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203868,-0.00133203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669386,0.000726502) , 
2, 0.0209869, 1, 0, 0.34262,-0.015053) , 
3, 0.579312, 1, 0, 0.599657,-0.00017792) , 
12, 0.0520564, 1, 0, 0.503616,-0.00865017)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992964,0.0139307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686437,-0.00350345) , 
3, 0.259823, 1, 0, 0.81351,-0.0266468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957529,0.00486532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903889,-0.00270293) , 
8, 0.0171004, 1, 0, 0.939494,0.00942985) , 
12, 0.192639, 1, 0, 0.880394,-0.00749393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73098,0.00374534) , 
15, 0.295067, 1, 0, 0.854069,0.00371076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930131,0.00238811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360072,-0.00292293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266889,-0.00196758) , 
14, 0.0971542, 1, 0, 0.302922,-0.0467863) , 
10, 0.353624, 1, 0, 0.467215,-0.0317739) , 
7, 0.257471, 1, 0, 0.706606,-0.00981549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499967,0.00137643) , 
11, 1.11656, 1, 0, 0.655519,0.00084644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128817,-0.00221703) , 
7, 0.625305, 1, 0, 0.507561,-0.0103345)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993645,0.0245044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986863,0.00379101) , 
4, 0.318037, 1, 0, 0.989202,0.0132435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637286,-0.00171357) , 
3, 0.251839, 1, 0, 0.879502,0.00137629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827263,0.00643361) , 
14, 0.151917, 1, 0, 0.867076,0.0142474) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346351,-0.00339517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895647,0.00100804) , 
12, 0.163128, 1, 0, 0.585671,-0.0356529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506193,0.0010997) , 
11, 0.915132, 1, 0, 0.560106,-0.0171668) , 
13, 0.7726, 1, 0, 0.713698,-0.00144872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123085,-0.00244711) , 
17, 1.00586, 1, 0, 0.519369,-0.0154824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452953,0.00158286) , 
11, 1.26163, 1, 0, 0.508929,-0.00723206)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783607,0.00305762) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399709,-0.00359327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109712,-0.00309629) , 
16, 0.212658, 1, 0, 0.189734,-0.0602386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181112,-0.00134016) , 
11, 1.0005, 1, 0, 0.186029,-0.0457005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40827,0.00140231) , 
14, 0.205011, 1, 0, 0.2137,-0.0369892) , 
10, 0.326022, 1, 0, 0.276209,-0.0284668) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920464,0.00238883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969497,0.00339543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717999,-0.00255953) , 
17, 0.4651, 1, 0, 0.849515,-0.0170825) , 
14, 0.0284133, 1, 0, 0.879533,-0.00335416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900767,0.00384498) , 
14, 0.0905695, 1, 0, 0.884001,0.00479647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775785,-0.00348435) , 
15, 0.231172, 1, 0, 0.867346,-0.00269656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749807,0.00364978) , 
7, 0.329589, 1, 0, 0.849433,0.00746166) , 
2, 0.0216876, 1, 0, 0.4994,-0.0144777)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96309,0.0132673) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305874,-0.00103036) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987095,0.00214495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927012,0.00640602) , 
3, 0.227468, 1, 0, 0.952178,0.0308616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91232,-0.00810105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935003,0.0029882) , 
9, 0.0272671, 1, 0, 0.922655,-0.00842014) , 
12, 0.221512, 1, 0, 0.937746,0.0116586) , 
4, 0.18784, 1, 0, 0.680434,-0.00136859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461901,0.00177071) , 
11, 0.965188, 1, 0, 0.63987,0.00479389) , 
13, 0.401183, 1, 0, 0.670684,0.00903585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246868,-0.00150085) , 
3, 0.739186, 1, 0, 0.508184,-0.00657003)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961185,-0.000199849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780873,0.00466132) , 
11, 0.681368, 1, 0, 0.88613,0.0310161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133657,-0.00149901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75061,-0.00431309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580818,-0.000919988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483466,0.00210438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706327,0.000183297) , 
2, 0.0360635, 1, 0, 0.55724,0.035033) , 
6, 0.309788, 1, 0, 0.564472,0.0203176) , 
10, 0.401027, 1, 0, 0.596013,0.00747221) , 
4, 0.0420171, 1, 0, 0.34979,-0.0106052) , 
10, 0.325401, 1, 0, 0.454887,-0.00244937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953542,-0.00425643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712714,-0.00560447) , 
11, 0.549219, 1, 0, 0.84433,-0.0445616) , 
12, 0.245177, 1, 0, 0.507408,-0.00812869)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955311,0.00951064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926104,-0.00920516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979455,0.000847883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990213,0.0151577) , 
17, 0.248283, 1, 0, 0.985016,0.0192851) , 
2, 0.0398124, 1, 0, 0.961679,-0.000178966) , 
5, 0.0270476, 1, 0, 0.960039,0.0121401) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519359,-0.00430079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430367,0.000850023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631934,-0.00386529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20342,-0.00141721) , 
10, 0.471921, 1, 0, 0.266274,-0.0322904) , 
13, 0.668391, 1, 0, 0.287299,-0.0264589) , 
11, 0.702361, 1, 0, 0.329748,-0.0335396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370555,8.76034e-05) , 
11, 1.12567, 1, 0, 0.342595,-0.0223737) , 
17, 0.468984, 1, 0, 0.489196,-0.014179)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135909,-0.00240545) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974608,0.000366302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898478,0.00407713) , 
17, 0.331209, 1, 0, 0.938441,0.0154245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965511,0.0019614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685366,-0.00357201) , 
17, 0.418323, 1, 0, 0.851144,-0.0201132) , 
15, 0.068617, 1, 0, 0.889675,-0.00442764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803812,0.00494585) , 
16, 0.158114, 1, 0, 0.864858,0.00908333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346317,-0.00127555) , 
10, 0.640637, 1, 0, 0.721313,-7.19676e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520166,0.00193179) , 
11, 1.20992, 1, 0, 0.681525,0.00884947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401229,-0.00181444) , 
9, 0.0605952, 1, 0, 0.628515,9.07224e-05) , 
12, 0.0576521, 1, 0, 0.487015,-0.0118478)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679614,0.00400677) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984458,0.00276332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966572,0.00684819) , 
13, 0.689818, 1, 0, 0.976306,0.0107431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944548,-0.016742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928425,0.000795019) , 
10, 0.392298, 1, 0, 0.936355,-0.012551) , 
14, 0.0524994, 1, 0, 0.956005,-0.00109375) , 
4, 0.162321, 1, 0, 0.893635,0.0101492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560095,-0.00166023) , 
6, 0.389391, 1, 0, 0.801057,-0.000490472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636978,0.00370552) , 
11, 0.92142, 1, 0, 0.775289,0.0096677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333922,-0.0012377) , 
3, 0.747423, 1, 0, 0.627624,-0.00347231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114756,-0.00223181) , 
7, 0.681811, 1, 0, 0.494554,-0.0124887)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177714,-0.00221832) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879326,0.00251218) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995525,0.0165827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976418,-0.00342649) , 
15, 0.0534083, 1, 0, 0.984852,0.00400908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931376,-0.00545442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854535,-0.00794427) , 
13, 0.741914, 1, 0, 0.895778,-0.0330325) , 
6, 0.194617, 1, 0, 0.940702,-0.0143509) , 
5, 0.0202766, 1, 0, 0.924024,-0.00528961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551129,0.00165117) , 
3, 0.455369, 1, 0, 0.803139,0.00649387) , 
12, 0.052624, 1, 0, 0.681912,-0.00233835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193897,-0.00195774) , 
3, 0.702097, 1, 0, 0.518007,-0.0143836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452814,0.00170802) , 
11, 1.29284, 1, 0, 0.508757,-0.00664588)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997113,0.0213524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994989,0.0133854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966135,-0.0145285) , 
16, 0.0941952, 1, 0, 0.982454,-0.000285393) , 
4, 0.270535, 1, 0, 0.986601,0.0105646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963899,0.00951206) , 
3, 0.23821, 1, 0, 0.981477,0.0189091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617134,-0.00223531) , 
3, 0.368155, 1, 0, 0.882003,0.00308661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651856,0.00325905) , 
11, 0.774783, 1, 0, 0.833311,0.0138486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189064,-0.00108087) , 
7, 0.534629, 1, 0, 0.651842,0.0044854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500429,0.00337641) , 
11, 1.06749, 1, 0, 0.634849,0.0108295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249886,-0.00162181) , 
3, 0.783015, 1, 0, 0.506959,-0.00436631)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999165,0.0181794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940724,-0.00595432) , 
3, 0.141767, 1, 0, 0.969378,-0.00260152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969653,0.00849952) , 
17, 0.291964, 1, 0, 0.969486,0.0108919) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876951,0.00370215) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440591,-0.00487303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192759,-0.00212421) , 
10, 0.557909, 1, 0, 0.258987,-0.0539742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193775,-0.00062292) , 
11, 0.899473, 1, 0, 0.224603,-0.031516) , 
10, 0.333583, 1, 0, 0.312257,-0.0226324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724186,-0.00654185) , 
5, 0.038406, 1, 0, 0.368144,-0.0318624) , 
17, 0.41362, 1, 0, 0.509504,-0.021812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417737,0.000761976) , 
11, 1.2673, 1, 0, 0.494362,-0.0152436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632104,0.00491899) , 
14, 0.251048, 1, 0, 0.501305,-0.0109509)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966268,0.00932017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252444,-0.00146207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196593,-0.00273498) , 
9, 0.0508431, 1, 0, 0.227591,-0.0393721) , 
3, 0.246956, 1, 0, 0.306563,-0.0324699) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985984,0.004331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992487,0.0111727) , 
17, 0.195018, 1, 0, 0.989219,0.0130928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888457,0.000113257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841254,-0.00600544) , 
5, 0.0412645, 1, 0, 0.862161,-0.0265719) , 
11, 0.435085, 1, 0, 0.92248,-0.00774153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887926,0.00417322) , 
8, 0.0307039, 1, 0, 0.915973,0.00172313) , 
4, 0.25817, 1, 0, 0.511757,-0.0209568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431847,0.00152849) , 
11, 1.2333, 1, 0, 0.497693,-0.0110028)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980922,0.0144159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977464,-0.0110885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997955,0.0195133) , 
13, 0.595678, 1, 0, 0.986752,0.0018618) , 
5, 0.0247574, 1, 0, 0.985083,0.0112379) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444728,-0.00161049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466269,-0.0042285) , 
6, 0.292656, 1, 0, 0.456374,-0.048366) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512767,-0.000300576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556826,-0.00287425) , 
13, 0.924275, 1, 0, 0.532325,-0.0227714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32968,0.000441985) , 
11, 0.834839, 1, 0, 0.452275,-0.010694) , 
13, 0.751855, 1, 0, 0.453623,-0.0230818) , 
3, 0.224166, 1, 0, 0.614114,-0.0127179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390229,0.00146828) , 
11, 0.998383, 1, 0, 0.561798,-0.00321189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269252,-0.00190618) , 
3, 0.879439, 1, 0, 0.497295,-0.0120632)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583498,-0.00173465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994759,0.0125047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928909,-0.0119795) , 
6, 0.168561, 1, 0, 0.965928,-0.00793034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933246,0.00646946) , 
6, 0.286562, 1, 0, 0.954361,0.0125201) , 
4, 0.220263, 1, 0, 0.860765,0.00134855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825547,0.00445485) , 
14, 0.184873, 1, 0, 0.855265,0.00827488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465552,-0.00441481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377417,0.000429492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248025,-0.00163955) , 
16, 0.272882, 1, 0, 0.296473,-0.0136595) , 
16, 0.227184, 1, 0, 0.346579,-0.0300536) , 
16, 0.185212, 1, 0, 0.657656,-0.00661451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417451,0.00249654) , 
11, 1.00018, 1, 0, 0.613827,0.00363819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444991,-0.000928245) , 
13, 1.27096, 1, 0, 0.580634,-0.00166508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161898,-0.00197973) , 
16, 0.349857, 1, 0, 0.493652,-0.00794286)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121495,-0.00249975) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993036,0.0127093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977758,-0.00459505) , 
12, 0.233858, 1, 0, 0.986696,0.00480991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886342,-0.0054977) , 
3, 0.225915, 1, 0, 0.954661,-0.0056872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960212,0.00708164) , 
14, 0.0948021, 1, 0, 0.956245,0.00487468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395518,-0.00198838) , 
3, 0.422086, 1, 0, 0.736681,-0.0120649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377277,0.00129559) , 
11, 0.9426, 1, 0, 0.633167,-0.00149424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431887,-0.00133317) , 
13, 1.27309, 1, 0, 0.590324,-0.00814762) , 
12, 0.0525379, 1, 0, 0.492423,-0.0150956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659608,0.00615909) , 
14, 0.241746, 1, 0, 0.501956,-0.00957817)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987897,0.0172962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999341,0.0193593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981628,0.000400416) , 
8, 0.0154384, 1, 0, 0.99148,0.00832483) , 
13, 0.451533, 1, 0, 0.990232,0.0149705) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456648,-0.00509174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908856,-4.55955e-05) , 
2, 0.0375557, 1, 0, 0.603366,-0.0596075) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481915,0.00257053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363948,0.00151889) , 
11, 0.875569, 1, 0, 0.422861,0.030902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508502,-0.0012152) , 
6, 0.491314, 1, 0, 0.458822,0.00846392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188844,-0.00197181) , 
3, 0.684694, 1, 0, 0.296444,-0.0191598) , 
11, 0.718215, 1, 0, 0.370864,-0.0289672) , 
3, 0.228042, 1, 0, 0.50843,-0.0192083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435924,0.00123452) , 
11, 1.29151, 1, 0, 0.497581,-0.0119768)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607836,-0.00429728) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732657,0.00197324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563873,-0.00270834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607491,0.000453345) , 
15, 0.164873, 1, 0, 0.585033,-0.02327) , 
9, 0.0247759, 1, 0, 0.635208,-0.00522536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574438,0.00397793) , 
16, 0.22246, 1, 0, 0.61818,0.0121432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183371,-0.00236867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145572,-0.00084559) , 
8, 0.0549534, 1, 0, 0.162701,-0.0291115) , 
10, 0.570538, 1, 0, 0.319915,-0.0148719) , 
8, 0.00812352, 1, 0, 0.343569,-0.0196385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99411,0.0148292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792696,-0.00247172) , 
11, 0.539041, 1, 0, 0.890258,-0.00689101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961792,-0.00162554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827549,0.00351755) , 
13, 0.756717, 1, 0, 0.886137,0.0293649) , 
9, 0.0272091, 1, 0, 0.888182,0.011376) , 
12, 0.159289, 1, 0, 0.494045,-0.0110692)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521604,-0.000504325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919405,0.00637626) , 
2, 0.0199399, 1, 0, 0.689124,0.0176786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645058,0.00490856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563775,0.00191826) , 
15, 0.260786, 1, 0, 0.601469,0.050359) , 
14, 0.0836827, 1, 0, 0.638967,0.0363786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808145,-0.00370079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939035,-0.00039648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890497,0.00429317) , 
10, 0.396961, 1, 0, 0.920277,0.0159645) , 
5, 0.0405629, 1, 0, 0.887552,-0.00102798) , 
5, 0.0359775, 1, 0, 0.745149,0.0204005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626376,0.000706081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153216,-0.00244971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176853,-0.00100493) , 
11, 0.986085, 1, 0, 0.164884,-0.0319403) , 
10, 0.517672, 1, 0, 0.256031,-0.023264) , 
8, 0.0374704, 1, 0, 0.505751,-0.000970976)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130012,-0.00240773) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892619,0.00654982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956387,0.00213041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912919,-0.00580025) , 
12, 0.264562, 1, 0, 0.936948,-0.00781771) , 
12, 0.149609, 1, 0, 0.924722,0.0110535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237344,-0.00342835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908136,-0.00611586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815911,0.00313764) , 
8, 0.0334905, 1, 0, 0.87427,-0.00244551) , 
12, 0.0837846, 1, 0, 0.669279,-0.0218419) , 
16, 0.10232, 1, 0, 0.785959,-0.00681605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513368,0.00212537) , 
11, 0.933672, 1, 0, 0.725972,0.00310033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308855,-0.000846924) , 
3, 0.795362, 1, 0, 0.590916,-0.00423407) , 
12, 0.0519048, 1, 0, 0.501688,-0.0109528)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943612,0.00537671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944141,-0.00365871) , 
5, 0.0360592, 1, 0, 0.943955,0.00188821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512598,-0.00355184) , 
17, 0.485412, 1, 0, 0.794968,-0.0259742) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869247,-0.0060807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986919,0.00882486) , 
2, 0.0329051, 1, 0, 0.934841,-0.00475654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678169,0.00330291) , 
11, 0.711996, 1, 0, 0.815981,0.0269308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360087,-0.00213513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196433,-0.000467585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688274,0.00138793) , 
12, 0.103273, 1, 0, 0.3057,-0.00060672) , 
15, 0.135513, 1, 0, 0.320074,-0.0111915) , 
10, 0.47641, 1, 0, 0.514479,0.00375317) , 
16, 0.0860953, 1, 0, 0.59541,-0.00482423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159198,-0.00242001) , 
16, 0.33777, 1, 0, 0.499408,-0.0121846)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395003,-0.00478066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38151,-0.000883771) , 
9, 0.0151979, 1, 0, 0.387718,-0.0445932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901852,0.00380056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985376,0.00668132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816213,-0.00234377) , 
6, 0.235706, 1, 0, 0.902097,-0.00958999) , 
0, 0.188251, 1, 0, 0.90201,0.00494082) , 
12, 0.121902, 1, 0, 0.689578,-0.0155196) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527598,0.00351274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936831,0.0014511) , 
4, 0.135494, 1, 0, 0.765772,0.0295968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275971,-0.00125383) , 
10, 0.609609, 1, 0, 0.572328,0.00936995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406956,0.00167109) , 
13, 0.981596, 1, 0, 0.512875,0.0190325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844177,-0.00341472) , 
5, 0.0511492, 1, 0, 0.553661,0.0127166) , 
9, 0.0221472, 1, 0, 0.601932,0.00268831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189385,-0.00186249) , 
10, 0.794016, 1, 0, 0.5113,-0.00536129)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966547,0.00105914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853831,0.00495006) , 
17, 0.458504, 1, 0, 0.922119,0.0238328) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966344,0.00688816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872902,-0.00159239) , 
8, 0.0145884, 1, 0, 0.919527,0.00725585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306321,-0.00311419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758457,-0.000253374) , 
12, 0.120485, 1, 0, 0.508495,-0.0413339) , 
11, 0.627717, 1, 0, 0.713452,-0.0171052) , 
15, 0.0558279, 1, 0, 0.774544,-0.00511964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615055,0.00291203) , 
8, 0.0391597, 1, 0, 0.749763,0.00307944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172563,-0.00218591) , 
7, 0.542555, 1, 0, 0.635862,-0.00511589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172959,-0.00232712) , 
17, 1.11384, 1, 0, 0.4857,-0.0184304)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957872,0.00665283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218395,-0.00295562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372113,0.000180385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136138,-0.00153001) , 
10, 0.636841, 1, 0, 0.222552,-0.0155526) , 
11, 0.891835, 1, 0, 0.221074,-0.0303135) , 
3, 0.282819, 1, 0, 0.283048,-0.0257583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553718,0.00306941) , 
14, 0.237657, 1, 0, 0.304183,-0.0201464) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981067,0.00701745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973341,-0.00130854) , 
16, 0.0580899, 1, 0, 0.976091,0.00499734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806607,-0.00244636) , 
17, 0.436947, 1, 0, 0.9139,-0.0073898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871528,0.00518991) , 
10, 0.498425, 1, 0, 0.900813,0.0157611) , 
4, 0.252296, 1, 0, 0.497395,-0.00851812)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122691,-0.00274945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152753,-0.00125555) , 
0, 0.0494141, 1, 0, 0.140006,-0.0324208) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995476,0.0152066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946941,-0.0130554) , 
16, 0.105276, 1, 0, 0.97232,-0.00227084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752871,0.0040542) , 
3, 0.329618, 1, 0, 0.902678,0.0162685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89882,0.00266367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550942,-0.00375062) , 
16, 0.117959, 1, 0, 0.743542,-0.0154199) , 
9, 0.0387163, 1, 0, 0.846187,0.00501959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536089,0.00240577) , 
11, 0.949482, 1, 0, 0.788051,0.0132547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523295,-0.000955753) , 
13, 1.23404, 1, 0, 0.730215,0.00501166) , 
2, 0.00304846, 1, 0, 0.501275,-0.00950828)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639116,0.00383209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990752,0.0117482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962311,-0.00348222) , 
9, 0.031677, 1, 0, 0.977353,0.00151025) , 
12, 0.0876528, 1, 0, 0.885239,0.0145399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642141,-0.00603976) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631066,-0.00145631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427103,-0.00345439) , 
6, 0.223688, 1, 0, 0.536599,-0.0273087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51117,0.00105557) , 
6, 0.316893, 1, 0, 0.526903,-0.0112926) , 
13, 0.717672, 1, 0, 0.551841,-0.0199706) , 
13, 0.647805, 1, 0, 0.695878,-0.00506111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39679,-0.00312632) , 
6, 0.461769, 1, 0, 0.626881,-0.0176828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559069,0.00254349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243104,-0.000252648) , 
17, 1.03715, 1, 0, 0.350492,0.0140767) , 
11, 0.935759, 1, 0, 0.50959,-0.00420508)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988538,0.0113511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945859,-0.0031968) , 
13, 0.666757, 1, 0, 0.971092,0.00440037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57418,-0.00567334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197568,-0.00157141) , 
16, 0.299358, 1, 0, 0.336783,-0.0374159) , 
11, 0.52344, 1, 0, 0.586637,-0.0209445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667141,0.00259418) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463359,-0.00188717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827729,0.000716951) , 
1, 0.357899, 1, 0, 0.574878,-0.0275877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287716,0.00102755) , 
7, 0.266773, 1, 0, 0.405113,0.00027357) , 
14, 0.03039, 1, 0, 0.451467,0.00816526) , 
6, 0.309788, 1, 0, 0.508395,-0.00409446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354478,-0.00401628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548865,-9.67964e-05) , 
14, 0.241447, 1, 0, 0.433289,-0.0407907) , 
14, 0.17222, 1, 0, 0.497508,-0.00941358)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800396,-0.00195202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910506,0.00682927) , 
16, 0.126002, 1, 0, 0.857943,0.0168993) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952927,-1.51048e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314063,-0.00369992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173666,-0.00158825) , 
11, 0.798171, 1, 0, 0.230138,-0.0442512) , 
3, 0.277358, 1, 0, 0.339198,-0.0375796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294805,-0.000159326) , 
13, 0.974096, 1, 0, 0.319344,-0.0222762) , 
10, 0.326022, 1, 0, 0.406894,-0.0159081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983066,0.00982508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935086,-0.00280883) , 
15, 0.0453215, 1, 0, 0.956578,0.00469463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804296,0.00419412) , 
17, 0.591513, 1, 0, 0.911946,0.0252646) , 
2, 0.0402769, 1, 0, 0.498322,-0.00845476)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189792,-0.00291416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115214,-0.00118609) , 
16, 0.260962, 1, 0, 0.138045,-0.0304908) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998553,0.0165627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89085,-0.00592302) , 
3, 0.211653, 1, 0, 0.954583,-0.00758507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81404,0.0022235) , 
11, 0.590913, 1, 0, 0.916213,0.00277656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863297,-0.00407473) , 
7, 0.140027, 1, 0, 0.899853,-0.0059383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798431,0.00664959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556237,0.000686855) , 
6, 0.262065, 1, 0, 0.632993,0.0282182) , 
8, 0.0307039, 1, 0, 0.79933,0.00692797) , 
12, 0.0707953, 1, 0, 0.508105,-0.00955098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665888,0.00514228) , 
14, 0.237657, 1, 0, 0.518559,-0.00455824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388811,-0.0019635) , 
13, 1.27203, 1, 0, 0.496164,-0.0119927)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796266,0.00344128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485118,0.000504189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288583,-0.00315528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123271,-0.0013989) , 
7, 0.453364, 1, 0, 0.158472,-0.0330322) , 
16, 0.135108, 1, 0, 0.223571,-0.0243951) , 
10, 0.323979, 1, 0, 0.284818,-0.0167881) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990943,0.00957735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895113,-0.00394163) , 
11, 0.540173, 1, 0, 0.956461,0.0003155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804836,0.00436774) , 
11, 0.855354, 1, 0, 0.910948,0.0235856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819731,-0.00413156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848052,0.000875973) , 
9, 0.0426311, 1, 0, 0.832836,-0.0180062) , 
15, 0.113127, 1, 0, 0.883027,0.00871889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74021,0.00371157) , 
10, 0.658855, 1, 0, 0.862671,0.0181735) , 
2, 0.0210371, 1, 0, 0.503615,-0.00355026)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964181,0.0038442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931149,-0.00310464) , 
8, 0.0161165, 1, 0, 0.950199,0.00172961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726493,-0.00275427) , 
13, 0.987211, 1, 0, 0.883349,-0.0115323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766356,0.00345274) , 
15, 0.198245, 1, 0, 0.845929,0.0060178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945416,0.00244986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202748,-0.00351013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199221,-0.000769224) , 
11, 0.879366, 1, 0, 0.200778,-0.0362212) , 
3, 0.329938, 1, 0, 0.328088,-0.0287507) , 
16, 0.130115, 1, 0, 0.511031,-0.0164677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403122,0.000689388) , 
11, 1.2377, 1, 0, 0.491282,-0.010567)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969993,0.00917106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33301,-0.00292119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184089,-0.00144965) , 
11, 0.776532, 1, 0, 0.232126,-0.0362358) , 
3, 0.234072, 1, 0, 0.313827,-0.0296978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305947,0.000802721) , 
11, 1.12901, 1, 0, 0.311643,-0.016459) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952947,0.00702304) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951721,-0.00366228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983313,0.00739254) , 
2, 0.0494875, 1, 0, 0.970481,0.0054059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752681,-0.00313301) , 
11, 0.736637, 1, 0, 0.908884,-0.00907696) , 
2, 0.0353572, 1, 0, 0.919813,0.00256019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862486,0.00527805) , 
10, 0.56589, 1, 0, 0.907851,0.0166165) , 
4, 0.252296, 1, 0, 0.501481,-0.00592744)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958818,-0.00556386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968058,0.00678556) , 
9, 0.0245751, 1, 0, 0.963418,0.00571647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834307,-0.00347449) , 
13, 0.818079, 1, 0, 0.929975,-0.00376345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504209,0.00352393) , 
17, 0.712734, 1, 0, 0.807554,0.015994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204811,-0.00123055) , 
10, 0.599262, 1, 0, 0.556337,0.000874529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420511,-0.00140019) , 
13, 1.22718, 1, 0, 0.52778,-0.00622491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204213,-0.00168948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749046,-0.00556778) , 
4, 0.162604, 1, 0, 0.353695,-0.0433892) , 
14, 0.137109, 1, 0, 0.488735,-0.0145603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627752,0.00443859) , 
14, 0.259014, 1, 0, 0.495594,-0.0107538)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748764,-0.000653599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218895,-0.00355768) , 
10, 0.34179, 1, 0, 0.358712,-0.0577058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177474,-0.000637214) , 
8, 0.0417424, 1, 0, 0.251345,-0.0301067) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967309,0.00719121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943645,-0.00819151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991732,0.0104038) , 
2, 0.0436561, 1, 0, 0.971349,-0.00177064) , 
2, 0.0333016, 1, 0, 0.970041,0.00671553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747428,-0.00384377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729911,-0.000839491) , 
10, 0.409629, 1, 0, 0.73926,-0.037893) , 
13, 0.88691, 1, 0, 0.883932,-0.00992877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750546,0.00232826) , 
10, 0.60746, 1, 0, 0.859634,-0.000196219) , 
12, 0.122588, 1, 0, 0.488187,-0.0184608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54715,0.00159904) , 
14, 0.206664, 1, 0, 0.493526,-0.0146592)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230708,0.0003255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0866986,-0.00250119) , 
17, 1.05521, 1, 0, 0.138895,-0.0234323) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950354,0.0062102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811112,0.000389057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874989,-0.00736141) , 
4, 0.367072, 1, 0, 0.843545,-0.0208016) , 
15, 0.0694276, 1, 0, 0.881212,-0.000182034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91663,0.00730922) , 
16, 0.0841771, 1, 0, 0.891745,0.0153807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748129,-0.00361937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80827,0.00293642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689633,-0.00359804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571657,-0.000357996) , 
16, 0.195091, 1, 0, 0.627419,-0.0298228) , 
16, 0.125747, 1, 0, 0.692217,-0.00585541) , 
8, 0.0200084, 1, 0, 0.706563,-0.0164662) , 
8, 0.0180605, 1, 0, 0.79752,-0.000823774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460131,0.00233343) , 
8, 0.0511732, 1, 0, 0.732904,0.00922684) , 
2, 0.00299812, 1, 0, 0.501702,-0.00348487)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721808,0.00387655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948557,-0.00114561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939273,0.00466201) , 
9, 0.0348785, 1, 0, 0.944557,0.0112749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9671,0.00329184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883179,-0.00964784) , 
9, 0.0325168, 1, 0, 0.933461,-0.0159518) , 
5, 0.0375769, 1, 0, 0.938688,-0.0031244) , 
12, 0.10296, 1, 0, 0.89552,0.00761774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527094,-0.0032938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30367,-0.000649641) , 
11, 0.711303, 1, 0, 0.383854,-0.0241858) , 
8, 0.0373027, 1, 0, 0.737153,-0.00222587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174212,-0.00223532) , 
3, 0.643698, 1, 0, 0.538268,-0.0160426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439018,2.02311e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341423,0.0011535) , 
9, 0.0330742, 1, 0, 0.378594,0.0152382) , 
11, 1.09844, 1, 0, 0.496007,-0.00776348)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996034,0.0178597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974168,-0.0152314) , 
13, 0.582509, 1, 0, 0.987417,0.00358221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836947,-0.00428616) , 
3, 0.229338, 1, 0, 0.932018,-0.0120134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956397,0.00271162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789932,0.00529172) , 
3, 0.360255, 1, 0, 0.884328,0.0415939) , 
10, 0.400603, 1, 0, 0.912972,0.00939584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217335,-0.00246301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470833,-0.00125309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537299,0.00346287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15196,-0.000585158) , 
10, 0.570538, 1, 0, 0.218212,0.00338332) , 
7, 0.336703, 1, 0, 0.303149,-0.00782062) , 
11, 0.84997, 1, 0, 0.281648,-0.0174137) , 
17, 0.660815, 1, 0, 0.505015,-0.00792825)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591354,-0.00299262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920821,-0.00259358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910841,0.00458251) , 
10, 0.360538, 1, 0, 0.91698,0.0057358) , 
12, 0.140331, 1, 0, 0.822419,-0.0121873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522902,-0.000459509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409257,0.00314543) , 
6, 0.210979, 1, 0, 0.449602,0.0304228) , 
16, 0.174109, 1, 0, 0.655319,0.00691087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172569,-0.000873623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366431,-0.00387059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958151,0.00201702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693837,-0.00241564) , 
6, 0.265313, 1, 0, 0.786746,-0.0270278) , 
12, 0.114632, 1, 0, 0.625327,-0.0501309) , 
2, 0.015519, 1, 0, 0.383686,-0.0313301) , 
15, 0.0974478, 1, 0, 0.492911,-0.0159533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558393,0.00276469) , 
14, 0.20891, 1, 0, 0.49869,-0.0109715)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88389,-0.00612692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965858,0.0040218) , 
12, 0.194687, 1, 0, 0.929377,-0.00854714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965283,0.00745312) , 
8, 0.0166708, 1, 0, 0.940197,0.00420886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873669,-0.00737969) , 
8, 0.0218005, 1, 0, 0.920451,-0.00836333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594502,0.00265357) , 
17, 0.729429, 1, 0, 0.859435,0.0020796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565362,0.00336587) , 
10, 0.652043, 1, 0, 0.817629,0.0090794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364745,-0.000904966) , 
3, 0.751618, 1, 0, 0.674656,-0.0006692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337577,-0.00200145) , 
9, 0.0652654, 1, 0, 0.608787,-0.00837067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10598,-0.00245501) , 
7, 0.688627, 1, 0, 0.484597,-0.0161445)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972858,-0.0017471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833941,0.00372669) , 
17, 0.485672, 1, 0, 0.927906,0.00796866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387298,-0.00367446) , 
10, 0.545679, 1, 0, 0.821299,-0.0038818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728474,0.00393171) , 
15, 0.222087, 1, 0, 0.804687,0.00378164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577286,-0.00200658) , 
9, 0.0547541, 1, 0, 0.752591,-0.00353571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901281,0.00653146) , 
13, 0.905716, 1, 0, 0.771934,0.00589495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208367,-0.0019978) , 
3, 0.627225, 1, 0, 0.596822,-0.00744477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470616,0.00356877) , 
11, 1.11584, 1, 0, 0.580735,0.00220557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243226,-0.00176915) , 
3, 0.864683, 1, 0, 0.50174,-0.00718104)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77187,0.00461193) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988611,0.00923207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953999,-0.00830428) , 
15, 0.0825616, 1, 0, 0.971165,-0.00238488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890721,0.00219099) , 
6, 0.317476, 1, 0, 0.945923,0.0050952) , 
4, 0.188013, 1, 0, 0.911538,0.0174483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773274,-0.000586426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425308,-0.00331644) , 
15, 0.174872, 1, 0, 0.642274,-0.0230719) , 
16, 0.140221, 1, 0, 0.817666,0.00332205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532787,-9.22266e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429034,0.00404522) , 
7, 0.218177, 1, 0, 0.486206,0.0335024) , 
11, 0.887763, 1, 0, 0.698428,0.014179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383044,0.000504704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121336,-0.00208107) , 
16, 0.264256, 1, 0, 0.229408,-0.0157451) , 
8, 0.0449645, 1, 0, 0.513589,0.00238602)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287429,-0.00231546) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836696,-0.00358355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947134,0.00257668) , 
4, 0.304473, 1, 0, 0.897833,-0.00781129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718295,0.00192943) , 
10, 0.351636, 1, 0, 0.833323,0.00766101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908405,-0.0050454) , 
4, 0.500907, 1, 0, 0.854961,-0.0010485) , 
2, 0.0179887, 1, 0, 0.670397,-0.0139376) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416374,0.000571438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629236,-0.0028439) , 
2, 0.0184848, 1, 0, 0.489396,-0.0111612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943024,0.000901035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90603,0.00495059) , 
10, 0.465215, 1, 0, 0.924236,0.0270804) , 
4, 0.244715, 1, 0, 0.662642,0.00407472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314723,0.00281347) , 
8, 0.0407727, 1, 0, 0.539009,0.0207411) , 
15, 0.113539, 1, 0, 0.60275,0.00391724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168444,-0.00164483) , 
10, 0.779759, 1, 0, 0.496845,-0.0040976)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960127,0.012108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975705,0.00205485) , 
12, 0.141591, 1, 0, 0.969564,0.0299333) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952302,0.000394675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334808,-0.00562423) , 
11, 0.474214, 1, 0, 0.642333,-0.05085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135545,-0.00116196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762089,0.00340223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90197,-0.00149502) , 
2, 0.033723, 1, 0, 0.838478,0.0189824) , 
12, 0.089066, 1, 0, 0.36289,-0.00719556) , 
13, 0.609633, 1, 0, 0.426281,-0.0170986) , 
10, 0.312691, 1, 0, 0.569638,-0.0046882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657475,0.000438744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510085,0.00320251) , 
14, 0.0516224, 1, 0, 0.55799,0.0447884) , 
13, 1.00296, 1, 0, 0.567122,0.00599718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255551,-0.00172543) , 
3, 0.875486, 1, 0, 0.497508,-0.00369992)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993632,0.0110204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969019,-0.00842358) , 
16, 0.105883, 1, 0, 0.984103,0.0016083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932638,0.0061221) , 
3, 0.259823, 1, 0, 0.968607,0.0153753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668915,-0.00170983) , 
17, 0.572426, 1, 0, 0.895307,0.00422597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867308,0.00636567) , 
16, 0.216003, 1, 0, 0.890365,0.0126513) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659944,-0.00281016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430013,-0.00128129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440381,0.000921641) , 
14, 0.102506, 1, 0, 0.436568,0.00202662) , 
10, 0.571536, 1, 0, 0.506054,-0.0105469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115223,-0.00222732) , 
17, 1.01523, 1, 0, 0.306722,-0.0242478) , 
10, 0.462823, 1, 0, 0.520259,-0.0107475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433025,0.001337) , 
11, 1.26965, 1, 0, 0.50666,-0.00422468)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572291,-0.00357811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195817,-0.000401447) , 
7, 0.432903, 1, 0, 0.309073,-0.0239238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958312,0.00335659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906702,-0.00620878) , 
14, 0.0303908, 1, 0, 0.936142,-0.00532227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737345,0.00282904) , 
17, 0.702923, 1, 0, 0.882236,0.0122494) , 
2, 0.0210614, 1, 0, 0.621922,-0.00417943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51003,0.00242189) , 
9, 0.0430709, 1, 0, 0.595209,0.00590292) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315257,0.00114297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615602,-0.00371853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911019,-4.41969e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834712,-8.96914e-05) , 
16, 0.0782343, 1, 0, 0.873014,-0.000686499) , 
4, 0.245501, 1, 0, 0.762249,-0.0313766) , 
12, 0.0873605, 1, 0, 0.564983,-0.00747332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146197,-0.00241137) , 
16, 0.249465, 1, 0, 0.410689,-0.0195991) , 
14, 0.0861099, 1, 0, 0.503884,-0.00671887)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134999,-0.0020322) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967191,0.00415411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957617,-0.0158008) , 
12, 0.195419, 1, 0, 0.962989,-0.00366796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654832,-0.003221) , 
13, 0.841195, 1, 0, 0.855129,-0.0229019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990628,0.00988156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555628,-0.00342772) , 
3, 0.223469, 1, 0, 0.774693,-0.0193245) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652828,0.00119949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564015,0.00382511) , 
9, 0.03449, 1, 0, 0.595587,0.0594626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469448,0.000204127) , 
14, 0.116544, 1, 0, 0.542473,0.0363094) , 
6, 0.287197, 1, 0, 0.60255,0.0219165) , 
10, 0.370927, 1, 0, 0.694722,0.00556129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224931,-0.00235473) , 
16, 0.349857, 1, 0, 0.633942,-0.000292408) , 
12, 0.0576521, 1, 0, 0.492706,-0.009567)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674818,0.00381669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987582,0.0112344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976706,-0.00951859) , 
4, 0.437895, 1, 0, 0.982562,0.00640124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914035,-0.00409197) , 
15, 0.141797, 1, 0, 0.95692,-0.00259019) , 
5, 0.0173275, 1, 0, 0.886652,0.0113469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578838,0.0008005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239339,-0.00241857) , 
15, 0.108079, 1, 0, 0.375226,-0.0210978) , 
16, 0.230221, 1, 0, 0.700655,-0.000452717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387305,-0.00277795) , 
13, 0.790459, 1, 0, 0.620261,-0.0104993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420263,-0.000460245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545984,0.00232727) , 
6, 0.435609, 1, 0, 0.494077,0.0234922) , 
13, 0.895866, 1, 0, 0.576659,0.00124615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263445,-0.00133618) , 
3, 0.864683, 1, 0, 0.502274,-0.00582975)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126178,-0.00241557) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578771,-0.0004556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442309,0.00328025) , 
14, 0.0457132, 1, 0, 0.51189,0.0202496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315725,-0.00134778) , 
14, 0.0863477, 1, 0, 0.430347,0.00290218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555705,0.0031277) , 
14, 0.157279, 1, 0, 0.458471,0.0117338) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990427,0.00177701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981893,0.00818741) , 
6, 0.164992, 1, 0, 0.985846,0.0113463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923584,-0.00470648) , 
10, 0.340253, 1, 0, 0.956711,-0.0029549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717254,-0.00344554) , 
17, 0.49945, 1, 0, 0.893021,-0.0153706) , 
2, 0.0263309, 1, 0, 0.690086,-0.00271277) , 
12, 0.0530965, 1, 0, 0.549621,-0.0110341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271202,3.41618e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742245,0.00220212) , 
12, 0.113406, 1, 0, 0.4326,0.0158528) , 
6, 0.561874, 1, 0, 0.513822,-0.00280891)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983554,0.00520102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920538,-0.0129277) , 
10, 0.260169, 1, 0, 0.956368,-0.0112834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961949,0.00911376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834776,-0.00100156) , 
13, 0.716887, 1, 0, 0.89891,0.015355) , 
10, 0.379116, 1, 0, 0.929506,0.0011701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794908,0.00267937) , 
11, 0.695671, 1, 0, 0.903493,0.0086033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688131,-0.00493952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314475,0.000382258) , 
8, 0.0365013, 1, 0, 0.41867,-0.00680838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199643,-0.00240365) , 
15, 0.198144, 1, 0, 0.334449,-0.0198638) , 
7, 0.231312, 1, 0, 0.583991,-0.00738014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335911,0.0010705) , 
11, 1.04352, 1, 0, 0.533272,-0.00201647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340618,-0.00155473) , 
6, 0.733947, 1, 0, 0.496519,-0.00878459)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134946,-0.00218645) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958164,0.00621523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884734,-0.00342074) , 
16, 0.0678174, 1, 0, 0.925871,0.00532345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922179,0.00534073) , 
7, 0.133036, 1, 0, 0.924578,0.0151904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73258,-0.00248803) , 
7, 0.271399, 1, 0, 0.887389,0.00774107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535014,0.00448539) , 
8, 0.0392556, 1, 0, 0.803198,0.0218485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326758,-0.000422227) , 
3, 0.759712, 1, 0, 0.634625,0.0107422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499869,-0.00233819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449161,-0.00010073) , 
15, 0.276883, 1, 0, 0.472406,-0.0176222) , 
14, 0.125823, 1, 0, 0.588296,0.00264152) , 
12, 0.0521298, 1, 0, 0.495448,-0.00498925)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938811,0.00481908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904749,-0.001812) , 
15, 0.0533535, 1, 0, 0.924194,0.0101892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768257,-0.00481256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789604,0.00067223) , 
15, 0.0800424, 1, 0, 0.781431,-0.0148435) , 
10, 0.267671, 1, 0, 0.845265,-0.0036506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773763,0.00373139) , 
10, 0.440364, 1, 0, 0.83406,0.00406328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690849,0.00469976) , 
7, 0.368899, 1, 0, 0.810728,0.013977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303743,-0.00454921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181279,-0.00222784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852394,0.000199509) , 
1, 0.221375, 1, 0, 0.306632,-0.0319117) , 
15, 0.116154, 1, 0, 0.305911,-0.0407632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257365,-0.000112737) , 
11, 1.01983, 1, 0, 0.286199,-0.0251115) , 
10, 0.510432, 1, 0, 0.497876,-0.0093371)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891115,0.00361737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517388,-0.00163057) , 
8, 0.0222493, 1, 0, 0.668877,-0.00181428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861673,0.000574112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46385,0.00511957) , 
8, 0.0302575, 1, 0, 0.633964,0.0433861) , 
15, 0.0263767, 1, 0, 0.651583,0.0205746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920677,0.00363875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36513,-0.00163976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385874,0.00207717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360969,0.000601271) , 
15, 0.206316, 1, 0, 0.372343,0.0184274) , 
15, 0.135876, 1, 0, 0.369686,0.00343217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233264,-0.00216747) , 
9, 0.0516177, 1, 0, 0.312719,-0.0132685) , 
16, 0.099786, 1, 0, 0.443401,-0.0056008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336569,-0.00150512) , 
6, 0.59109, 1, 0, 0.408005,-0.015295) , 
15, 0.074736, 1, 0, 0.47235,-0.00581948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818219,-0.00837157) , 
0, 0.310048, 1, 0, 0.497581,-0.0106185)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235956,-0.0020012) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96744,-0.0013677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89124,-0.0151949) , 
10, 0.275122, 1, 0, 0.935443,-0.0241849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957247,-0.00271016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939887,0.00358374) , 
10, 0.369613, 1, 0, 0.948565,0.00619285) , 
14, 0.0506827, 1, 0, 0.94218,-0.00858885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75205,0.00290564) , 
17, 0.60719, 1, 0, 0.90303,0.00125111) , 
12, 0.0707953, 1, 0, 0.760879,-0.00652532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611518,0.00261836) , 
15, 0.323452, 1, 0, 0.740221,-0.000567665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184561,-0.0020942) , 
3, 0.648259, 1, 0, 0.512246,-0.0160697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422389,0.000763082) , 
11, 1.25886, 1, 0, 0.496687,-0.0101843)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992686,0.0115004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932734,-0.0129637) , 
8, 0.0152603, 1, 0, 0.965001,-0.00664838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763908,0.00487501) , 
16, 0.174321, 1, 0, 0.901257,0.00668675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502527,-0.00409776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910712,0.000235548) , 
2, 0.0298297, 1, 0, 0.69989,-0.0314899) , 
6, 0.225855, 1, 0, 0.801904,-0.0121493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464663,0.00264046) , 
11, 0.891704, 1, 0, 0.762214,-0.00638966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171047,-0.00187602) , 
3, 0.633588, 1, 0, 0.53359,-0.0164463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415983,0.000402029) , 
6, 0.606304, 1, 0, 0.501884,-0.00956422)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973109,0.00939146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868075,-0.00635549) , 
6, 0.15196, 1, 0, 0.920271,-0.00618119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882955,0.00721598) , 
15, 0.138765, 1, 0, 0.909078,0.0059604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738611,-0.0036847) , 
6, 0.276787, 1, 0, 0.862569,-0.00609267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194228,0.000151287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81793,0.00143572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71756,0.00453767) , 
16, 0.134635, 1, 0, 0.765981,0.0453868) , 
2, 0.0157454, 1, 0, 0.445889,0.0213667) , 
11, 0.713985, 1, 0, 0.663333,0.00703706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407757,-0.00165708) , 
9, 0.0571072, 1, 0, 0.604827,-0.000806731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24906,-0.0014418) , 
3, 0.776272, 1, 0, 0.487718,-0.0102984)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935188,-0.00107546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609341,-0.00579503) , 
17, 0.419512, 1, 0, 0.793246,-0.0345907) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64298,-0.000870298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522846,0.00247059) , 
14, 0.0568746, 1, 0, 0.572859,0.0225099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164317,-0.00110902) , 
10, 0.609015, 1, 0, 0.316225,-0.00381461) , 
11, 0.611754, 1, 0, 0.436428,-0.0115698) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964577,0.00424238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939702,-0.0122323) , 
4, 0.5084, 1, 0, 0.95489,-0.00204592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901342,0.00550925) , 
6, 0.347424, 1, 0, 0.939238,0.0165879) , 
12, 0.173521, 1, 0, 0.593189,-0.0027911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480144,0.00383125) , 
11, 1.15336, 1, 0, 0.581581,0.00474671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267048,-0.00134896) , 
3, 0.875486, 1, 0, 0.511578,-0.00276863)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292217,-0.00061948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380957,0.00173829) , 
14, 0.0932429, 1, 0, 0.334195,0.00863178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110671,-0.00166601) , 
10, 0.733549, 1, 0, 0.229638,-0.00794779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761079,-0.00479111) , 
4, 0.15889, 1, 0, 0.287317,-0.0137351) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907626,0.0016309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891523,-0.0053811) , 
12, 0.218018, 1, 0, 0.899518,-0.00949182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933093,0.00678483) , 
16, 0.114055, 1, 0, 0.912221,0.00985374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803493,-0.00477687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830967,6.73895e-05) , 
9, 0.0407804, 1, 0, 0.818541,-0.0236475) , 
9, 0.0308575, 1, 0, 0.866831,-0.00637826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740074,0.00454498) , 
8, 0.0427607, 1, 0, 0.848581,0.00745481) , 
2, 0.0210614, 1, 0, 0.507204,-0.00543351)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973601,-0.0106815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989332,0.00868696) , 
9, 0.0186788, 1, 0, 0.983457,0.00349937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916374,0.00459576) , 
3, 0.281831, 1, 0, 0.963282,0.0132393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977606,0.0062894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603411,-0.00298034) , 
3, 0.223502, 1, 0, 0.791348,-0.0177496) , 
16, 0.141917, 1, 0, 0.902224,0.00223426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254298,-0.00234998) , 
3, 0.495646, 1, 0, 0.634572,-0.0161395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627597,0.00327275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230913,0.000937012) , 
16, 0.206857, 1, 0, 0.389562,0.0337373) , 
11, 0.933672, 1, 0, 0.563537,-0.00167883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261708,-0.00146892) , 
3, 0.871663, 1, 0, 0.496751,-0.00837771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622627,0.00372194) , 
14, 0.241108, 1, 0, 0.5043,-0.00477688)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994449,0.0155039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907753,-0.00287986) , 
6, 0.155263, 1, 0, 0.942739,-0.00265912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978781,0.0100213) , 
14, 0.0856286, 1, 0, 0.952728,0.00623008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845883,0.0045641) , 
11, 0.72895, 1, 0, 0.92829,0.0167118) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457225,-0.00277237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280723,-0.0044344) , 
14, 0.0405217, 1, 0, 0.363408,-0.0534203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197003,-0.00210788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410965,0.000478954) , 
14, 0.180002, 1, 0, 0.256213,-0.0248653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83949,0.001336) , 
5, 0.0275046, 1, 0, 0.375686,-0.0165096) , 
14, 0.0688879, 1, 0, 0.37244,-0.0262662) , 
10, 0.431419, 1, 0, 0.580132,-0.0102076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468813,0.00314195) , 
11, 1.11759, 1, 0, 0.566929,-0.0020726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271003,-0.00134442) , 
3, 0.864683, 1, 0, 0.496862,-0.00862482)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399185,0.000767592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307725,-0.00214914) , 
9, 0.0171768, 1, 0, 0.352345,-0.0117463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90955,-0.00215426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976808,0.00478698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895539,0.00513366) , 
6, 0.221791, 1, 0, 0.935944,0.0273966) , 
9, 0.0141097, 1, 0, 0.925375,0.0123522) , 
2, 0.0210969, 1, 0, 0.670269,0.0016238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998692,0.017022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695723,-0.00635735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234593,-0.00278044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251476,-0.000946282) , 
9, 0.0477775, 1, 0, 0.245495,-0.0269354) , 
10, 0.427644, 1, 0, 0.319584,-0.0373341) , 
3, 0.183156, 1, 0, 0.4024,-0.0307431) , 
9, 0.031288, 1, 0, 0.506221,-0.0181983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619365,0.00334569) , 
14, 0.229801, 1, 0, 0.513892,-0.0141131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420112,0.00119649) , 
11, 1.26228, 1, 0, 0.498278,-0.00715662)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930737,0.0100434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97723,-0.0104653) , 
5, 0.0223321, 1, 0, 0.953141,0.0229299) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933581,-0.000701949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55715,-0.00361804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359346,-0.00138758) , 
10, 0.427328, 1, 0, 0.436832,-0.0482401) , 
17, 0.566417, 1, 0, 0.596269,-0.033661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369489,-9.50128e-05) , 
9, 0.0407909, 1, 0, 0.483673,-0.0178798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960922,-0.0138879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853061,0.00330252) , 
3, 0.24938, 1, 0, 0.902766,0.0147499) , 
12, 0.243902, 1, 0, 0.55716,-0.0121582) , 
13, 0.528874, 1, 0, 0.613767,-0.00714221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106171,-0.00203931) , 
7, 0.687117, 1, 0, 0.488584,-0.013205)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937752,0.00394123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895954,-0.00401039) , 
9, 0.0332485, 1, 0, 0.922719,0.00153795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612671,-0.00466293) , 
13, 0.733634, 1, 0, 0.826428,-0.0127348) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663602,-0.00190135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903614,0.0041007) , 
12, 0.162565, 1, 0, 0.789632,0.00465232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60329,0.00300949) , 
8, 0.0299703, 1, 0, 0.715334,0.0215711) , 
6, 0.265883, 1, 0, 0.772424,0.00394163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485209,-0.00271617) , 
15, 0.263441, 1, 0, 0.733969,-0.00259723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532474,0.00215667) , 
15, 0.353577, 1, 0, 0.710864,0.00196292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113369,-0.00204285) , 
17, 1.01664, 1, 0, 0.513069,-0.00980902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444096,0.00199181) , 
11, 1.23409, 1, 0, 0.500964,-0.000135834)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371192,0.00312006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407054,0.00177801) , 
15, 0.162201, 1, 0, 0.389367,0.0359822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80782,-0.00458807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980789,4.65543e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870134,-0.00861968) , 
17, 0.378684, 1, 0, 0.935279,-0.0202116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959556,-0.00149554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893051,0.00729555) , 
17, 0.348957, 1, 0, 0.927357,0.0350609) , 
10, 0.351867, 1, 0, 0.931675,0.00493305) , 
2, 0.0243877, 1, 0, 0.903881,-0.00605062) , 
12, 0.0857498, 1, 0, 0.778112,0.00422401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183221,-0.00153583) , 
8, 0.0493396, 1, 0, 0.568956,-0.00616328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478552,0.00100762) , 
6, 0.652087, 1, 0, 0.55002,9.48568e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310399,-0.00180288) , 
9, 0.0664871, 1, 0, 0.507118,-0.00597429)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915605,-0.00644394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978068,0.00809299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954993,-0.00217882) , 
7, 0.0898579, 1, 0, 0.968482,0.0118684) , 
4, 0.374747, 1, 0, 0.950237,-0.00139033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611989,6.90264e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425141,0.00210788) , 
16, 0.197568, 1, 0, 0.510862,0.0164715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860956,0.00499867) , 
12, 0.164848, 1, 0, 0.613952,0.0316075) , 
17, 0.537456, 1, 0, 0.800483,0.0133042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442784,-0.00130194) , 
15, 0.202732, 1, 0, 0.719989,0.00511962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736899,0.00474308) , 
14, 0.188019, 1, 0, 0.722049,0.0107965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105962,-0.00229488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309973,-0.000356632) , 
11, 1.14044, 1, 0, 0.191733,-0.0249481) , 
17, 1.01523, 1, 0, 0.500557,-0.00413266)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424632,-0.00248214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709916,0.00382185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137209,-0.000946458) , 
10, 0.44828, 1, 0, 0.203985,-0.00720807) , 
7, 0.243504, 1, 0, 0.249993,-0.0172351) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96313,0.00126389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983976,0.0106603) , 
8, 0.0159054, 1, 0, 0.971103,0.0131472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930363,-0.0046061) , 
14, 0.1013, 1, 0, 0.960701,0.00538563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857297,-0.00697273) , 
8, 0.0270396, 1, 0, 0.934639,-0.0073495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69693,0.00132281) , 
3, 0.570074, 1, 0, 0.862393,0.0039449) , 
12, 0.115304, 1, 0, 0.498276,-0.00864821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633977,0.00318342) , 
14, 0.25833, 1, 0, 0.505196,-0.00582154)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495698,0.00270102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135628,-0.000469504) , 
10, 0.544461, 1, 0, 0.203204,0.00360128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588862,-0.000626378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372174,-0.00270133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720565,-0.00162316) , 
4, 0.173143, 1, 0, 0.482045,-0.0513945) , 
14, 0.0584167, 1, 0, 0.513246,-0.0398581) , 
2, 0.0158902, 1, 0, 0.30936,-0.0112789) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962247,0.0046686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871242,-0.00499935) , 
10, 0.288202, 1, 0, 0.913241,-0.00888632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893918,-0.000195254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982989,0.0120953) , 
4, 0.444796, 1, 0, 0.941588,0.0198193) , 
5, 0.045983, 1, 0, 0.927221,0.00527054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853493,0.00358485) , 
10, 0.506843, 1, 0, 0.904754,0.0181003) , 
4, 0.252296, 1, 0, 0.502208,-0.00176298)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964652,0.0108465) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928307,-0.0142538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983033,0.00599768) , 
2, 0.0410926, 1, 0, 0.955696,-0.0131017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947579,0.00189839) , 
9, 0.0351967, 1, 0, 0.952799,-0.00543271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573265,-0.00288452) , 
17, 0.585452, 1, 0, 0.880088,-0.0136707) , 
13, 0.388296, 1, 0, 0.893734,-0.00634209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432462,0.00134409) , 
3, 0.453246, 1, 0, 0.726968,0.00419562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195459,-0.00151724) , 
3, 0.660456, 1, 0, 0.522929,-0.00792865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430493,0.0014985) , 
11, 1.29285, 1, 0, 0.509242,-0.00170496)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142924,-0.000942708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135785,-0.0028811) , 
14, 0.103332, 1, 0, 0.139159,-0.03266) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574287,-0.00179038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932859,-0.00463089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979639,0.00844343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95967,-0.00737998) , 
5, 0.0538935, 1, 0, 0.970987,0.00458317) , 
2, 0.0359183, 1, 0, 0.958034,-0.00202853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823961,0.00206071) , 
13, 1.00286, 1, 0, 0.9273,0.00542451) , 
4, 0.219147, 1, 0, 0.830484,-0.00377238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770631,0.00341426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600863,0.000555162) , 
15, 0.203177, 1, 0, 0.673405,0.0231157) , 
9, 0.0454464, 1, 0, 0.780224,0.00483088) , 
0, 0.0693568, 1, 0, 0.510778,-0.0109269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440597,0.00166062) , 
11, 1.25843, 1, 0, 0.499956,-0.00350158)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224543,-0.00111394) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893111,0.000952096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545494,0.00297245) , 
17, 0.636571, 1, 0, 0.72643,0.0322913) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986088,0.00462368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885337,-0.00849987) , 
6, 0.19484, 1, 0, 0.949029,-0.0128648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883433,0.00324218) , 
6, 0.331262, 1, 0, 0.928522,0.00164407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827767,-0.00361136) , 
15, 0.174779, 1, 0, 0.905292,-0.00701556) , 
12, 0.134828, 1, 0, 0.847433,0.00569965) , 
12, 0.0701653, 1, 0, 0.672609,-0.00138642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477059,0.00131616) , 
11, 1.13895, 1, 0, 0.627111,0.00598343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107072,-0.00185742) , 
7, 0.707552, 1, 0, 0.504897,-0.00218222)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990261,0.0108055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917837,-0.00415761) , 
9, 0.0322791, 1, 0, 0.953337,-0.00134683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64289,0.000651925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935146,0.00741975) , 
12, 0.148363, 1, 0, 0.802063,0.0388304) , 
11, 0.510565, 1, 0, 0.886699,0.0163517) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691973,-0.00175703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281759,-0.00385301) , 
15, 0.138765, 1, 0, 0.479828,-0.0406031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362438,0.0012664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186819,-0.00131438) , 
8, 0.05402, 1, 0, 0.237401,-0.00987487) , 
8, 0.0403532, 1, 0, 0.312448,-0.0193873) , 
7, 0.274847, 1, 0, 0.593908,-0.00187042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472445,0.0024978) , 
11, 1.13074, 1, 0, 0.579236,0.00409181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258981,-0.00160391) , 
3, 0.875486, 1, 0, 0.508288,-0.00452122)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759261,-0.00252006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941495,0.00346681) , 
2, 0.03963, 1, 0, 0.847419,-0.00698836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87944,0.00548578) , 
16, 0.144002, 1, 0, 0.854605,0.00313371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631903,-0.00348929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334751,0.000136621) , 
8, 0.0384253, 1, 0, 0.434362,-0.0134914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270314,-0.00275649) , 
9, 0.0328982, 1, 0, 0.375571,-0.0266027) , 
8, 0.0256748, 1, 0, 0.565924,-0.0147864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532407,-0.000811648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425334,0.00189536) , 
6, 0.339642, 1, 0, 0.464465,0.019851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320108,-0.00059157) , 
15, 0.256953, 1, 0, 0.394392,0.00494501) , 
9, 0.0430211, 1, 0, 0.497595,-0.00692658)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850752,0.00427833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935721,-0.00445146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980498,-0.00658079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950415,0.00763056) , 
3, 0.225489, 1, 0, 0.969338,0.0131107) , 
7, 0.0563279, 1, 0, 0.955724,0.00112485) , 
4, 0.216428, 1, 0, 0.93387,0.0100492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345751,-0.00141051) , 
17, 0.599283, 1, 0, 0.741054,-0.00208218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643434,0.00139437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414853,0.00340945) , 
7, 0.285116, 1, 0, 0.516684,0.0449319) , 
11, 0.914819, 1, 0, 0.687554,0.00912821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37154,0.000164225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142289,-0.00233307) , 
14, 0.0467851, 1, 0, 0.203905,-0.0260619) , 
16, 0.313455, 1, 0, 0.563602,0.000109489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251633,-0.0020195) , 
3, 0.864683, 1, 0, 0.494515,-0.00949964)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.355309,0.000537122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0871301,-0.00215304) , 
3, 0.572732, 1, 0, 0.147155,-0.0234121) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980797,0.0126018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979104,0.00380267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98692,0.00831113) , 
15, 0.0825616, 1, 0, 0.983016,0.010078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955791,-0.00492823) , 
16, 0.0985953, 1, 0, 0.973791,0.00340056) , 
5, 0.0297887, 1, 0, 0.975587,0.00999632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838717,-0.00282977) , 
8, 0.0311515, 1, 0, 0.943598,0.00258614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794349,-0.00311374) , 
6, 0.403015, 1, 0, 0.914177,-0.00473242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511205,0.00204064) , 
3, 0.561709, 1, 0, 0.78569,0.0109832) , 
4, 0.062671, 1, 0, 0.513422,-0.00368273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43498,0.00138323) , 
11, 1.29281, 1, 0, 0.50135,0.00186588)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97977,-0.00407143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984886,0.0141828) , 
11, 0.491772, 1, 0, 0.982262,0.0145889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967629,0.00386355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799138,-0.00687743) , 
7, 0.131955, 1, 0, 0.900214,-0.0136779) , 
10, 0.317779, 1, 0, 0.942004,0.000719245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3776,0.00148555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914258,0.00641724) , 
12, 0.143839, 1, 0, 0.543238,0.0392649) , 
3, 0.376937, 1, 0, 0.775897,0.0167755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186175,-0.000505673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404475,-0.00126088) , 
13, 1.26164, 1, 0, 0.258777,-0.0160436) , 
3, 0.620136, 1, 0, 0.498871,-0.000806)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99812,0.0159286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997517,0.0174133) , 
15, 0.0800424, 1, 0, 0.997823,0.011912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967887,-0.0032248) , 
11, 0.479033, 1, 0, 0.987955,0.0063724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797134,-0.00464378) , 
3, 0.251945, 1, 0, 0.937913,-0.0071099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811426,0.0047201) , 
11, 0.671735, 1, 0, 0.898183,0.0123146) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243019,-0.00183248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516891,0.00127972) , 
14, 0.205011, 1, 0, 0.293431,-0.0232209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917665,0.00354188) , 
4, 0.378749, 1, 0, 0.3963,-0.0152566) , 
10, 0.4869, 1, 0, 0.639175,-0.00191414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23983,-0.00157863) , 
3, 0.756598, 1, 0, 0.492961,-0.0131112)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200132,-0.00134569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103295,-0.00121789) , 
17, 1.05521, 1, 0, 0.139536,-0.020789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528229,0.00201016) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908792,-0.00592745) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993945,0.0112416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935401,-0.00816993) , 
6, 0.174238, 1, 0, 0.971609,-0.00348294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926447,0.00463925) , 
6, 0.29621, 1, 0, 0.958752,0.00716061) , 
4, 0.297762, 1, 0, 0.946651,-0.00142873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796147,0.00314921) , 
17, 0.606018, 1, 0, 0.919282,0.00798861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624684,-0.00177276) , 
11, 1.0771, 1, 0, 0.855555,-0.00273412) , 
4, 0.156533, 1, 0, 0.778465,0.00775113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379652,-0.00189058) , 
16, 0.330889, 1, 0, 0.739086,0.00368616) , 
2, 0.00304846, 1, 0, 0.495156,-0.00627167)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845562,0.00505729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980252,0.00731766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9135,-0.00296245) , 
8, 0.0149101, 1, 0, 0.93794,-0.00293467) , 
0, 0.126501, 1, 0, 0.909407,0.0148385) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855742,-0.00314766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901192,0.00491303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717089,-0.000388875) , 
10, 0.504441, 1, 0, 0.818296,0.0172962) , 
16, 0.0538684, 1, 0, 0.830309,0.00384062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568953,-0.00484288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134625,-0.0017482) , 
17, 0.784529, 1, 0, 0.199774,-0.0352709) , 
7, 0.229039, 1, 0, 0.399051,-0.0229099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357657,0.000233644) , 
11, 1.13676, 1, 0, 0.387803,-0.0153314) , 
10, 0.317606, 1, 0, 0.501055,-0.00878082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653428,0.00580926) , 
14, 0.254633, 1, 0, 0.508974,-0.00463023)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834735,-0.0033198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978376,0.00598261) , 
2, 0.0420875, 1, 0, 0.903009,-0.00858438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951697,0.0110279) , 
7, 0.239451, 1, 0, 0.920461,0.0156291) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86956,0.000204296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648779,-0.0097267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162014,-0.00180204) , 
8, 0.0323149, 1, 0, 0.282736,-0.0456433) , 
10, 0.461067, 1, 0, 0.45161,-0.0321381) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561638,-0.00139866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408799,0.00207401) , 
14, 0.0602966, 1, 0, 0.455089,0.0193927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248411,-0.00119895) , 
3, 0.867065, 1, 0, 0.357048,-0.00159219) , 
13, 0.899379, 1, 0, 0.398273,-0.0149088) , 
10, 0.285269, 1, 0, 0.488252,-0.00964677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643604,0.00444192) , 
14, 0.256264, 1, 0, 0.496017,-0.00628286)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213884,0.00120803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985808,0.0127629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872515,-0.00548215) , 
6, 0.162019, 1, 0, 0.925178,-0.00883679) , 
12, 0.0875632, 1, 0, 0.651019,0.000592556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646734,-0.0017972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289819,-0.00331389) , 
6, 0.200894, 1, 0, 0.435504,-0.0328876) , 
15, 0.159431, 1, 0, 0.580893,-0.0103013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617949,-0.00155546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418254,0.00167994) , 
9, 0.0373718, 1, 0, 0.495265,0.00963574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461258,0.0031252) , 
11, 0.999535, 1, 0, 0.484783,0.0227152) , 
6, 0.330531, 1, 0, 0.54168,0.00316954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37206,-0.00127878) , 
6, 0.648407, 1, 0, 0.498044,-0.00533758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646939,0.00457073) , 
14, 0.241108, 1, 0, 0.506515,-0.00167144)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935346,3.21487e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76238,-0.00749407) , 
6, 0.201786, 1, 0, 0.851195,-0.0316903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994653,0.0138398) , 
5, 0.0438667, 1, 0, 0.906525,-0.0137655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874327,0.00517805) , 
15, 0.11417, 1, 0, 0.896376,0.0016311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268088,-0.00268123) , 
10, 0.545562, 1, 0, 0.682126,-0.0131963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668784,0.00254254) , 
14, 0.172676, 1, 0, 0.679741,-0.005525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842424,0.00360068) , 
13, 0.940552, 1, 0, 0.700536,0.000787789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178401,-0.00117435) , 
3, 0.690939, 1, 0, 0.533818,-0.00607664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409573,0.00163562) , 
11, 1.14807, 1, 0, 0.505707,0.00331373)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194563,-0.0018018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133885,-0.000227684) , 
11, 0.864197, 1, 0, 0.155642,-0.0129267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589557,0.00372815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534482,-0.00036106) , 
5, 0.0163914, 1, 0, 0.557947,0.0205098) , 
0, 0.0715461, 1, 0, 0.265984,-0.0037559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473788,-0.00393098) , 
5, 0.0189994, 1, 0, 0.283731,-0.0102206) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918882,-4.18913e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943362,0.00537722) , 
16, 0.0812425, 1, 0, 0.929619,0.0138865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796584,-0.00268117) , 
8, 0.0197904, 1, 0, 0.878122,-0.00311166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92858,0.00379889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880695,0.00396186) , 
16, 0.0806743, 1, 0, 0.904645,0.0330512) , 
14, 0.0812319, 1, 0, 0.886456,0.00825141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752051,0.00360684) , 
10, 0.635213, 1, 0, 0.865207,0.0177398) , 
2, 0.0224073, 1, 0, 0.503201,0.000332648)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627409,0.000186145) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379258,-0.00436054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887803,-0.00181253) , 
12, 0.151679, 1, 0, 0.602193,-0.0543923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303053,-0.00322452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146727,-0.000999733) , 
11, 0.751216, 1, 0, 0.187495,-0.0247018) , 
16, 0.201896, 1, 0, 0.343578,-0.0358766) , 
15, 0.0484066, 1, 0, 0.396584,-0.0288477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5501,0.00104202) , 
14, 0.201157, 1, 0, 0.414644,-0.0237691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998753,0.0163371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94806,-0.00736124) , 
6, 0.170742, 1, 0, 0.974079,-0.0030891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861222,0.00371533) , 
3, 0.381233, 1, 0, 0.938784,0.0120513) , 
2, 0.0391141, 1, 0, 0.530495,-0.0158517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385536,0.000792128) , 
11, 1.13798, 1, 0, 0.496045,-0.00801221)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993561,0.0107678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960312,-0.0225388) , 
11, 0.396206, 1, 0, 0.982089,-0.00185468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763081,-0.0095577) , 
3, 0.225643, 1, 0, 0.917412,-0.025946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624503,-0.00389759) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271124,0.000526629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917836,0.0052997) , 
1, 0.214638, 1, 0, 0.438717,0.0164332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406924,-0.000928838) , 
6, 0.481608, 1, 0, 0.42595,0.00300151) , 
9, 0.013849, 1, 0, 0.4538,-0.00255533) , 
11, 0.54613, 1, 0, 0.616069,-0.0107423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457865,0.00119218) , 
11, 1.11412, 1, 0, 0.580207,-0.00215846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161896,-0.00200297) , 
10, 0.813501, 1, 0, 0.499833,-0.00812317)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493048,0.00235065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151834,-0.000255784) , 
10, 0.495354, 1, 0, 0.228301,0.00794655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667517,0.00347264) , 
4, 0.0859396, 1, 0, 0.311895,0.0193245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664957,-0.00292847) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991217,0.00825037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978165,-0.00292946) , 
4, 0.427534, 1, 0, 0.984741,0.00296867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808927,-0.00431794) , 
6, 0.276866, 1, 0, 0.913955,-0.0174004) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913581,0.00419809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853297,-0.00407911) , 
5, 0.0394788, 1, 0, 0.882613,0.000232029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79333,0.00278139) , 
8, 0.0247895, 1, 0, 0.853939,0.0145681) , 
10, 0.383555, 1, 0, 0.886417,-0.00273191) , 
4, 0.213012, 1, 0, 0.854456,-0.0104063) , 
4, 0.156533, 1, 0, 0.587564,0.00421865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175166,-0.00131808) , 
10, 0.815054, 1, 0, 0.509928,-0.000800471)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994382,0.0154065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995176,0.0113858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972094,-0.0049695) , 
10, 0.334853, 1, 0, 0.985362,0.00325592) , 
4, 0.305893, 1, 0, 0.987981,0.00991226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533799,-0.00178035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859428,0.00180567) , 
2, 0.0421228, 1, 0, 0.628593,-0.0210128) , 
3, 0.288228, 1, 0, 0.782426,-0.0077756) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216266,-0.0018243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892842,0.00571876) , 
12, 0.0847818, 1, 0, 0.45536,-0.00515417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420977,0.00291058) , 
11, 0.902048, 1, 0, 0.440853,0.0201986) , 
7, 0.279922, 1, 0, 0.653077,0.00281784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206141,-2.41794e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199606,-0.00244541) , 
14, 0.118157, 1, 0, 0.202841,-0.0216375) , 
10, 0.711623, 1, 0, 0.501526,-0.00541389)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12229,-0.00186548) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989963,0.0102268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972055,-0.0173989) , 
5, 0.0352606, 1, 0, 0.980756,-0.00226185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997929,0.017983) , 
4, 0.499761, 1, 0, 0.985817,0.00256732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805181,0.00335433) , 
3, 0.255759, 1, 0, 0.933975,0.0117981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313789,-0.00154599) , 
11, 0.773763, 1, 0, 0.811762,0.00452045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506134,-0.00255113) , 
6, 0.401694, 1, 0, 0.717723,-0.0106249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475889,0.000715422) , 
13, 1.10234, 1, 0, 0.635227,-0.00152595) , 
12, 0.0576521, 1, 0, 0.492826,-0.00909556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579922,0.00285546) , 
14, 0.241108, 1, 0, 0.498013,-0.00603304)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721828,0.00338658) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99017,0.00800524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853612,-0.00795967) , 
6, 0.235027, 1, 0, 0.931984,-0.0191822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913499,0.00513319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779088,-0.00183744) , 
14, 0.119405, 1, 0, 0.857094,0.0127218) , 
10, 0.363772, 1, 0, 0.897507,-0.00449448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305073,-0.00288396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131992,-0.00150807) , 
7, 0.582675, 1, 0, 0.206381,-0.037743) , 
17, 0.65925, 1, 0, 0.515381,-0.0228777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350678,0.00012594) , 
11, 1.06682, 1, 0, 0.466565,-0.0153122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594698,0.0025237) , 
14, 0.252332, 1, 0, 0.474713,-0.0120247) , 
9, 0.00391101, 1, 0, 0.498151,-0.00760873)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823803,0.00573871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978102,0.00576061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901512,-0.00402718) , 
10, 0.205509, 1, 0, 0.938849,-0.00462988) , 
1, 0.196067, 1, 0, 0.90779,0.0162512) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902537,0.00460057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410235,-0.00138954) , 
10, 0.515421, 1, 0, 0.653275,0.00167738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488664,-0.00335372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411027,-0.00129582) , 
15, 0.10394, 1, 0, 0.437483,-0.0422915) , 
6, 0.403673, 1, 0, 0.533903,-0.0226453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17853,-0.00156374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259753,0.00161648) , 
13, 0.969602, 1, 0, 0.219283,0.00182508) , 
10, 0.691261, 1, 0, 0.389738,-0.0114325) , 
10, 0.317606, 1, 0, 0.493738,-0.00587496)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669899,-0.00329105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610741,0.0016566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40824,-0.000998916) , 
15, 0.0701614, 1, 0, 0.511562,0.00253722) , 
16, 0.133147, 1, 0, 0.582056,-0.0209373) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998231,0.0140556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922296,-0.00918755) , 
11, 0.395864, 1, 0, 0.960273,-0.00699068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867524,0.00414689) , 
6, 0.335582, 1, 0, 0.926576,0.0154788) , 
12, 0.173016, 1, 0, 0.745643,-0.00364603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295274,0.00201282) , 
8, 0.0496434, 1, 0, 0.610285,0.00756278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940738,0.00292333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531852,-0.00442154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220682,-0.000634027) , 
17, 0.707679, 1, 0, 0.27006,-0.0241671) , 
17, 0.456852, 1, 0, 0.382639,-0.0178104) , 
15, 0.155594, 1, 0, 0.503653,-0.00432227)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991643,0.0116927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935966,-0.000706369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814334,-0.00451649) , 
10, 0.247436, 1, 0, 0.869979,-0.0240326) , 
6, 0.159826, 1, 0, 0.909924,-0.0129289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941051,-0.00116308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775124,0.00249385) , 
11, 0.551645, 1, 0, 0.876008,0.0118388) , 
14, 0.0812238, 1, 0, 0.897071,-0.00354258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597806,-0.00309508) , 
10, 0.631037, 1, 0, 0.856038,-0.0102224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326939,0.00132416) , 
17, 0.752457, 1, 0, 0.679795,0.00129723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100996,-0.00246931) , 
17, 1.06599, 1, 0, 0.514783,-0.0103535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434217,0.00147887) , 
11, 1.25776, 1, 0, 0.501714,-0.0032019)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976928,0.0042885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947067,-0.00426714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555644,-0.00487136) , 
11, 0.466763, 1, 0, 0.74476,-0.0438815) , 
10, 0.26242, 1, 0, 0.831094,-0.0243741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987892,0.00886177) , 
2, 0.0504828, 1, 0, 0.877076,-0.0128109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645396,0.00220697) , 
11, 0.712325, 1, 0, 0.831206,-0.00480526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260993,-0.00224778) , 
10, 0.608338, 1, 0, 0.661432,-0.0140042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689076,0.00403207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176702,0.00064273) , 
10, 0.544461, 1, 0, 0.294075,0.0231447) , 
11, 0.882446, 1, 0, 0.522476,4.77633e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567997,0.00339318) , 
14, 0.206664, 1, 0, 0.527062,0.00475505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387791,-0.00140652) , 
13, 1.22718, 1, 0, 0.499995,-0.00240189)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602787,0.00394919) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876769,-0.00474091) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936318,0.00223649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945694,-0.00284814) , 
4, 0.468165, 1, 0, 0.940984,0.00248485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959919,0.00762739) , 
16, 0.0902811, 1, 0, 0.947358,0.0137394) , 
2, 0.0347118, 1, 0, 0.928146,0.00149176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879514,0.00375381) , 
10, 0.54889, 1, 0, 0.917422,0.0100018) , 
4, 0.156677, 1, 0, 0.853315,0.023427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71836,-0.00389835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148665,-0.000563783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753083,0.0035832) , 
4, 0.113674, 1, 0, 0.245885,0.00206751) , 
7, 0.378938, 1, 0, 0.354081,-0.00722303) , 
16, 0.153481, 1, 0, 0.578697,0.00656705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265566,-0.00130391) , 
3, 0.864683, 1, 0, 0.50624,-0.00131762)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998074,0.0212105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991504,0.00377937) , 
13, 0.427811, 1, 0, 0.994015,0.0105452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780883,0.00139412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896163,-0.00688715) , 
4, 0.351524, 1, 0, 0.8439,-0.0117245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371047,-0.00274215) , 
8, 0.0258035, 1, 0, 0.611469,-0.02772) , 
3, 0.164796, 1, 0, 0.734841,-0.0153793) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567759,-0.00114004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373599,0.00365306) , 
16, 0.127058, 1, 0, 0.429988,0.0369539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136678,-0.000682862) , 
16, 0.33874, 1, 0, 0.303647,0.0167332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422064,-0.000681335) , 
13, 1.28053, 1, 0, 0.33738,0.00732591) , 
11, 0.800399, 1, 0, 0.505608,-0.00228421)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955686,0.00420703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90069,-0.00602046) , 
8, 0.0181954, 1, 0, 0.934694,-0.00205193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976041,0.014802) , 
7, 0.256661, 1, 0, 0.945727,0.0106829) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824821,-0.00207533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550515,-0.00558586) , 
15, 0.187137, 1, 0, 0.716879,-0.0447394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449717,0.000807271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125238,-0.00150976) , 
7, 0.490462, 1, 0, 0.201088,-0.0150281) , 
8, 0.03074, 1, 0, 0.371546,-0.0248471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550702,0.000635835) , 
14, 0.206664, 1, 0, 0.394166,-0.0206119) , 
10, 0.346075, 1, 0, 0.534844,-0.0126301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392089,0.000817948) , 
11, 1.11656, 1, 0, 0.497788,-0.00477547)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891947,-0.0028875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926805,0.0054943) , 
14, 0.0320121, 1, 0, 0.909295,0.00739586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553439,0.000801018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428246,-0.00190298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525732,0.00197136) , 
14, 0.106786, 1, 0, 0.474437,-0.00104606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798866,-0.000281806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2696,-0.00178199) , 
17, 0.678921, 1, 0, 0.365785,-0.0299684) , 
6, 0.266612, 1, 0, 0.401047,-0.020582) , 
9, 0.0162117, 1, 0, 0.424518,-0.0158663) , 
10, 0.329427, 1, 0, 0.550475,-0.00982227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365555,0.00113938) , 
9, 0.0590591, 1, 0, 0.509628,-0.00319627)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137695,-0.00263468) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646392,0.00352544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963039,-0.00215305) , 
4, 0.344374, 1, 0, 0.831193,0.010399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94655,0.00069837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384881,-0.00399325) , 
13, 0.65176, 1, 0, 0.621665,-0.0317326) , 
15, 0.0841139, 1, 0, 0.734553,-0.00903322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712374,0.00442112) , 
14, 0.167128, 1, 0, 0.73106,-0.00233998) , 
12, 0.0530965, 1, 0, 0.572659,-0.0114947) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245631,-0.00041294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861013,0.00273604) , 
1, 0.18975, 1, 0, 0.413931,0.00368927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396874,0.00158247) , 
11, 0.99888, 1, 0, 0.405356,0.0190073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731692,-0.00335259) , 
5, 0.0511492, 1, 0, 0.440372,0.0111338) , 
6, 0.34221, 1, 0, 0.504076,0.000236753)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859111,-0.00629611) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974644,0.0107351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576422,-0.00258168) , 
13, 0.529405, 1, 0, 0.770019,-0.00171571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672832,0.002678) , 
6, 0.238245, 1, 0, 0.735917,0.00872623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917276,-0.0112646) , 
12, 0.215653, 1, 0, 0.777069,-0.0012095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729245,0.00487863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543498,0.000166585) , 
13, 0.843122, 1, 0, 0.613116,0.0266839) , 
6, 0.35502, 1, 0, 0.712553,0.00976665) , 
16, 0.0540007, 1, 0, 0.736505,0.00121401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107604,-0.00204843) , 
17, 0.9669, 1, 0, 0.505363,-0.0112386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368436,0.000710702) , 
11, 1.1207, 1, 0, 0.469836,-0.00432279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848391,-0.00581485) , 
12, 0.333285, 1, 0, 0.49116,-0.00671662)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782799,0.00391564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969518,-0.014401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929724,0.0019954) , 
13, 0.592912, 1, 0, 0.94597,0.000693026) , 
1, 0.206588, 1, 0, 0.896671,0.0164324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926092,0.0034546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242588,-0.001739) , 
10, 0.429316, 1, 0, 0.469717,-0.0155758) , 
16, 0.162002, 1, 0, 0.687651,0.000762425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90036,-0.0106603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935441,-0.00818765) , 
5, 0.0521398, 1, 0, 0.917969,-0.0323477) , 
1, 0.478917, 1, 0, 0.736397,-0.00624529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170032,-0.0020401) , 
3, 0.647121, 1, 0, 0.528528,-0.0168538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404713,0.000967462) , 
11, 1.1339, 1, 0, 0.499199,-0.0079168)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126489,-0.00199258) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966047,-0.00347991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870779,0.00470509) , 
17, 0.482336, 1, 0, 0.927247,0.0167756) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843386,-0.0029483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806252,0.00146679) , 
7, 0.0622435, 1, 0, 0.823164,-0.00192726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676864,-0.00704115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586083,-0.00121608) , 
10, 0.375907, 1, 0, 0.630123,-0.0582264) , 
7, 0.176357, 1, 0, 0.740436,-0.0260545) , 
10, 0.258803, 1, 0, 0.808809,-0.0103786) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170958,0.00108108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495766,-0.00156825) , 
4, 0.0888274, 1, 0, 0.244639,0.00586422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785683,0.00503955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780118,0.00177542) , 
5, 0.0365067, 1, 0, 0.782529,0.0538988) , 
5, 0.0209869, 1, 0, 0.398478,0.0196023) , 
10, 0.50767, 1, 0, 0.597402,0.0050679) , 
12, 0.0520564, 1, 0, 0.501057,-0.00199321)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112622,-0.00231691) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498116,-0.000518567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620562,0.00277437) , 
5, 0.0172145, 1, 0, 0.562436,0.0192038) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955901,-0.0107476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878978,0.00470611) , 
6, 0.276245, 1, 0, 0.916852,0.0184238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987082,0.00203296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831394,-0.00438145) , 
3, 0.224676, 1, 0, 0.914113,-0.0182541) , 
12, 0.203684, 1, 0, 0.915462,-0.000182155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71023,-0.00389248) , 
8, 0.0358071, 1, 0, 0.876155,-0.0113965) , 
5, 0.0243877, 1, 0, 0.769702,-0.001013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657824,-0.00272933) , 
14, 0.137359, 1, 0, 0.750651,-0.00713484) , 
2, 0.00304846, 1, 0, 0.493656,-0.0185833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423369,0.000734568) , 
11, 1.2673, 1, 0, 0.482528,-0.012977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613063,0.00300673) , 
14, 0.250191, 1, 0, 0.489723,-0.00987945)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388739,6.96756e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925046,-0.0128492) , 
12, 0.173016, 1, 0, 0.593276,-0.0125016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994473,0.0147359) , 
2, 0.0446125, 1, 0, 0.708877,-0.00481594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843638,-0.000719919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309932,-0.00471871) , 
10, 0.378398, 1, 0, 0.543587,-0.0471039) , 
6, 0.290571, 1, 0, 0.64146,-0.0220639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506098,0.000463498) , 
13, 1.17382, 1, 0, 0.608724,-0.0142926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50578,0.00204784) , 
15, 0.127761, 1, 0, 0.597047,-0.00920939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310348,-0.00271196) , 
15, 0.158929, 1, 0, 0.535739,-0.017584) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911849,0.00271027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485901,-0.00223781) , 
13, 0.538401, 1, 0, 0.64389,-0.017166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27493,0.000996767) , 
11, 0.781895, 1, 0, 0.424049,0.0040803) , 
14, 0.114986, 1, 0, 0.49707,-0.0100835)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978215,-0.0048879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980379,0.00906744) , 
17, 0.245963, 1, 0, 0.979325,0.00869545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595499,-0.00211993) , 
3, 0.401444, 1, 0, 0.825207,-0.0120307) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982798,0.00951484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398656,-0.00240304) , 
3, 0.249247, 1, 0, 0.676742,-0.0162216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642301,0.00440533) , 
11, 0.845092, 1, 0, 0.664383,0.0166077) , 
7, 0.214492, 1, 0, 0.763587,-0.00105796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187456,0.00072978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645451,0.0037255) , 
5, 0.0173334, 1, 0, 0.323526,0.0296929) , 
10, 0.635213, 1, 0, 0.611854,0.00954495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187762,-0.000990748) , 
17, 1.17246, 1, 0, 0.505463,0.00256939)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994005,0.0163662) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822808,0.000385046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898617,-0.00595987) , 
5, 0.0500893, 1, 0, 0.850767,-0.0089477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83232,0.00384954) , 
10, 0.407913, 1, 0, 0.844599,0.00761896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658439,-0.00373237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643724,-0.00242295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459511,0.000760085) , 
7, 0.127562, 1, 0, 0.539729,-0.00787397) , 
9, 0.0378836, 1, 0, 0.566456,-0.019087) , 
9, 0.031288, 1, 0, 0.678372,-0.00834139) , 
13, 0.476142, 1, 0, 0.71438,-0.00428662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255128,0.00146098) , 
7, 0.433724, 1, 0, 0.592729,0.00334766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15334,-0.00200643) , 
16, 0.358121, 1, 0, 0.50762,-0.00291016)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607955,-0.00402603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583949,0.000767048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495324,-0.00156269) , 
16, 0.105778, 1, 0, 0.528091,-0.0135732) , 
8, 0.0178132, 1, 0, 0.558726,-0.0330719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911142,0.00322125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878929,-0.00615901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949043,-0.00588035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852577,0.00266164) , 
17, 0.347352, 1, 0, 0.901674,0.00847417) , 
9, 0.021118, 1, 0, 0.890879,-0.0137732) , 
12, 0.188441, 1, 0, 0.894944,-0.00574771) , 
12, 0.159289, 1, 0, 0.734923,-0.0187525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770476,0.00416361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228463,0.000755203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13091,-0.00118875) , 
3, 0.675744, 1, 0, 0.162075,-0.00907167) , 
10, 0.476403, 1, 0, 0.254455,2.03331e-05) , 
7, 0.336703, 1, 0, 0.49712,-0.00946107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636234,0.00444148) , 
14, 0.241746, 1, 0, 0.504175,-0.00596301)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994191,0.0171673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998851,0.0172154) , 
2, 0.0316315, 1, 0, 0.996914,0.0118024) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56478,-0.00725162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463074,-0.00148634) , 
9, 0.031223, 1, 0, 0.495513,-0.0435177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891953,-0.00245779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944467,0.00232678) , 
12, 0.178955, 1, 0, 0.918356,-0.00304648) , 
2, 0.0360635, 1, 0, 0.660784,-0.0276993) , 
3, 0.154937, 1, 0, 0.770562,-0.0147983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209542,-0.00148269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41291,0.00163378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729222,-0.000834756) , 
5, 0.0371787, 1, 0, 0.496999,0.0197927) , 
6, 0.324387, 1, 0, 0.424542,0.00913479) , 
11, 0.768907, 1, 0, 0.606631,-0.0034597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181732,-0.00132715) , 
17, 1.14874, 1, 0, 0.495214,-0.00895929)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995045,0.0133833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961892,-0.00511225) , 
13, 0.66187, 1, 0, 0.983161,0.00424318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931084,0.00441476) , 
6, 0.226713, 1, 0, 0.965366,0.0117807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535854,-0.00467665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44298,0.00125401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243507,-0.00115378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149972,-0.00022831) , 
8, 0.0526912, 1, 0, 0.193618,-0.0131791) , 
3, 0.621702, 1, 0, 0.24734,-0.00568665) , 
13, 0.584458, 1, 0, 0.277954,-0.0116345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708888,-0.00252992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679956,-0.00421698) , 
16, 0.116329, 1, 0, 0.695017,-0.0575877) , 
5, 0.0361053, 1, 0, 0.339168,-0.0183792) , 
17, 0.468984, 1, 0, 0.485994,-0.0113076)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135941,-0.00173999) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968685,0.00805271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949243,-0.00602078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975863,0.00282854) , 
16, 0.0551712, 1, 0, 0.966411,-0.00214128) , 
5, 0.0274362, 1, 0, 0.966964,0.00718572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686198,-0.00280626) , 
17, 0.461099, 1, 0, 0.913234,-0.00126975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711824,0.00316854) , 
11, 0.684016, 1, 0, 0.877435,0.00695598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456027,-0.00323957) , 
16, 0.255801, 1, 0, 0.808492,-0.00115753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393387,0.00034222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397233,0.00271187) , 
13, 0.977161, 1, 0, 0.395523,0.0302692) , 
11, 0.850571, 1, 0, 0.662751,0.00993325) , 
12, 0.0530965, 1, 0, 0.52723,0.000774707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403796,-0.00121305) , 
13, 1.22718, 1, 0, 0.502778,-0.00500046)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995051,0.0166688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994667,0.00733368) , 
2, 0.0421411, 1, 0, 0.994882,0.00834402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969479,-0.00783738) , 
8, 0.0218005, 1, 0, 0.987179,0.00342188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611107,-0.00291106) , 
3, 0.234837, 1, 0, 0.882934,-0.0060069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337839,0.00193529) , 
10, 0.631037, 1, 0, 0.767268,0.000584111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615286,-0.00549132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411119,-0.000914931) , 
9, 0.0380284, 1, 0, 0.488073,-0.0301876) , 
6, 0.307027, 1, 0, 0.666083,-0.010568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266154,0.000813739) , 
11, 0.903332, 1, 0, 0.557657,-0.00426515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473911,-0.000354137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283224,-0.00258526) , 
9, 0.0352534, 1, 0, 0.359103,-0.0360897) , 
13, 1.01376, 1, 0, 0.485985,-0.015753)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141953,-0.00135369) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999217,0.0186414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995455,0.00720294) , 
2, 0.0384097, 1, 0, 0.997486,0.00777526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914875,-0.0113761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871466,-0.00112178) , 
17, 0.3, 1, 0, 0.888476,-0.0206668) , 
3, 0.154803, 1, 0, 0.934262,-0.00872072) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592806,-0.000672123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791777,0.00244207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577106,0.00380874) , 
15, 0.121939, 1, 0, 0.663589,0.0604657) , 
6, 0.332982, 1, 0, 0.644209,0.0414629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284882,0.000212551) , 
17, 0.962109, 1, 0, 0.434749,0.0198659) , 
17, 0.527607, 1, 0, 0.610292,0.00981974) , 
12, 0.0525379, 1, 0, 0.509657,0.00348876)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259074,0.000266366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0935664,-0.00143451) , 
10, 0.667271, 1, 0, 0.151435,-0.0114904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588054,0.00416987) , 
2, 0.00667032, 1, 0, 0.203273,-0.00270714) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999192,0.0178661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97586,-0.0199786) , 
4, 0.359708, 1, 0, 0.986651,-0.00254528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888414,-0.0169694) , 
3, 0.174455, 1, 0, 0.948312,-0.0245102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672204,0.00102814) , 
3, 0.342202, 1, 0, 0.869158,-0.0125816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59499,-0.00347245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458969,-0.00099285) , 
7, 0.183634, 1, 0, 0.515857,-0.0447734) , 
13, 0.923245, 1, 0, 0.708361,-0.027233) , 
2, 0.0154639, 1, 0, 0.479472,-0.0161187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933677,0.00509382) , 
2, 0.060667, 1, 0, 0.504116,-0.0134999)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991652,0.00554165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962746,0.00691278) , 
6, 0.206686, 1, 0, 0.97838,0.0150939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950271,-0.00513332) , 
16, 0.100446, 1, 0, 0.966265,0.0030564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902424,0.00390269) , 
10, 0.499332, 1, 0, 0.951138,0.0095802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517033,-0.00200452) , 
17, 0.553548, 1, 0, 0.863927,0.000712588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51814,0.003118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794141,4.79321e-05) , 
12, 0.148831, 1, 0, 0.610242,0.0432817) , 
11, 0.808931, 1, 0, 0.783517,0.0142056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261291,-0.00128029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13206,-0.000636304) , 
17, 0.99821, 1, 0, 0.162721,-0.0126147) , 
7, 0.513995, 1, 0, 0.562692,0.00466531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254947,-0.00152229) , 
3, 0.88684, 1, 0, 0.497845,-0.00307531)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341027,0.00126662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808776,-0.00312472) , 
4, 0.108055, 1, 0, 0.484055,0.00524206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137491,-0.00131239) , 
17, 0.993533, 1, 0, 0.280209,-0.0109003) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606821,-0.000314406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882114,0.00550924) , 
4, 0.207743, 1, 0, 0.779421,0.0410302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927576,0.00233864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915633,0.00171651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832814,-0.00564904) , 
2, 0.051957, 1, 0, 0.877316,-0.0176258) , 
14, 0.0319168, 1, 0, 0.896578,-0.00588837) , 
4, 0.314625, 1, 0, 0.853883,0.01121) , 
5, 0.0210614, 1, 0, 0.495805,-0.00259087)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497102,-0.00156049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510375,0.0023267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485282,0.00293479) , 
14, 0.0681293, 1, 0, 0.496699,0.0421947) , 
16, 0.159657, 1, 0, 0.496906,0.00365245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144304,-0.00168329) , 
10, 0.61129, 1, 0, 0.273825,-0.0165373) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999319,0.0194515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999352,0.01726) , 
12, 0.232706, 1, 0, 0.999336,0.00852313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964758,-0.00630614) , 
3, 0.157331, 1, 0, 0.987601,0.00238019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938083,0.00577457) , 
3, 0.247888, 1, 0, 0.974813,0.0100186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838848,-0.0058916) , 
6, 0.380784, 1, 0, 0.947235,-0.00208387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759703,0.00219358) , 
3, 0.54384, 1, 0, 0.893386,0.0111285) , 
4, 0.217177, 1, 0, 0.50289,-0.00630866)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979373,-0.00153893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984332,0.00820002) , 
17, 0.226639, 1, 0, 0.981529,0.00638492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806858,-0.00754109) , 
17, 0.339978, 1, 0, 0.93025,-0.0120567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75273,0.00354495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612928,-0.000843438) , 
13, 0.854101, 1, 0, 0.692968,0.0159012) , 
11, 0.554425, 1, 0, 0.838694,-0.00126904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577671,0.00352708) , 
11, 0.910388, 1, 0, 0.797321,0.00937699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450156,-0.00162663) , 
13, 1.21002, 1, 0, 0.709773,-0.00320547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433125,0.00145569) , 
10, 0.70165, 1, 0, 0.658454,0.00264115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130368,-0.000971717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462695,-0.00297356) , 
5, 0.0163698, 1, 0, 0.204446,-0.0223186) , 
16, 0.255801, 1, 0, 0.499944,-0.00607315)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804976,0.0034027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989842,0.00224011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926756,-0.0111747) , 
6, 0.173726, 1, 0, 0.966535,-0.0104354) , 
5, 0.0274362, 1, 0, 0.913923,-0.000252505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798499,-0.00984054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586263,-0.000805252) , 
10, 0.426835, 1, 0, 0.689346,-0.0456311) , 
6, 0.268491, 1, 0, 0.841668,-0.0148526) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296949,0.00221733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203093,-0.000338709) , 
13, 0.79357, 1, 0, 0.22848,0.00492845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734372,0.00255626) , 
12, 0.101076, 1, 0, 0.356972,0.0167954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76222,-0.00175642) , 
4, 0.368901, 1, 0, 0.406604,0.0115432) , 
11, 0.704741, 1, 0, 0.584549,0.000747104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180591,-0.00138977) , 
10, 0.806628, 1, 0, 0.501105,-0.00430102)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844825,0.000497192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541072,-0.00154833) , 
13, 0.85369, 1, 0, 0.691889,-0.0111418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590912,-0.00876941) , 
9, 0.0118372, 1, 0, 0.65351,-0.0405732) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917336,-0.00426138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938981,0.00341252) , 
7, 0.0728519, 1, 0, 0.926938,-0.00361223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912919,0.00555218) , 
14, 0.136738, 1, 0, 0.922339,0.0106415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678367,0.00120209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402994,-0.00320865) , 
6, 0.245051, 1, 0, 0.535889,-0.0215144) , 
7, 0.185773, 1, 0, 0.749923,-0.00370503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289208,0.00171702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562291,0.00364314) , 
6, 0.47263, 1, 0, 0.430813,0.0461253) , 
11, 0.807412, 1, 0, 0.643412,0.012927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252326,-0.000459066) , 
3, 0.715827, 1, 0, 0.474068,0.00341891) , 
9, 0.0163163, 1, 0, 0.504856,-0.00412903)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996936,0.0178978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679095,-0.00141215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500311,-0.00363938) , 
15, 0.0715798, 1, 0, 0.609863,-0.0246502) , 
3, 0.175181, 1, 0, 0.773057,-0.00989858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64383,0.00255623) , 
15, 0.125884, 1, 0, 0.737865,-0.000965351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784865,0.00353224) , 
13, 0.907314, 1, 0, 0.747191,0.00749984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503149,-0.00179262) , 
15, 0.200627, 1, 0, 0.69742,0.000873738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498089,0.00223549) , 
15, 0.292343, 1, 0, 0.660932,0.00695925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177626,-0.00139427) , 
3, 0.744771, 1, 0, 0.52369,-0.00178602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437484,0.00128129) , 
11, 1.29291, 1, 0, 0.511095,0.00280365)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985773,0.00707615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950371,-0.00142103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86046,-0.00543479) , 
16, 0.0827532, 1, 0, 0.905432,-0.0140333) , 
10, 0.260458, 1, 0, 0.939579,-0.00366127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690624,0.00208904) , 
6, 0.430105, 1, 0, 0.854813,0.010805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619093,-0.00233614) , 
8, 0.0351935, 1, 0, 0.81381,0.00222569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401108,0.00221694) , 
8, 0.0417424, 1, 0, 0.683908,0.0133595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169315,-0.00174314) , 
16, 0.383701, 1, 0, 0.58654,0.00624789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258932,-0.000640413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642434,-0.006303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868774,-0.00128921) , 
4, 0.267098, 1, 0, 0.754357,-0.0589006) , 
4, 0.0966095, 1, 0, 0.491602,-0.0340986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225769,8.49217e-05) , 
10, 0.730879, 1, 0, 0.370998,-0.0179668) , 
15, 0.174167, 1, 0, 0.496159,-0.00390574)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14481,-0.00114538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253466,0.00119949) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785164,-0.00162113) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943034,-0.00680018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983432,0.00926378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936256,-0.00227641) , 
16, 0.0773607, 1, 0, 0.963069,0.0115814) , 
15, 0.0436947, 1, 0, 0.955999,0.000980966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815965,0.00322083) , 
11, 0.781813, 1, 0, 0.923411,0.013112) , 
12, 0.134971, 1, 0, 0.892869,0.00554611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620215,-0.00262477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716695,-0.000582998) , 
2, 0.0280136, 1, 0, 0.680414,-0.0263208) , 
8, 0.0327103, 1, 0, 0.822829,-0.00495951) , 
4, 0.10792, 1, 0, 0.602884,0.00533093) , 
12, 0.0525379, 1, 0, 0.506786,0.000751776)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945907,-0.00151836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965258,0.00784945) , 
14, 0.0855057, 1, 0, 0.95265,0.00363066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900904,0.00666473) , 
13, 0.708204, 1, 0, 0.938938,0.00921473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320394,-0.00156029) , 
10, 0.585497, 1, 0, 0.793365,0.00251693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651946,-0.00441379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391487,-0.000773478) , 
11, 0.705309, 1, 0, 0.500689,-0.0300739) , 
6, 0.27782, 1, 0, 0.654521,-0.0129441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521647,-0.000978999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162051,-0.000324761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397924,0.00291407) , 
6, 0.486562, 1, 0, 0.267555,0.0235503) , 
7, 0.274847, 1, 0, 0.345468,0.00938235) , 
11, 0.917552, 1, 0, 0.513423,-0.00275096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335323,-0.00212918) , 
15, 0.36451, 1, 0, 0.494636,-0.00655688)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625846,0.00217194) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953773,0.00033225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943107,0.00700146) , 
10, 0.332005, 1, 0, 0.949523,0.0156486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924085,0.00186235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868691,-0.00391501) , 
8, 0.0117603, 1, 0, 0.890989,-0.0120643) , 
9, 0.0281573, 1, 0, 0.920562,0.001937) , 
4, 0.156677, 1, 0, 0.850859,0.00923921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293417,-0.00159987) , 
17, 0.868134, 1, 0, 0.673227,-0.00434687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283952,0.00201396) , 
8, 0.0545847, 1, 0, 0.590446,0.00394908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16602,-0.00161571) , 
10, 0.806628, 1, 0, 0.500898,-0.00257791)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.19817,0.00141596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148497,-0.000972732) , 
9, 0.0367118, 1, 0, 0.166667,-0.00245874) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941955,0.00339131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783682,-0.00292577) , 
7, 0.149951, 1, 0, 0.8512,-0.00818727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605527,0.00416572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48632,0.00121239) , 
11, 0.911297, 1, 0, 0.520139,0.0412538) , 
11, 0.726429, 1, 0, 0.658945,0.0205243) , 
2, 0.0116316, 1, 0, 0.394602,0.00818286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74697,-0.00377099) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970816,-0.00865595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883665,0.00223394) , 
17, 0.259905, 1, 0, 0.926153,0.00624282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810447,-0.00312815) , 
7, 0.12082, 1, 0, 0.876667,-0.0107751) , 
2, 0.0400889, 1, 0, 0.842531,-0.0217832) , 
5, 0.0365815, 1, 0, 0.506788,0.000677718)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988153,-0.00492413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94459,0.00372678) , 
3, 0.185985, 1, 0, 0.967929,0.00663046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572711,-0.00280361) , 
6, 0.405662, 1, 0, 0.785425,-0.0230695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135286,-0.00131124) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962924,0.00421343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675315,-0.00391785) , 
16, 0.192815, 1, 0, 0.831781,-0.00944378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645827,0.00263732) , 
15, 0.10491, 1, 0, 0.748966,0.00896008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610861,0.00294665) , 
6, 0.465566, 1, 0, 0.700004,0.0265722) , 
12, 0.0633964, 1, 0, 0.488017,0.00908903) , 
16, 0.0900011, 1, 0, 0.575217,-0.00033981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636052,0.00301105) , 
14, 0.207211, 1, 0, 0.580885,0.00335175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17379,-0.00169835) , 
17, 1.21827, 1, 0, 0.493154,-0.00407621)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891159,-0.00467602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866672,0.00744075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944497,-0.00053969) , 
5, 0.0345409, 1, 0, 0.909942,0.0214152) , 
9, 0.0151838, 1, 0, 0.902439,0.00535528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451694,0.00260956) , 
10, 0.566305, 1, 0, 0.767707,0.0139923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616446,-0.00235024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600934,0.00170644) , 
9, 0.0469396, 1, 0, 0.608171,-0.00159396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38801,-0.00249906) , 
15, 0.235803, 1, 0, 0.507887,-0.0199655) , 
9, 0.035199, 1, 0, 0.630266,-0.00397085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539103,0.00164049) , 
11, 1.13007, 1, 0, 0.616108,0.00222861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176992,-0.00166049) , 
17, 1.17246, 1, 0, 0.507312,-0.00585494)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451493,-0.00359507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900061,-0.000988394) , 
2, 0.0335331, 1, 0, 0.670329,-0.0289838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886988,0.00379492) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834735,0.00270336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259871,-0.00233374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935673,-0.0107765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749656,0.00124925) , 
13, 0.707056, 1, 0, 0.839547,-0.00211231) , 
12, 0.0860604, 1, 0, 0.608709,-0.017366) , 
7, 0.142915, 1, 0, 0.688975,-0.000427148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398972,-0.0024786) , 
9, 0.0553799, 1, 0, 0.598608,-0.0153532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423565,-0.0020227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201316,0.00102671) , 
3, 0.528029, 1, 0, 0.235005,0.0093348) , 
8, 0.0406176, 1, 0, 0.417847,-0.00307988) , 
16, 0.0617911, 1, 0, 0.471005,0.000619133) , 
14, 0.017222, 1, 0, 0.496332,-0.00314237)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174595,-0.00151389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166754,-0.000164916) , 
9, 0.0326327, 1, 0, 0.16902,-0.00899324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541718,0.00163411) , 
1, 0.0856273, 1, 0, 0.224542,-0.00256515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614706,-0.002478) , 
1, 0.145567, 1, 0, 0.266446,-0.00784396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926371,0.00150195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895463,-0.00801697) , 
15, 0.0797313, 1, 0, 0.914538,-0.00925194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901576,0.00314923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80769,0.00400375) , 
6, 0.390413, 1, 0, 0.846506,0.053147) , 
10, 0.406498, 1, 0, 0.883852,0.0188928) , 
1, 0.20622, 1, 0, 0.455592,0.000346999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984874,-0.00464512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763663,-0.00731569) , 
3, 0.216171, 1, 0, 0.871072,-0.0436398) , 
1, 0.500823, 1, 0, 0.499071,-0.00425615)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950108,0.00827203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95894,-0.0087931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976413,0.00434803) , 
10, 0.194923, 1, 0, 0.968155,-0.00348388) , 
1, 0.276437, 1, 0, 0.961529,0.0148664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560545,-0.00541142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700739,-0.0034905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21876,0.000471658) , 
8, 0.0301021, 1, 0, 0.351955,-0.00481457) , 
13, 0.64897, 1, 0, 0.394055,-0.0162325) , 
10, 0.320697, 1, 0, 0.562982,-0.00697493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582228,0.002976) , 
14, 0.189442, 1, 0, 0.56549,-0.00126967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691621,0.00280041) , 
13, 1.10325, 1, 0, 0.579198,0.00463115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258289,-0.00110659) , 
3, 0.864683, 1, 0, 0.500381,-0.00225567)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791772,0.00498102) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990427,0.0048562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934384,-0.0142687) , 
3, 0.125882, 1, 0, 0.96158,-0.0140318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932929,0.00407615) , 
6, 0.238658, 1, 0, 0.95274,-0.0028303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304009,-0.00385454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156475,-0.00065337) , 
8, 0.0483428, 1, 0, 0.208022,-0.0268149) , 
17, 0.54674, 1, 0, 0.527289,-0.0165325) , 
9, 0.00717313, 1, 0, 0.556793,-0.0115061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278187,-9.69325e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72383,0.0025721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791874,0.000553149) , 
4, 0.359017, 1, 0, 0.752589,0.0354105) , 
2, 0.0209869, 1, 0, 0.443265,0.0110275) , 
6, 0.434725, 1, 0, 0.508116,-0.00184442)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757623,0.00333704) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963618,0.00569175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933767,-0.00614598) , 
4, 0.382691, 1, 0, 0.946503,-0.00210009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886683,-0.00518358) , 
14, 0.113402, 1, 0, 0.930455,-0.0104353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972324,0.00787297) , 
0, 0.324238, 1, 0, 0.937941,-0.00335065) , 
12, 0.10381, 1, 0, 0.904724,0.00493413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190547,-0.00146912) , 
17, 0.716588, 1, 0, 0.654998,-0.00553144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783538,0.00528267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252743,0.000409561) , 
10, 0.486578, 1, 0, 0.383928,0.0269736) , 
11, 0.918896, 1, 0, 0.574762,0.00408997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24828,-0.00154518) , 
3, 0.851366, 1, 0, 0.494623,-0.00484569)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37677,-0.000104941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276413,-0.00294668) , 
9, 0.0184041, 1, 0, 0.311117,-0.0289301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256485,-0.000101143) , 
9, 0.0391101, 1, 0, 0.281642,-0.0142002) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982813,0.00951646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994635,0.0064074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886178,-0.00839669) , 
3, 0.155544, 1, 0, 0.93016,-0.0230612) , 
9, 0.0185145, 1, 0, 0.951111,-0.00707393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765866,0.00248221) , 
3, 0.458321, 1, 0, 0.894085,0.00882768) , 
2, 0.0202766, 1, 0, 0.524554,-0.00506671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426087,0.00127361) , 
11, 1.23409, 1, 0, 0.507958,0.000664046)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204271,-0.0012787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11575,-0.000154549) , 
16, 0.308956, 1, 0, 0.160951,-0.0128284) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978943,-0.00196204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827846,0.0025146) , 
16, 0.1279, 1, 0, 0.911546,0.00649571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675944,-0.00419002) , 
6, 0.2478, 1, 0, 0.847652,-0.00800427) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563401,0.00149215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773151,-0.00154733) , 
12, 0.161132, 1, 0, 0.651628,0.009216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58251,0.00237685) , 
9, 0.0427482, 1, 0, 0.621674,0.0275591) , 
6, 0.341569, 1, 0, 0.725712,0.0111861) , 
12, 0.0701653, 1, 0, 0.474,0.000482878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83575,-0.00663066) , 
5, 0.0588662, 1, 0, 0.497558,-0.00305038)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893397,-0.0115163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982957,0.00794945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949893,-0.00464109) , 
12, 0.245471, 1, 0, 0.971478,0.00546325) , 
2, 0.0335331, 1, 0, 0.946755,-0.0106588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883918,0.00421744) , 
15, 0.23429, 1, 0, 0.933261,-0.000883952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656156,-0.00496924) , 
17, 0.575407, 1, 0, 0.889659,-0.0120368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467241,0.001779) , 
17, 0.698713, 1, 0, 0.799992,-0.00295918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662061,0.00175736) , 
13, 1.07892, 1, 0, 0.774298,0.0038138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262611,-0.00225657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177179,-0.000505304) , 
8, 0.0493396, 1, 0, 0.207757,-0.0228129) , 
17, 0.913705, 1, 0, 0.492785,-0.00941693)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99574,0.0159769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982264,-0.0223801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993447,0.0104584) , 
6, 0.146298, 1, 0, 0.987853,-0.00151385) , 
2, 0.0333016, 1, 0, 0.99108,0.0070486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800885,-0.00463969) , 
3, 0.228383, 1, 0, 0.94324,-0.00637241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411649,0.00251936) , 
17, 0.65511, 1, 0, 0.806515,0.00576771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869761,-0.000682692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721008,0.00300035) , 
11, 0.689627, 1, 0, 0.802414,0.0196604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239086,-0.00310195) , 
16, 0.130866, 1, 0, 0.503134,-0.0187232) , 
13, 0.776592, 1, 0, 0.669442,-0.00529772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521893,0.00195572) , 
11, 1.03036, 1, 0, 0.641445,0.00325511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177898,-0.00167059) , 
17, 1.11384, 1, 0, 0.492784,-0.00770872)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992271,0.0137898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993292,0.00342078) , 
5, 0.0346603, 1, 0, 0.99279,0.00737881) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602535,-0.00437147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455073,-0.00184329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380534,0.00230519) , 
9, 0.0189534, 1, 0, 0.417966,0.00424106) , 
13, 0.688209, 1, 0, 0.467871,-0.00770275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325854,-0.00217543) , 
9, 0.0371779, 1, 0, 0.407467,-0.0168503) , 
3, 0.167398, 1, 0, 0.581567,-0.0096435) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761398,0.000121714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442884,0.00438764) , 
8, 0.0291523, 1, 0, 0.551409,0.0461945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344678,-0.000112439) , 
14, 0.0987393, 1, 0, 0.44235,0.0207402) , 
6, 0.35496, 1, 0, 0.52278,0.00318662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39127,-0.0012562) , 
13, 1.23404, 1, 0, 0.498021,-0.00288484)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995777,0.0156714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772688,-0.00401214) , 
3, 0.123801, 1, 0, 0.886511,-0.00740182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967619,0.00382149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860772,0.00702767) , 
11, 0.474584, 1, 0, 0.907711,0.0340838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510624,-0.00151609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385975,0.00125211) , 
11, 0.763545, 1, 0, 0.445286,-0.000543122) , 
11, 0.656175, 1, 0, 0.685423,0.0174386) , 
6, 0.166336, 1, 0, 0.755473,0.00878537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285538,-0.00251737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226989,-0.000509052) , 
15, 0.0736353, 1, 0, 0.250781,-0.0195546) , 
11, 0.875186, 1, 0, 0.572431,-0.00149296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380225,-0.00258253) , 
9, 0.0532139, 1, 0, 0.524435,-0.0106148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414228,0.00092997) , 
6, 0.606304, 1, 0, 0.494114,-0.00205176)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926926,-0.0229443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617078,0.000812635) , 
16, 0.176817, 1, 0, 0.77848,-0.0195124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74495,0.0028159) , 
6, 0.273619, 1, 0, 0.7654,-3.83232e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248254,-0.00131262) , 
3, 0.656615, 1, 0, 0.504061,-0.0128507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981997,0.00378583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857888,0.00284622) , 
17, 0.374893, 1, 0, 0.921715,0.0198423) , 
2, 0.0495716, 1, 0, 0.588322,-0.00625499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499123,0.00205621) , 
9, 0.0421287, 1, 0, 0.566294,0.00304423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322916,-0.00286235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287111,-0.000918722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60442,0.000827058) , 
14, 0.256276, 1, 0, 0.361152,-0.00999609) , 
15, 0.270236, 1, 0, 0.350133,-0.0206466) , 
15, 0.222614, 1, 0, 0.500603,-0.00415536)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907943,-0.00408436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533934,0.00364749) , 
11, 0.722004, 1, 0, 0.718201,0.0212056) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29776,0.000840876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917833,-0.00641546) , 
2, 0.0314912, 1, 0, 0.528537,-0.00183501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400053,-0.00186535) , 
6, 0.367726, 1, 0, 0.46004,-0.0202025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915855,0.00338352) , 
0, 0.250883, 1, 0, 0.531565,-0.0131696) , 
9, 0.0161836, 1, 0, 0.584242,-0.00346743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715755,0.000938686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744623,0.00444108) , 
15, 0.166734, 1, 0, 0.731948,0.0399983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220648,0.000171905) , 
16, 0.19273, 1, 0, 0.462966,0.0202755) , 
14, 0.0878103, 1, 0, 0.543968,0.00441728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568438,-0.00247806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204387,-0.000971791) , 
16, 0.127346, 1, 0, 0.33133,-0.0251749) , 
15, 0.248809, 1, 0, 0.48974,-0.00312939)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702365,0.000836723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99065,0.00725931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866787,-0.0098496) , 
11, 0.442814, 1, 0, 0.922196,-0.0265284) , 
5, 0.0333238, 1, 0, 0.83097,-0.0125837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676126,0.00360562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685588,0.00369494) , 
14, 0.105095, 1, 0, 0.68085,0.0361911) , 
14, 0.0798775, 1, 0, 0.785484,0.00219495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518228,-0.00270624) , 
14, 0.135792, 1, 0, 0.735822,-0.00484091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787017,0.00380183) , 
14, 0.203706, 1, 0, 0.741425,-0.000375364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480384,0.00301015) , 
11, 0.933771, 1, 0, 0.710601,0.00514319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158258,-0.00225196) , 
3, 0.684126, 1, 0, 0.534035,-0.00872609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386788,0.00106509) , 
11, 1.1339, 1, 0, 0.49955,-0.00135503)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988502,0.00758858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931766,-0.00605871) , 
17, 0.294577, 1, 0, 0.965172,-0.00155648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860405,0.00297736) , 
11, 0.576674, 1, 0, 0.930316,0.00766074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782699,-0.00285513) , 
14, 0.108128, 1, 0, 0.900339,0.000892226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915377,0.00740519) , 
14, 0.167128, 1, 0, 0.902912,0.00881969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440822,-0.000922066) , 
8, 0.0369786, 1, 0, 0.783618,0.00311591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503368,0.00260517) , 
11, 0.89123, 1, 0, 0.733402,0.00962065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13,-0.00208125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365962,-5.4857e-05) , 
6, 0.537269, 1, 0, 0.254042,-0.0155589) , 
3, 0.656615, 1, 0, 0.501641,-0.00255316)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899823,0.00109549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772168,-0.00986824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569313,-0.000874859) , 
11, 0.558925, 1, 0, 0.670628,-0.0415337) , 
16, 0.101281, 1, 0, 0.762271,-0.0220941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9911,0.00601298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935042,0.00432471) , 
3, 0.246169, 1, 0, 0.970063,0.0132019) , 
2, 0.0360592, 1, 0, 0.85799,-0.00583513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870914,0.00797588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481405,0.000761832) , 
3, 0.535259, 1, 0, 0.59025,0.0321597) , 
11, 0.717391, 1, 0, 0.753789,0.00895191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123903,-0.00164665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354142,0.000334436) , 
11, 1.20371, 1, 0, 0.207652,-0.0140154) , 
17, 0.964466, 1, 0, 0.504971,-0.00151193)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985005,0.00334853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991562,0.0138779) , 
15, 0.157837, 1, 0, 0.987353,0.0138687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966667,-0.00535287) , 
12, 0.245579, 1, 0, 0.980701,0.00681648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555778,-0.00260563) , 
3, 0.312069, 1, 0, 0.838142,-0.00942697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629102,-0.00117967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361816,-0.000408789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661441,0.00577512) , 
6, 0.343129, 1, 0, 0.52935,0.0470176) , 
16, 0.105999, 1, 0, 0.56593,0.0216822) , 
11, 0.723392, 1, 0, 0.735413,0.00231317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133156,-0.00159462) , 
17, 0.978024, 1, 0, 0.509246,-0.00821497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446503,0.00146662) , 
11, 1.31766, 1, 0, 0.500309,-0.00214418)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94754,0.00129579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932036,0.00138037) , 
15, 0.0319679, 1, 0, 0.939757,0.00582497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91569,0.00557762) , 
15, 0.0905778, 1, 0, 0.931532,0.0166518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756896,-0.00391456) , 
15, 0.164986, 1, 0, 0.876799,-0.00246736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677705,0.00341545) , 
15, 0.30051, 1, 0, 0.833603,0.00937073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468455,-0.00302654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166943,-0.000219007) , 
13, 0.710241, 1, 0, 0.255286,-0.013047) , 
7, 0.308356, 1, 0, 0.518381,-0.00284846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401702,0.00189157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314394,0.000696011) , 
15, 0.115507, 1, 0, 0.350778,0.0239445) , 
11, 1.05711, 1, 0, 0.467243,0.00532644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985319,0.00359305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730889,-0.00458582) , 
13, 0.857701, 1, 0, 0.850161,-0.0351653) , 
5, 0.0541579, 1, 0, 0.508596,0.000953561)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136801,-0.00156888) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996755,0.0124563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931776,-0.00696371) , 
3, 0.154493, 1, 0, 0.968579,-0.00659106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927609,0.00444616) , 
13, 0.768139, 1, 0, 0.955052,0.0054508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695597,-0.00289054) , 
17, 0.473845, 1, 0, 0.901099,-0.00431681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660594,0.00390729) , 
7, 0.294914, 1, 0, 0.86411,0.00484202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484876,-0.00345728) , 
16, 0.252588, 1, 0, 0.80337,-0.00354917) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561534,0.00371913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75009,-0.000363385) , 
5, 0.0353572, 1, 0, 0.635187,0.0444134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315675,0.000159605) , 
17, 1.01038, 1, 0, 0.449365,0.0205566) , 
11, 0.867099, 1, 0, 0.643843,0.00731375) , 
12, 0.0576521, 1, 0, 0.503017,-0.00112523)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189967,0.000135193) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889202,0.00522286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945121,0.00324976) , 
5, 0.0345409, 1, 0, 0.920575,0.0274598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760227,-0.000320595) , 
9, 0.0442944, 1, 0, 0.868848,0.0172518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395721,0.00367915) , 
17, 0.7911, 1, 0, 0.688157,0.0367314) , 
12, 0.0550312, 1, 0, 0.523485,0.0252222) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914255,0.00228696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913864,-0.00227324) , 
5, 0.0382568, 1, 0, 0.914035,0.000185807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899661,-0.00584447) , 
12, 0.274126, 1, 0, 0.907823,-0.0128532) , 
12, 0.175413, 1, 0, 0.655884,0.0121057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152249,-0.00140842) , 
10, 0.800038, 1, 0, 0.544968,0.00464849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354597,-0.00117711) , 
6, 0.745242, 1, 0, 0.509558,-0.00147145)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996048,0.0144294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976057,-0.000211329) , 
16, 0.0537722, 1, 0, 0.984677,0.0138909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973341,0.000478089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785142,-0.00449037) , 
3, 0.293224, 1, 0, 0.892767,-0.0215968) , 
17, 0.308589, 1, 0, 0.939918,-0.00339147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761914,0.00433573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644332,0.00104366) , 
16, 0.138554, 1, 0, 0.692398,0.0361891) , 
17, 0.524604, 1, 0, 0.861248,0.00918846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147442,-0.00122509) , 
17, 0.836094, 1, 0, 0.574038,-0.00225752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311402,0.00154856) , 
11, 1.06553, 1, 0, 0.523185,0.00348438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406393,-0.001625) , 
13, 1.28053, 1, 0, 0.503876,-0.00364)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936956,0.00526926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67004,-0.00199419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929313,-0.000152796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949652,0.00364784) , 
5, 0.0462474, 1, 0, 0.939587,0.00867967) , 
4, 0.265107, 1, 0, 0.83757,-0.00631592) , 
14, 0.031081, 1, 0, 0.866277,0.00324638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752189,0.0039554) , 
10, 0.566392, 1, 0, 0.8393,0.0150142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919342,0.00392569) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274351,-0.00358448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.101284,-0.00116196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359814,0.00110777) , 
4, 0.0145437, 1, 0, 0.175432,-0.00463829) , 
11, 0.722549, 1, 0, 0.188852,-0.0123103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686196,-0.00505002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705247,-0.000772419) , 
15, 0.114363, 1, 0, 0.695498,-0.0480382) , 
12, 0.121636, 1, 0, 0.290556,-0.0194824) , 
10, 0.254725, 1, 0, 0.350315,-0.0153957) , 
8, 0.0189738, 1, 0, 0.495912,-0.00634109)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977574,-0.00295356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966703,0.00769147) , 
10, 0.375233, 1, 0, 0.973193,0.00701288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949364,-0.00722725) , 
0, 0.288514, 1, 0, 0.96696,0.000495181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834568,-0.00924545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672174,-0.00121954) , 
8, 0.0298908, 1, 0, 0.749153,-0.0354599) , 
11, 0.543065, 1, 0, 0.887217,-0.0126686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445382,0.00208864) , 
3, 0.452135, 1, 0, 0.728558,0.00409184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177524,-0.00118945) , 
3, 0.658836, 1, 0, 0.519957,-0.00505599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432863,0.00147664) , 
11, 1.20429, 1, 0, 0.503387,0.00215066)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92698,-0.000620067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485504,0.00235597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797534,0.00128927) , 
2, 0.0291823, 1, 0, 0.593765,0.0421513) , 
13, 0.5634, 1, 0, 0.709429,0.0267545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961528,0.00469734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976893,-0.00634859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820209,-0.00435542) , 
11, 0.520338, 1, 0, 0.891254,-0.0263162) , 
7, 0.0351365, 1, 0, 0.91655,-0.00945422) , 
4, 0.342318, 1, 0, 0.793365,0.0120808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330336,0.00198914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402086,-0.00309279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638695,0.00153322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161627,-0.00152558) , 
7, 0.192401, 1, 0, 0.233703,-0.0175787) , 
10, 0.620882, 1, 0, 0.269146,-0.0256868) , 
14, 0.0512529, 1, 0, 0.279666,-0.0163484) , 
10, 0.529785, 1, 0, 0.503149,-0.00398038)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975741,-0.00901643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989036,0.00854262) , 
10, 0.219901, 1, 0, 0.983257,0.00130459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681187,-0.00258551) , 
3, 0.303869, 1, 0, 0.84571,-0.0194022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736423,0.00245195) , 
10, 0.487619, 1, 0, 0.821669,-0.00779182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492724,-0.00266758) , 
15, 0.189659, 1, 0, 0.747146,-0.0170718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752789,0.00252473) , 
14, 0.168066, 1, 0, 0.748049,-0.00980438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609798,0.00349424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220078,0.000388138) , 
10, 0.570538, 1, 0, 0.347535,0.0235512) , 
8, 0.0379476, 1, 0, 0.590648,0.00330429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156769,-0.0016104) , 
16, 0.358056, 1, 0, 0.503308,-0.00189079)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.310122,-0.00184789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0855648,-0.0019923) , 
17, 0.910062, 1, 0, 0.128849,-0.0293148) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998223,0.0145848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928373,-0.00386533) , 
6, 0.154032, 1, 0, 0.960503,-0.00396627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910345,0.0054555) , 
17, 0.382623, 1, 0, 0.947142,0.00893419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54409,-0.00132544) , 
6, 0.52392, 1, 0, 0.794633,-0.00587198) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90424,-0.000895694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347885,0.00288528) , 
10, 0.471499, 1, 0, 0.589634,0.0279285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337215,-0.00109425) , 
14, 0.12284, 1, 0, 0.51512,0.0140787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456545,0.00294578) , 
11, 1.12253, 1, 0, 0.496469,0.0293482) , 
7, 0.229542, 1, 0, 0.654005,0.0107395) , 
12, 0.0576521, 1, 0, 0.497179,-0.00122183)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963871,0.00191961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58871,-0.0031257) , 
17, 0.591685, 1, 0, 0.807854,-0.0207485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823027,0.00364212) , 
9, 0.0183798, 1, 0, 0.81413,0.00341647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412378,0.00514277) , 
10, 0.559338, 1, 0, 0.732024,0.0172148) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815941,0.000276986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590753,0.00414006) , 
6, 0.166851, 1, 0, 0.70592,0.0172264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457189,-0.00155618) , 
6, 0.25028, 1, 0, 0.577753,-0.00182624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637185,0.0032972) , 
15, 0.27255, 1, 0, 0.591976,0.00736189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376816,-0.00107167) , 
6, 0.510572, 1, 0, 0.496517,-0.00650018) , 
15, 0.0861214, 1, 0, 0.583123,0.00222081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166916,-0.00155362) , 
10, 0.815054, 1, 0, 0.496972,-0.00347609)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49967,-0.00155766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20986,0.000931475) , 
10, 0.48257, 1, 0, 0.273045,0.00533471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109136,-0.00146751) , 
16, 0.332487, 1, 0, 0.20798,-0.00428219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595682,0.00271281) , 
2, 0.0164926, 1, 0, 0.266629,0.00326443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449641,-0.00426412) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958179,-0.00927799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795095,0.00205038) , 
13, 0.740066, 1, 0, 0.881633,0.00789245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902976,-0.00469074) , 
1, 0.472805, 1, 0, 0.888349,-0.002142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705219,-0.0034721) , 
8, 0.0312858, 1, 0, 0.850978,-0.0134107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704395,0.00159728) , 
8, 0.0409123, 1, 0, 0.825619,-0.00574161) , 
2, 0.0223389, 1, 0, 0.758092,-0.0204171) , 
5, 0.0187484, 1, 0, 0.464887,-0.00628876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921842,0.0035603) , 
2, 0.0569643, 1, 0, 0.500098,-0.00397929)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821278,-0.00407632) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490473,-0.0012595) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98601,0.00535135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8657,0.00361374) , 
3, 0.334537, 1, 0, 0.935757,0.0227779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869044,-0.00167571) , 
16, 0.0955547, 1, 0, 0.915493,0.0117658) , 
1, 0.181988, 1, 0, 0.796105,0.00108921) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938564,0.00215949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411369,0.00520692) , 
17, 0.666238, 1, 0, 0.670094,0.0451898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312547,0.000519004) , 
13, 0.798807, 1, 0, 0.475484,0.0257101) , 
16, 0.152293, 1, 0, 0.66333,0.0112852) , 
9, 0.00391101, 1, 0, 0.679743,0.00686379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18866,-0.000889118) , 
17, 1.05521, 1, 0, 0.497074,-0.00160775)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920493,-0.00208791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986515,0.0074225) , 
2, 0.0416214, 1, 0, 0.952737,0.00122272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541432,-0.00322585) , 
11, 0.592153, 1, 0, 0.772655,-0.0289272) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885645,0.00321119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984203,0.00862033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45085,-0.00339059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181137,-0.00098134) , 
16, 0.230104, 1, 0, 0.275361,-0.0301705) , 
3, 0.218331, 1, 0, 0.408283,-0.0225251) , 
16, 0.112933, 1, 0, 0.466872,-0.0170513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378678,-0.000707705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328641,0.00185343) , 
9, 0.0244745, 1, 0, 0.344264,0.0206703) , 
11, 1.00247, 1, 0, 0.418824,-0.00226877) , 
7, 0.0974016, 1, 0, 0.497788,-0.00821812)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757937,0.00239084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913785,-0.0071617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990585,0.0124542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964123,-0.00356174) , 
12, 0.231523, 1, 0, 0.978114,0.00552821) , 
4, 0.309986, 1, 0, 0.95725,-0.00575249) , 
4, 0.161869, 1, 0, 0.914931,0.00201875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539625,-0.00211313) , 
13, 1.01376, 1, 0, 0.798328,-0.0136333) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681829,0.00233266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404317,-0.00150015) , 
6, 0.280643, 1, 0, 0.512197,-0.0080958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180387,0.000411653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727972,0.00265101) , 
4, 0.169915, 1, 0, 0.292328,0.0174652) , 
11, 0.800399, 1, 0, 0.367816,0.00868922) , 
10, 0.489032, 1, 0, 0.55886,-0.00121659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152938,-0.00185144) , 
16, 0.39784, 1, 0, 0.500558,-0.00464184)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504035,-0.00107451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908316,0.00371313) , 
5, 0.0179786, 1, 0, 0.696656,0.00527664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735981,0.00324818) , 
14, 0.135804, 1, 0, 0.710945,0.016747) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998904,0.0167382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973952,-0.0248287) , 
14, 0.0430528, 1, 0, 0.986576,-0.00280464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949972,0.0044779) , 
3, 0.202344, 1, 0, 0.972809,0.00686494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840842,-0.00456002) , 
17, 0.444717, 1, 0, 0.937304,-0.00507641) , 
4, 0.283987, 1, 0, 0.838181,0.00448013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336381,-0.00136182) , 
3, 0.67624, 1, 0, 0.664504,-0.00751926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483858,0.00346421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144637,-0.000148799) , 
16, 0.214408, 1, 0, 0.231704,0.0160693) , 
8, 0.0493396, 1, 0, 0.508792,0.00096738)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118691,-0.00198362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156216,-0.000509672) , 
12, 0.049044, 1, 0, 0.14088,-0.0164631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345575,0.000994736) , 
1, 0.0457552, 1, 0, 0.181363,-0.00930468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547345,-0.00259825) , 
4, 0.0954052, 1, 0, 0.242576,-0.0171712) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975462,0.00198126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771519,-0.0045118) , 
17, 0.424668, 1, 0, 0.878529,-0.024693) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956006,0.0056621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844072,0.000631344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813177,-0.00658729) , 
0, 0.199956, 1, 0, 0.829735,-0.026085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895288,0.00245656) , 
16, 0.121496, 1, 0, 0.851066,-0.0107517) , 
16, 0.0630519, 1, 0, 0.88483,0.00178392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79444,0.00417829) , 
7, 0.292347, 1, 0, 0.868253,0.013768) , 
15, 0.0312835, 1, 0, 0.871099,0.00311694) , 
4, 0.180211, 1, 0, 0.491903,-0.00912314)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862818,-0.00200576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806897,0.00484748) , 
14, 0.0984238, 1, 0, 0.837461,0.00838598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525424,-0.00344544) , 
6, 0.27426, 1, 0, 0.700127,-0.0178886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457396,0.00264057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194199,-0.000102434) , 
3, 0.563231, 1, 0, 0.231442,0.00462832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771121,0.00344603) , 
2, 0.0360635, 1, 0, 0.293114,0.0114414) , 
11, 0.731863, 1, 0, 0.402171,0.00358258) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987235,0.00513232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895626,-0.00344958) , 
11, 0.436858, 1, 0, 0.949877,-0.00436006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703245,-0.00342241) , 
11, 0.718722, 1, 0, 0.865801,-0.023331) , 
12, 0.192174, 1, 0, 0.503889,-0.00232209)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98693,-0.00528962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782179,0.00393963) , 
17, 0.396045, 1, 0, 0.874155,0.013213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605632,-0.00420103) , 
13, 0.684419, 1, 0, 0.779149,-0.00400037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737752,0.00601456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559569,0.00133666) , 
9, 0.0377764, 1, 0, 0.638504,0.0292723) , 
15, 0.159646, 1, 0, 0.727247,0.0082782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531317,-0.00234227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862452,0.000381167) , 
2, 0.0487754, 1, 0, 0.637507,-0.0312501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331971,0.00166276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25638,-0.000981395) , 
15, 0.0966714, 1, 0, 0.281592,-0.00249618) , 
10, 0.529344, 1, 0, 0.418297,-0.0135403) , 
13, 0.79331, 1, 0, 0.541707,-0.00482493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352962,0.00122662) , 
9, 0.0590591, 1, 0, 0.500694,0.000742575)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86289,0.000363586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546768,-0.00377121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478328,-0.00100111) , 
16, 0.0926168, 1, 0, 0.510893,-0.0446017) , 
10, 0.319603, 1, 0, 0.624821,-0.0292118) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973095,-0.00931552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909979,0.00506094) , 
6, 0.214335, 1, 0, 0.938857,0.0224273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863136,-0.00391412) , 
16, 0.10746, 1, 0, 0.917388,0.00744906) , 
12, 0.192174, 1, 0, 0.747318,-0.013862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685962,-0.00496242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.124721,0.00130553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236315,-0.000551628) , 
12, 0.0624261, 1, 0, 0.164838,0.00723543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762916,0.00408542) , 
12, 0.115332, 1, 0, 0.243428,0.0163581) , 
13, 0.53196, 1, 0, 0.285774,0.0104748) , 
7, 0.288602, 1, 0, 0.494673,-0.000540258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624109,0.0035336) , 
14, 0.241746, 1, 0, 0.50199,0.00236522)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978517,0.00496771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993118,0.00792875) , 
2, 0.03963, 1, 0, 0.985721,0.00822154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91637,-0.00520735) , 
11, 0.417945, 1, 0, 0.961271,-0.00195567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577676,-0.00216753) , 
6, 0.403422, 1, 0, 0.785672,-0.0211769) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961036,0.00310435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356255,-0.00319694) , 
10, 0.324781, 1, 0, 0.662415,-0.0180348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511541,0.00325825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437338,-0.000114773) , 
14, 0.0878663, 1, 0, 0.474949,0.0194296) , 
14, 0.055851, 1, 0, 0.571515,0.000131359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339475,-0.00232737) , 
15, 0.219236, 1, 0, 0.516548,-0.00877075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465855,0.00205761) , 
11, 1.01519, 1, 0, 0.500145,0.00807691) , 
7, 0.162985, 1, 0, 0.61637,-0.00383098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227922,0.00159694) , 
10, 0.752977, 1, 0, 0.505326,0.00456945)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946343,0.00429024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970429,-0.0171916) , 
4, 0.357638, 1, 0, 0.956978,0.00052863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77836,-0.00450153) , 
6, 0.233866, 1, 0, 0.902237,-0.0131249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647278,0.00281964) , 
11, 0.614043, 1, 0, 0.82246,0.00170316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496094,-0.00323572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465474,-0.00107857) , 
13, 0.905095, 1, 0, 0.477866,-0.0289962) , 
13, 0.7939, 1, 0, 0.697736,-0.00940829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502962,0.00294912) , 
11, 0.921088, 1, 0, 0.657472,0.003664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11126,-0.00173568) , 
17, 1.04396, 1, 0, 0.473036,-0.00658611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413846,0.0018602) , 
11, 1.26965, 1, 0, 0.463772,0.00112779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981802,0.00391399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716935,-0.0051998) , 
17, 0.372429, 1, 0, 0.849601,-0.0374931) , 
5, 0.0548723, 1, 0, 0.502886,-0.00278742)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155504,-0.00184715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51586,0.000857071) , 
12, 0.0727797, 1, 0, 0.267052,-0.0144384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703316,-0.0043919) , 
12, 0.116002, 1, 0, 0.358107,-0.0257505) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967266,-0.00370107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829503,0.00293188) , 
13, 0.843086, 1, 0, 0.905462,0.016918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898671,-0.00500531) , 
4, 0.513801, 1, 0, 0.902981,0.00177697) , 
4, 0.28176, 1, 0, 0.594022,-0.0138319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823121,-0.000330331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66168,0.00398753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229551,0.00109599) , 
16, 0.1279, 1, 0, 0.334865,0.0306708) , 
10, 0.411993, 1, 0, 0.423884,0.0245198) , 
14, 0.0758417, 1, 0, 0.524112,0.00192701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862971,0.00354873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249432,-0.00180249) , 
11, 0.602359, 1, 0, 0.402007,-0.0191358) , 
14, 0.138141, 1, 0, 0.493522,-0.00334963)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97255,0.0010746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643582,-0.00456551) , 
11, 0.569854, 1, 0, 0.861969,-0.010367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573867,0.00211945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96569,-0.00318116) , 
4, 0.238007, 1, 0, 0.733201,0.0109222) , 
14, 0.0861099, 1, 0, 0.80333,-0.000672317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588969,0.00231027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514366,0.00427682) , 
6, 0.267554, 1, 0, 0.547098,0.0423887) , 
13, 0.815422, 1, 0, 0.727751,0.0120291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504303,-0.00249747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406797,0.000424009) , 
11, 0.816056, 1, 0, 0.448982,-0.013125) , 
6, 0.40134, 1, 0, 0.627097,0.00294681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152121,-0.00293124) , 
16, 0.383701, 1, 0, 0.561097,-0.0029704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40569,-0.000251332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355671,0.0026162) , 
15, 0.110453, 1, 0, 0.37779,0.0268154) , 
11, 1.06868, 1, 0, 0.509496,0.00541433)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792081,-0.00306446) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974315,-0.0352546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488719,0.000439551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917385,0.00582764) , 
4, 0.291701, 1, 0, 0.67629,0.025976) , 
3, 0.182393, 1, 0, 0.760503,0.0144773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646807,-0.000701371) , 
9, 0.0371837, 1, 0, 0.720877,0.00596197) , 
14, 0.00899892, 1, 0, 0.735528,-0.000500526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588004,-0.00335135) , 
14, 0.0917926, 1, 0, 0.705913,-0.00975096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746245,-0.000193304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563557,0.00427581) , 
16, 0.0901238, 1, 0, 0.639468,0.0359928) , 
15, 0.203576, 1, 0, 0.692137,-0.000266943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316585,0.00209532) , 
10, 0.655239, 1, 0, 0.595997,0.00855436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172999,-0.00107662) , 
10, 0.815054, 1, 0, 0.508633,0.00315378)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981004,0.00995687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923914,-0.00868879) , 
1, 0.387749, 1, 0, 0.944828,-0.00835748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235648,-0.000987174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65041,-0.00454617) , 
4, 0.180211, 1, 0, 0.370325,-0.03985) , 
17, 0.600536, 1, 0, 0.619188,-0.0262081) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346735,-0.000665488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934279,0.00564731) , 
12, 0.168533, 1, 0, 0.519592,0.00428408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507623,0.00204101) , 
9, 0.0417662, 1, 0, 0.514441,0.0152236) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302503,-0.000302609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215206,-0.0015164) , 
6, 0.33771, 1, 0, 0.242322,-0.0223141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85296,0.00185771) , 
4, 0.219093, 1, 0, 0.340935,-0.0151482) , 
15, 0.201648, 1, 0, 0.429712,0.000392) , 
9, 0.027377, 1, 0, 0.493364,-0.00854398)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966025,0.00975208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998432,0.0174605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944478,-0.00676478) , 
6, 0.150243, 1, 0, 0.967615,-0.00539357) , 
5, 0.0243877, 1, 0, 0.967164,0.00528557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478868,-0.00235001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292868,-0.00137421) , 
16, 0.123926, 1, 0, 0.375431,-0.0391974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817533,0.00105563) , 
2, 0.0433751, 1, 0, 0.450842,-0.0300209) , 
3, 0.364786, 1, 0, 0.65578,-0.016007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230109,-6.09438e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334146,0.00320714) , 
11, 1.07105, 1, 0, 0.268657,0.0214998) , 
8, 0.0443142, 1, 0, 0.503362,-0.0012398)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912846,0.00244489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733058,-0.00378784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336076,-0.00177439) , 
16, 0.255594, 1, 0, 0.532746,-0.0355707) , 
7, 0.175874, 1, 0, 0.679105,-0.0158928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694686,0.00500795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564755,-0.000947993) , 
14, 0.0431682, 1, 0, 0.633973,0.0223386) , 
15, 0.0325095, 1, 0, 0.658708,0.00138507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504159,-0.00299283) , 
15, 0.0829025, 1, 0, 0.636344,-0.00520849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774719,0.00470406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381139,-0.00258342) , 
6, 0.167573, 1, 0, 0.521524,-0.0105605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546438,-0.000202116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413205,0.0023714) , 
11, 0.842323, 1, 0, 0.45845,0.0298303) , 
6, 0.294714, 1, 0, 0.487898,0.0109724) , 
14, 0.0690704, 1, 0, 0.562671,0.00282196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571622,-0.00240021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225295,-0.000826778) , 
8, 0.0308732, 1, 0, 0.342203,-0.0230134) , 
9, 0.0547541, 1, 0, 0.498526,-0.00469483)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631258,0.00168964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876577,-0.00289492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983334,-0.00169868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917476,0.00412398) , 
13, 0.802196, 1, 0, 0.949948,0.0147294) , 
4, 0.436476, 1, 0, 0.920198,-0.000841868) , 
4, 0.28176, 1, 0, 0.809838,0.0106618) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767042,-0.00369936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668006,0.00119993) , 
9, 0.0280858, 1, 0, 0.718263,-0.0115274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475376,-0.0038042) , 
14, 0.0966144, 1, 0, 0.616432,-0.0369894) , 
8, 0.019234, 1, 0, 0.735976,-0.00753634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131149,-5.91974e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421529,0.00359167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651365,0.000340774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523883,0.00149288) , 
16, 0.241431, 1, 0, 0.583075,0.0167789) , 
2, 0.0173522, 1, 0, 0.526114,0.0323693) , 
0, 0.0672273, 1, 0, 0.278308,0.0120091) , 
7, 0.310962, 1, 0, 0.510211,0.00210529)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9969,0.0150585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96629,-0.00674889) , 
8, 0.0145952, 1, 0, 0.981395,0.00307029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764809,-0.00197737) , 
3, 0.303265, 1, 0, 0.914391,-0.0056549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761309,0.00323547) , 
16, 0.175275, 1, 0, 0.887989,0.000474913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471502,-0.00481218) , 
16, 0.262914, 1, 0, 0.829668,-0.00760043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521188,0.00253193) , 
11, 0.800375, 1, 0, 0.767288,0.00120278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183144,-0.00127697) , 
3, 0.618829, 1, 0, 0.52958,-0.00792261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380496,0.000886871) , 
11, 1.1339, 1, 0, 0.495176,-0.00179981)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994805,0.00974661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691352,-0.00412417) , 
3, 0.226446, 1, 0, 0.815718,-0.032624) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978621,0.0107744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984022,0.000367598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473138,-0.00233433) , 
3, 0.161245, 1, 0, 0.655695,-0.0202288) , 
16, 0.107804, 1, 0, 0.741654,-0.00812592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327436,0.00310378) , 
11, 0.795497, 1, 0, 0.607358,0.00903701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.175898,-0.000431033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721535,-0.00551341) , 
2, 0.0261218, 1, 0, 0.285659,-0.0205334) , 
13, 0.834054, 1, 0, 0.467879,-0.00378382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411731,0.0016305) , 
13, 1.11939, 1, 0, 0.452478,0.0066239) , 
7, 0.0481004, 1, 0, 0.505893,0.000852478)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583531,0.00177005) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976187,-0.00822564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977648,0.00699051) , 
17, 0.240506, 1, 0, 0.976964,0.00634701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952987,-0.00608893) , 
7, 0.187655, 1, 0, 0.969768,0.000331805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855953,-0.00639095) , 
10, 0.462234, 1, 0, 0.93679,-0.0134312) , 
4, 0.122357, 1, 0, 0.875794,-0.0066628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710206,0.00423893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41956,0.000568273) , 
9, 0.027698, 1, 0, 0.493893,0.0213532) , 
11, 0.700915, 1, 0, 0.716179,0.00504642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459687,-0.00144018) , 
13, 1.23332, 1, 0, 0.662904,-0.00319346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279197,0.00201455) , 
8, 0.0568647, 1, 0, 0.581662,0.00494115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147148,-0.00185022) , 
16, 0.379012, 1, 0, 0.509926,-8.38581e-05)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951492,0.00718335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990661,0.00755857) , 
5, 0.0194519, 1, 0, 0.976699,0.0157689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353822,-0.00276018) , 
17, 0.659898, 1, 0, 0.807121,-0.00178805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719762,-0.0024299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631977,0.00701643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438191,0.00207626) , 
6, 0.263588, 1, 0, 0.519864,0.0414602) , 
9, 0.019555, 1, 0, 0.581163,0.024027) , 
13, 0.606843, 1, 0, 0.694129,0.011121) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841293,-0.00545847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372477,7.54403e-05) , 
17, 0.630604, 1, 0, 0.494389,-0.0106052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321355,-0.00287782) , 
15, 0.117846, 1, 0, 0.425724,-0.0270808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268527,0.000521625) , 
15, 0.222614, 1, 0, 0.380482,-0.0165034) , 
13, 0.79357, 1, 0, 0.500576,-0.00592612)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989013,0.0162476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98807,0.00377587) , 
5, 0.0337076, 1, 0, 0.98844,0.0099634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658263,-0.00247509) , 
3, 0.295308, 1, 0, 0.899039,-0.0016546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770366,0.00195475) , 
13, 0.906042, 1, 0, 0.870376,0.00487107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812796,0.00326389) , 
9, 0.0485735, 1, 0, 0.858659,0.0109496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556567,-0.00366928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625039,0.000750355) , 
14, 0.15278, 1, 0, 0.583841,-0.0305388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148135,-5.71429e-05) , 
7, 0.396115, 1, 0, 0.277334,-0.0096766) , 
10, 0.529344, 1, 0, 0.520859,-0.00103601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443815,0.00166845) , 
11, 1.26965, 1, 0, 0.508842,0.00505221)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50228,-0.00371846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90153,0.00224006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886677,-0.00680781) , 
5, 0.0476703, 1, 0, 0.893767,-0.0115001) , 
12, 0.132979, 1, 0, 0.709282,-0.0386761) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960189,0.00733198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140762,-0.000806217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673783,-0.00333313) , 
12, 0.109217, 1, 0, 0.21623,-0.0182316) , 
10, 0.308156, 1, 0, 0.310436,-0.0124674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362503,0.00101618) , 
11, 1.14788, 1, 0, 0.324496,-0.00330493) , 
8, 0.0195863, 1, 0, 0.427125,-0.012739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916846,-0.00616812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919399,0.00617214) , 
10, 0.335572, 1, 0, 0.918418,0.0241119) , 
12, 0.242222, 1, 0, 0.498637,-0.00737508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615162,0.00272632) , 
14, 0.224479, 1, 0, 0.506702,-0.00423006)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940968,0.00283107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489556,-0.00149217) , 
11, 0.726999, 1, 0, 0.701397,-0.00859167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453257,0.000466486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958471,0.00792782) , 
1, 0.363977, 1, 0, 0.649144,0.0210381) , 
9, 0.012646, 1, 0, 0.672343,0.00788335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538887,-0.00404406) , 
9, 0.0238877, 1, 0, 0.634808,-0.00812017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328068,0.000482202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888859,0.00535825) , 
2, 0.0330965, 1, 0, 0.506272,0.0245099) , 
9, 0.0369179, 1, 0, 0.592712,0.00256621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838103,-0.00572059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554275,0.00179756) , 
6, 0.182704, 1, 0, 0.656757,0.00733734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487815,-0.00338333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196667,-0.000824617) , 
7, 0.221199, 1, 0, 0.279141,-0.0297771) , 
13, 0.736197, 1, 0, 0.397187,-0.0181748) , 
14, 0.0835641, 1, 0, 0.493293,-0.00798004)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936591,-0.0106969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990314,0.00813848) , 
2, 0.0421938, 1, 0, 0.96314,-0.0100434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968852,-0.00339337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936198,0.00656593) , 
11, 0.323614, 1, 0, 0.951357,0.0191066) , 
10, 0.346668, 1, 0, 0.957398,0.00416139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597794,-0.00670988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366723,-0.00126188) , 
13, 0.600232, 1, 0, 0.440849,-0.037996) , 
17, 0.474575, 1, 0, 0.744211,-0.0132376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138898,0.000130972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653542,-0.000263335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575013,0.0025318) , 
14, 0.0590132, 1, 0, 0.606147,0.0331038) , 
4, 0.0750351, 1, 0, 0.340238,0.0154091) , 
11, 0.785972, 1, 0, 0.509696,0.00339246)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969616,0.00302374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986281,0.0111528) , 
14, 0.0533535, 1, 0, 0.97522,0.0133013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984158,0.00376132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813696,-0.00366261) , 
11, 0.396431, 1, 0, 0.894336,-0.0134196) , 
10, 0.31137, 1, 0, 0.940529,0.00184074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614186,0.00257375) , 
3, 0.484655, 1, 0, 0.852919,0.0145117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32356,0.000944042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241378,-3.28128e-05) , 
14, 0.0432706, 1, 0, 0.271362,0.00445664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465097,-0.00294342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128423,-0.000958698) , 
16, 0.204641, 1, 0, 0.248122,-0.0286804) , 
14, 0.0848776, 1, 0, 0.255795,-0.0177393) , 
10, 0.529344, 1, 0, 0.50464,-0.00429909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453001,0.00158106) , 
11, 1.31898, 1, 0, 0.497636,0.00122332)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615287,-0.00274863) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797037,-0.00191212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583534,0.00182232) , 
6, 0.289738, 1, 0, 0.687804,0.00987221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131964,-0.00146324) , 
10, 0.567617, 1, 0, 0.292066,-0.0130092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774673,-0.00453265) , 
5, 0.0343997, 1, 0, 0.345598,-0.0172916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348712,0.00118667) , 
11, 1.1366, 1, 0, 0.346445,-0.00577116) , 
7, 0.0918169, 1, 0, 0.380064,-0.0108563) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996011,0.0094036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978379,0.00793955) , 
3, 0.161188, 1, 0, 0.987852,0.012078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817351,-0.00237393) , 
17, 0.405928, 1, 0, 0.934208,0.000154161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872012,0.00409234) , 
10, 0.551903, 1, 0, 0.919266,0.0118308) , 
4, 0.360422, 1, 0, 0.497052,-0.00593403)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953532,-0.00411644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991384,0.010627) , 
5, 0.0487754, 1, 0, 0.972124,0.00333383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919785,-0.00685649) , 
15, 0.123739, 1, 0, 0.950293,-0.00885499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749301,0.00238407) , 
17, 0.425012, 1, 0, 0.888741,0.00433238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528947,-0.00357769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357569,-0.000104254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268181,-0.00215689) , 
16, 0.340255, 1, 0, 0.327167,-0.00959053) , 
16, 0.203883, 1, 0, 0.378173,-0.0207466) , 
7, 0.267118, 1, 0, 0.677445,-0.00604643) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281192,-0.000114893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549314,0.00172628) , 
6, 0.517558, 1, 0, 0.447287,0.0224355) , 
11, 0.918616, 1, 0, 0.607954,0.00255306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189514,-0.00128016) , 
17, 1.17246, 1, 0, 0.497126,-0.00436323)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646469,-0.00299244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902825,-0.000145141) , 
2, 0.0357417, 1, 0, 0.780305,-0.0221124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741594,0.000878017) , 
14, 0.103332, 1, 0, 0.762873,-0.00715881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954268,0.00532708) , 
2, 0.0569643, 1, 0, 0.80316,-7.12283e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74727,-0.00290993) , 
7, 0.121802, 1, 0, 0.793869,-0.00568355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797376,0.00320164) , 
7, 0.163471, 1, 0, 0.794519,0.00159947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60066,-0.00434568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404952,-0.000274846) , 
15, 0.116681, 1, 0, 0.483327,-0.0337799) , 
8, 0.0355429, 1, 0, 0.697106,-0.00947538) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66243,-0.00471131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184595,0.000317577) , 
8, 0.0343411, 1, 0, 0.276579,-0.00406036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265993,0.00238714) , 
6, 0.376552, 1, 0, 0.272684,0.0117011) , 
16, 0.204083, 1, 0, 0.504429,0.000138229)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490514,-0.00287461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908889,0.00228999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975892,0.000646139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803049,-0.00352338) , 
6, 0.225271, 1, 0, 0.885579,-0.0207933) , 
12, 0.188057, 1, 0, 0.89431,-0.00691414) , 
4, 0.225105, 1, 0, 0.769989,-0.022466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798906,-0.00224867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520816,0.00110329) , 
8, 0.0164789, 1, 0, 0.597237,0.00841337) , 
9, 0.0387163, 1, 0, 0.705656,-0.0109665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51958,0.00137304) , 
15, 0.324401, 1, 0, 0.677357,-0.00584737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187774,0.00184628) , 
7, 0.57097, 1, 0, 0.573399,0.00146144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152257,-0.00163713) , 
16, 0.38546, 1, 0, 0.503243,-0.00243418)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952355,-0.000849787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925163,0.00522089) , 
10, 0.351883, 1, 0, 0.940126,0.0122695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994078,0.00843097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936447,-0.00627428) , 
13, 0.690427, 1, 0, 0.963753,-0.00737662) , 
5, 0.03963, 1, 0, 0.950917,0.00329656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611987,-0.00257876) , 
7, 0.323245, 1, 0, 0.883225,-0.00312168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614627,0.00443913) , 
11, 0.764274, 1, 0, 0.842519,0.0051476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305192,0.000444853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19439,-0.00196487) , 
9, 0.0313023, 1, 0, 0.225397,-0.0196268) , 
10, 0.618842, 1, 0, 0.593238,-0.00485977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345985,-0.00225226) , 
6, 0.518949, 1, 0, 0.54316,-0.0123025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602707,0.00297657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286133,-0.000201778) , 
17, 1.0271, 1, 0, 0.368559,0.0120132) , 
11, 1.07879, 1, 0, 0.494184,-0.00548197)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125007,-0.00228023) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992079,0.0090807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981197,-0.00383695) , 
4, 0.453136, 1, 0, 0.98735,0.00473545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948191,-0.0171451) , 
16, 0.140546, 1, 0, 0.974122,-0.00562681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799861,-0.00900465) , 
3, 0.298653, 1, 0, 0.936611,-0.0211667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886689,0.00504093) , 
10, 0.517122, 1, 0, 0.927697,-0.0107537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398098,0.00098948) , 
3, 0.459147, 1, 0, 0.702328,0.0010649) , 
12, 0.052624, 1, 0, 0.568305,-0.00633884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366626,0.00207114) , 
11, 1.08827, 1, 0, 0.534275,0.00069714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350545,-0.00102731) , 
6, 0.746759, 1, 0, 0.500564,-0.0039747)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973317,-0.00377593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988001,0.00786535) , 
12, 0.210496, 1, 0, 0.980528,0.00434372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714501,-0.00288421) , 
17, 0.391697, 1, 0, 0.850549,-0.0186531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768597,-0.00156258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735236,0.00431291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508538,0.000294122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617224,0.00299818) , 
14, 0.149307, 1, 0, 0.55408,0.024571) , 
14, 0.0785004, 1, 0, 0.617211,0.0400639) , 
7, 0.0193423, 1, 0, 0.658548,0.0243169) , 
10, 0.381048, 1, 0, 0.737668,0.00660974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927019,0.00540298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115525,-0.000779803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548349,-0.00306248) , 
4, 0.0982264, 1, 0, 0.19245,-0.0215043) , 
10, 0.339633, 1, 0, 0.275664,-0.0157928) , 
16, 0.176318, 1, 0, 0.503537,-0.00474326)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572854,0.00385036) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993437,0.00877128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963208,-0.00789448) , 
10, 0.315518, 1, 0, 0.981821,0.000725676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889738,0.00327474) , 
3, 0.289595, 1, 0, 0.953146,0.0110653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907591,-0.003202) , 
14, 0.131112, 1, 0, 0.943672,0.00492065) , 
12, 0.105076, 1, 0, 0.851856,0.0173202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358802,-0.00209477) , 
16, 0.281381, 1, 0, 0.782413,0.0114719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474969,-0.00350913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219024,-0.000735907) , 
3, 0.579993, 1, 0, 0.277192,-0.0214655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42282,0.000738545) , 
11, 1.28774, 1, 0, 0.314391,-0.0116001) , 
11, 0.770032, 1, 0, 0.508062,-0.0020527)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844049,0.00478602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964503,0.00150057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921147,-0.00634978) , 
8, 0.0169532, 1, 0, 0.942501,-0.0104583) , 
1, 0.281321, 1, 0, 0.903949,0.0158462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455574,-0.00333634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900729,0.00196699) , 
0, 0.177001, 1, 0, 0.646163,-0.0331335) , 
10, 0.324351, 1, 0, 0.790121,-0.00578126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245402,0.000926163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345751,0.0017994) , 
6, 0.275794, 1, 0, 0.305745,0.0226536) , 
10, 0.533621, 1, 0, 0.595825,0.0056247) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935079,-0.00945394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806555,0.00267899) , 
11, 0.352382, 1, 0, 0.862155,0.00419175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327155,-0.000793397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224361,-0.00202544) , 
9, 0.0440587, 1, 0, 0.265796,-0.0285875) , 
11, 0.617852, 1, 0, 0.408814,-0.0207264) , 
14, 0.0848776, 1, 0, 0.502923,-0.00746586)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916736,0.00428327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941254,-0.000290134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933876,0.00643835) , 
8, 0.0284743, 1, 0, 0.938181,0.014138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542493,-0.00212304) , 
13, 0.908671, 1, 0, 0.79233,-0.00836684) , 
16, 0.0678238, 1, 0, 0.827663,0.00128878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869399,0.00855101) , 
16, 0.230616, 1, 0, 0.834052,0.0123985) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574052,-0.00642094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829374,0.000778533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200276,-0.00220021) , 
16, 0.117874, 1, 0, 0.358281,-0.0254741) , 
10, 0.549264, 1, 0, 0.402706,-0.035087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272456,0.00126197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233957,-0.000476149) , 
15, 0.135513, 1, 0, 0.248095,0.0020381) , 
11, 0.868254, 1, 0, 0.308876,-0.0125567) , 
10, 0.470611, 1, 0, 0.498039,-0.00356815)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91744,-0.00409212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978516,-0.0017902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53531,0.00446946) , 
17, 0.259063, 1, 0, 0.771711,0.0181002) , 
13, 0.600972, 1, 0, 0.840634,0.00484768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776454,0.000683939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572659,-0.0050379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419856,-0.00100134) , 
9, 0.0366484, 1, 0, 0.468584,-0.0281161) , 
14, 0.0429087, 1, 0, 0.538516,-0.0206114) , 
6, 0.245315, 1, 0, 0.684671,-0.00829514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275343,0.00102556) , 
11, 0.88382, 1, 0, 0.574791,-0.00210294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38638,-0.00233175) , 
15, 0.365802, 1, 0, 0.553244,-0.00581218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305474,0.00173554) , 
11, 1.0994, 1, 0, 0.516725,-0.000567149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390519,-0.00197781) , 
13, 1.22718, 1, 0, 0.491342,-0.00980938)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870794,0.00478175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935298,-0.000392992) , 
5, 0.0356136, 1, 0, 0.911952,0.0142536) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9601,-0.0063053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9562,0.00556044) , 
10, 0.288553, 1, 0, 0.958265,0.00210448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437478,-0.00232822) , 
3, 0.377641, 1, 0, 0.708615,-0.0184413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237613,0.000246995) , 
8, 0.042663, 1, 0, 0.494659,-0.00836231) , 
16, 0.0720009, 1, 0, 0.581589,-0.00365101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419143,0.00170405) , 
11, 1.11235, 1, 0, 0.5602,0.00103097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260777,-0.00141885) , 
3, 0.875486, 1, 0, 0.493512,-0.00587175)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99194,0.00782735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905284,-0.00681565) , 
8, 0.0143934, 1, 0, 0.943094,-0.00876444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889689,0.00472749) , 
6, 0.188686, 1, 0, 0.929412,-0.0013127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442745,-0.00481129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87431,-0.00352388) , 
12, 0.151679, 1, 0, 0.624124,-0.0567708) , 
6, 0.253239, 1, 0, 0.811094,-0.0228062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804757,0.00406149) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168614,0.000427814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295078,-0.00121312) , 
6, 0.400964, 1, 0, 0.222383,-0.00598414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487918,0.00217079) , 
13, 0.977199, 1, 0, 0.308046,0.00884063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238641,-0.00119075) , 
3, 0.856358, 1, 0, 0.281846,-0.00349952) , 
10, 0.329427, 1, 0, 0.341379,0.00380328) , 
11, 0.704741, 1, 0, 0.499652,-0.00516295)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565215,0.000869319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565492,0.00517321) , 
6, 0.227877, 1, 0, 0.565359,0.0350916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943578,0.00652684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742705,0.00141908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305381,-0.00229109) , 
7, 0.220679, 1, 0, 0.493373,-0.0162132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165496,0.000748186) , 
17, 0.937968, 1, 0, 0.291738,0.000909018) , 
10, 0.335869, 1, 0, 0.370451,0.00527963) , 
9, 0.019555, 1, 0, 0.413599,0.0118793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996395,0.0121709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871268,-0.0160453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839418,-0.00192452) , 
17, 0.395295, 1, 0, 0.855797,-0.0461863) , 
3, 0.169089, 1, 0, 0.917455,-0.0236049) , 
12, 0.175126, 1, 0, 0.543328,0.00274305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324632,-0.00271156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408537,-0.000614422) , 
6, 0.607201, 1, 0, 0.378067,-0.0260446) , 
13, 1.12047, 1, 0, 0.498324,-0.00509647)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967969,-0.00910392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988357,0.00642484) , 
16, 0.0551701, 1, 0, 0.980929,0.000341733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852933,0.00637293) , 
17, 0.357564, 1, 0, 0.937106,0.0106121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303075,-0.00190998) , 
8, 0.0379476, 1, 0, 0.721763,-0.0017616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514468,0.00227135) , 
6, 0.342664, 1, 0, 0.663944,0.00769601) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492655,-0.000639404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251078,-0.00243278) , 
9, 0.027592, 1, 0, 0.313853,-0.0307143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542766,-0.00130556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308088,0.000657104) , 
16, 0.113966, 1, 0, 0.396582,-0.00280965) , 
13, 1.03678, 1, 0, 0.365573,-0.013269) , 
13, 0.85369, 1, 0, 0.501296,-0.00373243)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559666,0.00499571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950417,-0.00188591) , 
5, 0.0259408, 1, 0, 0.807502,0.0158414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912918,-0.000377229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337896,-0.00360442) , 
10, 0.435088, 1, 0, 0.624578,-0.0252099) , 
9, 0.0189786, 1, 0, 0.717847,-0.00427879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622275,0.000148384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449159,0.00214304) , 
6, 0.285333, 1, 0, 0.51527,0.020823) , 
9, 0.0387163, 1, 0, 0.642899,0.00500813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457336,-0.00151175) , 
13, 1.05775, 1, 0, 0.588076,-0.00551897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789405,0.00591682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288416,-0.000780751) , 
16, 0.145538, 1, 0, 0.539939,0.0283441) , 
14, 0.15278, 1, 0, 0.578984,0.000877294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159321,-0.00224381) , 
17, 1.21827, 1, 0, 0.486995,-0.00835133)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981819,0.0137258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97067,-0.00519881) , 
0, 0.165073, 1, 0, 0.976197,0.017645) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954655,-0.0019599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689669,-0.00495033) , 
6, 0.237229, 1, 0, 0.84308,-0.0287486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308517,-0.000136528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279915,0.000392872) , 
6, 0.257331, 1, 0, 0.29101,0.00330536) , 
8, 0.0284323, 1, 0, 0.535022,-0.0108623) , 
10, 0.315518, 1, 0, 0.688285,-0.00095888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704126,0.00334847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879494,0.000352241) , 
5, 0.03963, 1, 0, 0.782511,0.0311387) , 
13, 0.873286, 1, 0, 0.708522,0.00593484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148562,-0.0016408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413058,-2.25582e-05) , 
13, 1.24096, 1, 0, 0.250423,-0.0168601) , 
3, 0.684541, 1, 0, 0.499273,-0.00447736)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990852,0.00721713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930295,-0.0088183) , 
10, 0.312329, 1, 0, 0.969315,-0.00376341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818451,0.00565423) , 
10, 0.468505, 1, 0, 0.928014,0.00777139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690243,-0.00245406) , 
6, 0.309183, 1, 0, 0.879741,-0.000125422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685175,-0.00427699) , 
13, 0.866703, 1, 0, 0.846692,-0.00874843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460577,0.00145925) , 
11, 0.683885, 1, 0, 0.762449,-0.00249742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320063,-0.00184234) , 
11, 0.792728, 1, 0, 0.650331,-0.00937861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55302,0.0019998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258426,0.000160157) , 
10, 0.61129, 1, 0, 0.400462,0.0227441) , 
11, 0.940257, 1, 0, 0.553974,0.0030089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13339,-0.00233457) , 
16, 0.409282, 1, 0, 0.501408,-0.00126122)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460556,-0.000369553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552602,0.00166002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4583,0.00531074) , 
16, 0.137509, 1, 0, 0.504742,0.0602099) , 
15, 0.107718, 1, 0, 0.486786,0.0331895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143887,-0.000441783) , 
10, 0.619561, 1, 0, 0.269298,0.00773868) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930942,0.00398955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926445,-0.00826653) , 
12, 0.251688, 1, 0, 0.9291,0.000817067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669403,-0.00297664) , 
6, 0.352564, 1, 0, 0.805929,-0.0269256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940604,-0.0054361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983276,0.00565887) , 
4, 0.477187, 1, 0, 0.961434,-0.00570197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823233,0.00272143) , 
13, 1.0054, 1, 0, 0.912889,0.0108094) , 
2, 0.0402769, 1, 0, 0.848882,-0.0117721) , 
12, 0.115304, 1, 0, 0.496449,9.19834e-05)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908534,-0.0118547) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777218,-0.00216277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583691,0.00257142) , 
13, 0.711402, 1, 0, 0.684629,0.00472201) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411126,-0.00235291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24791,-0.00330774) , 
6, 0.263588, 1, 0, 0.30288,-0.0439882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956041,0.00300643) , 
2, 0.0333016, 1, 0, 0.478749,-0.0290212) , 
9, 0.031288, 1, 0, 0.560182,-0.0156746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491186,-0.00237781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432051,-0.000168898) , 
14, 0.0242858, 1, 0, 0.449794,-0.0140928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334846,0.00210922) , 
14, 0.0774137, 1, 0, 0.392829,0.0119239) , 
13, 0.907046, 1, 0, 0.473863,-0.00143972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485299,-0.00178154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459615,-0.00177117) , 
15, 0.351565, 1, 0, 0.471591,-0.0260576) , 
14, 0.188019, 1, 0, 0.473586,-0.00444472) , 
10, 0.141183, 1, 0, 0.496917,-0.0063781)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389914,-0.00161095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187718,0.00147247) , 
11, 0.828898, 1, 0, 0.244621,0.0107338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19832,-0.00144419) , 
15, 0.233875, 1, 0, 0.226776,-0.0024795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766507,-0.000731302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741127,0.00511977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640088,0.000183543) , 
14, 0.111328, 1, 0, 0.68798,0.0389543) , 
14, 0.0493697, 1, 0, 0.712911,0.0238452) , 
5, 0.0172148, 1, 0, 0.389129,0.00631207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999312,0.0185945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769538,-0.000251653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80445,-0.00529951) , 
12, 0.17415, 1, 0, 0.78624,-0.0283524) , 
3, 0.177875, 1, 0, 0.847886,-0.0182203) , 
5, 0.0365815, 1, 0, 0.50336,0.000203467)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999445,0.0158154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917639,-0.00584495) , 
3, 0.141887, 1, 0, 0.953368,-0.00953232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94964,0.00626071) , 
7, 0.139373, 1, 0, 0.952059,0.000871261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669743,-0.00383066) , 
11, 0.622239, 1, 0, 0.895561,-0.0101226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428483,0.00203662) , 
7, 0.355426, 1, 0, 0.803806,-0.00178205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288746,-0.00323178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217656,-0.00192715) , 
16, 0.349967, 1, 0, 0.249212,-0.0320231) , 
16, 0.272908, 1, 0, 0.644885,-0.0104478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165348,-0.000203261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760944,0.00281888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844826,0.000732142) , 
12, 0.230767, 1, 0, 0.795024,0.0327507) , 
12, 0.110816, 1, 0, 0.378766,0.00892571) , 
13, 0.858445, 1, 0, 0.524227,-0.00166386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449232,0.00129647) , 
11, 1.26965, 1, 0, 0.512174,0.00347292)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908648,0.00445125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949681,-0.00762751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968512,0.00495568) , 
10, 0.190199, 1, 0, 0.960303,0.000360009) , 
5, 0.0235183, 1, 0, 0.945384,0.00956113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785626,-0.00571072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761878,-0.00405706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874145,-0.00238931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376255,0.00161673) , 
17, 0.528682, 1, 0, 0.536308,0.0139379) , 
13, 0.616548, 1, 0, 0.591446,0.00208606) , 
10, 0.408941, 1, 0, 0.638847,-0.0116486) , 
10, 0.323345, 1, 0, 0.757965,-0.00340664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300182,0.00156493) , 
10, 0.687115, 1, 0, 0.62929,0.00472295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52246,0.00188123) , 
11, 1.14042, 1, 0, 0.613921,0.0098795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183958,-0.00108912) , 
17, 1.17246, 1, 0, 0.50687,0.00250997)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987913,0.0098019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915212,-0.00262587) , 
13, 0.64309, 1, 0, 0.959789,0.00645303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813022,0.00462231) , 
11, 0.547001, 1, 0, 0.909601,0.0231613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153838,-0.00027676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406805,-0.0032117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849105,0.000271315) , 
5, 0.0210971, 1, 0, 0.605477,-0.0288214) , 
5, 0.0132825, 1, 0, 0.332011,-0.0136661) , 
7, 0.239622, 1, 0, 0.5733,0.00171863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300669,0.0019668) , 
11, 0.962032, 1, 0, 0.494663,0.0105759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391212,-0.000520735) , 
13, 1.17382, 1, 0, 0.470653,0.00545036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861819,-0.00375249) , 
12, 0.280661, 1, 0, 0.508337,0.0020364)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796091,0.00654531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272394,0.00117049) , 
13, 0.679516, 1, 0, 0.393684,0.0318765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102597,-0.000548845) , 
7, 0.681811, 1, 0, 0.266825,0.0148094) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993071,0.00982415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922615,-0.00495804) , 
17, 0.351052, 1, 0, 0.961037,-0.00394812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958366,0.00555489) , 
10, 0.312105, 1, 0, 0.959866,0.00821007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656575,-0.0038971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66182,-0.00108116) , 
8, 0.0313578, 1, 0, 0.659187,-0.0477784) , 
17, 0.577538, 1, 0, 0.850929,-0.0120747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628782,0.00162658) , 
10, 0.568493, 1, 0, 0.801696,-0.00241378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585046,-0.00420096) , 
15, 0.262168, 1, 0, 0.772095,-0.0122299) , 
2, 0.0182908, 1, 0, 0.506801,0.00196715)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137079,-0.00198221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420272,0.00228092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662559,0.0024418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198688,-0.000243736) , 
3, 0.570641, 1, 0, 0.316631,0.00500768) , 
14, 0.0644096, 1, 0, 0.34516,0.0140031) , 
12, 0.0455153, 1, 0, 0.307706,0.00670737) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896851,-0.0101249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989161,0.00862235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923761,-0.00264556) , 
10, 0.256859, 1, 0, 0.948619,-0.00103491) , 
0, 0.181979, 1, 0, 0.929848,-0.0166889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874078,0.00289389) , 
10, 0.545851, 1, 0, 0.91812,-0.00688173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628245,-0.00379407) , 
11, 1.06107, 1, 0, 0.863759,-0.020935) , 
4, 0.232269, 1, 0, 0.500644,-0.00288393)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993088,0.017324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918138,-0.00474818) , 
13, 0.487132, 1, 0, 0.960114,0.00793338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508894,-0.00292383) , 
10, 0.44828, 1, 0, 0.796133,-0.00873933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920787,-0.00199282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424163,0.00290725) , 
10, 0.387578, 1, 0, 0.595406,0.0217882) , 
13, 0.605956, 1, 0, 0.704038,0.00526699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194726,-0.00141539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904341,0.00542597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846456,-0.00175266) , 
12, 0.232533, 1, 0, 0.874389,0.0163731) , 
4, 0.287787, 1, 0, 0.374629,-0.0134124) , 
13, 0.7726, 1, 0, 0.511495,-0.00565127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442175,0.00115494) , 
11, 1.30386, 1, 0, 0.500849,-0.000629025)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995285,0.0088889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986649,0.0108975) , 
3, 0.144682, 1, 0, 0.991012,0.00771638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960522,-0.0111552) , 
14, 0.0670523, 1, 0, 0.976644,-0.00355762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775752,-0.00558339) , 
3, 0.307463, 1, 0, 0.924963,-0.0190198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548405,0.00383022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20866,-0.00120087) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419879,0.000438526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342343,0.00288742) , 
9, 0.0396224, 1, 0, 0.373248,0.0319353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372524,-0.000458564) , 
6, 0.713041, 1, 0, 0.37295,0.0143223) , 
6, 0.315034, 1, 0, 0.32659,0.00538231) , 
9, 0.0163163, 1, 0, 0.355254,0.0114677) , 
17, 0.508319, 1, 0, 0.506595,0.00336882)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539436,0.00316068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923871,-0.00648214) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98865,0.00525904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957014,-0.0143272) , 
16, 0.0887004, 1, 0, 0.973515,-0.00646279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828741,0.000205956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79469,0.00376675) , 
7, 0.129416, 1, 0, 0.813898,0.0259395) , 
3, 0.288195, 1, 0, 0.899159,0.0086315) , 
15, 0.0168049, 1, 0, 0.90368,0.0026486) , 
2, 0.0152423, 1, 0, 0.83818,0.010716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138266,-0.00124576) , 
17, 0.870651, 1, 0, 0.598348,0.000344177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431347,0.00239814) , 
11, 1.0672, 1, 0, 0.572189,0.00675698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229373,-0.00214905) , 
3, 0.864683, 1, 0, 0.490738,-0.00562358)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501887,-0.00307987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288174,-0.00198024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142795,0.000174797) , 
11, 0.752368, 1, 0, 0.173037,-0.00397114) , 
7, 0.274847, 1, 0, 0.220901,-0.0112173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418896,0.00260823) , 
14, 0.189944, 1, 0, 0.25201,-0.0038201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578073,-0.00305613) , 
2, 0.0184964, 1, 0, 0.290566,-0.00898057) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998728,0.018234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819196,-0.00255924) , 
6, 0.221791, 1, 0, 0.889225,-0.0118993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982916,0.000802929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928839,0.00653314) , 
6, 0.212962, 1, 0, 0.956608,0.0287695) , 
12, 0.217533, 1, 0, 0.91681,0.00474931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803811,0.00436533) , 
8, 0.0351281, 1, 0, 0.89599,0.0158915) , 
5, 0.0210371, 1, 0, 0.525255,0.000660941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437605,0.00171701) , 
11, 1.29202, 1, 0, 0.511815,0.00649634)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453696,-0.000617517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252993,0.00119039) , 
16, 0.180002, 1, 0, 0.332855,0.00539113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0987351,-0.00141877) , 
17, 0.994072, 1, 0, 0.172718,-0.0123095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439382,0.00224048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944462,-0.00108672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658451,-0.00331933) , 
7, 0.275942, 1, 0, 0.831171,-0.0209979) , 
12, 0.0940952, 1, 0, 0.719689,-0.0052824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560064,0.00253858) , 
6, 0.494024, 1, 0, 0.653022,0.0221253) , 
5, 0.0141087, 1, 0, 0.37671,0.00231543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96158,0.0027192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917198,-0.00522558) , 
15, 0.106817, 1, 0, 0.946357,-0.00272355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682606,-0.00371076) , 
6, 0.393157, 1, 0, 0.833018,-0.0306518) , 
5, 0.0359775, 1, 0, 0.496694,-0.00635318)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975827,-0.00657056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988717,0.0120324) , 
11, 0.334962, 1, 0, 0.982848,0.00688815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906095,-0.00930346) , 
8, 0.0208867, 1, 0, 0.960717,-0.00505574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758345,0.0032024) , 
3, 0.354187, 1, 0, 0.923226,0.00324418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717247,-0.00287321) , 
6, 0.404508, 1, 0, 0.87867,-0.00600605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468566,0.0011794) , 
3, 0.602166, 1, 0, 0.767698,0.00221662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228855,-0.00157764) , 
17, 0.944189, 1, 0, 0.573397,-0.00953055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202012,0.00127764) , 
8, 0.0626762, 1, 0, 0.502184,-0.00375254)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944904,0.00538115) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998232,0.0158402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981168,-0.0117902) , 
8, 0.0174004, 1, 0, 0.991332,0.00103368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915211,-0.00856822) , 
3, 0.194532, 1, 0, 0.969198,-0.00808517) , 
12, 0.122588, 1, 0, 0.963451,-0.00175439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803914,-0.00633696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526417,-0.000963025) , 
16, 0.121321, 1, 0, 0.651698,-0.0358573) , 
3, 0.308251, 1, 0, 0.859194,-0.0131592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166918,5.265e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706147,0.00167447) , 
2, 0.0180318, 1, 0, 0.335678,0.0103491) , 
3, 0.491286, 1, 0, 0.607723,-0.00186695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247324,-0.00136154) , 
3, 0.783015, 1, 0, 0.492437,-0.010073)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805227,0.00383745) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134836,-0.00116243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126114,-0.000393102) , 
13, 0.890862, 1, 0, 0.129857,-0.0114439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526456,-0.00191459) , 
12, 0.09646, 1, 0, 0.182779,-0.0158912) , 
10, 0.337085, 1, 0, 0.251585,-0.00884335) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990932,0.00394212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982832,0.00701336) , 
13, 0.619621, 1, 0, 0.986762,0.00924533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872838,-0.00473815) , 
11, 0.526509, 1, 0, 0.94191,-0.00625301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592467,-0.00317775) , 
3, 0.521838, 1, 0, 0.801058,-0.033076) , 
5, 0.023985, 1, 0, 0.45796,-0.0179448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922213,0.00363685) , 
12, 0.307478, 1, 0, 0.492729,-0.0147364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626053,0.00285752) , 
14, 0.250692, 1, 0, 0.499914,-0.0117493)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722742,0.000803277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851346,-0.00706899) , 
0, 0.188739, 1, 0, 0.783241,-0.0199595) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875904,-0.000524411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557174,0.00356326) , 
8, 0.0286684, 1, 0, 0.725759,0.0241536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796912,-0.00598832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5155,0.000214231) , 
6, 0.312152, 1, 0, 0.614564,-0.00817477) , 
9, 0.0305892, 1, 0, 0.64978,0.00206399) , 
15, 0.0401774, 1, 0, 0.689129,-0.00442918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542184,-0.00315263) , 
15, 0.256136, 1, 0, 0.66768,-0.0107273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573705,0.00327191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151474,-0.000111506) , 
16, 0.17318, 1, 0, 0.230134,0.00928172) , 
10, 0.66369, 1, 0, 0.502185,-0.00315918)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969088,0.00709514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978465,-0.00223393) , 
5, 0.0335331, 1, 0, 0.975244,0.00497896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862813,-0.00343817) , 
11, 0.428641, 1, 0, 0.930653,-0.0063762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784612,0.00440796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653058,0.000716264) , 
11, 0.756633, 1, 0, 0.718257,0.0313816) , 
11, 0.607253, 1, 0, 0.85999,0.00618554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114455,-0.00136741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438469,-0.00383333) , 
5, 0.0115918, 1, 0, 0.219928,-0.0333927) , 
7, 0.385521, 1, 0, 0.615221,-0.00894979) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163694,0.0015852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477949,0.00228208) , 
12, 0.0724905, 1, 0, 0.273888,0.0344303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688118,-0.000806657) , 
12, 0.141378, 1, 0, 0.353928,0.0245746) , 
11, 0.938561, 1, 0, 0.508391,0.00475673)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903261,-0.000623393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423085,-0.00377015) , 
13, 0.777327, 1, 0, 0.613858,-0.0523408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918952,0.00639833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18849,-0.00319593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53298,0.00221151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157717,-0.000461365) , 
10, 0.555462, 1, 0, 0.217087,0.000454101) , 
14, 0.0632138, 1, 0, 0.209921,-0.0129549) , 
10, 0.304602, 1, 0, 0.280994,-0.00747005) , 
7, 0.192401, 1, 0, 0.358558,-0.0179258) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908229,-0.00536073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981555,-0.00328892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96375,0.00593421) , 
17, 0.241706, 1, 0, 0.972189,0.0112564) , 
5, 0.0320001, 1, 0, 0.94924,-0.00165967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816434,0.0034768) , 
13, 0.981535, 1, 0, 0.905643,0.0174322) , 
12, 0.173521, 1, 0, 0.495631,-0.00906678)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879862,0.00417984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346355,-0.00176589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132243,-4.00021e-05) , 
8, 0.0382291, 1, 0, 0.175559,-0.006042) , 
10, 0.468487, 1, 0, 0.295988,-7.25037e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868733,-0.00651645) , 
0, 0.20807, 1, 0, 0.371493,-0.00548567) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972018,-0.00405899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98547,0.00556138) , 
9, 0.0193048, 1, 0, 0.978893,0.00217273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971591,0.0067311) , 
10, 0.392298, 1, 0, 0.976472,0.00900882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872471,0.00439541) , 
17, 0.433361, 1, 0, 0.943436,0.0211335) , 
2, 0.0321823, 1, 0, 0.565145,0.00352722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354673,-0.00175949) , 
6, 0.569065, 1, 0, 0.518857,-0.00511032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445049,0.00117253) , 
11, 1.28946, 1, 0, 0.507168,0.000115073)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852197,-0.00365422) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927942,0.00315998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199103,-0.00160187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256307,-0.00198918) , 
6, 0.234684, 1, 0, 0.236273,-0.0286246) , 
10, 0.311904, 1, 0, 0.453384,-0.0143057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938016,0.00443945) , 
12, 0.183716, 1, 0, 0.564679,-0.00580681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151596,0.00046159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375555,0.00171766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764176,0.00418433) , 
12, 0.090055, 1, 0, 0.57587,0.0480544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828883,-0.000560376) , 
12, 0.153094, 1, 0, 0.65464,0.0311359) , 
2, 0.00227177, 1, 0, 0.378697,0.0175677) , 
15, 0.116937, 1, 0, 0.458414,0.0075488) , 
7, 0.0459085, 1, 0, 0.506889,0.00312431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871305,-0.00586559) , 
12, 0.312339, 1, 0, 0.536454,-0.000320578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421893,0.00123084) , 
6, 0.733947, 1, 0, 0.51497,0.00517471)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606545,-0.00245597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978945,-0.000836295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968809,0.00774922) , 
13, 0.724218, 1, 0, 0.974898,0.00992461) , 
0, 0.138714, 1, 0, 0.847179,-0.00222468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962509,0.000959415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606471,0.00386234) , 
11, 0.483143, 1, 0, 0.751555,0.0319556) , 
15, 0.120629, 1, 0, 0.808963,0.0114354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191543,-0.00142804) , 
10, 0.636131, 1, 0, 0.61989,0.00188732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470838,0.00214274) , 
13, 1.02599, 1, 0, 0.594875,0.00737217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269194,-0.00167337) , 
11, 1.01681, 1, 0, 0.522544,-0.000724557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442663,0.00121031) , 
11, 1.26394, 1, 0, 0.509713,0.00376802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335929,-0.00189154) , 
15, 0.384516, 1, 0, 0.494686,0.000689931)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949477,-0.00261252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956822,0.00604262) , 
9, 0.0204606, 1, 0, 0.953246,0.00630952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944691,-0.0200379) , 
5, 0.0521398, 1, 0, 0.950837,-0.00454254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824299,-0.00904556) , 
15, 0.248809, 1, 0, 0.927461,-0.0142505) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610655,0.00152302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428281,0.00350869) , 
3, 0.502785, 1, 0, 0.487322,0.0439482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197248,4.79181e-05) , 
3, 0.670814, 1, 0, 0.3174,0.018646) , 
3, 0.394362, 1, 0, 0.549249,0.00614398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375691,-0.000895518) , 
6, 0.655519, 1, 0, 0.506267,-0.000459445)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959166,-0.00667093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571658,0.00141505) , 
8, 0.0272237, 1, 0, 0.786931,-0.000634394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60086,-0.00538464) , 
6, 0.323751, 1, 0, 0.729721,-0.0215924) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98337,0.011841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976751,-0.00546026) , 
4, 0.295667, 1, 0, 0.979531,0.00791346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204805,-0.00191154) , 
3, 0.312812, 1, 0, 0.574661,-0.0109838) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536856,0.000390648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370628,0.00337018) , 
13, 0.718088, 1, 0, 0.419627,0.0337087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372082,-2.90684e-05) , 
6, 0.51243, 1, 0, 0.396372,0.0169565) , 
6, 0.297313, 1, 0, 0.475596,0.00454105) , 
14, 0.034444, 1, 0, 0.52957,-0.00100949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397916,-0.0012709) , 
13, 1.17382, 1, 0, 0.500096,-0.00711223)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400879,-0.000275458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612055,-0.00557822) , 
5, 0.0182852, 1, 0, 0.495161,-0.0467523) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986062,0.00630388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959331,-0.00480693) , 
12, 0.22582, 1, 0, 0.971917,-0.00029584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833205,-0.00747278) , 
11, 0.545065, 1, 0, 0.936442,-0.0157253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795025,0.00175946) , 
11, 0.772223, 1, 0, 0.902932,-0.00521112) , 
12, 0.121228, 1, 0, 0.759779,-0.0197947) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336877,0.00270263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805427,-0.000466115) , 
12, 0.118695, 1, 0, 0.495213,0.0274915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13656,-0.00137614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556525,0.00157289) , 
5, 0.0183394, 1, 0, 0.220729,-0.0100662) , 
8, 0.0463562, 1, 0, 0.314343,0.00274303) , 
8, 0.0303581, 1, 0, 0.497237,-0.00651088)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967194,0.00742266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864769,-0.00581408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751601,0.00247849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268361,-0.000204515) , 
10, 0.60107, 1, 0, 0.474299,0.00791299) , 
10, 0.38293, 1, 0, 0.585821,-0.00478351) , 
10, 0.234578, 1, 0, 0.689494,0.00308875) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981772,-0.00145386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780019,-0.00277501) , 
6, 0.218939, 1, 0, 0.88607,-0.0143592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425845,0.000610459) , 
16, 0.166196, 1, 0, 0.671653,-0.00406297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675955,-0.00423139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208788,-0.00205065) , 
8, 0.0228953, 1, 0, 0.355314,-0.0409254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266436,-0.000878279) , 
14, 0.100284, 1, 0, 0.309773,-0.027744) , 
13, 0.729718, 1, 0, 0.436581,-0.0194458) , 
9, 0.0227232, 1, 0, 0.515253,-0.0124362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426644,0.00056764) , 
11, 1.2673, 1, 0, 0.50032,-0.00807149)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518652,-0.0022712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27401,0.00114661) , 
11, 0.716008, 1, 0, 0.351782,0.0039558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775673,-0.00346779) , 
5, 0.0328741, 1, 0, 0.444279,-0.00640633) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987578,0.00525865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883236,-0.00296527) , 
11, 0.424191, 1, 0, 0.939122,-0.00573736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977773,0.0100318) , 
16, 0.127716, 1, 0, 0.948084,0.00280651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799802,0.00316529) , 
17, 0.616606, 1, 0, 0.91265,0.0151702) , 
12, 0.141591, 1, 0, 0.6615,0.00360043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18853,-0.00135102) , 
17, 1.08444, 1, 0, 0.501698,-0.00591253)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994829,0.0144747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98411,0.000930048) , 
14, 0.0266337, 1, 0, 0.988922,0.00719379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951022,-0.0121639) , 
10, 0.318961, 1, 0, 0.976211,-0.00168665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524841,0.00332181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623605,0.000394123) , 
6, 0.340664, 1, 0, 0.578193,0.020586) , 
3, 0.282546, 1, 0, 0.766962,0.0100227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611172,-0.00369862) , 
14, 0.135838, 1, 0, 0.745809,0.0038995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554938,0.00266378) , 
15, 0.288791, 1, 0, 0.710005,0.0102736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526514,0.00398723) , 
11, 1.04449, 1, 0, 0.690826,0.0157212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36539,-0.000985064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181091,0.000452501) , 
10, 0.672542, 1, 0, 0.263055,-0.00618614) , 
3, 0.720569, 1, 0, 0.515237,0.0067288)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879217,0.00347216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85346,-0.0024858) , 
9, 0.017167, 1, 0, 0.867974,0.00274532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668022,-0.0041893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637696,-0.00136529) , 
16, 0.109696, 1, 0, 0.653674,-0.0473205) , 
6, 0.295162, 1, 0, 0.768002,-0.0206108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301736,-0.000657519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933583,-0.00539872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809867,0.00378477) , 
6, 0.308863, 1, 0, 0.871155,0.0230832) , 
12, 0.0860604, 1, 0, 0.655476,0.010169) , 
15, 0.087687, 1, 0, 0.712203,-0.00534786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436354,-0.00203423) , 
9, 0.0547541, 1, 0, 0.636134,-0.0139486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169605,-0.000463834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294109,0.001829) , 
6, 0.38251, 1, 0, 0.229141,0.012407) , 
8, 0.0509244, 1, 0, 0.49504,-0.0048118)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958468,-0.00644766) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969294,-0.00834915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986212,0.00805197) , 
12, 0.240241, 1, 0, 0.977099,-0.000540109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833915,0.00423732) , 
3, 0.27737, 1, 0, 0.931452,0.0112387) , 
10, 0.194973, 1, 0, 0.939582,0.00430227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751611,-0.00458977) , 
15, 0.227986, 1, 0, 0.897969,-0.00661383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495922,0.00249477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334238,0.000840668) , 
9, 0.0332208, 1, 0, 0.388451,0.0221979) , 
3, 0.442062, 1, 0, 0.642957,0.00780638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243123,-0.00110597) , 
3, 0.751523, 1, 0, 0.493693,-0.00322048)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403944,0.00220959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183147,0.00141233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113722,-0.00130748) , 
9, 0.0369519, 1, 0, 0.141983,-0.00318887) , 
7, 0.336703, 1, 0, 0.200616,0.00773971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560789,-0.0019677) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79354,-0.000649676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9159,0.0035717) , 
4, 0.30734, 1, 0, 0.849875,0.00714387) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994302,0.0105084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966476,-0.00398181) , 
10, 0.315518, 1, 0, 0.980163,0.00095652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752034,-0.00271393) , 
3, 0.287999, 1, 0, 0.873563,-0.0187283) , 
12, 0.186382, 1, 0, 0.863382,-0.00760873) , 
4, 0.182483, 1, 0, 0.799892,-0.0148337) , 
4, 0.0940064, 1, 0, 0.512189,-0.00399656)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957425,-0.0100091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979824,0.0042342) , 
9, 0.0280858, 1, 0, 0.969205,-0.00367126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901671,0.0033356) , 
17, 0.300107, 1, 0, 0.94527,0.00772219) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949609,-0.00575688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891199,0.00312553) , 
6, 0.167159, 1, 0, 0.921975,0.00346899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734888,-0.00451577) , 
6, 0.31258, 1, 0, 0.858598,-0.0152616) , 
7, 0.112022, 1, 0, 0.901727,-0.00382459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378845,-0.00322106) , 
8, 0.0443142, 1, 0, 0.809087,-0.0125881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505265,-0.000860178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245042,0.00227407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25962,0.000647) , 
3, 0.778938, 1, 0, 0.253733,0.0218351) , 
17, 0.851606, 1, 0, 0.304997,0.0137167) , 
3, 0.547179, 1, 0, 0.508913,0.0030758)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725654,0.00249224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772998,-0.00384641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114835,-0.0019555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854831,0.00313265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804306,-0.00026389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388133,-0.0036389) , 
8, 0.0362064, 1, 0, 0.594017,-0.0298545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485479,0.00170579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235346,-0.000497958) , 
17, 1.05478, 1, 0, 0.318604,0.00383137) , 
11, 0.83991, 1, 0, 0.417752,-0.00829544) , 
8, 0.0178416, 1, 0, 0.483383,-0.00296339) , 
12, 0.0496102, 1, 0, 0.401916,-0.00814719) , 
8, 0.00406176, 1, 0, 0.446702,-0.0122108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925025,0.00388158) , 
2, 0.0583167, 1, 0, 0.474186,-0.0100821) , 
9, 0.00782201, 1, 0, 0.495536,-0.00731319)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357854,-0.00192699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954185,-0.00893594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872005,0.00317154) , 
17, 0.382987, 1, 0, 0.911389,0.00768441) , 
12, 0.121111, 1, 0, 0.665542,-0.00827312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840357,-0.000778791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416918,0.00133502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44116,0.0040765) , 
6, 0.26687, 1, 0, 0.430615,0.0436448) , 
7, 0.22111, 1, 0, 0.600974,0.0225203) , 
9, 0.0173761, 1, 0, 0.630667,0.00835911) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776653,-0.0048249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70122,0.000431068) , 
14, 0.0900016, 1, 0, 0.7324,-0.0169329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428954,0.00168838) , 
8, 0.033259, 1, 0, 0.6162,0.000703106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171539,-0.00175521) , 
17, 0.994072, 1, 0, 0.400759,-0.0149705) , 
9, 0.0340848, 1, 0, 0.497367,-0.0051674)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969208,0.000764746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58742,0.002178) , 
3, 0.309414, 1, 0, 0.736797,0.0266689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845443,-0.00558729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967963,-0.00584314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901613,0.00286406) , 
17, 0.305395, 1, 0, 0.935434,0.00673862) , 
2, 0.0432627, 1, 0, 0.909389,-0.00883037) , 
5, 0.0365815, 1, 0, 0.821023,0.00934501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823356,0.00102405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298701,-0.00322486) , 
8, 0.0324584, 1, 0, 0.484634,-0.0302167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279829,-0.00135013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159734,0.000437457) , 
16, 0.282279, 1, 0, 0.197604,-0.00327115) , 
11, 0.806981, 1, 0, 0.302434,-0.0131123) , 
16, 0.151532, 1, 0, 0.516478,-0.00384322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452232,0.000923014) , 
11, 1.31961, 1, 0, 0.507179,-7.48132e-05)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635899,-0.0023073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563714,-0.00403264) , 
16, 0.0939985, 1, 0, 0.598776,-0.0542391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468847,-0.000399577) , 
10, 0.527073, 1, 0, 0.538875,-0.0326926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534936,8.14652e-05) , 
16, 0.154663, 1, 0, 0.537597,-0.0216772) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988439,0.00666449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971671,-0.00450435) , 
1, 0.50349, 1, 0, 0.981794,0.00264106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875752,-0.00993589) , 
11, 0.524556, 1, 0, 0.950735,-0.0126757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746904,0.00119087) , 
3, 0.454767, 1, 0, 0.870161,0.0015473) , 
2, 0.0325551, 1, 0, 0.704717,-0.0100064) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162013,-0.00068192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140597,0.000964688) , 
11, 0.891674, 1, 0, 0.149354,0.0039917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547405,0.00305841) , 
2, 0.0183394, 1, 0, 0.205363,0.0128435) , 
7, 0.438307, 1, 0, 0.498374,-0.000564358)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961831,-0.0325355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878937,0.00209831) , 
6, 0.227877, 1, 0, 0.918076,-0.00189136) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704619,-0.00274233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965352,0.00147898) , 
4, 0.248834, 1, 0, 0.873044,-0.0115004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522764,-0.00288636) , 
13, 0.981596, 1, 0, 0.725768,-0.0343986) , 
10, 0.249724, 1, 0, 0.785505,-0.0243008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760508,0.00289861) , 
16, 0.234003, 1, 0, 0.782092,-0.0171309) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162551,-0.0012982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201669,0.00064699) , 
9, 0.0430211, 1, 0, 0.183244,-0.00310702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854794,0.000855904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712748,0.00348579) , 
8, 0.0189151, 1, 0, 0.773225,0.0470246) , 
2, 0.0216876, 1, 0, 0.306371,0.00735521) , 
10, 0.509449, 1, 0, 0.504389,-0.0028371)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991034,-0.000954131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994583,0.0181644) , 
17, 0.302702, 1, 0, 0.992962,0.00783622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871048,-0.00635281) , 
3, 0.228492, 1, 0, 0.954616,-0.00695767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881785,-0.00222839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898498,0.00646375) , 
9, 0.0325168, 1, 0, 0.890396,0.0189018) , 
10, 0.361077, 1, 0, 0.930396,0.00279523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533124,-0.0040851) , 
10, 0.613838, 1, 0, 0.868664,-0.00722048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486358,0.00278522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331794,0.000366504) , 
3, 0.570957, 1, 0, 0.383099,0.0187697) , 
3, 0.466236, 1, 0, 0.655237,0.00420335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155282,-0.00159651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371729,-0.000118741) , 
6, 0.625113, 1, 0, 0.260413,-0.0142453) , 
3, 0.720569, 1, 0, 0.495826,-0.00324531)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520784,-0.00350706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974698,0.0100328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95195,-0.00297051) , 
5, 0.0346668, 1, 0, 0.960077,0.0057546) , 
0, 0.125442, 1, 0, 0.818478,-0.00829417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390454,0.00292964) , 
11, 0.848175, 1, 0, 0.680246,0.00729039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524309,-0.00262648) , 
9, 0.0337408, 1, 0, 0.64656,-0.000940375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388783,-0.0018884) , 
11, 1.13798, 1, 0, 0.58174,-0.0111102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64723,-0.00389906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608192,0.00039972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380588,0.000209848) , 
8, 0.0191137, 1, 0, 0.480647,0.0052653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238338,0.00226995) , 
8, 0.0406176, 1, 0, 0.359705,0.0213557) , 
6, 0.214507, 1, 0, 0.401562,0.0145461) , 
9, 0.0391101, 1, 0, 0.499723,0.00056853)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96663,-0.000616396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958689,0.00855276) , 
11, 0.41233, 1, 0, 0.963076,0.0156143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703338,-0.00154885) , 
11, 0.566889, 1, 0, 0.875031,0.00398614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932872,-0.0191505) , 
12, 0.254727, 1, 0, 0.887358,-0.00520884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652354,-0.00528558) , 
13, 0.78884, 1, 0, 0.835562,-0.0174691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213619,0.00104491) , 
7, 0.471162, 1, 0, 0.608733,-0.00567641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73558,0.00412999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248502,0.000222976) , 
10, 0.555689, 1, 0, 0.376481,0.0187894) , 
13, 0.914337, 1, 0, 0.529001,0.00272265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394155,-0.00141363) , 
13, 1.22718, 1, 0, 0.502089,-0.00441577)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858567,-0.00352894) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617762,0.00306992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415815,0.00128948) , 
16, 0.231254, 1, 0, 0.519043,0.038347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93176,0.00364222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867327,-0.00322585) , 
14, 0.0214071, 1, 0, 0.893127,-0.00626371) , 
4, 0.216428, 1, 0, 0.729368,0.0132651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204084,-0.00130347) , 
10, 0.647957, 1, 0, 0.573527,0.00331953) , 
7, 0.0481004, 1, 0, 0.620873,-0.00195481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14122,-0.0012289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404198,-0.00207149) , 
4, 0.0648855, 1, 0, 0.215845,-0.0273512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86034,0.00302037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802213,-0.00228905) , 
5, 0.0361053, 1, 0, 0.825592,-0.00201251) , 
1, 0.180757, 1, 0, 0.386441,-0.0202619) , 
9, 0.035199, 1, 0, 0.491443,-0.0120622)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665109,-0.000663564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701314,0.00376635) , 
8, 0.011442, 1, 0, 0.68446,0.0234424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838329,-0.00275455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925035,0.00144015) , 
2, 0.0387788, 1, 0, 0.887954,-0.00679713) , 
5, 0.0306769, 1, 0, 0.801021,0.00612119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683676,-0.00229943) , 
8, 0.018824, 1, 0, 0.780025,-0.000273812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763351,0.0030049) , 
8, 0.0240015, 1, 0, 0.777584,0.00484913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529359,-0.0028421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524533,-1.28991e-05) , 
16, 0.123369, 1, 0, 0.526586,-0.0248832) , 
8, 0.0340022, 1, 0, 0.701831,-0.00412442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227876,-3.35481e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248796,0.00256902) , 
11, 0.910083, 1, 0, 0.238418,0.021289) , 
7, 0.415439, 1, 0, 0.534015,0.0050785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138469,-0.0015022) , 
16, 0.405323, 1, 0, 0.477643,0.00157354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854499,-0.00495143) , 
5, 0.0601755, 1, 0, 0.4976,-0.000474943)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953956,0.00474795) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970685,-0.00102741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954952,0.00519473) , 
11, 0.363181, 1, 0, 0.965051,0.00673764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793704,-0.00531702) , 
11, 0.47493, 1, 0, 0.912063,-0.0102945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814096,0.0033874) , 
11, 0.654644, 1, 0, 0.890959,0.00158087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431102,-0.0020138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186818,-0.00200588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283578,0.000963495) , 
11, 0.912064, 1, 0, 0.24243,-0.00469935) , 
7, 0.249345, 1, 0, 0.298955,-0.0177557) , 
17, 0.65617, 1, 0, 0.524,-0.0104051) , 
10, 0.19937, 1, 0, 0.573959,-0.00708026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20701,0.00157791) , 
8, 0.0626762, 1, 0, 0.502543,-0.00078354)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959906,-0.000951319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807845,0.00683825) , 
16, 0.134848, 1, 0, 0.897102,0.0179572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221709,-0.000990764) , 
16, 0.327489, 1, 0, 0.682281,0.0083243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544683,-0.00158489) , 
6, 0.416364, 1, 0, 0.632935,-0.00575255) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814564,0.00268368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822539,-0.000543534) , 
14, 0.110203, 1, 0, 0.818406,0.0125784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610876,-0.00306548) , 
8, 0.0180223, 1, 0, 0.751729,-0.00547825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580705,0.00303376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186289,0.000557562) , 
16, 0.191498, 1, 0, 0.302061,0.022549) , 
8, 0.0287244, 1, 0, 0.454881,0.0130239) , 
15, 0.0991036, 1, 0, 0.535398,0.00453311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359673,-0.00101756) , 
15, 0.315909, 1, 0, 0.508388,0.00118849)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999707,0.0198452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983574,-0.00439358) , 
3, 0.10271, 1, 0, 0.991084,0.00424252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995925,0.0194312) , 
6, 0.187301, 1, 0, 0.99262,0.0101402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833333,-0.00338049) , 
3, 0.238103, 1, 0, 0.949335,0.000527963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494031,0.000109572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245859,0.00140471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819064,0.00431735) , 
5, 0.0234053, 1, 0, 0.389075,0.0348468) , 
9, 0.0245404, 1, 0, 0.422052,0.0244338) , 
3, 0.367991, 1, 0, 0.640761,0.014518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154851,-0.00105476) , 
10, 0.806628, 1, 0, 0.532321,0.00771921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356009,-0.000711334) , 
6, 0.747891, 1, 0, 0.499963,0.00321378)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981854,-0.00325744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929799,0.00331616) , 
6, 0.208729, 1, 0, 0.961822,0.00496467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772298,-0.00311347) , 
11, 0.532923, 1, 0, 0.91316,-0.00560328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85107,0.00503783) , 
7, 0.159643, 1, 0, 0.900397,0.0040619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925088,-0.00180512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245454,-0.00287456) , 
17, 0.578184, 1, 0, 0.457529,-0.0320089) , 
16, 0.153481, 1, 0, 0.716092,-0.0109494) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668643,0.00213652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471839,0.00406046) , 
16, 0.177017, 1, 0, 0.568932,0.0493236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174437,0.000605968) , 
10, 0.61129, 1, 0, 0.287938,0.0208455) , 
11, 0.823024, 1, 0, 0.522638,0.00341659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409718,-0.0010485) , 
13, 1.22718, 1, 0, 0.499974,-0.00222416)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994332,0.0112524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936329,-0.00543844) , 
11, 0.414996, 1, 0, 0.964931,-0.00128929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349928,0.00106977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47101,0.00531836) , 
6, 0.226492, 1, 0, 0.411336,0.037124) , 
11, 0.602747, 1, 0, 0.687671,0.0179494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548812,-0.00172845) , 
9, 0.0377618, 1, 0, 0.654361,0.0100116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.307066,-4.90816e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73338,-0.00296298) , 
4, 0.232269, 1, 0, 0.462119,-0.017989) , 
6, 0.372621, 1, 0, 0.563551,-0.00321514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421513,0.00177009) , 
14, 0.0950079, 1, 0, 0.535575,0.00269692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317673,-0.00372638) , 
14, 0.124242, 1, 0, 0.508843,-0.00501584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544242,9.33463e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42215,0.00246657) , 
9, 0.0409719, 1, 0, 0.478026,0.0224666) , 
14, 0.150868, 1, 0, 0.502669,0.000490189)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116647,-0.00147808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298272,0.00351453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48313,-0.000764365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982757,0.00681712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768131,0.00302454) , 
3, 0.335228, 1, 0, 0.869079,0.0347998) , 
12, 0.116054, 1, 0, 0.714851,0.0147137) , 
5, 0.0158723, 1, 0, 0.562021,0.0299989) , 
12, 0.055314, 1, 0, 0.427926,0.0150529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86261,-0.0029896) , 
12, 0.313463, 1, 0, 0.465313,0.0116195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961531,0.000291526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721356,-0.00378742) , 
6, 0.393157, 1, 0, 0.870399,-0.0230214) , 
5, 0.0449718, 1, 0, 0.549522,0.00441834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250102,-0.00055981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6402,-0.00350636) , 
5, 0.0187293, 1, 0, 0.351829,-0.0219233) , 
15, 0.251667, 1, 0, 0.501085,-0.00203556)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972603,0.00319126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687819,-0.00558723) , 
8, 0.03074, 1, 0, 0.865838,-0.0143879) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832714,-0.000692618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904975,0.00458731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385867,0.00414907) , 
10, 0.491223, 1, 0, 0.594389,0.0451878) , 
6, 0.184147, 1, 0, 0.676027,0.028756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422841,-0.000572317) , 
6, 0.408336, 1, 0, 0.573317,0.0132368) , 
13, 0.59457, 1, 0, 0.664833,0.00459431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168992,-0.00261804) , 
16, 0.358056, 1, 0, 0.566871,-0.00299184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597322,0.00183089) , 
13, 1.01077, 1, 0, 0.572478,0.00358974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254473,-0.00157935) , 
3, 0.854198, 1, 0, 0.494761,-0.00530305)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898237,-1.47289e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547339,0.00309793) , 
10, 0.327753, 1, 0, 0.733862,0.0172115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664641,-0.00165836) , 
14, 0.0147045, 1, 0, 0.70788,0.00358954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703635,0.00519196) , 
15, 0.0357123, 1, 0, 0.706592,0.0194376) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987965,0.00846039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915136,-0.000897103) , 
10, 0.45184, 1, 0, 0.958051,0.0072451) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664795,-0.000598487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426201,-0.00248941) , 
13, 0.962405, 1, 0, 0.512977,-0.0393954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306316,-0.000522189) , 
16, 0.202844, 1, 0, 0.434292,-0.0274416) , 
17, 0.411639, 1, 0, 0.586628,-0.017353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208773,0.000274809) , 
8, 0.0481859, 1, 0, 0.434589,-0.00856202) , 
15, 0.060713, 1, 0, 0.505362,-0.00127677)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990406,0.00482952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943294,-0.00429937) , 
10, 0.430252, 1, 0, 0.972349,-0.00198898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9328,0.00463971) , 
11, 0.449451, 1, 0, 0.958572,0.0078248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761514,-0.00362708) , 
7, 0.231717, 1, 0, 0.904842,-0.00222327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606427,0.00309495) , 
11, 0.715604, 1, 0, 0.830831,0.00881653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203467,-0.0012457) , 
3, 0.548894, 1, 0, 0.61628,-0.00137798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702913,-0.00580353) , 
13, 1.05775, 1, 0, 0.62385,-0.00901204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277207,0.000706665) , 
3, 0.756598, 1, 0, 0.502491,-0.0011393)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955843,0.00751726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97132,-0.000332585) , 
2, 0.0345409, 1, 0, 0.965364,0.00858799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952485,-0.000587105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686771,-0.00289405) , 
10, 0.425586, 1, 0, 0.823715,-0.017886) , 
9, 0.035199, 1, 0, 0.903595,-0.00295648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76149,0.0045418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427158,-0.00130938) , 
16, 0.175276, 1, 0, 0.592449,0.0200326) , 
11, 0.620104, 1, 0, 0.812135,0.00380105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659753,-0.000472673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515521,0.00379519) , 
14, 0.0681844, 1, 0, 0.573987,0.0399557) , 
11, 0.79032, 1, 0, 0.732776,0.0158491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18567,0.00042861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219426,-0.00106803) , 
3, 0.768562, 1, 0, 0.205119,-0.00908654) , 
17, 0.992903, 1, 0, 0.508773,0.00526337)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96194,-0.00992009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979309,0.0011274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988828,0.0115237) , 
17, 0.239207, 1, 0, 0.983719,0.014314) , 
9, 0.0179328, 1, 0, 0.976767,0.00536681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796577,-0.00741448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189669,-0.00048681) , 
7, 0.481004, 1, 0, 0.377212,-0.0221187) , 
17, 0.406655, 1, 0, 0.637119,-0.0102038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760493,0.000541942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601611,0.00363886) , 
7, 0.182122, 1, 0, 0.680779,0.0325094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282907,-4.40876e-05) , 
10, 0.620431, 1, 0, 0.490473,0.0165979) , 
6, 0.342264, 1, 0, 0.573245,0.00147013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255154,-0.00107378) , 
3, 0.875486, 1, 0, 0.506649,-0.00351725)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947633,0.0107822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65605,-0.000538634) , 
13, 0.741307, 1, 0, 0.807415,0.0104794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675722,-0.00353833) , 
14, 0.0211155, 1, 0, 0.763758,-0.00202882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744613,0.00759689) , 
15, 0.0468221, 1, 0, 0.758665,0.0136921) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939979,-0.00327525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555518,-0.00464309) , 
11, 0.494262, 1, 0, 0.740133,-0.0525774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562405,-0.00332592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205315,-0.000394448) , 
11, 0.701893, 1, 0, 0.302815,-0.0154369) , 
16, 0.0980692, 1, 0, 0.402155,-0.0238737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910442,0.0014471) , 
12, 0.239599, 1, 0, 0.456627,-0.0202131) , 
15, 0.0746264, 1, 0, 0.544957,-0.0102976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444119,-0.000469558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346124,0.00189955) , 
14, 0.0607617, 1, 0, 0.385705,0.0186979) , 
11, 1.08827, 1, 0, 0.500989,-0.00229215)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166777,-0.000653113) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965381,-0.00285199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911967,0.00319741) , 
17, 0.455751, 1, 0, 0.9394,0.00841119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591826,0.00394983) , 
17, 0.749785, 1, 0, 0.797346,0.0393878) , 
2, 0.010797, 1, 0, 0.57918,0.0224504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89176,-0.00598604) , 
4, 0.470032, 1, 0, 0.647457,0.0108533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335481,-8.78156e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169205,-0.000966686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590938,-0.00322859) , 
12, 0.0886401, 1, 0, 0.280482,-0.0283914) , 
14, 0.0962216, 1, 0, 0.301513,-0.0181156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8478,-0.00425224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919217,0.0052261) , 
14, 0.0688461, 1, 0, 0.886631,0.00809859) , 
4, 0.301979, 1, 0, 0.407623,-0.0133617) , 
9, 0.0317281, 1, 0, 0.497999,-0.00423687)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87461,0.000411712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705859,0.0028182) , 
10, 0.249092, 1, 0, 0.78056,0.0289255) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9958,0.0070801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99259,0.0144119) , 
3, 0.136973, 1, 0, 0.994147,0.0124846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798663,-0.00435072) , 
6, 0.307155, 1, 0, 0.930358,-0.00786726) , 
4, 0.28949, 1, 0, 0.866633,0.00778453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213893,1.13401e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459606,-0.0037099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844763,-0.00444905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81219,0.00170392) , 
8, 0.0154762, 1, 0, 0.828349,-0.00704596) , 
12, 0.146535, 1, 0, 0.687795,-0.0370869) , 
2, 0.0180318, 1, 0, 0.454261,-0.0187199) , 
10, 0.423475, 1, 0, 0.645507,-0.00642792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435279,0.0033802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15354,-5.29896e-06) , 
10, 0.636716, 1, 0, 0.234511,0.0167329) , 
8, 0.0493319, 1, 0, 0.501208,0.00170379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662207,0.00483211) , 
14, 0.252099, 1, 0, 0.509369,0.00494061)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290403,-0.00254811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650931,0.00185355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181049,-0.00150636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192114,-0.000380279) , 
9, 0.0478968, 1, 0, 0.188091,-0.0132593) , 
10, 0.507527, 1, 0, 0.274171,-0.00514737) , 
15, 0.101188, 1, 0, 0.278724,-0.0156145) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99058,-0.0037393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955188,-0.0239017) , 
6, 0.129361, 1, 0, 0.973255,-0.0142878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979329,0.0106149) , 
6, 0.212829, 1, 0, 0.97533,0.00329156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795052,-0.00198138) , 
17, 0.474827, 1, 0, 0.913365,-0.0067195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878655,0.000779317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821552,0.0051999) , 
8, 0.0192537, 1, 0, 0.852407,0.0443279) , 
10, 0.485968, 1, 0, 0.893053,0.0102906) , 
4, 0.216253, 1, 0, 0.507407,-0.00597133)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972711,-0.0102997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968099,0.00295193) , 
13, 0.695746, 1, 0, 0.970523,-0.0016926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645707,-0.00430493) , 
11, 0.548345, 1, 0, 0.819654,-0.019961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39917,0.00123881) , 
11, 0.820439, 1, 0, 0.723495,-0.0114383) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911207,-9.58257e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67492,0.00428464) , 
10, 0.415908, 1, 0, 0.787369,0.0280718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253674,-0.000439783) , 
10, 0.607592, 1, 0, 0.496255,0.00916534) , 
14, 0.0690704, 1, 0, 0.588604,0.000792115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244655,-0.00225439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408644,-9.91001e-05) , 
11, 1.28091, 1, 0, 0.313964,-0.0238877) , 
11, 0.995363, 1, 0, 0.486544,-0.00837926)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434444,0.000644666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220266,-0.00173125) , 
7, 0.243504, 1, 0, 0.315394,-0.00848284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647419,-0.00212061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738087,-0.00668671) , 
12, 0.108622, 1, 0, 0.692131,-0.0592452) , 
5, 0.0189825, 1, 0, 0.452794,-0.0269964) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876667,-0.00618386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976558,-0.0100317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87608,0.00189862) , 
6, 0.238165, 1, 0, 0.925646,0.0058687) , 
2, 0.0330965, 1, 0, 0.910804,-0.00731465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834235,0.00300625) , 
10, 0.584819, 1, 0, 0.895784,0.00236731) , 
12, 0.138817, 1, 0, 0.67847,-0.0120374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106054,-0.00057506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51978,0.00347126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506189,0.00106023) , 
6, 0.344379, 1, 0, 0.511518,0.0377337) , 
2, 0.00261314, 1, 0, 0.246109,0.00781562) , 
8, 0.0403462, 1, 0, 0.491848,-0.00346812)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99952,0.0190525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699248,-0.00616041) , 
3, 0.13375, 1, 0, 0.855363,-0.0183271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859568,-0.000368807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252663,0.00245493) , 
16, 0.204055, 1, 0, 0.541105,0.0175579) , 
13, 0.586887, 1, 0, 0.666886,0.00319496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15968,-0.0017611) , 
16, 0.38546, 1, 0, 0.532322,-0.0038006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448564,0.00343558) , 
6, 0.357187, 1, 0, 0.516983,0.00538132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413173,-0.00131315) , 
6, 0.455422, 1, 0, 0.491833,-0.00153135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392458,0.000772317) , 
6, 0.683139, 1, 0, 0.468193,0.00304925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858393,-0.00452857) , 
5, 0.055768, 1, 0, 0.505517,-0.000618002)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203117,0.000770892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24885,-0.00147287) , 
12, 0.0508465, 1, 0, 0.225807,-0.0070893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646907,0.00207356) , 
12, 0.0740916, 1, 0, 0.32311,0.00255734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141406,-0.00153347) , 
3, 0.740987, 1, 0, 0.230206,-0.0127795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75206,-0.00385568) , 
4, 0.193032, 1, 0, 0.273729,-0.0161815) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994763,0.0123979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946455,-0.00714858) , 
13, 0.66981, 1, 0, 0.970946,-0.00340348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842546,0.00243824) , 
13, 0.87566, 1, 0, 0.921381,0.0102047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730708,-0.00315695) , 
8, 0.0350474, 1, 0, 0.876641,-0.00326731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976668,-0.00337963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796536,0.00354095) , 
3, 0.285104, 1, 0, 0.868705,0.0359107) , 
14, 0.0836738, 1, 0, 0.873841,0.0105548) , 
12, 0.121902, 1, 0, 0.50198,-0.00601241)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991075,0.00505129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966932,0.00623536) , 
6, 0.163538, 1, 0, 0.978769,0.00956748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891851,-0.00424112) , 
13, 0.687502, 1, 0, 0.944151,-0.00260095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740023,0.00490455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364619,-0.000544007) , 
16, 0.263262, 1, 0, 0.526391,0.0158997) , 
16, 0.16846, 1, 0, 0.776449,0.00482581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455875,-0.00191973) , 
6, 0.379123, 1, 0, 0.693258,-0.00421353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156871,-0.000306991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371874,0.00127756) , 
6, 0.377913, 1, 0, 0.2754,0.0100845) , 
11, 0.856366, 1, 0, 0.533723,0.00124534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392762,-0.00120296) , 
13, 1.16928, 1, 0, 0.500614,-0.00532405)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717388,0.000855695) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211197,0.000243083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0924068,-0.00100004) , 
17, 1.03171, 1, 0, 0.132697,-0.00760487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366547,-0.00187914) , 
2, 0.0137496, 1, 0, 0.194499,-0.0159961) , 
10, 0.404973, 1, 0, 0.274757,-0.0115928) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968766,-0.00213112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943153,0.00767298) , 
6, 0.227691, 1, 0, 0.958196,0.0156777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945483,0.00115513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754623,-0.00575135) , 
6, 0.26565, 1, 0, 0.865816,-0.0263082) , 
14, 0.056266, 1, 0, 0.912352,-0.0051581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759041,0.00259628) , 
6, 0.483885, 1, 0, 0.860359,0.0141054) , 
2, 0.020625, 1, 0, 0.497853,-0.0018026)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940986,-0.00788218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72314,0.00466689) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322245,0.00345885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93528,-0.00203329) , 
5, 0.015958, 1, 0, 0.691813,0.0132707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452962,-0.00123322) , 
13, 0.826333, 1, 0, 0.600437,0.00245358) , 
9, 0.0152508, 1, 0, 0.628376,0.00917074) , 
10, 0.187269, 1, 0, 0.684671,0.00379249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898245,0.000693899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267157,-0.00243245) , 
16, 0.119907, 1, 0, 0.467313,-0.0232083) , 
9, 0.0457557, 1, 0, 0.617641,-0.00453421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492001,0.00152842) , 
6, 0.535163, 1, 0, 0.587863,0.00344972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268409,-0.000910977) , 
3, 0.858883, 1, 0, 0.510715,-0.0019333)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112038,-0.00273695) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249119,0.00115252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566633,0.00371993) , 
5, 0.0173735, 1, 0, 0.347879,0.0359987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874587,0.00253374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727859,-0.00168011) , 
15, 0.0763821, 1, 0, 0.803608,-0.000134337) , 
5, 0.0316454, 1, 0, 0.490491,0.0246915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812742,-0.00242779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934892,0.00488503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897811,-0.00248975) , 
2, 0.0476155, 1, 0, 0.916839,0.00807921) , 
4, 0.364468, 1, 0, 0.887293,-0.00217581) , 
12, 0.168196, 1, 0, 0.639403,0.0146087) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763791,-0.000632382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572988,-0.0037381) , 
7, 0.0882178, 1, 0, 0.66828,-0.0351073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301004,0.000451501) , 
7, 0.249952, 1, 0, 0.49643,-0.0150431) , 
14, 0.128819, 1, 0, 0.601737,0.006797) , 
12, 0.052624, 1, 0, 0.4978,-0.00268425)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863862,-0.00505876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877308,0.00424094) , 
8, 0.0178545, 1, 0, 0.869946,-0.00334833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458996,-0.00194109) , 
13, 0.827982, 1, 0, 0.652476,-0.0241154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438429,-0.00460293) , 
8, 0.0379416, 1, 0, 0.616486,-0.0349515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418357,0.00138705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236185,-0.000657338) , 
16, 0.331414, 1, 0, 0.313092,0.00350415) , 
16, 0.23652, 1, 0, 0.51749,-0.0224036) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901831,-0.0047195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93596,0.00176738) , 
9, 0.0207637, 1, 0, 0.918249,-0.00814732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887546,0.00503385) , 
10, 0.534451, 1, 0, 0.910102,0.00934727) , 
12, 0.191561, 1, 0, 0.636301,-0.0127953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408855,0.00164306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130801,-0.000253433) , 
16, 0.241924, 1, 0, 0.225105,0.00894162) , 
8, 0.0509244, 1, 0, 0.494657,-0.00530763)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849833,-0.00259237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622577,-0.00540678) , 
10, 0.321249, 1, 0, 0.739213,-0.0549201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725407,0.00219265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319809,0.000289775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222636,-0.000685447) , 
9, 0.0190001, 1, 0, 0.258299,-0.00499481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774239,-0.00355035) , 
12, 0.128033, 1, 0, 0.375879,-0.0134685) , 
16, 0.145664, 1, 0, 0.438818,-0.00475995) , 
16, 0.107041, 1, 0, 0.52023,-0.0183541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929343,0.00407109) , 
12, 0.261219, 1, 0, 0.585459,-0.0115972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915885,-0.0173261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216139,0.000466555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80378,0.00150736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851756,0.00507043) , 
14, 0.117764, 1, 0, 0.827342,0.0497946) , 
1, 0.176781, 1, 0, 0.380398,0.0190283) , 
11, 0.406273, 1, 0, 0.44465,0.0112315) , 
14, 0.0785898, 1, 0, 0.517849,-0.000635917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331923,-0.00243009) , 
15, 0.36451, 1, 0, 0.498232,-0.00491826)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98081,0.00346095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973793,0.0101604) , 
10, 0.344202, 1, 0, 0.977973,0.0151914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852661,-0.00252901) , 
15, 0.195123, 1, 0, 0.938962,0.00501357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777974,0.000777171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522297,0.00380359) , 
8, 0.033767, 1, 0, 0.652547,0.0307318) , 
11, 0.562113, 1, 0, 0.845771,0.0133816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352769,-0.00205677) , 
16, 0.255801, 1, 0, 0.745115,0.00579708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347476,0.00275372) , 
11, 0.795869, 1, 0, 0.673277,0.0115812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22398,-0.00192677) , 
11, 0.901864, 1, 0, 0.576385,0.00283854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319572,0.00250101) , 
11, 1.06962, 1, 0, 0.537752,0.00837374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396467,-0.00103556) , 
13, 1.14589, 1, 0, 0.502097,0.000497569)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699573,-0.00176682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972191,0.00842091) , 
1, 0.129953, 1, 0, 0.834032,0.00311146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252593,0.00235972) , 
17, 0.708095, 1, 0, 0.427021,0.0279118) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86647,-0.00765145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963048,-0.00812242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921981,0.00321129) , 
17, 0.314111, 1, 0, 0.944361,0.00167608) , 
12, 0.172121, 1, 0, 0.913375,-0.0168819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897476,0.00249226) , 
9, 0.0365896, 1, 0, 0.907942,-0.00402499) , 
2, 0.0241547, 1, 0, 0.649794,0.0131179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260775,-0.000241606) , 
3, 0.751618, 1, 0, 0.508815,0.00668474)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972194,0.00179873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937334,-0.00774107) , 
4, 0.496269, 1, 0, 0.954312,-0.00921454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973951,0.00682783) , 
14, 0.0602063, 1, 0, 0.961745,0.00248113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848492,-0.00511558) , 
17, 0.447083, 1, 0, 0.935725,-0.00626459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91577,0.0040203) , 
14, 0.146237, 1, 0, 0.931358,0.000869148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464032,0.00372767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385414,0.00262084) , 
11, 0.853307, 1, 0, 0.423663,0.0437508) , 
17, 0.600033, 1, 0, 0.793297,0.0125303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183187,-0.00070373) , 
8, 0.0478178, 1, 0, 0.556471,0.00362635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370142,-0.00146075) , 
6, 0.540883, 1, 0, 0.513559,-0.00360842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455504,0.00158905) , 
11, 1.2673, 1, 0, 0.504645,0.00253179)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999269,0.0159948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962256,-0.0111873) , 
6, 0.141539, 1, 0, 0.982286,-0.00127863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939272,0.00558657) , 
6, 0.232859, 1, 0, 0.968724,0.00812491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689263,0.000265709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306427,-0.00290692) , 
14, 0.0693959, 1, 0, 0.460138,-0.0242856) , 
7, 0.265224, 1, 0, 0.728421,-0.00718882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923447,-0.00221969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443009,0.0034579) , 
3, 0.463232, 1, 0, 0.637269,0.0260289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182408,0.000151749) , 
10, 0.694825, 1, 0, 0.39318,0.0132389) , 
13, 0.741307, 1, 0, 0.547949,0.00380817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362219,-0.00122884) , 
6, 0.539811, 1, 0, 0.502246,-0.00313777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416512,0.000897694) , 
11, 1.31766, 1, 0, 0.489713,0.000404737)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413961,0.00213119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935257,0.00331664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822983,-0.00443412) , 
7, 0.161748, 1, 0, 0.884221,-0.00863121) , 
12, 0.121902, 1, 0, 0.70053,0.0073737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686004,0.00444726) , 
15, 0.0357135, 1, 0, 0.696244,0.0188359) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847659,0.000962267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656834,-0.00542183) , 
15, 0.206347, 1, 0, 0.763455,-0.0229539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316426,-0.000262654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271993,0.00144613) , 
15, 0.183941, 1, 0, 0.295874,0.0093304) , 
11, 0.674382, 1, 0, 0.39773,0.00229769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33707,-0.0017683) , 
15, 0.346421, 1, 0, 0.386913,-0.0036492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849661,-0.00573368) , 
1, 0.406431, 1, 0, 0.441097,-0.00842167) , 
15, 0.060713, 1, 0, 0.506666,-0.0014168)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894737,0.00156569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520066,-0.00374571) , 
13, 0.800334, 1, 0, 0.69404,-0.0282721) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918004,-0.001406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655795,0.000898657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955699,0.00726047) , 
12, 0.2058, 1, 0, 0.770032,0.0251213) , 
10, 0.344202, 1, 0, 0.826698,0.0129248) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622759,0.00108346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386277,-0.00241595) , 
6, 0.252151, 1, 0, 0.511785,-0.0110608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258441,0.00164706) , 
13, 0.735027, 1, 0, 0.377911,0.00721501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228398,-0.00121034) , 
13, 0.937186, 1, 0, 0.31299,-0.00480203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25939,-0.00272322) , 
14, 0.169133, 1, 0, 0.303543,-0.0119116) , 
8, 0.0204933, 1, 0, 0.482269,-0.00342669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442204,0.00148577) , 
11, 1.2707, 1, 0, 0.476049,0.00245675) , 
15, 0.0192527, 1, 0, 0.501591,-0.00114373)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889696,-0.00135663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910976,0.00118832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768375,0.00436338) , 
10, 0.381235, 1, 0, 0.837066,0.0326642) , 
16, 0.0543685, 1, 0, 0.85883,0.0155066) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510919,0.00147384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104964,-0.00103779) , 
17, 0.849166, 1, 0, 0.174592,-0.00819244) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94589,-0.0101178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754979,0.00139011) , 
8, 0.0306326, 1, 0, 0.852059,-0.0031336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416538,-0.00333067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806298,-0.00160113) , 
1, 0.260249, 1, 0, 0.552832,-0.0535001) , 
6, 0.274396, 1, 0, 0.680661,-0.0319837) , 
2, 0.0158227, 1, 0, 0.384888,-0.0180788) , 
7, 0.120567, 1, 0, 0.510493,-0.00917795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452797,0.00121093) , 
11, 1.29214, 1, 0, 0.501815,-0.00356175)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967958,0.00319274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892207,-0.00982272) , 
15, 0.0351793, 1, 0, 0.926177,-0.0199581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957993,0.00587475) , 
14, 0.0909993, 1, 0, 0.934665,-0.0085797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53291,-0.00317396) , 
11, 0.83244, 1, 0, 0.805471,-0.029085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853835,0.00338891) , 
16, 0.193454, 1, 0, 0.814961,-0.0181043) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290489,0.00110145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14187,-0.000611927) , 
3, 0.67624, 1, 0, 0.193373,-0.000122123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911921,-5.45842e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766953,0.0032046) , 
17, 0.605443, 1, 0, 0.840777,0.0322081) , 
4, 0.219147, 1, 0, 0.339429,0.00717164) , 
10, 0.449446, 1, 0, 0.504791,-0.00161785)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697457,-0.00612383) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842246,0.000249244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602473,0.00344808) , 
11, 0.756026, 1, 0, 0.735826,0.0311131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200908,-0.000978898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164365,0.00062833) , 
13, 0.846813, 1, 0, 0.178973,-0.000389689) , 
10, 0.529785, 1, 0, 0.320714,0.00762903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907422,-0.00448294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979697,-0.00148462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959554,0.00793505) , 
13, 0.727377, 1, 0, 0.969604,0.0217551) , 
12, 0.195222, 1, 0, 0.947699,0.00579075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786935,-0.00568948) , 
8, 0.0261682, 1, 0, 0.901426,-0.0132298) , 
12, 0.137328, 1, 0, 0.498872,0.00122973) , 
9, 0.011733, 1, 0, 0.519274,-0.00365265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401614,-0.00127023) , 
13, 1.23404, 1, 0, 0.496331,-0.00866068)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545109,0.00174048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0904454,-0.001043) , 
17, 0.893613, 1, 0, 0.197561,-0.0053111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972814,-0.011653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509261,-0.00317104) , 
3, 0.239344, 1, 0, 0.697418,-0.0374653) , 
5, 0.0155346, 1, 0, 0.399117,-0.0182765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935976,0.00505216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95145,0.000824652) , 
2, 0.0513941, 1, 0, 0.944359,0.0135334) , 
2, 0.0371787, 1, 0, 0.53709,-0.0102271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510619,-0.000324355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353398,0.0021395) , 
7, 0.275698, 1, 0, 0.441292,0.0139483) , 
6, 0.526639, 1, 0, 0.50386,-0.00184132)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376913,-0.00260652) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947443,0.000602348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930305,-0.0150898) , 
2, 0.0465194, 1, 0, 0.938433,-0.0179304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773916,0.00109242) , 
13, 0.995708, 1, 0, 0.881234,-0.00473339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872577,-0.00501678) , 
12, 0.30088, 1, 0, 0.87918,-0.0118486) , 
1, 0.209529, 1, 0, 0.73605,-0.0254757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685928,0.00166071) , 
7, 0.269615, 1, 0, 0.729452,-0.0192121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493824,-0.00356403) , 
7, 0.343766, 1, 0, 0.696583,-0.0245943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714911,0.00123111) , 
14, 0.202555, 1, 0, 0.698595,-0.0201977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.369006,0.00217316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146403,0.00012756) , 
17, 0.989145, 1, 0, 0.19993,0.00931421) , 
7, 0.438307, 1, 0, 0.494602,-0.00812503)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767181,0.00396593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990183,0.00558558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596893,-0.00521637) , 
3, 0.146596, 1, 0, 0.771458,-0.0318663) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994492,0.0153732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685315,-0.00134024) , 
3, 0.274524, 1, 0, 0.813365,-0.0037911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406478,0.00267268) , 
10, 0.611464, 1, 0, 0.676579,0.0105988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334167,0.000293339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138652,-0.000765902) , 
3, 0.670117, 1, 0, 0.194722,-0.00704337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677688,-0.00264908) , 
5, 0.0341151, 1, 0, 0.265205,-0.013223) , 
11, 0.772825, 1, 0, 0.41144,-0.00475481) , 
13, 0.600911, 1, 0, 0.491779,-0.0108048) , 
9, 0.00717313, 1, 0, 0.51629,-0.00723578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460272,0.00200952) , 
11, 1.26801, 1, 0, 0.507934,0.000658626)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95321,-0.00513273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979546,0.00399276) , 
4, 0.361583, 1, 0, 0.968377,-0.00165843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934987,0.00652031) , 
17, 0.503305, 1, 0, 0.95796,0.0125262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536009,-0.00539505) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412632,0.000805913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147607,-0.00189494) , 
11, 0.782109, 1, 0, 0.2231,-0.0175535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768365,-0.00500545) , 
5, 0.0356627, 1, 0, 0.344564,-0.026792) , 
13, 0.657652, 1, 0, 0.378026,-0.0318212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510014,0.00227173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49153,0.00015812) , 
15, 0.351974, 1, 0, 0.500642,0.013463) , 
14, 0.155408, 1, 0, 0.40626,-0.0213939) , 
10, 0.324155, 1, 0, 0.542503,-0.0130173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207227,-0.000287897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721439,0.0022407) , 
0, 0.105587, 1, 0, 0.368791,0.0114688) , 
11, 1.07808, 1, 0, 0.493033,-0.00604417)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992648,0.00632072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987481,0.0104998) , 
13, 0.668455, 1, 0, 0.990394,0.0115494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886884,-0.00432367) , 
17, 0.41629, 1, 0, 0.95111,-0.0011444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837455,0.00343948) , 
10, 0.507547, 1, 0, 0.929172,0.00441126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782249,-0.00352723) , 
9, 0.0537985, 1, 0, 0.903346,-0.00166073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514968,0.00364865) , 
3, 0.447788, 1, 0, 0.792031,0.0145359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335583,-0.00151275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196592,0.000591223) , 
8, 0.0491785, 1, 0, 0.264945,-0.0107942) , 
3, 0.60099, 1, 0, 0.507191,0.00084738)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938106,0.00901179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948837,-0.0104666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990702,0.0085888) , 
5, 0.0397001, 1, 0, 0.968228,-0.00778981) , 
0, 0.154505, 1, 0, 0.958484,0.00303571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43685,-0.00259636) , 
8, 0.0355245, 1, 0, 0.806399,-0.00591638) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24806,-0.00244082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87792,0.00243137) , 
0, 0.118048, 1, 0, 0.400481,-0.0245625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811096,-0.00715588) , 
0, 0.188162, 1, 0, 0.49039,-0.0336271) , 
6, 0.254517, 1, 0, 0.638433,-0.0206452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566876,-7.02508e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283686,0.00225814) , 
16, 0.160913, 1, 0, 0.404704,0.0192059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241554,-0.000781876) , 
14, 0.0911426, 1, 0, 0.326115,0.00285945) , 
11, 0.907694, 1, 0, 0.49452,-0.00981449)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894953,-0.00581959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566477,0.0021621) , 
13, 0.711241, 1, 0, 0.723519,0.00374787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534995,-0.00391071) , 
6, 0.352564, 1, 0, 0.648941,-0.0254865) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157061,-0.00131952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847597,0.00171261) , 
12, 0.074896, 1, 0, 0.448484,-0.00497549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481511,0.00159986) , 
6, 0.371745, 1, 0, 0.461238,0.00847991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88176,-0.00590845) , 
1, 0.406431, 1, 0, 0.552846,-0.00069801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499787,0.00242855) , 
9, 0.0369667, 1, 0, 0.537924,0.00857841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223113,0.000331372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638482,-0.00254727) , 
5, 0.0183421, 1, 0, 0.364284,-0.0112372) , 
9, 0.0465452, 1, 0, 0.455142,-0.000868614) , 
14, 0.0336132, 1, 0, 0.497051,-0.00619221)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199992,0.000955784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885643,-0.00204671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424722,-0.00266859) , 
13, 0.745506, 1, 0, 0.689712,-0.02794) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991163,0.00391712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950194,-0.0090507) , 
11, 0.346319, 1, 0, 0.971086,-0.00713348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964504,0.00788587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764001,-0.0001768) , 
17, 0.507425, 1, 0, 0.887344,0.0239476) , 
6, 0.204967, 1, 0, 0.925159,0.00991241) , 
5, 0.0300529, 1, 0, 0.836176,-0.0043933) , 
0, 0.0715461, 1, 0, 0.602232,0.00192187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30111,0.00201479) , 
11, 1.02857, 1, 0, 0.54368,0.00743985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373492,-0.00142034) , 
6, 0.653414, 1, 0, 0.503016,-0.00215885)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961382,-0.00247618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882018,0.00501213) , 
11, 0.591668, 1, 0, 0.940063,0.00670942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656325,-0.00326387) , 
11, 0.813549, 1, 0, 0.881114,-0.00495781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212999,0.00157333) , 
7, 0.530275, 1, 0, 0.668895,0.00352315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439617,-0.00358651) , 
15, 0.143072, 1, 0, 0.639864,-0.00264602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442998,0.00191426) , 
15, 0.1697, 1, 0, 0.598153,0.00345171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299896,-0.00160915) , 
15, 0.233922, 1, 0, 0.537581,-0.00261452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579054,0.00194186) , 
14, 0.187927, 1, 0, 0.54283,0.00076568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410364,0.00111766) , 
11, 1.15034, 1, 0, 0.512415,0.00612893)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994983,0.0108503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982847,0.0022516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946566,-0.0296814) , 
4, 0.360431, 1, 0, 0.964563,-0.0156386) , 
11, 0.345903, 1, 0, 0.977979,-0.00458334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711025,-0.00301374) , 
3, 0.265411, 1, 0, 0.895852,-0.0147988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888403,0.00140348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741501,0.0051517) , 
14, 0.0593022, 1, 0, 0.813208,0.0393207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361715,3.13086e-05) , 
3, 0.524781, 1, 0, 0.507408,0.0130803) , 
11, 0.608332, 1, 0, 0.673596,0.00115281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104092,-0.00191107) , 
17, 1.07117, 1, 0, 0.51357,-0.00721196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44026,0.00114706) , 
11, 1.29285, 1, 0, 0.502978,-0.00235618)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66806,0.000665264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565935,-0.00188823) , 
16, 0.0931295, 1, 0, 0.613579,-0.0135856) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948765,-0.0114851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981291,0.00532157) , 
9, 0.0204771, 1, 0, 0.965587,-0.00576499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86934,0.00425644) , 
11, 0.605206, 1, 0, 0.932209,0.0144116) , 
4, 0.315557, 1, 0, 0.775107,0.000607501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794017,0.00187486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547679,-0.00177448) , 
16, 0.259285, 1, 0, 0.683387,0.00011151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510174,0.00419214) , 
11, 0.851323, 1, 0, 0.614296,0.028935) , 
16, 0.158321, 1, 0, 0.720346,0.0102538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280807,-0.00190533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210133,0.000443927) , 
10, 0.756655, 1, 0, 0.237563,-0.00793501) , 
10, 0.635213, 1, 0, 0.510663,0.00235402)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745978,0.00288796) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966617,0.00389338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72392,-0.0027347) , 
17, 0.417993, 1, 0, 0.870517,-0.00657821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69696,0.00200194) , 
11, 0.664487, 1, 0, 0.813986,0.00573581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161125,-0.00129009) , 
17, 0.761375, 1, 0, 0.412444,-0.0105536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335203,0.000414653) , 
11, 1.12861, 1, 0, 0.391354,-0.00522596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914393,0.0036191) , 
12, 0.202237, 1, 0, 0.452178,-0.00140216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849102,-0.00616701) , 
12, 0.303359, 1, 0, 0.478047,-0.00435806) , 
9, 0.010559, 1, 0, 0.504336,-0.00116749)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913365,-0.0136358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388429,0.00166098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181134,-0.00193804) , 
14, 0.0557753, 1, 0, 0.26801,-0.00743744) , 
7, 0.288602, 1, 0, 0.436501,-0.0165232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946883,-0.00167415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990605,0.0127718) , 
12, 0.195975, 1, 0, 0.968916,0.008563) , 
2, 0.0376565, 1, 0, 0.602671,-0.00869364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671856,0.00405491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442086,0.000311015) , 
9, 0.0246376, 1, 0, 0.529953,0.0205742) , 
6, 0.328772, 1, 0, 0.581224,-6.14192e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451058,-0.00181492) , 
6, 0.558932, 1, 0, 0.545914,-0.0110615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357437,0.00101824) , 
9, 0.0598344, 1, 0, 0.511252,-0.00584777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421543,0.00193842) , 
14, 0.158033, 1, 0, 0.500557,-0.00152798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52638,-0.00253283) , 
14, 0.223886, 1, 0, 0.502527,-0.00420528)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494675,-0.000870826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370729,-0.00380364) , 
6, 0.259201, 1, 0, 0.436218,-0.0351315) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984996,0.000138411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941382,-0.0152997) , 
10, 0.298051, 1, 0, 0.964785,-0.0128625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852826,0.00184473) , 
3, 0.310784, 1, 0, 0.932557,-0.00322262) , 
12, 0.121111, 1, 0, 0.759287,-0.0143619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757599,0.0025717) , 
14, 0.172676, 1, 0, 0.759033,-0.00932758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603498,0.00183736) , 
6, 0.472121, 1, 0, 0.713787,0.0037738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235633,-0.00154619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165469,-0.000498722) , 
8, 0.0555992, 1, 0, 0.197226,-0.0183512) , 
17, 0.992903, 1, 0, 0.494255,-0.00562905)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994039,0.0104093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643173,-0.00603066) , 
10, 0.350891, 1, 0, 0.81719,-0.0189256) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734256,-0.000133716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45659,-0.00409871) , 
9, 0.0200496, 1, 0, 0.604733,-0.0221821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935625,0.00323151) , 
12, 0.20407, 1, 0, 0.715236,-0.00913551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680832,0.00377351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300646,0.000117982) , 
8, 0.0364051, 1, 0, 0.418976,0.0234439) , 
11, 0.892215, 1, 0, 0.558419,0.00810946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534663,0.0037642) , 
14, 0.134453, 1, 0, 0.554616,0.0150951) , 
6, 0.154894, 1, 0, 0.608591,0.00810171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757879,0.000944591) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109849,-0.00173627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439914,0.000264083) , 
2, 0.0110693, 1, 0, 0.213728,-0.0158337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718202,-0.00429691) , 
12, 0.139212, 1, 0, 0.300053,-0.0244388) , 
16, 0.0795681, 1, 0, 0.38182,-0.0178644) , 
9, 0.037872, 1, 0, 0.498892,-0.00445923)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665153,0.00251634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860983,-0.00267279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994255,0.0067851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934852,0.00529285) , 
3, 0.217504, 1, 0, 0.96359,0.0199597) , 
2, 0.0366812, 1, 0, 0.920364,0.00277381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930711,-0.0130508) , 
4, 0.507008, 1, 0, 0.922977,-0.00583862) , 
5, 0.0185989, 1, 0, 0.854788,0.00523422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51125,0.000761001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283488,-0.00215532) , 
6, 0.337082, 1, 0, 0.356377,-0.0246045) , 
10, 0.586227, 1, 0, 0.681868,-0.00511808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267792,0.00227946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168325,-0.000210653) , 
16, 0.370739, 1, 0, 0.209287,0.0110139) , 
16, 0.288155, 1, 0, 0.524043,0.000269424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396274,-0.00133284) , 
13, 1.22718, 1, 0, 0.497769,-0.00616043)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87514,0.00455075) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980027,-0.00378379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986604,0.00870177) , 
11, 0.335353, 1, 0, 0.983568,0.0047728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880658,-0.00961276) , 
11, 0.534479, 1, 0, 0.955725,-0.00895732) , 
12, 0.105248, 1, 0, 0.940868,-0.00217383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335088,-0.00312252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248156,-0.000827662) , 
11, 0.819006, 1, 0, 0.286465,-0.0307629) , 
3, 0.385177, 1, 0, 0.547809,-0.0193455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445376,-0.000253982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313229,0.00254362) , 
8, 0.0406176, 1, 0, 0.37645,0.0211643) , 
11, 1.04898, 1, 0, 0.49271,-0.00631993)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963674,-0.007714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975654,0.00409647) , 
15, 0.109237, 1, 0, 0.969251,-0.00187608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86999,0.00403068) , 
17, 0.3373, 1, 0, 0.931357,0.0132188) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805624,-0.00133535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363887,-0.00338705) , 
13, 0.742147, 1, 0, 0.622115,-0.0297076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157673,0.00062959) , 
7, 0.56031, 1, 0, 0.37268,-0.00906889) , 
7, 0.21405, 1, 0, 0.603798,0.00015124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267895,0.00191483) , 
11, 1.02893, 1, 0, 0.551368,0.00458039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481237,0.00291631) , 
13, 1.14696, 1, 0, 0.541813,0.0106193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361195,-0.00068282) , 
6, 0.713896, 1, 0, 0.504308,0.00514654)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92007,0.00556657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994764,0.0117862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991139,-0.00154154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901517,-0.00864969) , 
3, 0.150228, 1, 0, 0.941672,-0.0198575) , 
10, 0.245951, 1, 0, 0.960312,-0.00842916) , 
12, 0.122588, 1, 0, 0.95054,0.000142028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650201,-0.00271861) , 
3, 0.358893, 1, 0, 0.897682,-0.00631005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56898,0.00323937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122137,-0.000173732) , 
7, 0.577502, 1, 0, 0.297313,0.020126) , 
3, 0.457591, 1, 0, 0.550126,0.0089939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359179,-0.00120977) , 
6, 0.684529, 1, 0, 0.505779,0.00034549)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956784,-0.0069757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960618,0.00537126) , 
10, 0.277454, 1, 0, 0.95853,-0.0015127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411527,0.00199641) , 
3, 0.335752, 1, 0, 0.6264,0.0180301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387804,-0.000860957) , 
9, 0.0547541, 1, 0, 0.554442,0.0084038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899829,-0.0063092) , 
5, 0.0456711, 1, 0, 0.601618,0.00289654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174382,-0.00104264) , 
3, 0.744551, 1, 0, 0.463667,-0.00375159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422625,0.00121465) , 
11, 1.27864, 1, 0, 0.456727,0.00168785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980439,0.000273977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767953,-0.00594226) , 
6, 0.209259, 1, 0, 0.875253,-0.0340668) , 
4, 0.501368, 1, 0, 0.49905,-0.00192777)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993997,0.0119288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965849,-0.00828421) , 
13, 0.571954, 1, 0, 0.980725,0.00152011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848868,-0.00364624) , 
6, 0.218749, 1, 0, 0.928489,-0.0097774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701798,-0.00132709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671605,0.00341198) , 
14, 0.0341248, 1, 0, 0.683273,0.0322506) , 
11, 0.720031, 1, 0, 0.826779,0.00765483) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127364,-0.00119511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145549,0.000768394) , 
6, 0.287197, 1, 0, 0.138971,0.00177829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35471,-0.00183335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896734,-0.00595204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720851,0.000436698) , 
11, 0.646427, 1, 0, 0.798388,-0.00890198) , 
12, 0.146355, 1, 0, 0.553701,-0.0275137) , 
2, 0.0150265, 1, 0, 0.311276,-0.0103915) , 
10, 0.470611, 1, 0, 0.504124,-0.00364041)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566107,0.00220335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987065,0.000488211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933104,-0.00617147) , 
6, 0.178355, 1, 0, 0.964226,-0.00769789) , 
12, 0.0980022, 1, 0, 0.834998,0.00278531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558984,-0.00255648) , 
9, 0.0430211, 1, 0, 0.738461,-0.00825845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583956,0.00331047) , 
13, 0.721157, 1, 0, 0.711058,-0.0007946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413776,-0.00169306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326869,-0.00399193) , 
13, 0.838688, 1, 0, 0.364461,-0.0402688) , 
13, 0.782543, 1, 0, 0.610183,-0.0122833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799859,0.00209242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415107,-0.00164694) , 
17, 0.746762, 1, 0, 0.542751,-0.016985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275033,0.00200284) , 
10, 0.617341, 1, 0, 0.398162,0.00981877) , 
13, 0.907046, 1, 0, 0.509618,-0.00179996)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80916,-0.00117457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960823,0.00534611) , 
2, 0.0391141, 1, 0, 0.885341,0.00450512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836279,0.00613235) , 
16, 0.056243, 1, 0, 0.86856,0.0256065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745935,-0.000546013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720787,-0.00251014) , 
16, 0.0870516, 1, 0, 0.733467,-0.0191658) , 
16, 0.071711, 1, 0, 0.814491,0.00768694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707164,0.00400495) , 
8, 0.0320332, 1, 0, 0.796248,0.018123) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751435,-0.00248376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565424,0.00259696) , 
14, 0.0604199, 1, 0, 0.654434,0.00589043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36472,-0.0034261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369835,-0.000321866) , 
6, 0.301535, 1, 0, 0.36773,-0.0192242) , 
6, 0.231718, 1, 0, 0.516701,-0.0061746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224758,0.00170687) , 
13, 0.864252, 1, 0, 0.397929,0.00629709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322846,-0.00139193) , 
6, 0.469109, 1, 0, 0.37005,-0.00637847) , 
16, 0.110829, 1, 0, 0.503848,0.00131336)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862677,0.00430582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467032,-0.00360249) , 
13, 0.85369, 1, 0, 0.666518,-0.0225489) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867187,0.00479141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949742,-0.00409839) , 
4, 0.303744, 1, 0, 0.910656,0.0131502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165005,-0.00193454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748937,0.00151862) , 
5, 0.0179755, 1, 0, 0.320336,-0.0148853) , 
10, 0.495622, 1, 0, 0.599028,-0.00164967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472311,0.0018967) , 
13, 1.11939, 1, 0, 0.566454,0.0087209) , 
14, 0.0170843, 1, 0, 0.586064,0.00259259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706746,-0.000339508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431103,-0.00366214) , 
8, 0.0183383, 1, 0, 0.567024,-0.0397271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181887,-0.000132137) , 
7, 0.336668, 1, 0, 0.365993,-0.020067) , 
9, 0.04487, 1, 0, 0.498671,-0.00640584)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208691,0.00068134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399085,0.00050442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112221,-0.0011552) , 
17, 0.893613, 1, 0, 0.183249,-0.0110639) , 
15, 0.121503, 1, 0, 0.191009,-0.00445675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927694,-0.00831783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947368,0.00188387) , 
9, 0.0335199, 1, 0, 0.936197,-0.0105364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639015,0.00216453) , 
3, 0.41713, 1, 0, 0.788813,0.0186427) , 
0, 0.091881, 1, 0, 0.384737,0.00302902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956628,-0.0040391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981567,0.00802132) , 
1, 0.443354, 1, 0, 0.969604,0.00346033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679885,-0.00268795) , 
3, 0.424675, 1, 0, 0.840972,-0.0209764) , 
5, 0.0361008, 1, 0, 0.504168,-0.00325499)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585182,-0.00455034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945872,0.00326128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867167,-0.00685786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840701,-0.000706083) , 
8, 0.0225927, 1, 0, 0.854452,-0.026103) , 
8, 0.012988, 1, 0, 0.883617,-0.0128797) , 
2, 0.0216876, 1, 0, 0.806789,-0.028906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237157,0.000457058) , 
7, 0.486637, 1, 0, 0.634759,-0.0181274) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277773,0.00273513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871118,0.000107954) , 
2, 0.0185989, 1, 0, 0.475045,0.0233431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326216,-0.00033411) , 
6, 0.40073, 1, 0, 0.413187,0.0112172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274892,-0.000717049) , 
11, 1.00224, 1, 0, 0.359078,0.00123679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915103,0.00447945) , 
12, 0.202239, 1, 0, 0.438733,0.00649387) , 
9, 0.023466, 1, 0, 0.499495,-0.00113798)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56233,0.00301109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372188,0.000283847) , 
16, 0.131037, 1, 0, 0.471591,0.0293996) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99912,0.0184163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986526,0.0110726) , 
3, 0.165868, 1, 0, 0.993382,0.0181494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944179,-0.0064599) , 
10, 0.368814, 1, 0, 0.976306,0.00630714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717494,-0.0024889) , 
6, 0.374007, 1, 0, 0.884361,-0.0106782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80813,0.00338798) , 
10, 0.5878, 1, 0, 0.87094,8.58602e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651983,-0.00317346) , 
8, 0.0344608, 1, 0, 0.835431,-0.00917927) , 
5, 0.0179887, 1, 0, 0.739061,0.00103914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.343116,0.000404355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394099,0.00315491) , 
6, 0.413328, 1, 0, 0.372733,0.0382069) , 
8, 0.041846, 1, 0, 0.627531,0.012355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242325,-0.00026873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110098,-0.00189389) , 
15, 0.0972027, 1, 0, 0.157999,-0.0175484) , 
16, 0.318272, 1, 0, 0.506735,0.00466179)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748612,0.000107553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515459,0.00327265) , 
10, 0.369562, 1, 0, 0.643585,0.0320011) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987867,0.00121482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980526,0.00883198) , 
11, 0.40399, 1, 0, 0.98403,0.0123579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749929,-0.00274624) , 
11, 0.675186, 1, 0, 0.903455,-0.00622106) , 
12, 0.118695, 1, 0, 0.809148,0.00764983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87966,0.00285857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334377,-0.00191325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175012,-0.000336101) , 
17, 0.956512, 1, 0, 0.217664,-0.0141102) , 
17, 0.558375, 1, 0, 0.28942,-0.0101709) , 
10, 0.509449, 1, 0, 0.50423,-0.00280536)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400547,-0.00360142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410388,-0.000123579) , 
16, 0.141393, 1, 0, 0.404874,-0.0452241) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98089,0.00067803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869751,-0.00768948) , 
11, 0.513805, 1, 0, 0.938315,-0.0163943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776364,0.00186667) , 
6, 0.431464, 1, 0, 0.874661,0.00296711) , 
12, 0.115452, 1, 0, 0.694246,-0.0155401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231208,-0.00146901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170152,0.00117899) , 
15, 0.0696131, 1, 0, 0.189213,0.00472428) , 
7, 0.481004, 1, 0, 0.474304,-0.00671493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548793,0.00348078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863529,0.00012903) , 
12, 0.109673, 1, 0, 0.693677,0.0335666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208604,-0.000412115) , 
16, 0.159136, 1, 0, 0.430175,0.0118894) , 
14, 0.136674, 1, 0, 0.462612,-0.00178589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934289,0.00531879) , 
12, 0.294411, 1, 0, 0.49909,0.00110944)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918002,0.00313842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796143,-0.00611536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758521,8.73807e-05) , 
14, 0.0490122, 1, 0, 0.781501,-0.0236187) , 
14, 0.0195829, 1, 0, 0.828034,-0.0109839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698775,0.00318035) , 
14, 0.0713392, 1, 0, 0.790731,0.00242309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604077,-0.00180773) , 
14, 0.110253, 1, 0, 0.75016,-0.00332159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814956,0.00420242) , 
14, 0.175721, 1, 0, 0.758251,0.00204166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240903,-0.00453279) , 
16, 0.335663, 1, 0, 0.685858,-0.0067762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442032,-0.00217482) , 
13, 1.17382, 1, 0, 0.628574,-0.0174959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219428,0.000325088) , 
10, 0.721719, 1, 0, 0.500184,-0.0103989)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882192,0.00206305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764037,-0.00338431) , 
14, 0.023965, 1, 0, 0.830202,-0.00456145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740974,0.000611053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434709,0.00323328) , 
10, 0.406079, 1, 0, 0.562653,0.033237) , 
13, 0.813414, 1, 0, 0.682469,0.0163098) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687308,-0.00417386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44687,0.00136769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297202,-0.00152278) , 
9, 0.032172, 1, 0, 0.339692,-0.0124607) , 
16, 0.114225, 1, 0, 0.451313,-0.0267955) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2617,-0.000697034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334514,-0.00140228) , 
15, 0.28555, 1, 0, 0.292876,-0.0125404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29156,0.00171954) , 
6, 0.37332, 1, 0, 0.292166,0.0118438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82485,-0.00259922) , 
12, 0.137697, 1, 0, 0.408522,0.00323648) , 
14, 0.098859, 1, 0, 0.425,-0.00832858) , 
14, 0.0509266, 1, 0, 0.502156,-0.000945142)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997846,0.0174041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996113,0.00980046) , 
2, 0.0364188, 1, 0, 0.996845,0.00827241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973073,-0.00450785) , 
17, 0.370836, 1, 0, 0.989959,0.00462434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486414,0.000139367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828343,-0.010265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848942,-0.00153374) , 
8, 0.0165654, 1, 0, 0.839116,-0.0439117) , 
2, 0.0254341, 1, 0, 0.679797,-0.0229244) , 
3, 0.217472, 1, 0, 0.819806,-0.0104888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645712,0.00114493) , 
13, 1.09083, 1, 0, 0.788545,-0.00469045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264783,-0.00180811) , 
17, 0.901271, 1, 0, 0.625216,-0.0144888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210719,0.000294919) , 
8, 0.0528029, 1, 0, 0.494608,-0.00843272)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645183,0.00246613) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986567,0.00233451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919436,-0.01001) , 
11, 0.461829, 1, 0, 0.953854,-0.0136031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989813,0.0128251) , 
14, 0.0513315, 1, 0, 0.966909,0.000423297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927736,-0.00980495) , 
15, 0.174779, 1, 0, 0.958246,-0.00587225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812581,0.00131961) , 
3, 0.432524, 1, 0, 0.917761,0.00123533) , 
4, 0.154846, 1, 0, 0.860765,0.00896625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230271,-0.00177912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23992,-0.000304023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142351,0.0004969) , 
14, 0.0584813, 1, 0, 0.173044,0.00336577) , 
16, 0.281734, 1, 0, 0.188251,-0.00564087) , 
7, 0.432903, 1, 0, 0.546013,0.00212979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370782,-0.001015) , 
6, 0.679901, 1, 0, 0.503738,-0.00408863)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996633,0.0145783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964762,-0.0220817) , 
6, 0.155189, 1, 0, 0.985172,-0.00327905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88597,0.00420171) , 
3, 0.180408, 1, 0, 0.958159,0.00491318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774329,-0.00412322) , 
6, 0.263837, 1, 0, 0.900277,-0.00908912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201995,0.00115077) , 
17, 0.810777, 1, 0, 0.655678,0.000271372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403979,0.00304064) , 
13, 0.844031, 1, 0, 0.612927,0.00705651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170811,-0.00128417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704585,0.00136357) , 
0, 0.11073, 1, 0, 0.313386,-0.0100911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711892,-0.00424533) , 
5, 0.0464733, 1, 0, 0.367452,-0.0180281) , 
13, 0.915864, 1, 0, 0.494691,-0.00502581)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947671,-0.0131398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984574,0.00693171) , 
4, 0.423571, 1, 0, 0.968186,-0.00553943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934352,0.00377296) , 
9, 0.0351072, 1, 0, 0.954101,0.00361869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780001,-0.0045204) , 
11, 0.541589, 1, 0, 0.918677,-0.00538556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772226,0.00547088) , 
11, 0.657647, 1, 0, 0.889569,0.0107583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515409,-0.00344372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438803,-0.000461777) , 
10, 0.464022, 1, 0, 0.471889,-0.0399407) , 
11, 0.838509, 1, 0, 0.725104,-0.00920492) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346559,0.000155709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278334,0.00241196) , 
11, 0.764288, 1, 0, 0.300751,0.0277656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119185,7.10649e-06) , 
10, 0.711623, 1, 0, 0.192901,0.0113326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74971,0.00399205) , 
5, 0.0210468, 1, 0, 0.253445,0.0174778) , 
7, 0.355386, 1, 0, 0.504322,0.00328517)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987403,-0.00517417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953286,0.00800731) , 
3, 0.18885, 1, 0, 0.971127,0.0165542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376844,-0.00115303) , 
7, 0.389959, 1, 0, 0.77384,0.00627543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801185,-0.00139608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409317,-0.00483405) , 
13, 0.713102, 1, 0, 0.614066,-0.0318416) , 
15, 0.0800797, 1, 0, 0.710562,-0.00882081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396707,0.00390452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922081,-5.66543e-05) , 
12, 0.119853, 1, 0, 0.622714,0.0290616) , 
9, 0.0358657, 1, 0, 0.674326,0.00680523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397726,-0.00147972) , 
6, 0.5142, 1, 0, 0.606087,-0.00178111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491054,0.00160082) , 
11, 1.2006, 1, 0, 0.584334,0.00562201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17026,-0.00162255) , 
10, 0.806628, 1, 0, 0.496389,-0.00113069)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975963,0.000220863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71232,-0.00456337) , 
10, 0.392249, 1, 0, 0.882057,-0.0143064) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98334,0.00924069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583592,-0.000876844) , 
10, 0.350259, 1, 0, 0.776254,0.00546592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62868,0.00491567) , 
15, 0.0996487, 1, 0, 0.71918,0.0216505) , 
13, 0.604417, 1, 0, 0.795192,0.00487008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135896,-0.00242541) , 
10, 0.714604, 1, 0, 0.576958,-0.00815738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673696,-0.00233729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288118,0.00102916) , 
10, 0.542976, 1, 0, 0.432665,-0.00282738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444539,0.00348958) , 
11, 1.04257, 1, 0, 0.436113,0.0157552) , 
6, 0.373379, 1, 0, 0.521958,0.00118044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39599,-0.00154271) , 
13, 1.23332, 1, 0, 0.498108,-0.00577558)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986047,0.00907851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943469,-0.00365938) , 
10, 0.214394, 1, 0, 0.96565,0.00122378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811792,6.51592e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649725,-0.004971) , 
14, 0.0347725, 1, 0, 0.735135,-0.0385512) , 
13, 0.693623, 1, 0, 0.857766,-0.0173914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624835,-0.00270288) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558089,0.00332735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395543,-0.00207253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495252,0.00056461) , 
13, 0.920611, 1, 0, 0.44819,-0.00851303) , 
13, 0.785252, 1, 0, 0.487064,0.0067641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333125,0.00177791) , 
11, 0.90689, 1, 0, 0.398504,0.020849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273722,-0.000323445) , 
9, 0.0549238, 1, 0, 0.353697,0.0112315) , 
13, 0.601775, 1, 0, 0.384814,0.00689449) , 
10, 0.364476, 1, 0, 0.504716,0.000737572)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790488,0.0025014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987674,0.00889642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95992,-0.00307552) , 
4, 0.484987, 1, 0, 0.974739,0.00813978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972675,0.000270732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877861,-0.0118288) , 
10, 0.266172, 1, 0, 0.924941,-0.0258102) , 
7, 0.116696, 1, 0, 0.950682,-0.00826129) , 
4, 0.186101, 1, 0, 0.913016,-0.000463488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580654,0.00185984) , 
10, 0.590221, 1, 0, 0.849487,0.00408996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217766,-0.00131381) , 
3, 0.540735, 1, 0, 0.557402,-0.00751416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341703,0.001743) , 
11, 1.11584, 1, 0, 0.527949,-0.00259071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337176,-0.00169725) , 
6, 0.715644, 1, 0, 0.489776,-0.0101094)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980871,0.00427376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477304,-0.00412341) , 
10, 0.288894, 1, 0, 0.70672,-0.0200272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627159,0.00283033) , 
15, 0.0526122, 1, 0, 0.675225,-0.00385736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641657,-0.00136669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478443,-0.00357542) , 
9, 0.0150291, 1, 0, 0.535688,-0.0527733) , 
6, 0.327143, 1, 0, 0.615303,-0.0248636) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602509,0.00246051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802316,-0.00243694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386935,-0.00188737) , 
6, 0.169314, 1, 0, 0.551277,-0.0169629) , 
9, 0.036326, 1, 0, 0.567674,-0.00536015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32303,-0.0028969) , 
6, 0.261688, 1, 0, 0.489585,-0.0163481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182104,8.82373e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683775,0.00218473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826107,0.00189301) , 
1, 0.310209, 1, 0, 0.738115,0.0399546) , 
1, 0.104765, 1, 0, 0.387385,0.0157426) , 
6, 0.34221, 1, 0, 0.429501,0.00251832) , 
9, 0.027377, 1, 0, 0.490608,-0.00648715)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970387,-0.00899759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960775,0.0019733) , 
10, 0.300187, 1, 0, 0.965124,-0.00250199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917583,0.00338948) , 
11, 0.561155, 1, 0, 0.953815,0.00296251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437482,-0.0021774) , 
17, 0.578896, 1, 0, 0.818567,-0.0055172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674786,0.00179524) , 
6, 0.517513, 1, 0, 0.786075,0.00352125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535407,-0.00136374) , 
9, 0.0547541, 1, 0, 0.723967,-0.00315932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353881,0.00155786) , 
8, 0.0486093, 1, 0, 0.652676,0.00232141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183723,-0.00124861) , 
17, 1.09348, 1, 0, 0.503425,-0.00552655)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786494,0.00265166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355801,-0.00192509) , 
11, 0.576163, 1, 0, 0.521129,-0.00943751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272103,0.00140917) , 
11, 0.786949, 1, 0, 0.397016,0.00699792) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91031,-0.00809325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976999,-0.00244527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914393,0.00404342) , 
6, 0.251231, 1, 0, 0.950968,0.0114757) , 
9, 0.0148293, 1, 0, 0.936472,-0.00329757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859849,-0.00689498) , 
15, 0.12354, 1, 0, 0.910244,-0.0189718) , 
4, 0.216428, 1, 0, 0.657273,-0.00617128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174605,-0.00182578) , 
10, 0.741082, 1, 0, 0.528225,-0.0120769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392116,0.000534544) , 
11, 1.13798, 1, 0, 0.496441,-0.00661763)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854235,0.00247651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319103,-0.00172579) , 
6, 0.382929, 1, 0, 0.451317,-0.026252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88665,0.00450627) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950718,0.00403829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742257,-0.00371512) , 
10, 0.335886, 1, 0, 0.82454,-0.0246103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937192,-0.00206529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89529,0.00507121) , 
10, 0.340253, 1, 0, 0.915433,0.0239213) , 
2, 0.0527728, 1, 0, 0.863778,-0.0036596) , 
2, 0.0340423, 1, 0, 0.868413,0.00601055) , 
2, 0.0210614, 1, 0, 0.700933,-0.0069441) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502741,-0.000947991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245279,-0.00296362) , 
14, 0.0478945, 1, 0, 0.355015,-0.0277439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241965,0.00187262) , 
14, 0.0977091, 1, 0, 0.301908,-0.0028197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22846,0.00206161) , 
11, 0.996438, 1, 0, 0.273076,0.0110541) , 
16, 0.19892, 1, 0, 0.50392,0.00134343)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999274,0.0259824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400482,-0.00384772) , 
3, 0.156861, 1, 0, 0.66134,-0.0192576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157475,-0.000501783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769301,0.00280364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834329,-0.0025551) , 
12, 0.149847, 1, 0, 0.80531,0.00449636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587316,0.00304633) , 
10, 0.459485, 1, 0, 0.708164,0.0300629) , 
5, 0.0139866, 1, 0, 0.458578,0.012865) , 
6, 0.20899, 1, 0, 0.510622,0.00461996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858346,-0.00380057) , 
5, 0.0548723, 1, 0, 0.558997,-0.00037328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459832,-0.003235) , 
14, 0.12248, 1, 0, 0.546014,-0.00613784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669485,0.00361935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249851,0.000312496) , 
16, 0.116619, 1, 0, 0.376952,0.0206979) , 
15, 0.240321, 1, 0, 0.499982,0.00116889)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98976,0.00952721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944409,-0.00416152) , 
15, 0.0816675, 1, 0, 0.966236,-0.000208107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806428,-0.00709459) , 
11, 0.56625, 1, 0, 0.929842,-0.0133672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63291,0.000611126) , 
6, 0.428096, 1, 0, 0.82969,-0.00524999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652513,0.00352593) , 
15, 0.347138, 1, 0, 0.807385,0.00139195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126651,-0.00021633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54095,-0.00364284) , 
4, 0.0929167, 1, 0, 0.199558,-0.0155228) , 
7, 0.366462, 1, 0, 0.518399,-0.00665001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426908,0.00157543) , 
11, 1.20429, 1, 0, 0.501209,0.00111087)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976186,-0.0118106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944463,0.00781329) , 
8, 0.0175711, 1, 0, 0.961115,0.00424203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295009,-0.00309969) , 
11, 0.691088, 1, 0, 0.768663,-0.00699755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666343,0.00223444) , 
6, 0.331613, 1, 0, 0.745384,0.000431485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654346,0.000398083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399517,0.00272219) , 
10, 0.455004, 1, 0, 0.50769,0.0290579) , 
13, 0.915864, 1, 0, 0.636688,0.0135222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384365,-0.00273479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464406,0.0036598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900745,0.00235471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745613,-0.00243298) , 
16, 0.0797064, 1, 0, 0.818187,-0.00808412) , 
5, 0.0181055, 1, 0, 0.646545,0.0232167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167689,-0.000634537) , 
17, 0.964466, 1, 0, 0.40225,0.00584623) , 
14, 0.0883935, 1, 0, 0.398875,-0.0036965) , 
15, 0.124405, 1, 0, 0.502422,0.00380073)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222549,-0.00284475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106402,-0.000465697) , 
16, 0.252003, 1, 0, 0.143238,-0.0195105) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747058,0.00172013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864474,-0.00593676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973751,-0.0149253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973632,0.0056919) , 
17, 0.206727, 1, 0, 0.973675,0.00353996) , 
4, 0.30502, 1, 0, 0.937022,-0.0113449) , 
12, 0.114014, 1, 0, 0.893994,-0.00448081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510509,0.00236553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808721,-0.00105821) , 
2, 0.0380336, 1, 0, 0.63144,0.0223398) , 
13, 0.864238, 1, 0, 0.79632,0.00549678) , 
12, 0.0686642, 1, 0, 0.536598,-0.00444829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390226,0.00099904) , 
11, 1.13466, 1, 0, 0.50144,0.00170868)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966093,0.0078939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479998,-0.00374268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919653,-0.00198077) , 
12, 0.161378, 1, 0, 0.704194,-0.0273161) , 
13, 0.637117, 1, 0, 0.812368,-0.00875094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771176,0.00325134) , 
9, 0.0368083, 1, 0, 0.801233,0.001648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750689,0.00377168) , 
15, 0.212861, 1, 0, 0.789856,0.00970826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219237,-0.00119911) , 
8, 0.044014, 1, 0, 0.550213,-0.00192549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380803,0.00167693) , 
9, 0.0586651, 1, 0, 0.511488,0.00442957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35865,-0.000966327) , 
13, 1.12047, 1, 0, 0.471198,-0.00216452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955885,0.00727098) , 
4, 0.57009, 1, 0, 0.49951,-4.42973e-06)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941056,0.00313902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700809,-0.000815414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844716,-0.0101118) , 
12, 0.173813, 1, 0, 0.77198,-0.0393182) , 
16, 0.0425125, 1, 0, 0.830081,-0.0207325) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842471,-0.00300367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37029,0.00123191) , 
10, 0.387345, 1, 0, 0.649408,-0.00669973) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629883,-0.000460246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933775,0.00621883) , 
0, 0.160619, 1, 0, 0.792602,0.0205903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534596,0.00455659) , 
7, 0.267421, 1, 0, 0.672941,0.0444144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211062,0.000816176) , 
16, 0.299017, 1, 0, 0.493147,0.031587) , 
15, 0.0341503, 1, 0, 0.538279,0.0205289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584074,-0.00326081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221634,-0.00021782) , 
11, 0.690596, 1, 0, 0.296735,-0.0117369) , 
15, 0.174167, 1, 0, 0.433225,0.00649566) , 
16, 0.0722738, 1, 0, 0.497645,0.00207585)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982131,-0.000618988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6509,-0.00312584) , 
3, 0.268282, 1, 0, 0.804284,-0.0288451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121769,-0.00124129) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979789,0.00169542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930571,-0.00776065) , 
10, 0.233102, 1, 0, 0.954574,-0.00944155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707741,0.00353163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363652,0.000631601) , 
8, 0.0371203, 1, 0, 0.504665,0.0302868) , 
3, 0.355405, 1, 0, 0.666076,0.0160336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474341,-0.00161424) , 
9, 0.0363037, 1, 0, 0.612585,0.00416834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48334,0.00330747) , 
9, 0.0514308, 1, 0, 0.584233,0.0157534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372821,-0.000683422) , 
15, 0.26309, 1, 0, 0.539523,0.00984271) , 
12, 0.0521298, 1, 0, 0.437509,0.00350262) , 
8, 0.0105728, 1, 0, 0.492278,-0.00132772)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680884,0.00508661) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968587,-0.00630424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985008,0.00596399) , 
9, 0.0182464, 1, 0, 0.976724,-0.000571424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919934,0.00376796) , 
13, 0.84095, 1, 0, 0.95939,0.00789864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902446,-0.0058425) , 
15, 0.143617, 1, 0, 0.944569,-0.00196145) , 
12, 0.10391, 1, 0, 0.893639,0.00822043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366674,-0.00118358) , 
8, 0.0372718, 1, 0, 0.742499,0.00102595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448581,-0.00246617) , 
9, 0.0547541, 1, 0, 0.671398,-0.00799959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566908,0.00404589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224644,0.0001003) , 
8, 0.0455371, 1, 0, 0.372303,0.0302793) , 
11, 0.8894, 1, 0, 0.568156,0.0052136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25804,-0.00122702) , 
3, 0.864683, 1, 0, 0.495946,-0.00204383)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951272,-0.000809336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918407,0.00763783) , 
14, 0.0633805, 1, 0, 0.938593,0.00765068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332743,-0.00171288) , 
8, 0.0344047, 1, 0, 0.684634,-0.00405303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59921,0.0030682) , 
15, 0.269538, 1, 0, 0.671291,0.000724151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419368,-0.00450889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431953,-0.0024535) , 
6, 0.318879, 1, 0, 0.426037,-0.0430692) , 
6, 0.281513, 1, 0, 0.609115,-0.0103782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435556,-0.000326081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475576,0.00205012) , 
13, 0.945374, 1, 0, 0.454023,0.0128863) , 
6, 0.368137, 1, 0, 0.550993,-0.00165964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234835,-0.000538836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651186,-0.00282916) , 
4, 0.219099, 1, 0, 0.328725,-0.0222064) , 
11, 1.0771, 1, 0, 0.485128,-0.00774829)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785913,-0.0044491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934614,-0.000933239) , 
12, 0.212386, 1, 0, 0.860163,-0.0245913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75016,0.000955065) , 
9, 0.035199, 1, 0, 0.804673,-0.00596048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976722,0.00011826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688482,0.00450744) , 
3, 0.280867, 1, 0, 0.816101,0.0406403) , 
16, 0.0900573, 1, 0, 0.809123,0.0121861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595875,-0.00313567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581302,0.000672603) , 
7, 0.246079, 1, 0, 0.588627,-0.0226693) , 
8, 0.0282103, 1, 0, 0.737641,0.000886491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428754,-0.00284809) , 
7, 0.353317, 1, 0, 0.687813,-0.00747835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454561,0.00450583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132284,0.000254109) , 
10, 0.594357, 1, 0, 0.183642,0.0139455) , 
7, 0.487008, 1, 0, 0.50243,0.00039917)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14829,-0.00075683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290933,0.00351195) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965082,0.00545834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715911,-0.0030258) , 
16, 0.144548, 1, 0, 0.847726,-0.00698274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988876,0.00634391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929264,0.00778453) , 
3, 0.2438, 1, 0, 0.966615,0.0272624) , 
0, 0.183046, 1, 0, 0.912746,0.0117457) , 
12, 0.0856444, 1, 0, 0.747713,0.0211207) , 
12, 0.052624, 1, 0, 0.601893,0.0136148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485092,-0.000773351) , 
6, 0.52788, 1, 0, 0.57061,0.00548127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178584,-0.000449494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596477,-0.00238658) , 
2, 0.0173522, 1, 0, 0.34512,-0.0213515) , 
9, 0.0502119, 1, 0, 0.491846,-0.00389154)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157592,-0.00160989) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994516,0.0116036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92512,-0.00682724) , 
6, 0.182703, 1, 0, 0.963273,-0.00697741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956106,0.00558267) , 
8, 0.0193492, 1, 0, 0.960806,0.000772943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912806,-0.0103354) , 
14, 0.122722, 1, 0, 0.949651,-0.00770017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612542,0.00242833) , 
11, 0.697145, 1, 0, 0.88672,0.00151566) , 
4, 0.0811605, 1, 0, 0.565473,-0.00829233) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601526,-0.00208786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550639,0.00273376) , 
11, 0.932441, 1, 0, 0.578203,0.00334502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411737,0.00262038) , 
9, 0.040693, 1, 0, 0.492282,0.0239821) , 
6, 0.372741, 1, 0, 0.541379,0.0023325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364058,-0.00141052) , 
6, 0.655519, 1, 0, 0.495991,-0.00657499)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94324,-0.00969092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942698,0.00356249) , 
14, 0.0419389, 1, 0, 0.942973,-0.00445569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694445,0.00266849) , 
13, 0.945923, 1, 0, 0.842091,0.0172051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617584,-0.00373432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503637,-0.0011461) , 
8, 0.0436413, 1, 0, 0.551768,-0.0387476) , 
8, 0.0330956, 1, 0, 0.739206,-0.0026235) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506665,0.00185087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390029,0.00394964) , 
16, 0.24816, 1, 0, 0.429443,0.0467751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180021,-0.000506263) , 
16, 0.345525, 1, 0, 0.306744,0.0205102) , 
16, 0.199492, 1, 0, 0.543865,0.00782588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598743,0.00137598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670545,-0.00212515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208641,-0.00101327) , 
17, 0.71251, 1, 0, 0.316879,-0.0224064) , 
6, 0.24892, 1, 0, 0.396836,-0.0127927) , 
14, 0.118829, 1, 0, 0.494764,0.000940243)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557356,0.00109532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874926,-0.00286434) , 
0, 0.187954, 1, 0, 0.69036,-0.00108399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756236,-0.000350819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532668,0.00296905) , 
13, 0.814101, 1, 0, 0.631228,0.0243162) , 
14, 0.024755, 1, 0, 0.661093,0.0114878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557177,-0.00207973) , 
15, 0.140299, 1, 0, 0.645865,0.00626843) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635898,-0.00437772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911755,-0.000808541) , 
5, 0.0234053, 1, 0, 0.797992,-0.0310585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835111,0.0021485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220004,-0.000884484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216702,4.42686e-05) , 
9, 0.048413, 1, 0, 0.21796,-0.00511446) , 
17, 0.644853, 1, 0, 0.315731,-0.000731344) , 
10, 0.409652, 1, 0, 0.411776,-0.00677115) , 
9, 0.0286925, 1, 0, 0.492713,-0.00226266)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99009,-0.00245432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998602,0.0206215) , 
6, 0.126306, 1, 0, 0.994513,0.00445072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982919,0.0119175) , 
3, 0.169519, 1, 0, 0.990589,0.0128603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893123,-0.00189924) , 
6, 0.280075, 1, 0, 0.964631,0.00628796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936295,0.000525571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521267,-0.00325484) , 
16, 0.101035, 1, 0, 0.729566,-0.0236) , 
10, 0.433335, 1, 0, 0.878251,-0.00469496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133057,0.000159545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63751,0.00213906) , 
2, 0.0173334, 1, 0, 0.274231,0.0134963) , 
3, 0.480653, 1, 0, 0.569231,0.0046118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268982,-0.00146745) , 
11, 1.06849, 1, 0, 0.522318,-4.60665e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433507,0.00118818) , 
11, 1.2673, 1, 0, 0.507531,0.00449498)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993799,0.0128926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956338,-0.00563355) , 
15, 0.0778681, 1, 0, 0.974981,0.000886571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753196,-0.00373486) , 
6, 0.289433, 1, 0, 0.908843,-0.0122359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756956,0.00270537) , 
11, 0.695061, 1, 0, 0.875506,-0.000482885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461003,-0.00178321) , 
11, 0.958296, 1, 0, 0.732128,-0.0151165) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546959,0.00208877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431325,-0.00250129) , 
6, 0.256758, 1, 0, 0.491315,-0.0094933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581451,0.00428074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218198,0.00113199) , 
16, 0.241786, 1, 0, 0.360498,0.0362995) , 
9, 0.0227232, 1, 0, 0.412834,0.0179794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240443,-0.000612455) , 
14, 0.109209, 1, 0, 0.349541,0.00787304) , 
16, 0.128449, 1, 0, 0.492736,-0.00073149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631383,0.00355143) , 
14, 0.253194, 1, 0, 0.499733,0.00167112)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665536,-0.0031886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688876,-0.00348358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395332,-0.00505183) , 
15, 0.111593, 1, 0, 0.535452,-0.0462126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646512,0.00169055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183083,-0.000806604) , 
10, 0.410578, 1, 0, 0.257014,-0.00595715) , 
11, 0.793704, 1, 0, 0.329304,-0.0164085) , 
16, 0.0886631, 1, 0, 0.372746,-0.0204352) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989347,0.00757016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812513,-0.00578894) , 
11, 0.463334, 1, 0, 0.902179,-0.0226905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934388,0.0044081) , 
9, 0.034989, 1, 0, 0.913057,-0.00483874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856908,0.00377955) , 
8, 0.0261682, 1, 0, 0.898354,0.00822478) , 
0, 0.180757, 1, 0, 0.514427,-0.0127097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690396,0.00371392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236734,0.000298638) , 
16, 0.116619, 1, 0, 0.380986,0.0200285) , 
15, 0.271026, 1, 0, 0.485941,-0.00572085)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9102,-0.00346649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987512,0.00815712) , 
2, 0.039364, 1, 0, 0.952692,-0.00170825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864925,0.00390387) , 
15, 0.176771, 1, 0, 0.919038,0.012016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683784,-0.00178265) , 
13, 0.945119, 1, 0, 0.863386,0.00271646) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977114,-0.00770482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381851,-0.00350732) , 
3, 0.199385, 1, 0, 0.552869,-0.043413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147194,-2.19406e-05) , 
7, 0.567783, 1, 0, 0.344286,-0.0212459) , 
16, 0.140687, 1, 0, 0.569913,-0.0108307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537756,0.0040748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319818,0.000235092) , 
3, 0.694149, 1, 0, 0.359402,0.0149827) , 
11, 1.01895, 1, 0, 0.498315,-0.00205112)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968071,0.00560493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939147,-0.00030635) , 
14, 0.0209722, 1, 0, 0.953133,0.00714199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731874,-0.00650333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238309,-0.00153793) , 
10, 0.538087, 1, 0, 0.410832,-0.0330441) , 
10, 0.327753, 1, 0, 0.65333,-0.0150743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572572,0.00308271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494782,-0.00160041) , 
14, 0.0859183, 1, 0, 0.52957,0.00486683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517109,0.00428567) , 
15, 0.169526, 1, 0, 0.525773,0.0184148) , 
14, 0.0629233, 1, 0, 0.597952,-0.000535172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44272,-0.001339) , 
6, 0.593089, 1, 0, 0.556307,-0.00879348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652142,-0.0020078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29638,0.00176002) , 
13, 0.631578, 1, 0, 0.380045,0.0188471) , 
15, 0.213941, 1, 0, 0.498611,0.000254029)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980884,0.00907139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959556,-0.0129877) , 
12, 0.243804, 1, 0, 0.971902,-0.00165477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487716,0.00327569) , 
11, 0.595111, 1, 0, 0.80701,0.00946753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590531,-0.00166758) , 
6, 0.317451, 1, 0, 0.755385,0.00237775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449639,-0.00160611) , 
13, 0.921088, 1, 0, 0.654273,-0.00608097) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652155,-0.0038949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602096,0.00028463) , 
9, 0.0375036, 1, 0, 0.62537,-0.0131407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170481,0.000710644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881514,0.00144079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612078,0.00430897) , 
17, 0.584708, 1, 0, 0.717211,0.0594742) , 
4, 0.0739454, 1, 0, 0.400495,0.031199) , 
6, 0.233526, 1, 0, 0.460318,0.0194034) , 
15, 0.121503, 1, 0, 0.545459,0.00821648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407554,-0.000875814) , 
13, 1.26971, 1, 0, 0.521846,0.00334082)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990829,0.00623109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962737,-0.0100208) , 
11, 0.389517, 1, 0, 0.980534,-0.00117116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334708,0.00182203) , 
17, 0.457487, 1, 0, 0.694141,0.008714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738953,-0.00422918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77121,0.00456508) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820133,-0.00341538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497974,0.00218621) , 
3, 0.389101, 1, 0, 0.622489,0.0124105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305993,-0.00162158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151658,-0.000301943) , 
10, 0.680359, 1, 0, 0.222342,-0.0189562) , 
3, 0.583657, 1, 0, 0.323924,-0.0109935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734966,-0.00555401) , 
4, 0.400187, 1, 0, 0.357095,-0.0161573) , 
16, 0.0765211, 1, 0, 0.394149,-0.00831042) , 
16, 0.0550783, 1, 0, 0.419062,-0.0118506) , 
6, 0.217805, 1, 0, 0.489773,-0.00656435)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858592,0.00456206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925668,-0.00305402) , 
2, 0.0330965, 1, 0, 0.897723,0.0112771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133893,-0.00149752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735552,-0.00225552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648585,-0.00753906) , 
15, 0.100065, 1, 0, 0.695606,-0.0743814) , 
4, 0.140922, 1, 0, 0.324428,-0.0414242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564169,0.00202911) , 
14, 0.17222, 1, 0, 0.359671,-0.0315116) , 
10, 0.31583, 1, 0, 0.495654,-0.0206975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968372,-0.00319661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886369,0.00466505) , 
6, 0.214335, 1, 0, 0.928246,0.0227787) , 
12, 0.247784, 1, 0, 0.566317,-0.0135958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454011,-0.00102355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359151,0.00156302) , 
6, 0.342264, 1, 0, 0.387146,0.0173725) , 
9, 0.048949, 1, 0, 0.504046,-0.00283279)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728803,0.00346744) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601197,0.00462339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165091,-0.00113301) , 
8, 0.0323149, 1, 0, 0.246247,-0.00142438) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971976,-0.017886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963238,0.00683667) , 
13, 0.721284, 1, 0, 0.968642,0.00249264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771779,-0.00611757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667008,-0.00138475) , 
11, 0.880531, 1, 0, 0.710121,-0.0439025) , 
17, 0.455319, 1, 0, 0.841288,-0.0203627) , 
4, 0.144169, 1, 0, 0.542325,-0.0108477) , 
9, 0.00787624, 1, 0, 0.566366,-0.00536262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565047,-0.00146145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327591,0.00187959) , 
13, 0.739989, 1, 0, 0.389591,0.0207769) , 
9, 0.0502119, 1, 0, 0.504248,0.00382279)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94162,-0.00661106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945364,0.0045364) , 
10, 0.298051, 1, 0, 0.943443,0.000527522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841104,-0.00398091) , 
14, 0.0853222, 1, 0, 0.913475,-0.00884113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924032,0.00472278) , 
14, 0.155408, 1, 0, 0.91565,-0.0011121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534733,0.00136004) , 
17, 0.615492, 1, 0, 0.808063,0.00743732) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478209,-0.00349167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466052,-0.000703295) , 
7, 0.29811, 1, 0, 0.472592,-0.0425646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841652,0.00215555) , 
5, 0.0387975, 1, 0, 0.55658,-0.0267155) , 
8, 0.0258165, 1, 0, 0.708297,-0.00611151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273743,0.00214475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162001,0.000604948) , 
16, 0.310527, 1, 0, 0.203397,0.0187247) , 
7, 0.442397, 1, 0, 0.498235,0.00422151)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27552,-0.00112924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90626,0.00672276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910112,-0.00511257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991448,0.00882182) , 
4, 0.322345, 1, 0, 0.961132,-0.00342651) , 
12, 0.123441, 1, 0, 0.945266,0.00869773) , 
2, 0.00897918, 1, 0, 0.744074,0.0007135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514833,0.00329346) , 
13, 0.720194, 1, 0, 0.690867,0.00916241) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764363,-0.000725049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283939,-0.00395709) , 
11, 0.804723, 1, 0, 0.462184,-0.0413728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366443,-0.00123921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245823,0.00038279) , 
11, 0.889823, 1, 0, 0.298676,-0.00513792) , 
14, 0.0626731, 1, 0, 0.352607,-0.0170895) , 
13, 0.798486, 1, 0, 0.518336,-0.00422747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455441,0.000820548) , 
13, 1.23404, 1, 0, 0.506623,7.33723e-06)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977112,-5.55635e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456408,-0.00255291) , 
3, 0.304403, 1, 0, 0.6759,-0.0238517) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98347,-0.000233903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871669,0.00623003) , 
6, 0.253197, 1, 0, 0.935348,0.0284071) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891614,-0.00185139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683146,0.0025683) , 
13, 0.79357, 1, 0, 0.77877,0.0192012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23298,-8.59629e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458352,-0.00326772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779161,-0.000819916) , 
12, 0.145097, 1, 0, 0.592026,-0.0507685) , 
5, 0.0170585, 1, 0, 0.415186,-0.0265444) , 
8, 0.0184853, 1, 0, 0.553206,-0.00917889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146936,0.00123107) , 
7, 0.58441, 1, 0, 0.399033,0.000942409) , 
10, 0.311904, 1, 0, 0.477479,0.00495961) , 
15, 0.0248809, 1, 0, 0.506646,0.000724483)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950208,0.00155905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406723,0.00240869) , 
3, 0.36101, 1, 0, 0.608099,0.0278389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381099,-0.00010554) , 
9, 0.048811, 1, 0, 0.518583,0.0161369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735254,-0.00326582) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987466,0.00517659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876778,-0.00683507) , 
13, 0.779333, 1, 0, 0.945333,-0.0122947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829684,0.00315644) , 
13, 1.05832, 1, 0, 0.915353,0.00331368) , 
1, 0.303437, 1, 0, 0.872424,-0.00952717) , 
5, 0.0345409, 1, 0, 0.656829,0.00610993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177369,-0.00127075) , 
17, 1.08444, 1, 0, 0.492881,-0.00361294)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734301,0.00346905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963948,-0.0201073) , 
1, 0.281321, 1, 0, 0.851834,0.00230779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67854,-0.00332667) , 
9, 0.038618, 1, 0, 0.792983,-0.0087377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787064,0.00302369) , 
14, 0.151917, 1, 0, 0.79144,-0.00106363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517994,-0.00368676) , 
13, 0.665307, 1, 0, 0.73841,-0.00861) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744193,0.00427656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436927,0.00162503) , 
10, 0.505489, 1, 0, 0.560614,0.0472498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876501,-0.000175787) , 
2, 0.0376565, 1, 0, 0.680667,0.0287302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144592,0.000221996) , 
7, 0.486442, 1, 0, 0.409746,0.0158268) , 
13, 0.721931, 1, 0, 0.531796,0.00675211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404141,-0.0015291) , 
13, 1.26971, 1, 0, 0.511033,-0.000127374)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947202,0.00252193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979197,0.00300142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634433,-0.000250116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781563,-0.00832761) , 
4, 0.233418, 1, 0, 0.710529,-0.0461407) , 
17, 0.357192, 1, 0, 0.803739,-0.028491) , 
10, 0.174371, 1, 0, 0.846816,-0.016876) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659016,0.00113457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615893,0.00421635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562479,0.00260009) , 
14, 0.0647485, 1, 0, 0.586532,0.0515325) , 
14, 0.0366901, 1, 0, 0.609121,0.0405809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464875,-0.00183738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349421,0.000792764) , 
15, 0.206097, 1, 0, 0.380779,0.002232) , 
15, 0.155948, 1, 0, 0.482684,0.0193464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114051,-0.000947161) , 
16, 0.320702, 1, 0, 0.363647,0.00888024) , 
10, 0.370541, 1, 0, 0.498728,0.00167947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472519,-0.00372937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464126,-0.000213202) , 
15, 0.35153, 1, 0, 0.467981,-0.0276389) , 
14, 0.188019, 1, 0, 0.495225,-0.00166088)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868287,0.00133622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518442,-0.00288884) , 
13, 0.827097, 1, 0, 0.68052,-0.0236118) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986479,0.00545163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944342,-0.0126282) , 
8, 0.0142423, 1, 0, 0.968053,-0.00626845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187444,2.93314e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583433,0.00481437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960472,0.00695572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86597,-0.000948405) , 
7, 0.185406, 1, 0, 0.910157,0.0128169) , 
12, 0.10524, 1, 0, 0.801629,0.0328792) , 
12, 0.0622285, 1, 0, 0.539949,0.019056) , 
11, 0.423183, 1, 0, 0.664267,0.011702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492199,0.0036258) , 
13, 0.943785, 1, 0, 0.630427,0.0209108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426743,-0.000500469) , 
13, 1.11939, 1, 0, 0.57882,0.0127385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176641,-0.000668304) , 
10, 0.792967, 1, 0, 0.47854,0.00696561) , 
14, 0.0169755, 1, 0, 0.503095,0.0032482)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990308,0.0118171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986619,0.00822266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950764,-0.0133684) , 
9, 0.0290654, 1, 0, 0.972305,-0.00429158) , 
13, 0.427126, 1, 0, 0.977489,0.00343389) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511391,-0.00424849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803566,-0.000156307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576149,-0.00411684) , 
7, 0.138505, 1, 0, 0.699809,-0.0357041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197623,-0.000196557) , 
7, 0.336381, 1, 0, 0.398587,-0.0161102) , 
15, 0.034029, 1, 0, 0.417815,-0.0228746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409786,7.36524e-05) , 
6, 0.639953, 1, 0, 0.414907,-0.0139888) , 
3, 0.288228, 1, 0, 0.567216,-0.0092719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205235,0.00160343) , 
8, 0.0634367, 1, 0, 0.497843,-0.00258288)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657367,-0.00322446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914412,0.00225229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965541,0.00381048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872509,-0.0118197) , 
7, 0.0952809, 1, 0, 0.923333,-0.01922) , 
4, 0.363121, 1, 0, 0.919396,-0.00404498) , 
2, 0.0204796, 1, 0, 0.837049,-0.0184627) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762928,0.00221462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548882,-0.00103538) , 
10, 0.521932, 1, 0, 0.653704,0.00585037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286924,0.00219917) , 
8, 0.0393769, 1, 0, 0.465855,0.0221917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376516,-0.00185027) , 
15, 0.228985, 1, 0, 0.447514,0.0108955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562978,0.00366072) , 
15, 0.324401, 1, 0, 0.462966,0.0167597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183987,-0.000787849) , 
10, 0.801635, 1, 0, 0.380038,0.00797939) , 
10, 0.382087, 1, 0, 0.508909,0.000523084)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961962,0.00824108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794523,-0.000433035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345716,-0.00339298) , 
10, 0.311904, 1, 0, 0.509515,-0.0430337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686359,-0.00347486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292615,-6.10421e-05) , 
3, 0.518056, 1, 0, 0.382071,-0.0114662) , 
15, 0.126295, 1, 0, 0.430862,-0.0235516) , 
13, 0.494102, 1, 0, 0.519239,-0.0165639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973338,-0.00821836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893745,0.00438338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872712,0.000220049) , 
5, 0.0513278, 1, 0, 0.883108,0.0217737) , 
6, 0.18859, 1, 0, 0.921852,0.00852181) , 
4, 0.387115, 1, 0, 0.628151,-0.00977792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214537,0.000308585) , 
8, 0.0523713, 1, 0, 0.491839,-0.00492924)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960645,0.00235601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414655,-0.00240011) , 
17, 0.6092, 1, 0, 0.680048,-0.0187549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676062,0.00533751) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437507,-0.000911791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362743,0.000877265) , 
6, 0.261514, 1, 0, 0.390853,0.00584339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831932,-0.00259226) , 
5, 0.0352533, 1, 0, 0.547872,-0.00550902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825703,0.0052119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348405,0.00133725) , 
16, 0.128449, 1, 0, 0.530566,0.0376476) , 
15, 0.12616, 1, 0, 0.541374,0.010695) , 
15, 0.0508014, 1, 0, 0.559184,0.0168272) , 
15, 0.0342701, 1, 0, 0.595128,0.00624521) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873775,0.00453063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295971,-0.000543971) , 
16, 0.11814, 1, 0, 0.479219,0.00654235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239371,-0.0025351) , 
13, 0.91884, 1, 0, 0.368744,-0.0196366) , 
15, 0.174779, 1, 0, 0.502034,-0.00439801)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474306,-0.00257177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211058,0.000429193) , 
7, 0.464859, 1, 0, 0.310792,-0.0158481) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982022,0.00562375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893995,-0.00381501) , 
17, 0.395809, 1, 0, 0.950812,-0.00133039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795116,0.00337896) , 
17, 0.630821, 1, 0, 0.906465,0.0157224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837232,-0.00239469) , 
15, 0.0961151, 1, 0, 0.890837,0.00702669) , 
12, 0.105076, 1, 0, 0.664543,-0.00189747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868642,-0.00059692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330283,0.00454857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409687,0.00135067) , 
6, 0.451326, 1, 0, 0.383113,0.0406484) , 
11, 0.581903, 1, 0, 0.515635,0.0285338) , 
15, 0.144178, 1, 0, 0.599835,0.0113265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178089,-0.000880839) , 
10, 0.794016, 1, 0, 0.503919,0.00554622)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442058,-0.00218708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873652,0.00289957) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97028,-0.00737913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889657,0.00325584) , 
6, 0.254404, 1, 0, 0.932524,0.00997956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865186,-0.00303693) , 
14, 0.0467202, 1, 0, 0.905977,-0.00325395) , 
5, 0.033611, 1, 0, 0.89648,0.00515945) , 
2, 0.0168055, 1, 0, 0.815677,-0.00165474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267351,0.00113372) , 
17, 0.943857, 1, 0, 0.56366,0.00833556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.429208,-0.00261654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156973,-0.000686952) , 
10, 0.649785, 1, 0, 0.24044,-0.022572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859095,8.48293e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870591,0.0032352) , 
15, 0.219471, 1, 0, 0.864905,0.018783) , 
4, 0.189077, 1, 0, 0.395517,-0.012302) , 
14, 0.103606, 1, 0, 0.496338,7.25185e-05)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237134,-0.00189881) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955703,-0.0108242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998057,0.0167902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984127,0.0014957) , 
1, 0.46735, 1, 0, 0.991142,0.00811968) , 
5, 0.0367397, 1, 0, 0.975334,-0.00364374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800084,-0.00522632) , 
3, 0.309491, 1, 0, 0.922644,-0.019555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738248,0.000414577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756812,0.00298862) , 
16, 0.154309, 1, 0, 0.746819,0.0267955) , 
17, 0.589922, 1, 0, 0.87213,-0.00623873) , 
1, 0.104765, 1, 0, 0.64385,-0.0160989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132079,0.000489313) , 
7, 0.672761, 1, 0, 0.509935,-0.010172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435528,0.00151025) , 
11, 1.26965, 1, 0, 0.49798,-0.00303543)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899313,0.00647449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256565,0.000837451) , 
10, 0.454725, 1, 0, 0.490288,0.0268959) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99146,-0.0045457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966163,0.00643672) , 
3, 0.166934, 1, 0, 0.978524,0.0106426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868088,-0.00378129) , 
10, 0.385953, 1, 0, 0.943516,-0.00146102) , 
2, 0.0285349, 1, 0, 0.731171,0.0118247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56428,0.00337425) , 
13, 0.986547, 1, 0, 0.692169,0.0218299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176948,-0.000726959) , 
16, 0.342531, 1, 0, 0.563997,0.0141328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414054,-0.00105822) , 
13, 1.22718, 1, 0, 0.531311,0.00560632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831829,0.0018271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184184,-0.00153231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562169,-0.00319095) , 
5, 0.0174643, 1, 0, 0.301014,-0.0348665) , 
8, 0.0161143, 1, 0, 0.413844,-0.023886) , 
14, 0.138141, 1, 0, 0.501922,-0.00177229)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982861,0.00686993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911561,-0.00978443) , 
8, 0.0159654, 1, 0, 0.954638,-0.00574492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738683,0.00227049) , 
13, 0.87287, 1, 0, 0.870162,0.0106709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808819,0.00519926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502213,-0.00209462) , 
14, 0.0720196, 1, 0, 0.675203,0.00620484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20636,-0.00229069) , 
3, 0.612484, 1, 0, 0.371341,-0.0243441) , 
8, 0.022007, 1, 0, 0.566844,-0.0106207) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801716,0.00295812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399141,-0.00170133) , 
13, 0.619712, 1, 0, 0.523241,-0.0127108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287456,0.00150041) , 
11, 0.845356, 1, 0, 0.389799,0.00990803) , 
9, 0.0406032, 1, 0, 0.492831,-0.00203869)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129721,-0.00145797) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47518,0.00341832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210036,0.000374198) , 
16, 0.181923, 1, 0, 0.313234,0.0290534) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901231,-0.00439222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944084,0.00649831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855198,-0.00110638) , 
14, 0.0589918, 1, 0, 0.912968,0.0191416) , 
14, 0.0140307, 1, 0, 0.909321,0.00602387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782334,-0.00251679) , 
9, 0.042236, 1, 0, 0.882619,-0.00144673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964809,0.000172424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729746,0.00329919) , 
17, 0.390673, 1, 0, 0.833956,0.0323993) , 
14, 0.102229, 1, 0, 0.867809,0.00885426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420072,-0.000952091) , 
17, 0.948955, 1, 0, 0.754388,0.000609313) , 
5, 0.0152423, 1, 0, 0.651593,0.00723717) , 
12, 0.0576521, 1, 0, 0.507799,-0.000289396)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882307,-0.00247847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520842,0.00341677) , 
10, 0.360629, 1, 0, 0.691599,0.0146163) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997792,0.0151424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340684,-0.0028829) , 
3, 0.181886, 1, 0, 0.566811,-0.0209328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497351,0.00167974) , 
6, 0.283117, 1, 0, 0.544996,-0.00799618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440498,-0.00196951) , 
6, 0.465776, 1, 0, 0.509539,-0.0193463) , 
9, 0.0160273, 1, 0, 0.55645,-0.0105953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86197,-0.00328725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296818,0.000884713) , 
3, 0.402423, 1, 0, 0.397248,0.00945451) , 
9, 0.0430211, 1, 0, 0.493084,-0.00261509)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48674,-0.00154945) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989846,0.0102702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963387,-0.00785347) , 
14, 0.0458384, 1, 0, 0.978694,0.000790542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927698,0.00566195) , 
6, 0.302151, 1, 0, 0.963989,0.0130313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713519,-0.000964465) , 
17, 0.674696, 1, 0, 0.905986,0.00592767) , 
12, 0.101738, 1, 0, 0.793541,-0.00359865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688268,0.00241246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166854,0.000634253) , 
16, 0.192674, 1, 0, 0.309187,0.017647) , 
10, 0.529344, 1, 0, 0.580485,0.00574684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847169,-0.00750702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512666,0.00110549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166914,-0.000845994) , 
17, 0.879899, 1, 0, 0.269183,-0.00396829) , 
11, 0.519021, 1, 0, 0.367689,-0.0110747) , 
15, 0.194896, 1, 0, 0.502244,-0.000438094)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37205,0.00185083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13401,-2.05673e-05) , 
7, 0.384803, 1, 0, 0.192245,0.00887094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493332,-0.00191343) , 
2, 0.0185989, 1, 0, 0.229997,0.00303736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599862,-0.00340194) , 
12, 0.0961714, 1, 0, 0.269266,-0.00403284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840991,0.00452959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832627,0.00197516) , 
12, 0.135582, 1, 0, 0.836828,0.0430941) , 
12, 0.11678, 1, 0, 0.353085,0.00292696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96855,-0.0118192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95322,0.00452877) , 
17, 0.276234, 1, 0, 0.962744,-0.00258792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689139,-0.00559526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803438,-0.00376969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780654,-0.00062589) , 
10, 0.47641, 1, 0, 0.79218,-0.0267528) , 
12, 0.198072, 1, 0, 0.755081,-0.0499859) , 
6, 0.241942, 1, 0, 0.847169,-0.0289673) , 
12, 0.156731, 1, 0, 0.500762,-0.00660594)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543673,-0.00380015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903154,0.00281819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897968,-0.00388104) , 
2, 0.0500308, 1, 0, 0.90066,0.00173456) , 
2, 0.0274362, 1, 0, 0.787678,-0.0197042) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422922,0.00247802) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955872,-0.00110042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750434,0.00196932) , 
13, 0.87763, 1, 0, 0.87207,0.0124446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648331,-0.00162159) , 
9, 0.0403249, 1, 0, 0.798397,-0.00165834) , 
5, 0.0159419, 1, 0, 0.702252,0.0102981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522283,-0.00250977) , 
7, 0.3244, 1, 0, 0.667787,0.000403016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528279,0.00410875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292768,0.00157867) , 
7, 0.477541, 1, 0, 0.354088,0.0366447) , 
7, 0.402469, 1, 0, 0.553981,0.0135511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117461,-0.000607455) , 
7, 0.696984, 1, 0, 0.422485,0.00690555) , 
7, 0.0962007, 1, 0, 0.504273,0.000946047)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985459,0.00767281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456742,-0.00266399) , 
3, 0.320324, 1, 0, 0.615424,-0.041163) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867697,-0.00220344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962165,0.00798969) , 
4, 0.364587, 1, 0, 0.914767,0.0132804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911698,-0.00421754) , 
4, 0.476558, 1, 0, 0.913419,-0.00140208) , 
12, 0.159289, 1, 0, 0.76397,-0.0213428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724549,0.00152045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599236,0.00313284) , 
15, 0.0630111, 1, 0, 0.657225,0.0265076) , 
16, 0.194499, 1, 0, 0.740123,-0.0106533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18777,0.00112203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162969,-0.000552448) , 
9, 0.0391101, 1, 0, 0.173159,0.00117762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726153,0.00230367) , 
2, 0.0236181, 1, 0, 0.270514,0.00893479) , 
10, 0.582278, 1, 0, 0.501361,-0.00069418)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560559,-0.00343123) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114954,-0.0017472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426165,0.000797575) , 
4, 0.0398955, 1, 0, 0.181815,-0.0149461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224904,0.000832808) , 
6, 0.410674, 1, 0, 0.201216,-0.00119409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851033,0.00195085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594429,-0.00349474) , 
8, 0.0327311, 1, 0, 0.692166,-0.0379106) , 
4, 0.135685, 1, 0, 0.303423,-0.00883787) , 
7, 0.087937, 1, 0, 0.330446,-0.0143431) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96697,-0.00362366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973563,0.00763839) , 
10, 0.347905, 1, 0, 0.970252,0.00807412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916073,-0.00630005) , 
16, 0.101035, 1, 0, 0.950834,-0.00301923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797357,0.00286498) , 
3, 0.544253, 1, 0, 0.909324,0.0118941) , 
4, 0.288338, 1, 0, 0.497809,-0.00675752)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991372,0.00172108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9005,-0.00730562) , 
3, 0.194083, 1, 0, 0.957254,-0.012599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957256,-0.0102735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936714,0.00553218) , 
6, 0.159101, 1, 0, 0.9453,0.0113505) , 
10, 0.315518, 1, 0, 0.951143,-0.000355738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453122,-0.00374744) , 
17, 0.680621, 1, 0, 0.874777,-0.00960825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24541,0.00196441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785109,-0.00115333) , 
1, 0.209529, 1, 0, 0.377617,0.0212678) , 
3, 0.471544, 1, 0, 0.642836,0.00479641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24253,-0.000819644) , 
3, 0.751523, 1, 0, 0.488921,-0.00309761)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120243,-0.00196558) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979691,0.00723164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894405,-0.00353742) , 
10, 0.286835, 1, 0, 0.942164,0.00141241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481712,0.00185866) , 
17, 0.682453, 1, 0, 0.737553,0.0162002) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678888,0.00288905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861467,-0.00124084) , 
2, 0.03054, 1, 0, 0.784118,0.0119775) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374801,0.00127614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238039,-0.00107941) , 
6, 0.300113, 1, 0, 0.277972,-0.00983599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680781,-0.00362253) , 
5, 0.0284515, 1, 0, 0.358669,-0.0197631) , 
7, 0.146102, 1, 0, 0.498848,-0.00930507) , 
15, 0.09342, 1, 0, 0.590212,0.000457074) , 
12, 0.0525379, 1, 0, 0.488713,-0.00536192)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675247,-0.00487627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978276,0.00035493) , 
2, 0.0176921, 1, 0, 0.875793,-0.0159485) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,0.00445791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852293,-0.00320052) , 
9, 0.0183504, 1, 0, 0.890588,-0.00745924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527617,0.00267406) , 
10, 0.49305, 1, 0, 0.718363,0.0133222) , 
13, 0.593775, 1, 0, 0.779813,0.00189681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522298,-0.0030075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140741,-0.00180975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298656,0.00112893) , 
6, 0.406459, 1, 0, 0.213534,-0.00489693) , 
8, 0.0303581, 1, 0, 0.281126,-0.0158444) , 
11, 0.762383, 1, 0, 0.511408,-0.00765192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448341,0.00137532) , 
11, 1.29432, 1, 0, 0.50106,-0.00108464)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239718,0.00110289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289709,-0.000654324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127979,-0.000120525) , 
3, 0.636343, 1, 0, 0.172985,-0.00443307) , 
9, 0.031288, 1, 0, 0.189909,0.000744753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532432,0.00220557) , 
12, 0.0825486, 1, 0, 0.228202,0.00551603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599402,-0.00301299) , 
12, 0.102682, 1, 0, 0.263851,-0.000610266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960993,0.00138942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76169,0.00265564) , 
13, 0.707061, 1, 0, 0.856759,0.027173) , 
12, 0.134278, 1, 0, 0.3569,0.00374996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856253,-0.00416334) , 
12, 0.273928, 1, 0, 0.397556,0.000739784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924394,-0.0034582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967057,0.00512523) , 
5, 0.0557005, 1, 0, 0.942749,-0.000917436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648844,-0.00374136) , 
11, 0.842285, 1, 0, 0.848983,-0.0240852) , 
5, 0.0383036, 1, 0, 0.497908,-0.00477884)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984149,0.0163773) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989531,0.011577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97177,0.00085346) , 
14, 0.0200238, 1, 0, 0.98068,0.00861209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914422,-0.010835) , 
14, 0.05375, 1, 0, 0.949751,-0.0116882) , 
13, 0.401073, 1, 0, 0.957419,-0.00429387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654328,-0.00468976) , 
3, 0.333416, 1, 0, 0.882911,-0.0183538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583693,0.00121475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372511,-0.00117346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148789,0.000668304) , 
7, 0.500085, 1, 0, 0.220577,-0.00130249) , 
7, 0.221003, 1, 0, 0.31365,0.00568143) , 
3, 0.459581, 1, 0, 0.500497,-0.00220757)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731561,-0.00451799) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907522,-0.000512439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418793,0.0024559) , 
10, 0.387821, 1, 0, 0.623063,0.0196773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838494,0.00249561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291791,-0.00213885) , 
16, 0.134006, 1, 0, 0.495525,-0.0129087) , 
14, 0.124555, 1, 0, 0.569834,0.00607723) , 
9, 0.0172856, 1, 0, 0.60289,-0.00152971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140559,-0.00187195) , 
3, 0.709998, 1, 0, 0.427377,-0.0123554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395536,0.000824559) , 
11, 1.23474, 1, 0, 0.42132,-0.00644018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796294,-0.00654107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892477,-0.000888354) , 
5, 0.0333512, 1, 0, 0.851469,-0.0320606) , 
12, 0.22639, 1, 0, 0.487861,-0.0104035)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423117,0.00168458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76401,-0.00242923) , 
4, 0.0947051, 1, 0, 0.576837,0.00106175) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971389,0.00649665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951838,-0.00539625) , 
5, 0.0395066, 1, 0, 0.963454,0.00666713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905359,0.00613562) , 
6, 0.357965, 1, 0, 0.945017,0.0267734) , 
4, 0.229998, 1, 0, 0.776886,0.0150321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337813,-0.00153938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159168,0.000337361) , 
10, 0.611794, 1, 0, 0.211991,-0.00668598) , 
17, 0.894665, 1, 0, 0.469752,0.00322396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940766,0.00748342) , 
2, 0.0571667, 1, 0, 0.506945,0.00728957)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973742,-0.00935509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985978,0.0083131) , 
17, 0.301702, 1, 0, 0.979793,0.000312394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886076,-0.00612331) , 
10, 0.36051, 1, 0, 0.949428,-0.00876408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764868,0.00424797) , 
10, 0.525326, 1, 0, 0.909629,0.00111033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341927,-0.000731204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449642,0.000979522) , 
6, 0.256532, 1, 0, 0.39457,0.00134354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154442,-0.00229134) , 
14, 0.0738256, 1, 0, 0.250851,-0.0200101) , 
11, 0.642465, 1, 0, 0.575498,-0.00960188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450089,0.00101649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417658,0.00285034) , 
11, 0.922726, 1, 0, 0.43527,0.0310553) , 
6, 0.422054, 1, 0, 0.532418,0.00288858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37652,-0.00118484) , 
13, 1.13465, 1, 0, 0.492617,-0.00430102)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535962,-0.0032288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229495,-0.00132003) , 
16, 0.198534, 1, 0, 0.329138,-0.0338205) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626676,0.000441216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531417,0.00329356) , 
16, 0.115557, 1, 0, 0.575819,0.0301765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157209,-0.000295937) , 
17, 0.862943, 1, 0, 0.256097,0.00337008) , 
9, 0.0244745, 1, 0, 0.273896,-0.00569225) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951268,0.00468273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927541,-0.00463787) , 
12, 0.171067, 1, 0, 0.941424,0.0060301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729452,0.00293519) , 
17, 0.69923, 1, 0, 0.865242,0.0264471) , 
12, 0.120767, 1, 0, 0.414673,0.00195891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859942,-0.00743078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94928,0.00460604) , 
2, 0.035268, 1, 0, 0.911092,-0.00824504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752216,-0.00590577) , 
10, 0.534451, 1, 0, 0.860929,-0.0292801) , 
12, 0.212386, 1, 0, 0.492203,-0.00346838)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133504,-0.00118095) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932248,-0.0100477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966283,0.00274957) , 
8, 0.0169909, 1, 0, 0.951352,-0.00825215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946089,0.000585645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546905,0.00325959) , 
11, 0.475379, 1, 0, 0.695557,0.0343601) , 
10, 0.375652, 1, 0, 0.830266,0.0119193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209676,0.000138781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66503,-0.00275695) , 
12, 0.104959, 1, 0, 0.340503,-0.0124111) , 
11, 0.781308, 1, 0, 0.611075,0.00103035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9539,0.00642997) , 
12, 0.297081, 1, 0, 0.649949,0.00475074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435192,0.00123839) , 
11, 1.13798, 1, 0, 0.594684,0.0105937) , 
12, 0.0521298, 1, 0, 0.497331,0.0050422)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995538,0.0103258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917656,-0.00549272) , 
6, 0.170619, 1, 0, 0.965424,-0.00409263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956567,0.0059198) , 
17, 0.310337, 1, 0, 0.962789,0.00537848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555607,-0.00271611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630306,0.00244656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501084,-0.00177842) , 
16, 0.105497, 1, 0, 0.548346,-0.00608184) , 
8, 0.0193058, 1, 0, 0.551229,-0.0260191) , 
17, 0.427774, 1, 0, 0.7266,-0.0126402) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248969,-0.000991261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154634,0.000791315) , 
11, 0.829127, 1, 0, 0.181371,0.00453164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919145,0.000914163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67844,0.00306365) , 
10, 0.466995, 1, 0, 0.807437,0.0346842) , 
12, 0.10426, 1, 0, 0.31301,0.0108717) , 
16, 0.159136, 1, 0, 0.501671,0.000146655)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930477,-0.00687909) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.159127,0.000217033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993267,0.0146637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972701,-0.00446403) , 
15, 0.0568878, 1, 0, 0.981681,0.00273728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799137,0.000688482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837879,0.0052001) , 
9, 0.0215317, 1, 0, 0.820924,0.0475609) , 
3, 0.290054, 1, 0, 0.899243,0.0257234) , 
4, 0.12209, 1, 0, 0.566517,0.0155595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210535,-0.000200687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785626,-0.00239123) , 
0, 0.106782, 1, 0, 0.366223,-0.0102256) , 
15, 0.207264, 1, 0, 0.507665,0.00798314) , 
10, 0.163011, 1, 0, 0.547486,0.00493862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413967,0.00238728) , 
15, 0.36451, 1, 0, 0.533014,0.00856033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380523,-0.00115945) , 
11, 1.25776, 1, 0, 0.507263,0.00246197)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786699,0.00149439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72004,-0.0060647) , 
14, 0.0206025, 1, 0, 0.756556,-0.00961578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873889,0.00100172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460512,0.00292252) , 
10, 0.364919, 1, 0, 0.652712,0.0262288) , 
6, 0.246435, 1, 0, 0.703679,0.00863617) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532948,-0.00302544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435157,-0.00436256) , 
15, 0.105051, 1, 0, 0.488452,-0.0472408) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502168,0.00214624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403138,-0.000616668) , 
14, 0.0865668, 1, 0, 0.436368,0.00389135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342673,-0.0025866) , 
14, 0.113952, 1, 0, 0.401423,-0.0112297) , 
14, 0.0740471, 1, 0, 0.426736,-0.0217037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880009,-0.00477689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303711,0.000910307) , 
11, 0.522762, 1, 0, 0.455287,0.00409329) , 
14, 0.144229, 1, 0, 0.436505,-0.0128771) , 
14, 0.0500382, 1, 0, 0.51077,-0.00689713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444217,0.00186426) , 
11, 1.26965, 1, 0, 0.500464,0.000754477)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983725,0.00877054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890529,-0.00416118) , 
13, 0.502163, 1, 0, 0.938785,-0.00151078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493752,-0.00393698) , 
8, 0.0380551, 1, 0, 0.824161,-0.0133524) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953178,0.00249005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792239,0.00362901) , 
14, 0.0628311, 1, 0, 0.877184,0.0234307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451344,-0.000946617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830531,0.00174577) , 
2, 0.0402769, 1, 0, 0.571802,-0.00758243) , 
13, 0.925894, 1, 0, 0.69231,0.00465584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521818,0.00280242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196356,0.00145339) , 
10, 0.549043, 1, 0, 0.275802,0.0303391) , 
7, 0.321511, 1, 0, 0.510404,0.0158728) , 
13, 0.640267, 1, 0, 0.591871,0.00828447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161863,-0.00171447) , 
10, 0.800038, 1, 0, 0.496182,0.000335608)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224025,-0.000174665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498695,0.00230042) , 
12, 0.057131, 1, 0, 0.380752,0.0221442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138722,-0.000276237) , 
17, 1.06599, 1, 0, 0.252977,0.00815322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767013,-0.00238455) , 
4, 0.171415, 1, 0, 0.300004,0.00434774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77413,0.00278868) , 
2, 0.0336719, 1, 0, 0.347461,0.00863262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976602,0.00722272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981952,0.00505293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853108,-0.00305197) , 
6, 0.246883, 1, 0, 0.924636,-0.0084962) , 
14, 0.0433979, 1, 0, 0.947909,0.00219971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680077,-0.0038883) , 
11, 0.828946, 1, 0, 0.872614,-0.0185896) , 
4, 0.282019, 1, 0, 0.506797,0.000373145)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945249,0.0198257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284053,-0.0027455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984598,0.00030963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95137,0.00146815) , 
8, 0.0170852, 1, 0, 0.967925,0.00211404) , 
5, 0.0171045, 1, 0, 0.737509,-0.00868684) , 
14, 0.0189082, 1, 0, 0.788959,0.00318369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258599,-0.00274608) , 
13, 0.859659, 1, 0, 0.63423,-0.00751766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570775,-0.00568509) , 
14, 0.137776, 1, 0, 0.619638,-0.0171601) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83737,-0.00394559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4982,0.00277393) , 
3, 0.556857, 1, 0, 0.609355,0.0265345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371166,-0.00147611) , 
9, 0.0386908, 1, 0, 0.513151,0.00510267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401466,0.000583984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344728,0.0022864) , 
11, 0.919256, 1, 0, 0.371611,0.028419) , 
14, 0.0937655, 1, 0, 0.444083,0.0164805) , 
6, 0.27999, 1, 0, 0.510332,0.00378557)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.429173,0.00255209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371566,0.000247057) , 
9, 0.0190005, 1, 0, 0.400888,0.0150309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1707,-0.000729848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618476,-0.00368091) , 
12, 0.0774497, 1, 0, 0.287891,-0.0213048) , 
15, 0.124405, 1, 0, 0.32775,-0.00848772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696575,-0.00694878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91249,-0.00440673) , 
0, 0.15451, 1, 0, 0.831236,-0.0467044) , 
5, 0.024749, 1, 0, 0.46111,-0.0186103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973063,0.00718296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896451,-0.00207175) , 
8, 0.0179087, 1, 0, 0.944224,0.00910481) , 
5, 0.0420741, 1, 0, 0.56366,-0.0127273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300765,0.0013749) , 
11, 1.09305, 1, 0, 0.52487,-0.00768476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408522,0.000888681) , 
6, 0.645906, 1, 0, 0.49626,-0.000900714)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975121,0.000652823) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670446,-0.000894678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481148,-0.00173126) , 
15, 0.0439439, 1, 0, 0.578557,-0.0224039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799859,-0.00565611) , 
12, 0.152607, 1, 0, 0.666543,-0.0362034) , 
17, 0.396045, 1, 0, 0.774608,-0.0231577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266334,0.000804369) , 
10, 0.595915, 1, 0, 0.63317,-0.0133672) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765703,0.00130366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705255,0.00568495) , 
7, 0.160265, 1, 0, 0.7381,0.0506952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22169,0.000759688) , 
7, 0.355386, 1, 0, 0.460679,0.0298045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857972,0.00332102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258835,-0.00155227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647827,0.0017383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259569,-0.000366514) , 
10, 0.656089, 1, 0, 0.379692,0.00283382) , 
14, 0.151075, 1, 0, 0.321332,-0.010916) , 
10, 0.42355, 1, 0, 0.395385,-0.00543588) , 
14, 0.105621, 1, 0, 0.420139,0.00792416) , 
15, 0.0974478, 1, 0, 0.497504,0.000191884)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9951,0.0125007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963364,-0.0228983) , 
4, 0.475591, 1, 0, 0.98306,-0.000761234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613587,-0.00302067) , 
3, 0.286331, 1, 0, 0.79926,-0.0284766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787348,-0.000954492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762275,0.00264502) , 
15, 0.0630111, 1, 0, 0.775233,0.0100898) , 
7, 0.255078, 1, 0, 0.792114,-0.017007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880043,-0.00684671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110777,-0.000121032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465567,0.00282344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673508,-0.00102911) , 
5, 0.0365675, 1, 0, 0.521281,0.039809) , 
5, 0.010346, 1, 0, 0.274184,0.0148462) , 
17, 0.406091, 1, 0, 0.329367,0.00990616) , 
10, 0.47641, 1, 0, 0.49978,-5.01609e-06)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958848,0.00125511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40485,-0.00547905) , 
17, 0.544497, 1, 0, 0.690588,-0.0334684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211098,-0.00186214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212921,0.000335678) , 
9, 0.027377, 1, 0, 0.212501,-0.00275893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808869,0.00375294) , 
2, 0.0215451, 1, 0, 0.271907,0.00290596) , 
13, 0.602561, 1, 0, 0.345252,-0.00346611) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930965,0.00271025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910225,-0.0117586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965302,0.000820687) , 
4, 0.516785, 1, 0, 0.937262,-0.0206237) , 
4, 0.389926, 1, 0, 0.934929,-0.00802508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671693,-0.0029087) , 
6, 0.417979, 1, 0, 0.830444,-0.027252) , 
5, 0.0340804, 1, 0, 0.481299,-0.0101356)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130525,-0.00142317) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999409,0.0179971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973369,-0.0137103) , 
6, 0.146508, 1, 0, 0.987525,-0.00126779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69793,0.00284328) , 
3, 0.199297, 1, 0, 0.885718,0.00886558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346331,-0.0016807) , 
13, 0.841233, 1, 0, 0.707997,-0.00180427) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676215,0.00182118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558967,-0.000735673) , 
15, 0.0448331, 1, 0, 0.618131,0.00842032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575155,0.00396535) , 
15, 0.0994159, 1, 0, 0.60169,0.0317813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386604,-5.77947e-06) , 
15, 0.174842, 1, 0, 0.503587,0.0172326) , 
6, 0.339642, 1, 0, 0.597036,0.00852965) , 
12, 0.0519048, 1, 0, 0.502152,0.00295087)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822687,0.00334819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629029,-0.00474533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546173,-0.00115095) , 
15, 0.15799, 1, 0, 0.587555,-0.0239796) , 
14, 0.047601, 1, 0, 0.674392,-0.0100406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506881,0.00159315) , 
6, 0.295641, 1, 0, 0.635734,-0.00347704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408635,-0.0021929) , 
6, 0.386608, 1, 0, 0.573083,-0.0122751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251905,0.000642865) , 
11, 0.939654, 1, 0, 0.463664,-0.00489833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428706,0.00183153) , 
15, 0.303565, 1, 0, 0.457521,0.000414549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32761,-0.000931971) , 
6, 0.679901, 1, 0, 0.426285,-0.00485519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96362,-0.00487881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8403,0.00421292) , 
11, 0.604305, 1, 0, 0.910142,0.0214351) , 
5, 0.0464733, 1, 0, 0.497374,-0.000992541)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373659,0.0015507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129277,-0.000122408) , 
7, 0.435004, 1, 0, 0.199733,0.00781528) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996278,0.00667135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971188,0.00685985) , 
3, 0.166598, 1, 0, 0.984771,0.0131545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739884,-0.00289451) , 
13, 0.886027, 1, 0, 0.898565,-0.00735555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889555,0.00388671) , 
8, 0.0192647, 1, 0, 0.8965,0.00264656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955203,-0.00584066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6943,-0.00325607) , 
6, 0.296604, 1, 0, 0.815593,-0.0341009) , 
7, 0.218361, 1, 0, 0.87088,-0.00898972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77572,0.00195813) , 
10, 0.555504, 1, 0, 0.857983,-0.00368981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533726,-0.00194461) , 
10, 0.658855, 1, 0, 0.794721,-0.0118252) , 
4, 0.0940064, 1, 0, 0.501158,-0.00213475)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208813,-0.00281608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626175,0.00149972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966486,-0.00457014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753239,-0.00290471) , 
3, 0.296141, 1, 0, 0.879299,-0.0219895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937587,0.00368991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936484,-0.00190856) , 
12, 0.178241, 1, 0, 0.936987,0.00489466) , 
2, 0.0397636, 1, 0, 0.906425,-0.00934806) , 
4, 0.162321, 1, 0, 0.852434,-0.00286038) , 
2, 0.0120351, 1, 0, 0.688019,-0.01337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134876,0.00122453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428825,-0.00101698) , 
5, 0.0156892, 1, 0, 0.21722,0.0051776) , 
10, 0.688147, 1, 0, 0.510026,-0.0063578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450369,0.00123346) , 
11, 1.2673, 1, 0, 0.500862,-0.00101167)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129928,-0.0013021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303271,0.00223028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306994,0.00269472) , 
14, 0.0966144, 1, 0, 0.305259,0.0322245) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988469,-0.00429146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940423,0.00709756) , 
3, 0.179217, 1, 0, 0.969377,0.0114628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676683,-0.00337894) , 
13, 0.860288, 1, 0, 0.869879,-0.00702046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848932,0.00546978) , 
9, 0.0387163, 1, 0, 0.864286,0.00837153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695504,-0.0037606) , 
14, 0.131438, 1, 0, 0.826496,-0.00299235) , 
5, 0.0154911, 1, 0, 0.67998,0.00690688) , 
12, 0.052624, 1, 0, 0.545702,0.00122871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466643,-0.00136788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317655,-9.52591e-05) , 
7, 0.243504, 1, 0, 0.388993,-0.0162954) , 
6, 0.574393, 1, 0, 0.497626,-0.00414741)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994227,0.00903379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9264,-0.0187256) , 
17, 0.238872, 1, 0, 0.958734,-0.0170219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989492,0.0104695) , 
16, 0.127889, 1, 0, 0.968989,-0.00703471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962407,0.00552571) , 
13, 0.728718, 1, 0, 0.967082,0.000640398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709322,-0.00335085) , 
17, 0.507614, 1, 0, 0.900146,-0.0086727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25854,0.00103191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849148,0.00361281) , 
12, 0.138172, 1, 0, 0.383849,0.0242601) , 
3, 0.445049, 1, 0, 0.639382,0.0079605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249718,-0.000643665) , 
3, 0.756598, 1, 0, 0.498785,0.000689302)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953662,-0.00272689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924225,0.00665695) , 
6, 0.163812, 1, 0, 0.938653,0.00879816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906558,-0.0184471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682601,-0.000541249) , 
10, 0.37572, 1, 0, 0.759792,-0.0226836) , 
15, 0.108134, 1, 0, 0.841984,-0.00821686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618941,-0.00369171) , 
13, 0.83827, 1, 0, 0.790312,-0.017506) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205199,-0.00097284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196074,0.00100067) , 
14, 0.102193, 1, 0, 0.200856,-0.000759469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855081,0.00154655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686938,0.00285387) , 
3, 0.612484, 1, 0, 0.743095,0.049026) , 
2, 0.020625, 1, 0, 0.331102,0.011199) , 
11, 0.718722, 1, 0, 0.495817,0.000902747)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791684,-0.00311381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95506,0.00385867) , 
0, 0.158227, 1, 0, 0.885434,-0.00351726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787003,0.00151098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391662,0.00419027) , 
11, 0.793651, 1, 0, 0.520836,0.0496269) , 
10, 0.329617, 1, 0, 0.68671,0.0254489) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802144,-0.00236415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445889,0.0029501) , 
13, 0.49882, 1, 0, 0.565234,0.0274369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988989,0.00891049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865628,-0.00418692) , 
13, 0.677238, 1, 0, 0.924188,-0.0102989) , 
1, 0.271135, 1, 0, 0.701605,0.0131006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137853,-0.00176571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345687,-0.000330391) , 
13, 1.12011, 1, 0, 0.228278,-0.0190338) , 
3, 0.605057, 1, 0, 0.42167,-0.00590432) , 
15, 0.0756363, 1, 0, 0.500383,0.00340704)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534319,-0.0020969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940495,-0.00365606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969103,0.00518835) , 
16, 0.060173, 1, 0, 0.9536,-0.00020517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794114,0.00388717) , 
11, 0.74084, 1, 0, 0.903544,0.0227473) , 
5, 0.0209869, 1, 0, 0.809894,0.00705527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923046,0.00665951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388005,-0.000454434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718458,-0.00441993) , 
12, 0.138338, 1, 0, 0.50426,-0.0305809) , 
6, 0.252742, 1, 0, 0.605834,-0.018052) , 
16, 0.102294, 1, 0, 0.704086,-0.00596319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356882,0.00188734) , 
16, 0.23714, 1, 0, 0.637861,0.000375683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276547,0.000779823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130097,-0.00226369) , 
6, 0.205532, 1, 0, 0.167069,-0.0211919) , 
16, 0.318272, 1, 0, 0.509175,-0.00551962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343695,-0.00187917) , 
15, 0.365772, 1, 0, 0.49197,-0.00831807)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209749,-0.00140079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627509,0.00303809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913554,0.0028507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634652,-0.00151416) , 
10, 0.371581, 1, 0, 0.765516,-0.00760978) , 
4, 0.139062, 1, 0, 0.711463,0.0172141) , 
4, 0.0772547, 1, 0, 0.429775,-0.00590595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82315,-0.00745751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905828,0.00118306) , 
14, 0.0722823, 1, 0, 0.856899,-0.0339359) , 
4, 0.262669, 1, 0, 0.550046,-0.0137987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97676,-0.000654333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884209,0.00281198) , 
17, 0.288506, 1, 0, 0.931249,0.0120982) , 
4, 0.446539, 1, 0, 0.61952,-0.00907899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21362,0.00050834) , 
10, 0.728952, 1, 0, 0.496234,-0.0039523)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968709,-0.0152261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764219,0.00223867) , 
3, 0.288228, 1, 0, 0.873406,0.00789235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815861,-0.0023632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699459,-0.00561466) , 
16, 0.0902826, 1, 0, 0.755775,-0.0466949) , 
14, 0.0396312, 1, 0, 0.819243,-0.0172425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447897,-0.00305774) , 
8, 0.0392429, 1, 0, 0.715117,-0.0281824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246329,0.00035632) , 
16, 0.306961, 1, 0, 0.593823,-0.019734) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724957,0.000695121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547786,-0.005359) , 
15, 0.21437, 1, 0, 0.645132,-0.0251404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593139,0.00215645) , 
15, 0.303944, 1, 0, 0.626989,-0.00711112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148419,0.000387117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538921,0.00218138) , 
5, 0.0162562, 1, 0, 0.275838,0.0200629) , 
11, 0.793366, 1, 0, 0.411951,0.00952976) , 
15, 0.134758, 1, 0, 0.499946,-0.00462888)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934715,0.00415345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75083,-0.00556806) , 
13, 0.464209, 1, 0, 0.837196,-0.0119857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964721,-0.010668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354586,0.00358301) , 
17, 0.355824, 1, 0, 0.625714,0.0179493) , 
13, 0.607051, 1, 0, 0.737651,0.00210476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284084,-0.00170201) , 
13, 0.836754, 1, 0, 0.585891,-0.00630006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655305,0.00315129) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164879,0.00042369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433761,-0.00117083) , 
2, 0.0116643, 1, 0, 0.259167,-0.0047177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750122,0.00153105) , 
2, 0.025865, 1, 0, 0.400896,0.00472534) , 
15, 0.0497619, 1, 0, 0.442073,0.0123483) , 
6, 0.340767, 1, 0, 0.510605,0.00346208)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974069,-0.0101029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883844,0.00383294) , 
6, 0.245487, 1, 0, 0.93489,0.00979781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879472,0.00092616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663552,-0.00611645) , 
8, 0.0172487, 1, 0, 0.760803,-0.0452453) , 
10, 0.239762, 1, 0, 0.844257,-0.0188586) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448894,0.000987079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934288,0.0072104) , 
12, 0.199722, 1, 0, 0.633845,0.0308448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514827,-0.00245326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630747,0.00107288) , 
15, 0.276513, 1, 0, 0.561089,-0.0164749) , 
15, 0.159646, 1, 0, 0.600638,0.0092472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169671,-0.000844089) , 
8, 0.0481859, 1, 0, 0.402134,-0.00125473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304942,0.00114332) , 
9, 0.0625761, 1, 0, 0.378428,0.004047) , 
10, 0.370541, 1, 0, 0.499896,-0.00192577)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975255,0.00559941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768995,-0.00329204) , 
7, 0.198872, 1, 0, 0.888218,-0.00312852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389132,0.0024486) , 
16, 0.270836, 1, 0, 0.724271,0.00692448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960172,0.00494197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257457,-0.00218383) , 
17, 0.483115, 1, 0, 0.475946,-0.0193219) , 
9, 0.0367118, 1, 0, 0.601814,-0.0060185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340175,0.00143708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819357,-0.00231783) , 
4, 0.351241, 1, 0, 0.436423,0.0156033) , 
13, 0.866386, 1, 0, 0.538976,0.0021964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237064,-0.000965679) , 
3, 0.858992, 1, 0, 0.466844,-0.00295837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917685,0.00398209) , 
2, 0.0571667, 1, 0, 0.501882,-0.000451752)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883351,-0.00375874) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967232,-0.00193821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845184,0.0056448) , 
11, 0.467986, 1, 0, 0.90295,0.0302769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845641,-0.00141768) , 
16, 0.117631, 1, 0, 0.88091,0.014757) , 
16, 0.0553428, 1, 0, 0.881638,0.00351371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594839,-0.00177097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347422,-0.00283915) , 
8, 0.0358618, 1, 0, 0.456253,-0.030228) , 
7, 0.282253, 1, 0, 0.7624,-0.00594429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359258,0.000465112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831793,0.00461346) , 
4, 0.26701, 1, 0, 0.495459,0.0290688) , 
11, 0.917552, 1, 0, 0.683195,0.0044446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289021,0.00247171) , 
8, 0.0517211, 1, 0, 0.598647,0.0116491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181599,-0.000779171) , 
17, 1.21997, 1, 0, 0.505998,0.00598354)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96957,0.00302014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899645,-0.00879575) , 
14, 0.0196619, 1, 0, 0.925776,-0.0165669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947776,-0.00161092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65371,0.00193482) , 
16, 0.111237, 1, 0, 0.796188,0.00864679) , 
9, 0.0338333, 1, 0, 0.869576,-0.00563225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300844,-0.00287887) , 
11, 0.769255, 1, 0, 0.773024,-0.0117589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198151,0.000830597) , 
16, 0.315252, 1, 0, 0.578843,-0.00433715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306259,-0.000732157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728772,-0.00491996) , 
5, 0.0371787, 1, 0, 0.391702,-0.0252102) , 
6, 0.406475, 1, 0, 0.507479,-0.0122968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421068,0.000490193) , 
11, 1.2673, 1, 0, 0.493742,-0.00854925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624234,0.00354443) , 
14, 0.250692, 1, 0, 0.500829,-0.00546985)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747804,-0.00331195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779066,0.000195001) , 
14, 0.0777024, 1, 0, 0.759741,-0.0238604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956899,0.00480387) , 
12, 0.19261, 1, 0, 0.81699,-0.0105202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71693,3.15096e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60556,0.00365996) , 
16, 0.0838417, 1, 0, 0.658253,0.0339628) , 
10, 0.443851, 1, 0, 0.749373,0.00842832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615847,-0.00329149) , 
16, 0.203663, 1, 0, 0.730441,0.00168926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491415,-0.00168411) , 
8, 0.0377433, 1, 0, 0.6746,-0.00643743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247022,0.00135513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107427,-0.000161019) , 
7, 0.670589, 1, 0, 0.154252,0.00563362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55571,0.00285244) , 
2, 0.0187083, 1, 0, 0.206206,0.0124912) , 
7, 0.432903, 1, 0, 0.460868,0.00219985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848173,-0.0049311) , 
12, 0.280661, 1, 0, 0.499165,-0.00208765)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958381,-0.00176764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979832,0.00777629) , 
9, 0.0177975, 1, 0, 0.971289,0.0123424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915028,-0.00399441) , 
14, 0.101267, 1, 0, 0.954245,0.00287756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587148,-0.00148456) , 
17, 0.504706, 1, 0, 0.8292,-0.00825227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624334,0.00275402) , 
10, 0.635557, 1, 0, 0.795362,0.000628798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75563,0.00521365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520277,-6.77445e-05) , 
8, 0.030825, 1, 0, 0.63608,0.0256987) , 
8, 0.0197124, 1, 0, 0.750584,0.00767652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715034,-0.00905286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171467,-0.00122255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266031,0.000108244) , 
11, 0.972043, 1, 0, 0.223771,-0.00748406) , 
3, 0.396313, 1, 0, 0.272602,-0.014482) , 
8, 0.0359055, 1, 0, 0.503373,-0.00378383)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944504,0.00259147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718463,-0.00233802) , 
13, 0.762576, 1, 0, 0.84588,-0.00616844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802939,-7.06897e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478242,0.00417065) , 
13, 0.810316, 1, 0, 0.665718,0.0228065) , 
15, 0.0633704, 1, 0, 0.754693,0.00849687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18032,-0.00171286) , 
16, 0.375008, 1, 0, 0.607778,0.000702588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485072,-0.00139455) , 
6, 0.52788, 1, 0, 0.570876,-0.00868531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174028,0.000300707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95553,-0.00340191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578115,0.00304401) , 
3, 0.322231, 1, 0, 0.689464,0.0425309) , 
4, 0.0596094, 1, 0, 0.409354,0.0218337) , 
15, 0.170105, 1, 0, 0.503721,0.00400322)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447156,0.000652022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126466,-0.000699293) , 
10, 0.585609, 1, 0, 0.212831,-0.0043504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746786,-0.00340273) , 
4, 0.142483, 1, 0, 0.277861,-0.00967021) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955857,-0.00372267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980201,0.00206975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932478,0.00619321) , 
11, 0.367183, 1, 0, 0.955471,0.0256863) , 
10, 0.307895, 1, 0, 0.955644,0.010057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685646,-0.00145048) , 
17, 0.573949, 1, 0, 0.877748,-0.00129295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795339,0.00296852) , 
7, 0.260404, 1, 0, 0.858154,0.00923402) , 
2, 0.0210614, 1, 0, 0.500579,-0.00241471)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372039,-0.000329036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767013,0.00331028) , 
4, 0.0822755, 1, 0, 0.511227,0.0144445) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954512,0.00354521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972265,-0.00119279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838419,-0.00728124) , 
17, 0.433567, 1, 0, 0.914436,-0.0252567) , 
16, 0.0678803, 1, 0, 0.928182,-0.0115695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617673,-0.00395352) , 
17, 0.731124, 1, 0, 0.863042,-0.0274058) , 
4, 0.161387, 1, 0, 0.753373,-0.01436) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318874,-0.000148092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334179,0.00355985) , 
9, 0.0319121, 1, 0, 0.327912,0.0316562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3447,-0.000825662) , 
15, 0.265156, 1, 0, 0.333019,0.0176628) , 
10, 0.557433, 1, 0, 0.580516,-0.00119171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166464,-0.00136655) , 
10, 0.812272, 1, 0, 0.493274,-0.00554076)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917325,-0.00952857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995106,0.0112155) , 
5, 0.0380589, 1, 0, 0.956976,-0.0097309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975998,0.00897202) , 
14, 0.103332, 1, 0, 0.963816,0.00167123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791774,0.00501519) , 
8, 0.0302518, 1, 0, 0.916158,0.011352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538898,-0.00379741) , 
13, 0.776592, 1, 0, 0.807908,-0.0040152) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714945,-0.000115637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612283,0.00235174) , 
10, 0.488544, 1, 0, 0.668324,0.0184999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576679,0.00379666) , 
8, 0.0345812, 1, 0, 0.642403,0.031386) , 
6, 0.339684, 1, 0, 0.733805,0.0118353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281648,-0.00176064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150104,-0.000419041) , 
10, 0.65502, 1, 0, 0.199442,-0.0184549) , 
17, 0.985855, 1, 0, 0.505872,-0.00108505)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140554,-0.00100954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281314,0.0011633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311636,0.00292262) , 
15, 0.151298, 1, 0, 0.298125,0.0297693) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979048,-9.84577e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838126,-0.00652258) , 
13, 0.736465, 1, 0, 0.925521,-0.0200054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781175,0.00163516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732327,0.0013653) , 
15, 0.0633739, 1, 0, 0.756768,0.0163668) , 
10, 0.351178, 1, 0, 0.857131,-0.00526485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819709,0.00466063) , 
15, 0.134685, 1, 0, 0.848945,0.00672669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676426,-0.00258838) , 
15, 0.21466, 1, 0, 0.812247,-0.00215496) , 
5, 0.0154911, 1, 0, 0.666435,0.00689919) , 
12, 0.0522438, 1, 0, 0.536256,0.00208821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375765,-0.00113539) , 
6, 0.638215, 1, 0, 0.495167,-0.00518805)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673373,-0.00196188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680672,0.0019886) , 
16, 0.0848824, 1, 0, 0.676582,-0.00270941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54069,-0.00246802) , 
8, 0.0207943, 1, 0, 0.642302,-0.0130399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74375,-0.00560979) , 
5, 0.0355384, 1, 0, 0.664639,-0.0268736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96316,-0.0066789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845697,0.00293376) , 
11, 0.576919, 1, 0, 0.917499,0.00775778) , 
5, 0.0402769, 1, 0, 0.75532,-0.014454) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920289,-0.00358239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456965,0.00445144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27545,0.000278534) , 
15, 0.157843, 1, 0, 0.344442,0.0290943) , 
10, 0.369787, 1, 0, 0.522263,0.0156566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110798,-0.000983397) , 
17, 1.01957, 1, 0, 0.305438,9.28418e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37459,0.0017868) , 
11, 1.17712, 1, 0, 0.321277,0.00851202) , 
7, 0.240502, 1, 0, 0.498731,-0.000877378)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520051,-0.00326438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545801,-0.000660971) , 
16, 0.0900011, 1, 0, 0.531996,-0.0385309) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925202,-9.46214e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96337,0.00728184) , 
9, 0.0185256, 1, 0, 0.941545,0.0163983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890552,0.00136009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874794,-0.00602048) , 
4, 0.393586, 1, 0, 0.883403,-0.0117438) , 
15, 0.095105, 1, 0, 0.914938,0.0035197) , 
12, 0.121111, 1, 0, 0.794973,-0.00965351) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4734,-0.0028769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215931,0.000728276) , 
13, 0.662338, 1, 0, 0.268729,0.00274664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910511,0.00349634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774424,0.00442904) , 
10, 0.389159, 1, 0, 0.835555,0.0559938) , 
2, 0.0206767, 1, 0, 0.427969,0.0177055) , 
8, 0.0259463, 1, 0, 0.59821,0.00501456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171458,-0.00143766) , 
10, 0.794016, 1, 0, 0.502593,-0.0012187)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502835,5.13799e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382838,0.00367412) , 
9, 0.036912, 1, 0, 0.430292,0.0350345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117589,0.000641912) , 
7, 0.696006, 1, 0, 0.265625,0.0210293) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977506,-0.0117927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98244,0.010073) , 
6, 0.171299, 1, 0, 0.979775,0.00844114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833175,-0.00435068) , 
17, 0.436197, 1, 0, 0.91847,-0.0119688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779498,0.00205241) , 
10, 0.47641, 1, 0, 0.880344,-0.000668767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809475,-0.00470521) , 
14, 0.146237, 1, 0, 0.869039,-0.00814525) , 
12, 0.103273, 1, 0, 0.541114,0.00770967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336737,-0.00158189) , 
6, 0.71553, 1, 0, 0.499101,-0.00152466)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989073,0.00117554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967138,0.00708946) , 
3, 0.180425, 1, 0, 0.981215,0.00760732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359917,-0.00174862) , 
3, 0.340813, 1, 0, 0.697649,-0.00718005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430936,-0.00246337) , 
13, 1.06711, 1, 0, 0.60964,-0.0214541) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748464,-0.00515326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8376,0.0018207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513923,-0.00151208) , 
10, 0.409706, 1, 0, 0.657398,-0.00710016) , 
7, 0.0587718, 1, 0, 0.681534,-0.0210467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665264,0.00418161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199853,-0.000162786) , 
8, 0.0274208, 1, 0, 0.281122,0.00833116) , 
10, 0.564733, 1, 0, 0.428219,-0.00246119) , 
15, 0.0995238, 1, 0, 0.49812,-0.00977916)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671241,0.00268267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287938,-0.00190812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150094,-0.00144904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13744,-0.000314501) , 
11, 0.917585, 1, 0, 0.142857,-0.0110844) , 
16, 0.208177, 1, 0, 0.189612,-0.0220104) , 
11, 0.627663, 1, 0, 0.237792,-0.0165085) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982102,0.00779685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931126,-0.0062467) , 
7, 0.109182, 1, 0, 0.952942,-0.00322615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916834,0.00613575) , 
10, 0.445471, 1, 0, 0.943183,0.010135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876099,-0.00241728) , 
9, 0.038174, 1, 0, 0.924412,0.0021798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775473,0.00298238) , 
6, 0.544371, 1, 0, 0.883851,0.0172598) , 
4, 0.179867, 1, 0, 0.490664,-0.0032913)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289807,-0.00196398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961127,0.00214428) , 
12, 0.0913389, 1, 0, 0.779368,-0.00278637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569605,-0.00461037) , 
9, 0.0431563, 1, 0, 0.72957,-0.0114483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636175,0.00420958) , 
15, 0.283815, 1, 0, 0.714145,-0.00283571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445675,-0.00219027) , 
6, 0.393458, 1, 0, 0.643681,-0.0114059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303822,0.00230273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23756,0.00039848) , 
13, 0.8503, 1, 0, 0.26348,0.0165958) , 
11, 0.870911, 1, 0, 0.512278,-0.00172815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330543,-0.00188067) , 
13, 1.11196, 1, 0, 0.481898,-0.00718612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952623,0.00603577) , 
12, 0.33274, 1, 0, 0.512954,-0.00454239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441915,0.00120824) , 
11, 1.26827, 1, 0, 0.501458,0.000675358)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963053,-0.00558777) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953391,-0.00501394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956976,0.00473584) , 
7, 0.0834538, 1, 0, 0.955283,0.00270806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946663,0.00492097) , 
9, 0.0335199, 1, 0, 0.952158,0.0116061) , 
13, 0.522529, 1, 0, 0.95572,0.00477021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458375,-0.00433267) , 
17, 0.650285, 1, 0, 0.859624,-0.00971142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474678,0.00395318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251222,-0.000559935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283336,0.000913517) , 
3, 0.850283, 1, 0, 0.265377,0.00256148) , 
3, 0.620094, 1, 0, 0.300793,0.0124204) , 
3, 0.492486, 1, 0, 0.498877,0.00457552)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350664,-0.000124568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680323,-0.0043023) , 
4, 0.10974, 1, 0, 0.464856,-0.0269579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791609,-0.00183682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96594,-0.00641979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912612,-0.000871101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848861,0.00221089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873093,0.00447132) , 
14, 0.0766648, 1, 0, 0.860271,0.0411886) , 
10, 0.324155, 1, 0, 0.880704,0.0230181) , 
17, 0.278789, 1, 0, 0.909867,0.0115006) , 
5, 0.0238124, 1, 0, 0.884323,0.00395296) , 
12, 0.121228, 1, 0, 0.709561,-0.00892539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203361,-0.00140781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198964,0.00151743) , 
6, 0.243162, 1, 0, 0.200361,0.00970747) , 
7, 0.438307, 1, 0, 0.495705,-0.00109989)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456746,0.00210158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918313,0.00406133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554451,-0.00297741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850817,-0.00395186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938073,-0.00381205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797898,0.00209437) , 
11, 0.706881, 1, 0, 0.884843,0.00461548) , 
9, 0.0192697, 1, 0, 0.876017,-0.00532235) , 
0, 0.115381, 1, 0, 0.80766,-0.0168738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828798,0.00185005) , 
14, 0.1348, 1, 0, 0.812311,-0.00865656) , 
9, 0.0153558, 1, 0, 0.836394,-0.000807631) , 
5, 0.0150439, 1, 0, 0.763766,0.00631456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1439,-0.00116154) , 
7, 0.530664, 1, 0, 0.540023,-0.00203738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274155,-0.00176749) , 
9, 0.0652654, 1, 0, 0.488589,-0.00785441)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740314,0.000469049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584839,-0.00621344) , 
9, 0.0116034, 1, 0, 0.661825,-0.0215934) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695329,-0.00312081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171173,0.000432307) , 
10, 0.570538, 1, 0, 0.296876,-0.00259688) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968928,-0.00211191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921644,0.00672265) , 
17, 0.270998, 1, 0, 0.942355,0.0230784) , 
5, 0.0231809, 1, 0, 0.516272,0.00613008) , 
9, 0.0179328, 1, 0, 0.556107,-0.00145715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430108,-0.00280092) , 
6, 0.447929, 1, 0, 0.539984,-0.00689975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503697,-2.26313e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344879,0.00171381) , 
7, 0.27612, 1, 0, 0.42921,0.0152255) , 
6, 0.543921, 1, 0, 0.504281,0.000231352)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968881,-0.00526137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96214,0.00608701) , 
6, 0.200671, 1, 0, 0.966481,0.00354707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873165,-0.00599044) , 
13, 0.702641, 1, 0, 0.93741,-0.00735725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498587,0.00336771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38918,-0.000420281) , 
14, 0.0833557, 1, 0, 0.442046,0.0165524) , 
10, 0.488104, 1, 0, 0.762031,0.00110774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61123,-0.00235435) , 
6, 0.409371, 1, 0, 0.736802,-0.0046576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598178,0.00115093) , 
6, 0.549419, 1, 0, 0.705509,0.00177651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510902,0.00224996) , 
15, 0.284015, 1, 0, 0.668177,0.0081543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185239,-0.000920753) , 
17, 1.08084, 1, 0, 0.504096,1.87021e-06)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487829,-0.00309304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455947,0.000325313) , 
16, 0.127346, 1, 0, 0.472988,-0.0302017) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930753,0.00513406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873965,-0.00531021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961917,0.00383069) , 
1, 0.440913, 1, 0, 0.919137,-0.0122415) , 
5, 0.0361668, 1, 0, 0.922941,0.00351082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881522,0.00561389) , 
10, 0.523061, 1, 0, 0.912422,0.0210712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875856,-0.00555619) , 
0, 0.290662, 1, 0, 0.902692,0.00585937) , 
12, 0.121902, 1, 0, 0.743,-0.00754214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394857,-0.00275176) , 
8, 0.0354851, 1, 0, 0.667649,-0.0163879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315084,-0.00031658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230611,0.00142825) , 
14, 0.0647487, 1, 0, 0.257789,0.0140259) , 
8, 0.0430899, 1, 0, 0.501065,-0.00402648)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926187,-0.00477067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929649,0.00490324) , 
9, 0.023466, 1, 0, 0.928242,0.00937387) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887809,0.00709876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661594,-0.00464568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546694,5.99951e-05) , 
14, 0.0775872, 1, 0, 0.598345,-0.0164234) , 
14, 0.0220074, 1, 0, 0.662332,-0.00652199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371032,-0.00288659) , 
6, 0.369745, 1, 0, 0.573124,-0.0191365) , 
16, 0.0767403, 1, 0, 0.669927,-0.0113648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723289,0.00196074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368499,-0.000747217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221736,0.000556961) , 
17, 1.09695, 1, 0, 0.27378,0.00115853) , 
17, 0.818724, 1, 0, 0.334632,0.00546319) , 
11, 0.868703, 1, 0, 0.49981,-0.00282685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53928,-0.00282108) , 
14, 0.224479, 1, 0, 0.502686,-0.00549779)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909642,0.00380499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944936,0.000517418) , 
16, 0.0731661, 1, 0, 0.928465,0.0135639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985183,0.00360763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884876,-0.00501985) , 
11, 0.44416, 1, 0, 0.944441,-0.00954755) , 
4, 0.399731, 1, 0, 0.936885,0.0013827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.310068,-0.00296616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761519,-0.000244872) , 
0, 0.126217, 1, 0, 0.491141,-0.0420214) , 
17, 0.538555, 1, 0, 0.760328,-0.0158095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593731,-0.00322044) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635753,0.00369794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474096,0.00113343) , 
9, 0.0218509, 1, 0, 0.536452,0.038589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187474,0.000234877) , 
10, 0.594357, 1, 0, 0.285026,0.0134455) , 
13, 0.586912, 1, 0, 0.323662,0.0078685) , 
8, 0.0296529, 1, 0, 0.498491,-0.00161149)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998258,0.0189236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978338,-0.00180414) , 
10, 0.199263, 1, 0, 0.986783,0.00584325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81486,-0.00455627) , 
3, 0.276334, 1, 0, 0.937428,-0.0079676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602022,-0.00137332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879376,0.0026301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492205,0.00602411) , 
16, 0.125001, 1, 0, 0.666746,0.062327) , 
13, 0.599584, 1, 0, 0.64213,0.033383) , 
10, 0.406498, 1, 0, 0.796975,0.0117001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143786,-0.00139454) , 
3, 0.587228, 1, 0, 0.545085,-0.00104843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396147,0.00164919) , 
13, 1.05452, 1, 0, 0.51603,0.00468551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413244,-0.00115045) , 
13, 1.28053, 1, 0, 0.499742,-0.000244887)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996408,0.00979604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910666,-0.00835903) , 
3, 0.159668, 1, 0, 0.958248,-0.0125086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950296,0.00632873) , 
17, 0.325287, 1, 0, 0.955662,0.000644461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581686,-0.00200134) , 
17, 0.473997, 1, 0, 0.879389,-0.00548798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718164,0.000183652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518977,0.00466966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249917,0.00142188) , 
8, 0.0458155, 1, 0, 0.318801,0.0341959) , 
8, 0.0322285, 1, 0, 0.431121,0.025349) , 
11, 0.657565, 1, 0, 0.636871,0.0111952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149176,-0.00118185) , 
16, 0.379012, 1, 0, 0.536913,0.00574362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358677,-0.000584056) , 
6, 0.702036, 1, 0, 0.497428,0.00146375)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980486,0.00919447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639062,-0.00243025) , 
8, 0.0328177, 1, 0, 0.849122,0.000712213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889807,0.00573938) , 
13, 0.605232, 1, 0, 0.865829,0.0171996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995086,0.0101435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866799,-0.00576419) , 
3, 0.169617, 1, 0, 0.933487,-0.0149751) , 
0, 0.2345, 1, 0, 0.887244,0.00701568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249867,-0.000951225) , 
3, 0.508905, 1, 0, 0.631548,-0.00198875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293377,0.00211521) , 
11, 0.930956, 1, 0, 0.556145,0.00537615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234583,-0.000509048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609805,-0.00228353) , 
2, 0.0269831, 1, 0, 0.343605,-0.0226257) , 
11, 1.10419, 1, 0, 0.498819,-0.00217648)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339692,-0.000178631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364219,0.00343628) , 
15, 0.185073, 1, 0, 0.354045,0.0294184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115483,-0.000326086) , 
3, 0.656615, 1, 0, 0.194946,0.00668018) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961673,-0.0166629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975058,0.00479083) , 
10, 0.349641, 1, 0, 0.968065,-0.00752319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823332,0.00265204) , 
6, 0.283678, 1, 0, 0.900564,0.0128403) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888977,-0.00799816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518095,0.000369008) , 
17, 0.617761, 1, 0, 0.725527,-0.0196283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950468,0.00623293) , 
12, 0.212322, 1, 0, 0.783166,-0.00564546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462998,-0.00259628) , 
11, 0.970054, 1, 0, 0.641366,-0.0303007) , 
8, 0.0173064, 1, 0, 0.737041,-0.0143766) , 
2, 0.0149906, 1, 0, 0.507026,-0.00544203)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655774,-0.00182874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445526,-0.00503431) , 
15, 0.0867167, 1, 0, 0.55805,-0.0341136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267734,0.000341376) , 
11, 0.847993, 1, 0, 0.372129,-0.00844951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76938,-0.00448414) , 
5, 0.0321133, 1, 0, 0.445893,-0.0171087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885858,-0.00473981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937333,-0.000527257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872929,0.0039735) , 
10, 0.361839, 1, 0, 0.903793,0.0234588) , 
14, 0.0200088, 1, 0, 0.897887,0.00625122) , 
2, 0.0391141, 1, 0, 0.575118,-0.0104301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955784,0.00209941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204424,-0.00166517) , 
16, 0.15516, 1, 0, 0.463242,-0.0129333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470667,0.00241822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299454,0.000427305) , 
9, 0.0546049, 1, 0, 0.356132,0.0195322) , 
6, 0.312152, 1, 0, 0.393966,0.00806438) , 
15, 0.170105, 1, 0, 0.496923,-0.00244691)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83964,-0.00809996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907812,0.000549046) , 
7, 0.136907, 1, 0, 0.876144,-0.0246792) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513204,0.000444312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577108,0.00233605) , 
14, 0.013657, 1, 0, 0.547434,0.0206949) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973203,-0.0056652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927308,0.00487994) , 
6, 0.181683, 1, 0, 0.949245,0.0134941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16174,-0.000537106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668839,-0.00284329) , 
12, 0.106161, 1, 0, 0.264338,-0.0174612) , 
17, 0.447868, 1, 0, 0.411021,-0.0108317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358747,0.000651248) , 
11, 1.09917, 1, 0, 0.396274,-0.0039177) , 
15, 0.0497619, 1, 0, 0.419278,-0.00017195) , 
10, 0.282366, 1, 0, 0.496313,-0.00430424)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967537,-0.0108633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980866,-0.00154986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891986,0.00419031) , 
3, 0.233841, 1, 0, 0.943355,0.0132213) , 
17, 0.28254, 1, 0, 0.951746,0.00387658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546586,-0.00379975) , 
10, 0.433062, 1, 0, 0.83279,-0.00916997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220729,0.00101155) , 
10, 0.631037, 1, 0, 0.638699,-0.00218421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452236,-0.00234656) , 
6, 0.467054, 1, 0, 0.596044,-0.0108585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331463,0.001984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599849,-0.000786045) , 
14, 0.200093, 1, 0, 0.430569,0.015466) , 
15, 0.248809, 1, 0, 0.552772,-0.00397453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268473,0.000973385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689646,0.00131175) , 
5, 0.023985, 1, 0, 0.393163,0.0222279) , 
11, 1.10532, 1, 0, 0.512419,0.00265005)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778197,-0.000835094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502481,0.00228202) , 
11, 0.710507, 1, 0, 0.596124,0.0311175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257664,0.000465975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0963765,-0.000953728) , 
16, 0.270216, 1, 0, 0.161006,-0.00398759) , 
10, 0.524354, 1, 0, 0.268687,0.00470003) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99179,0.0107673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966636,-0.0102628) , 
14, 0.0249549, 1, 0, 0.978469,-0.00188487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760927,-0.00478554) , 
3, 0.329007, 1, 0, 0.905353,-0.0223337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864777,0.00338065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803141,-0.000462334) , 
15, 0.0655091, 1, 0, 0.831416,0.01389) , 
10, 0.380443, 1, 0, 0.875822,-0.00786565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79071,-0.00187737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74691,-0.00879414) , 
12, 0.186374, 1, 0, 0.768138,-0.0646213) , 
15, 0.159094, 1, 0, 0.845864,-0.023655) , 
4, 0.189374, 1, 0, 0.492883,-0.00631405)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490904,-0.00326343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985662,-0.00886265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990288,0.0137909) , 
7, 0.121969, 1, 0, 0.987997,0.0048709) , 
2, 0.0209941, 1, 0, 0.812541,-0.00725377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444665,0.00376091) , 
13, 0.842987, 1, 0, 0.723907,0.00373332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82897,0.000662984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264306,-0.00300409) , 
7, 0.284506, 1, 0, 0.527507,-0.0203076) , 
6, 0.267129, 1, 0, 0.627951,-0.00801249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467474,0.00129079) , 
11, 1.1732, 1, 0, 0.591475,0.000293299) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644348,-0.00243703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762076,-0.000786573) , 
14, 0.138963, 1, 0, 0.705231,-0.0240413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463458,-0.00483278) , 
16, 0.106357, 1, 0, 0.615472,-0.0473586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321274,-0.000200391) , 
16, 0.187054, 1, 0, 0.525826,-0.0338653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205539,-0.000199314) , 
10, 0.703827, 1, 0, 0.376182,-0.0194813) , 
15, 0.145804, 1, 0, 0.487414,-0.00926462)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558869,0.00173887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151504,-0.00047948) , 
17, 0.828946, 1, 0, 0.231066,-0.000935241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805707,0.00495557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729649,-0.00203997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945419,-0.00208685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774289,0.00302228) , 
13, 0.847657, 1, 0, 0.867243,0.0227493) , 
2, 0.03039, 1, 0, 0.825271,0.00728977) , 
2, 0.0191344, 1, 0, 0.819812,0.0239951) , 
12, 0.0867607, 1, 0, 0.515183,0.0110956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973424,0.002043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740415,-0.0029339) , 
17, 0.450425, 1, 0, 0.884029,-0.0146056) , 
2, 0.0464733, 1, 0, 0.585536,0.00619345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160077,-0.00195996) , 
10, 0.823985, 1, 0, 0.504617,-0.00105118)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991729,0.0168673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990708,0.00348614) , 
2, 0.0293078, 1, 0, 0.991122,0.00964796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425927,-0.00193488) , 
3, 0.242832, 1, 0, 0.771241,-0.00591899) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872198,-0.0044991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875314,0.00176651) , 
13, 0.785729, 1, 0, 0.87375,-0.00406544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.431403,0.00550748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678296,0.00259512) , 
13, 0.794795, 1, 0, 0.55852,0.0560984) , 
11, 0.609789, 1, 0, 0.687641,0.0314547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155414,0.000341538) , 
3, 0.654603, 1, 0, 0.43469,0.018916) , 
13, 0.659092, 1, 0, 0.544471,0.010815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283644,-4.37944e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658235,-0.00133191) , 
5, 0.0360635, 1, 0, 0.39891,-0.00964547) , 
13, 1.12047, 1, 0, 0.504972,0.00526282)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886173,-0.00344372) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604705,-0.00159494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984145,-0.00529023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913754,0.00592568) , 
3, 0.199141, 1, 0, 0.94627,0.0255157) , 
0, 0.132193, 1, 0, 0.820757,0.0092664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553069,0.00337863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893644,0.00119935) , 
12, 0.139212, 1, 0, 0.705245,0.0357293) , 
9, 0.0368089, 1, 0, 0.782287,0.0180795) , 
16, 0.0527576, 1, 0, 0.799774,0.0113761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498531,-0.00153748) , 
9, 0.0586651, 1, 0, 0.739914,0.00390749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198035,0.000351479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204646,-0.00118315) , 
3, 0.77933, 1, 0, 0.201857,-0.0103216) , 
17, 0.965807, 1, 0, 0.495803,-0.0025481)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966146,0.00405125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989045,0.00338045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946985,-0.0135245) , 
17, 0.211232, 1, 0, 0.967833,-0.0109123) , 
1, 0.384795, 1, 0, 0.967255,-0.00312786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70442,-0.00367604) , 
17, 0.399004, 1, 0, 0.865735,-0.0175553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397879,0.000990921) , 
8, 0.0370661, 1, 0, 0.699654,-0.00620928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161919,-0.00254884) , 
16, 0.329553, 1, 0, 0.557727,-0.012741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652432,0.00313449) , 
14, 0.233515, 1, 0, 0.565887,-0.00866518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57374,-0.000107507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334684,0.00204392) , 
10, 0.537359, 1, 0, 0.42263,0.0218997) , 
13, 0.960401, 1, 0, 0.506274,0.00405365)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361232,0.00363159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954435,0.00322479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876151,-0.0056739) , 
7, 0.184872, 1, 0, 0.924919,-0.00414598) , 
12, 0.106193, 1, 0, 0.738787,0.01223) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974842,0.00720097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305441,-0.00292507) , 
8, 0.0273972, 1, 0, 0.611158,-0.0154553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577162,0.00232746) , 
9, 0.0401377, 1, 0, 0.597554,-0.00171136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152663,-0.00064935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814032,-0.00109352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517594,-0.00352743) , 
10, 0.51819, 1, 0, 0.6477,-0.0473674) , 
12, 0.0791408, 1, 0, 0.355727,-0.0254847) , 
6, 0.266913, 1, 0, 0.443207,-0.0168848) , 
15, 0.0746428, 1, 0, 0.528408,-0.00849242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404945,0.00116904) , 
11, 1.17532, 1, 0, 0.502422,-0.00143445)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972076,8.13113e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956712,0.00570154) , 
16, 0.152953, 1, 0, 0.965319,0.00692954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873145,-0.00508796) , 
13, 0.62801, 1, 0, 0.934896,-0.00446625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673603,0.00286808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892824,-4.63862e-05) , 
1, 0.420612, 1, 0, 0.780544,0.0239733) , 
13, 0.74485, 1, 0, 0.859702,0.00938837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59819,-0.00303619) , 
15, 0.238757, 1, 0, 0.821277,0.0013292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649904,0.00299064) , 
15, 0.338252, 1, 0, 0.799802,0.00673347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107046,-0.000590556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362879,-0.00172775) , 
0, 0.0693568, 1, 0, 0.209245,-0.0216161) , 
17, 0.879345, 1, 0, 0.494352,-0.0079296)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906125,-0.00407603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984575,0.00228384) , 
5, 0.039364, 1, 0, 0.94577,-0.00898107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964922,0.00600345) , 
14, 0.0796244, 1, 0, 0.95278,0.00276801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749275,-0.00548397) , 
10, 0.472178, 1, 0, 0.892684,-0.0136251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887386,0.00679589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413983,-0.00173318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221998,0.00180922) , 
11, 0.775597, 1, 0, 0.292498,0.00812788) , 
16, 0.150441, 1, 0, 0.394821,0.0152114) , 
8, 0.0235036, 1, 0, 0.608498,0.00283509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392015,0.00402787) , 
13, 0.914364, 1, 0, 0.57288,0.0114063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640312,0.000647476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258318,-0.00147392) , 
17, 0.905614, 1, 0, 0.373117,-0.0179001) , 
13, 1.01376, 1, 0, 0.49966,0.000664474)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995238,0.0108967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760053,-0.00843525) , 
11, 0.463831, 1, 0, 0.892948,-0.0132583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770374,0.0022653) , 
6, 0.23346, 1, 0, 0.843445,-0.000772289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438204,0.00244637) , 
11, 0.844864, 1, 0, 0.719387,0.00957958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924632,0.00334303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211671,-0.00184973) , 
17, 0.610513, 1, 0, 0.417113,-0.0160291) , 
15, 0.107755, 1, 0, 0.594574,-0.000994613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424946,0.000819977) , 
11, 1.1339, 1, 0, 0.550949,0.00387644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810702,0.00252937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327676,-0.0017586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711652,-0.00519139) , 
12, 0.11067, 1, 0, 0.477609,-0.0541976) , 
16, 0.072029, 1, 0, 0.576787,-0.0301691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192171,7.72604e-05) , 
16, 0.204083, 1, 0, 0.402637,-0.0160052) , 
14, 0.11959, 1, 0, 0.500891,-0.00283397)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648238,-0.00148804) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935073,0.00342268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878015,-0.00364467) , 
9, 0.014346, 1, 0, 0.908824,-0.00259941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950428,0.00521903) , 
9, 0.0192551, 1, 0, 0.925772,0.00957546) , 
12, 0.122789, 1, 0, 0.851149,0.00101008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714551,-0.00474677) , 
9, 0.0409212, 1, 0, 0.825523,-0.0100638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790867,0.00300232) , 
15, 0.193031, 1, 0, 0.819,-0.00204858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504223,-3.67754e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370379,-0.00240674) , 
9, 0.0329543, 1, 0, 0.41048,-0.0308048) , 
10, 0.529344, 1, 0, 0.655559,-0.0135534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190659,-0.000786625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255095,0.00122659) , 
11, 0.965257, 1, 0, 0.225424,0.00609091) , 
8, 0.0493319, 1, 0, 0.500317,-0.00646346)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176881,0.00146322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490714,-0.00160212) , 
5, 0.0109545, 1, 0, 0.252504,0.00901295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674785,0.00372712) , 
5, 0.017459, 1, 0, 0.354948,0.0214907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210806,0.000268678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459021,-0.00193766) , 
5, 0.0158713, 1, 0, 0.274451,-0.00701151) , 
15, 0.202377, 1, 0, 0.318502,0.00858591) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933233,-0.00428891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989167,9.14154e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936284,0.00463265) , 
3, 0.205569, 1, 0, 0.966085,0.0135192) , 
12, 0.15533, 1, 0, 0.957556,0.00603505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713673,5.23325e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642643,-0.00279951) , 
16, 0.113092, 1, 0, 0.672502,-0.0318929) , 
17, 0.54222, 1, 0, 0.835133,-0.0102539) , 
5, 0.0269831, 1, 0, 0.512079,0.00152677)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561207,-0.000996819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420939,-0.00368006) , 
7, 0.108457, 1, 0, 0.4904,-0.0469806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568268,-0.00338978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111798,-0.000628938) , 
17, 0.840514, 1, 0, 0.193345,-0.0147508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253829,0.00150318) , 
6, 0.408202, 1, 0, 0.219416,0.00339546) , 
7, 0.240502, 1, 0, 0.277206,-0.00734774) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990152,0.0020758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945383,0.00799429) , 
3, 0.185063, 1, 0, 0.972288,0.0219287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961326,-0.00597766) , 
5, 0.0470813, 1, 0, 0.96839,0.0104696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824839,-0.00434719) , 
6, 0.397423, 1, 0, 0.938266,-0.000793359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709294,0.00177023) , 
3, 0.579695, 1, 0, 0.874979,0.0100228) , 
12, 0.121902, 1, 0, 0.501651,-0.000825675)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962887,0.000233212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690243,0.00299454) , 
11, 0.634133, 1, 0, 0.810906,0.0317057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898559,-0.00426588) , 
1, 0.51306, 1, 0, 0.843353,0.0113819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728997,-0.00245206) , 
15, 0.149931, 1, 0, 0.818181,0.00159444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703129,0.00342687) , 
15, 0.218473, 1, 0, 0.786325,0.0151572) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631262,-0.00317119) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62875,0.00198239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124071,-0.000940279) , 
10, 0.468487, 1, 0, 0.180425,-0.00899306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796939,0.0023674) , 
4, 0.168487, 1, 0, 0.26905,-0.00266086) , 
8, 0.0212989, 1, 0, 0.314279,-0.00697648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779638,-0.00618188) , 
12, 0.223757, 1, 0, 0.351519,-0.011882) , 
16, 0.116619, 1, 0, 0.496857,-0.00284392)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994081,0.00843464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953099,-0.0202909) , 
11, 0.303217, 1, 0, 0.972462,-0.0114841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620161,0.00201765) , 
17, 0.355824, 1, 0, 0.815983,0.000616558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886343,-0.000161129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279953,-0.00203695) , 
17, 0.609512, 1, 0, 0.488419,-0.0217857) , 
6, 0.235773, 1, 0, 0.655666,-0.0103475) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672563,0.00161773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196154,-0.000759438) , 
11, 0.771695, 1, 0, 0.35523,-0.0012041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393404,0.0015199) , 
6, 0.535326, 1, 0, 0.368761,0.00901263) , 
13, 0.818112, 1, 0, 0.51517,-0.000866937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379013,-0.00176265) , 
13, 1.22718, 1, 0, 0.488622,-0.00858146)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781594,0.0051648) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830914,-0.0063381) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949853,-0.0023019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778402,0.00290424) , 
10, 0.465338, 1, 0, 0.887791,0.00461182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592025,-0.00379206) , 
13, 0.683664, 1, 0, 0.772937,-0.0137523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567902,0.00110705) , 
13, 0.917569, 1, 0, 0.711296,-0.00392873) , 
14, 0.0361852, 1, 0, 0.73504,-0.0104328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.179491,-0.000782291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24569,0.00227363) , 
6, 0.323174, 1, 0, 0.211116,0.0109559) , 
8, 0.0443142, 1, 0, 0.511347,-0.00130076) , 
9, 0.00668192, 1, 0, 0.537062,0.00250121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353418,-0.00116598) , 
6, 0.715644, 1, 0, 0.49827,-0.00385676)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999051,0.0145792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981024,-0.00103849) , 
16, 0.0673568, 1, 0, 0.990007,0.00576292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881619,-0.00525154) , 
11, 0.413475, 1, 0, 0.944115,-0.00484669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961999,0.00126412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732276,0.00318422) , 
3, 0.273125, 1, 0, 0.842461,0.0198415) , 
6, 0.209755, 1, 0, 0.905199,0.00460464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732077,-0.00292631) , 
6, 0.39621, 1, 0, 0.875915,-0.00219386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472333,0.00207214) , 
3, 0.480345, 1, 0, 0.773028,0.00683139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410185,6.69077e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177209,-0.00158773) , 
8, 0.037627, 1, 0, 0.25334,-0.0180785) , 
3, 0.612484, 1, 0, 0.49255,-0.00661258)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574573,-0.0043943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619021,-0.00112851) , 
14, 0.103332, 1, 0, 0.598039,-0.0444784) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825566,0.00294538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207424,-0.000509967) , 
10, 0.360022, 1, 0, 0.379682,0.00289383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243378,-0.00183655) , 
9, 0.0369519, 1, 0, 0.32019,-0.0113625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231346,0.000876432) , 
14, 0.10419, 1, 0, 0.290843,-0.00335287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265992,-0.00173696) , 
14, 0.161024, 1, 0, 0.286156,-0.00815152) , 
7, 0.124076, 1, 0, 0.33503,-0.0138442) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989018,-0.00377503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822474,-0.00247641) , 
3, 0.231525, 1, 0, 0.905951,-0.0139123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967744,0.0057335) , 
12, 0.195285, 1, 0, 0.936087,0.00272881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73764,0.00238821) , 
11, 0.842285, 1, 0, 0.871099,0.0170639) , 
2, 0.0329793, 1, 0, 0.493727,-0.00469417)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910187,-0.00389071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527748,0.00351022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980691,0.00724993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92977,-0.00223215) , 
16, 0.10803, 1, 0, 0.953228,0.0031025) , 
4, 0.13193, 1, 0, 0.833498,0.0164486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576872,-0.00128524) , 
13, 0.882632, 1, 0, 0.774205,0.00772552) , 
16, 0.0549879, 1, 0, 0.805148,0.00170831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374491,-0.00262388) , 
16, 0.280442, 1, 0, 0.744961,-0.00278076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686633,-0.000231677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452581,0.00243055) , 
10, 0.423475, 1, 0, 0.531257,0.027887) , 
11, 0.88823, 1, 0, 0.686826,0.00556193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189383,-0.000916897) , 
17, 1.04378, 1, 0, 0.497444,-0.00261232)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950502,-0.005095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955373,0.00361033) , 
7, 0.125261, 1, 0, 0.952815,-0.00302423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861214,0.00374019) , 
13, 0.80343, 1, 0, 0.923112,0.010515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591695,-0.00211397) , 
10, 0.577779, 1, 0, 0.862658,0.00415283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182908,-0.000470519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707063,-0.00471867) , 
5, 0.0194955, 1, 0, 0.294815,-0.0187834) , 
8, 0.0341528, 1, 0, 0.576475,-0.00740665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511643,-0.00129233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309499,0.00222788) , 
13, 0.753191, 1, 0, 0.38099,0.0180201) , 
9, 0.0508431, 1, 0, 0.510632,0.0011576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388276,-0.001531) , 
13, 1.28053, 1, 0, 0.490002,-0.00510947)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275109,-0.00127946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909316,-0.00138621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921293,0.00631436) , 
16, 0.0954447, 1, 0, 0.916143,0.0226176) , 
12, 0.106193, 1, 0, 0.668618,0.00708402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968651,0.00179884) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621295,-0.00164481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552404,-0.00474685) , 
7, 0.233865, 1, 0, 0.59643,-0.0515244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206529,-0.000757606) , 
7, 0.384803, 1, 0, 0.378466,-0.0289573) , 
17, 0.406655, 1, 0, 0.497432,-0.0221832) , 
9, 0.0177364, 1, 0, 0.545879,-0.0139004) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430935,-0.00174727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477677,-8.80135e-05) , 
15, 0.293536, 1, 0, 0.456088,-0.00909664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335719,0.00111451) , 
6, 0.351018, 1, 0, 0.383323,0.0088878) , 
15, 0.218706, 1, 0, 0.495498,-0.00683763)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983834,0.00678964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766579,-0.0036746) , 
8, 0.0262294, 1, 0, 0.889021,-0.00493107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825535,0.000357404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641957,0.00345693) , 
13, 0.516263, 1, 0, 0.732498,0.0203815) , 
15, 0.124169, 1, 0, 0.816158,0.00685211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838967,-0.00403493) , 
13, 0.731409, 1, 0, 0.822476,-0.00320742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343837,0.00198675) , 
3, 0.55569, 1, 0, 0.646601,0.00948523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251693,-0.000709786) , 
3, 0.76605, 1, 0, 0.507806,0.00141183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359985,0.00140767) , 
9, 0.0605952, 1, 0, 0.477588,0.00599657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849635,-0.00556587) , 
12, 0.33274, 1, 0, 0.500526,0.00286116)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477473,-0.00373108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996545,0.0161879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963336,-0.00359844) , 
1, 0.520914, 1, 0, 0.981119,0.00882853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742547,-0.00200115) , 
3, 0.396313, 1, 0, 0.894407,-0.00614595) , 
0, 0.130709, 1, 0, 0.780255,-0.0259768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697408,0.00193073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634966,0.000293071) , 
14, 0.103173, 1, 0, 0.664861,0.016494) , 
14, 0.0809508, 1, 0, 0.744427,-0.0127903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670399,0.00356537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465483,0.00320294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117092,-0.00064819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491603,0.000377644) , 
2, 0.0154727, 1, 0, 0.214961,-0.00439545) , 
14, 0.0404745, 1, 0, 0.281597,0.0066375) , 
16, 0.198623, 1, 0, 0.343361,0.0133519) , 
16, 0.153481, 1, 0, 0.526583,0.00140919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616885,-0.00433075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218071,-0.000797262) , 
7, 0.229542, 1, 0, 0.355668,-0.0284708) , 
14, 0.137618, 1, 0, 0.491775,-0.00467611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669435,0.0038058) , 
14, 0.250692, 1, 0, 0.500816,-0.00196819)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76655,0.00581764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233219,0.00124945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134782,-0.000556155) , 
9, 0.0313023, 1, 0, 0.167178,0.000177578) , 
16, 0.195909, 1, 0, 0.258048,0.00979748) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999537,0.0196455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959998,-0.0206273) , 
3, 0.139109, 1, 0, 0.984574,-0.00460049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910927,0.00319486) , 
3, 0.205159, 1, 0, 0.96281,0.00269148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633287,-0.00239506) , 
13, 0.866653, 1, 0, 0.890725,-0.00516776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6823,-0.00485301) , 
6, 0.38994, 1, 0, 0.85303,-0.0170829) , 
5, 0.0180318, 1, 0, 0.539566,-0.00292108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24504,0.000186213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762316,0.00281448) , 
12, 0.10489, 1, 0, 0.427899,0.0222045) , 
6, 0.509926, 1, 0, 0.49854,0.00630994)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827584,-0.0068052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842654,0.00162493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545374,-0.00107784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508843,0.000622287) , 
15, 0.0154384, 1, 0, 0.526314,-0.00166748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356208,-0.0035508) , 
15, 0.0525016, 1, 0, 0.456564,-0.0236878) , 
7, 0.205993, 1, 0, 0.57418,-0.0115748) , 
16, 0.0720009, 1, 0, 0.625176,-0.0195679) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791556,0.000747682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368982,0.00341713) , 
10, 0.460464, 1, 0, 0.52013,0.0365484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686804,-0.00242645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264732,0.000549075) , 
11, 0.706648, 1, 0, 0.374972,0.000720357) , 
14, 0.089664, 1, 0, 0.422393,0.0124249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604922,0.000827897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321462,-0.002204) , 
6, 0.27228, 1, 0, 0.426455,-0.0239274) , 
14, 0.160989, 1, 0, 0.423565,0.00193217) , 
14, 0.0626731, 1, 0, 0.497743,-0.00597828)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439264,-0.00183572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975387,0.00599761) , 
2, 0.0318632, 1, 0, 0.709029,-0.00212683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601055,0.00531589) , 
9, 0.0199039, 1, 0, 0.677531,0.00972178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654192,-0.00377693) , 
9, 0.0350057, 1, 0, 0.671897,0.00183421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419413,-0.0023261) , 
15, 0.169796, 1, 0, 0.611741,-0.00433439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416853,-0.00360289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418496,-0.0036231) , 
6, 0.299007, 1, 0, 0.417693,-0.0415356) , 
6, 0.26257, 1, 0, 0.556472,-0.01493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602261,0.00251157) , 
14, 0.188019, 1, 0, 0.56242,-0.0100353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223931,-0.000186731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743978,-0.00115435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768383,0.00262539) , 
9, 0.0246119, 1, 0, 0.759758,0.0238578) , 
12, 0.10112, 1, 0, 0.433453,0.00717387) , 
6, 0.343367, 1, 0, 0.495249,-0.00107206)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289621,0.000146543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752211,-0.00387031) , 
5, 0.0144098, 1, 0, 0.48518,-0.0155659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976407,-0.00713597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957674,0.00815158) , 
11, 0.45841, 1, 0, 0.967236,0.0174363) , 
12, 0.133915, 1, 0, 0.652708,-0.00409665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535339,0.000128857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337275,0.00148702) , 
10, 0.530509, 1, 0, 0.426552,0.0172223) , 
13, 0.915864, 1, 0, 0.545289,0.00602935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963157,0.0024822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735312,-0.00333048) , 
17, 0.42283, 1, 0, 0.871552,-0.016456) , 
12, 0.227664, 1, 0, 0.610798,0.00151463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16807,-0.00205254) , 
16, 0.317887, 1, 0, 0.545793,-0.00287613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187427,0.00215839) , 
16, 0.405323, 1, 0, 0.499028,0.000917299)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266948,-0.00217537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129654,-0.000756357) , 
16, 0.22518, 1, 0, 0.176836,-0.0212606) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95276,-0.00139639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977873,0.00824203) , 
15, 0.0470714, 1, 0, 0.966276,0.0118127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926109,-0.00554228) , 
16, 0.102773, 1, 0, 0.950539,-0.000100759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722154,0.00305616) , 
11, 0.828142, 1, 0, 0.891302,0.0146282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688562,-0.00232937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594379,0.000284126) , 
7, 0.315098, 1, 0, 0.639899,-0.0159749) , 
8, 0.033581, 1, 0, 0.813365,0.00514104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704246,-0.00281406) , 
14, 0.107071, 1, 0, 0.796382,-0.00146593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756781,-1.84726e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577257,0.00362199) , 
7, 0.154016, 1, 0, 0.671135,0.031994) , 
15, 0.218473, 1, 0, 0.768344,0.00602443) , 
12, 0.0696584, 1, 0, 0.570563,-0.00309882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20349,0.00152669) , 
8, 0.0634367, 1, 0, 0.501821,0.00197931)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888892,-0.006973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65545,0.00348252) , 
13, 0.680486, 1, 0, 0.769155,0.00447523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674828,-0.00281831) , 
6, 0.297403, 1, 0, 0.733291,-0.0112801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977957,-0.00887992) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655901,0.00261608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429105,0.00500751) , 
11, 0.829468, 1, 0, 0.539199,0.050614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650108,0.00165099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17543,-0.000155241) , 
7, 0.348003, 1, 0, 0.374787,0.011203) , 
9, 0.0359864, 1, 0, 0.423037,0.022769) , 
3, 0.20345, 1, 0, 0.521602,0.0174549) , 
14, 0.0417821, 1, 0, 0.57802,0.00979663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260459,-0.00092809) , 
3, 0.864683, 1, 0, 0.503001,0.00291686)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218301,-0.00150002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198464,0.00133709) , 
14, 0.0479465, 1, 0, 0.203717,0.00841269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198235,-0.000568459) , 
15, 0.272289, 1, 0, 0.202083,0.00315556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926011,-0.00116152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471378,-0.00176529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619487,-0.00369005) , 
5, 0.0223508, 1, 0, 0.535635,-0.0580289) , 
11, 0.634404, 1, 0, 0.653089,-0.0422763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957488,-0.000966519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823563,0.00274429) , 
17, 0.530824, 1, 0, 0.910683,0.0127123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965422,-0.00155214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746411,-0.00310162) , 
13, 0.891239, 1, 0, 0.876738,-0.0211944) , 
12, 0.245925, 1, 0, 0.894938,-0.00301517) , 
4, 0.314824, 1, 0, 0.783847,-0.0210493) , 
12, 0.0877067, 1, 0, 0.492189,-0.00891462)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784229,0.00022387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7029,0.00527835) , 
9, 0.0358657, 1, 0, 0.742494,0.0322665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978342,0.00122449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906428,-0.00975791) , 
10, 0.317522, 1, 0, 0.944991,-0.0152236) , 
4, 0.283495, 1, 0, 0.839253,0.00957436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154917,-0.000274155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617965,-0.0013779) , 
4, 0.140922, 1, 0, 0.268786,-0.0113166) , 
3, 0.5107, 1, 0, 0.436538,-0.00517342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568429,0.00242487) , 
14, 0.223886, 1, 0, 0.44682,-0.00209753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976922,0.00174375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89284,0.0049405) , 
6, 0.177565, 1, 0, 0.926989,0.032165) , 
12, 0.249826, 1, 0, 0.507566,0.002237)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969636,0.00456473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910459,-0.00854129) , 
14, 0.0336132, 1, 0, 0.944126,-0.00760583) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901942,-0.00236625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993341,0.0117929) , 
4, 0.290326, 1, 0, 0.956135,0.005494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747718,0.00337629) , 
11, 0.558479, 1, 0, 0.889048,0.0161389) , 
9, 0.021118, 1, 0, 0.911684,0.00638008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177407,-0.00230586) , 
3, 0.449473, 1, 0, 0.606895,-0.0114551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639242,-0.00251683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554398,0.0024922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26049,0.000379945) , 
8, 0.035441, 1, 0, 0.346688,0.0189506) , 
16, 0.0748395, 1, 0, 0.39116,0.00931705) , 
13, 0.907046, 1, 0, 0.505006,-0.00164458)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852496,-3.64241e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435038,0.00233884) , 
13, 0.612986, 1, 0, 0.58843,0.0273926) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982631,-0.000964284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876027,0.00310971) , 
3, 0.266919, 1, 0, 0.937459,0.0122059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9168,0.00199804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818926,-0.00363902) , 
8, 0.0151394, 1, 0, 0.862169,-0.0140665) , 
9, 0.0246377, 1, 0, 0.896819,-0.00197553) , 
2, 0.0247858, 1, 0, 0.770242,0.0100785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330303,-0.00143393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143104,-5.47229e-05) , 
16, 0.233108, 1, 0, 0.211524,-0.0128893) , 
17, 0.937968, 1, 0, 0.502668,-0.00092097)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971468,0.00401992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449867,-0.00322712) , 
17, 0.532451, 1, 0, 0.675555,-0.0249366) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988346,0.0117219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791981,0.00026809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668099,-0.00356526) , 
6, 0.273619, 1, 0, 0.729895,-0.022403) , 
10, 0.238551, 1, 0, 0.80634,-0.00814739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341575,0.00183814) , 
3, 0.608375, 1, 0, 0.560409,0.014329) , 
14, 0.0163909, 1, 0, 0.585665,0.00571641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713662,0.000374762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293284,-0.00144052) , 
13, 0.712339, 1, 0, 0.406307,-0.0174302) , 
14, 0.092883, 1, 0, 0.522628,-0.00241864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390236,0.00247462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390813,0.000469091) , 
15, 0.385033, 1, 0, 0.390488,0.0257898) , 
15, 0.296116, 1, 0, 0.499446,0.0025302)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931018,-0.00266718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799005,0.00431026) , 
13, 0.846475, 1, 0, 0.872125,0.0218167) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914557,-0.0039778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727642,0.00381357) , 
11, 0.613109, 1, 0, 0.842398,0.0116754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58375,-0.00250525) , 
16, 0.148997, 1, 0, 0.746024,-0.00473813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421789,-0.00200931) , 
13, 1.06711, 1, 0, 0.61771,-0.0214422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120267,-0.000110002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71082,0.00413818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439421,-6.79312e-05) , 
16, 0.32325, 1, 0, 0.587603,0.0313817) , 
4, 0.0719469, 1, 0, 0.247578,0.00751847) , 
16, 0.215908, 1, 0, 0.433929,-0.00706242) , 
16, 0.0675539, 1, 0, 0.498528,-0.00280506)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955964,0.00403523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973456,-0.00354201) , 
2, 0.043238, 1, 0, 0.964444,0.00535122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713685,-0.0040363) , 
11, 0.517023, 1, 0, 0.873441,-0.0173748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95147,-0.00769173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761555,0.00307665) , 
6, 0.28023, 1, 0, 0.85836,0.0121764) , 
16, 0.0821757, 1, 0, 0.86686,-0.00447957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436833,-0.00172597) , 
11, 0.975698, 1, 0, 0.714762,-0.0174662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788574,-0.00627496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514426,-9.66679e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496124,0.00319082) , 
11, 0.881079, 1, 0, 0.504513,0.0324061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164213,0.000379254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136743,-0.000487635) , 
6, 0.260023, 1, 0, 0.146804,-0.00276147) , 
7, 0.53646, 1, 0, 0.262352,0.00859847) , 
11, 0.585599, 1, 0, 0.316577,0.00347697) , 
16, 0.149679, 1, 0, 0.491382,-0.00571714)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984782,-0.0046958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959988,0.00690536) , 
17, 0.255904, 1, 0, 0.973072,0.00935569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986091,0.0025172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644139,-0.00463997) , 
3, 0.164078, 1, 0, 0.810517,-0.0260766) , 
7, 0.189018, 1, 0, 0.899079,-0.00677267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398231,0.00185408) , 
10, 0.554814, 1, 0, 0.743843,0.00231425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702919,-0.00487081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328281,-0.000683469) , 
11, 0.66417, 1, 0, 0.444479,-0.0247333) , 
13, 0.7939, 1, 0, 0.616616,-0.00918073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535631,0.00350969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303927,3.83071e-05) , 
3, 0.666577, 1, 0, 0.344975,0.00986467) , 
11, 0.940436, 1, 0, 0.500849,-0.00106403)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942466,0.00435291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971267,-0.00133135) , 
12, 0.138413, 1, 0, 0.960234,0.00709714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892303,-0.00615408) , 
10, 0.280712, 1, 0, 0.939424,-0.00461867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80075,0.00355494) , 
10, 0.376753, 1, 0, 0.904006,0.00465419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381191,-0.00163213) , 
10, 0.519312, 1, 0, 0.749923,-0.00276644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64917,0.00380231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457647,0.00073993) , 
11, 0.982852, 1, 0, 0.522571,0.0289103) , 
13, 0.973055, 1, 0, 0.662868,0.00936289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448073,-0.00155667) , 
15, 0.305863, 1, 0, 0.627133,0.00358694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19162,-0.000925142) , 
8, 0.0548417, 1, 0, 0.496109,-0.00205561)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991883,0.00352768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875637,-0.0123128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376332,-0.00306299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453339,0.000386742) , 
6, 0.249416, 1, 0, 0.420724,-0.0112181) , 
8, 0.0200572, 1, 0, 0.596678,-0.0289308) , 
3, 0.141835, 1, 0, 0.716084,-0.0197078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573853,0.0028784) , 
15, 0.166358, 1, 0, 0.679456,-0.00708389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414591,-0.00279366) , 
15, 0.27369, 1, 0, 0.619207,-0.0143957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819321,0.00399453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223374,0.000980722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666021,-0.00153558) , 
4, 0.232269, 1, 0, 0.308239,0.00803618) , 
17, 0.703476, 1, 0, 0.3972,0.015691) , 
13, 0.881456, 1, 0, 0.504,0.00121726)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981869,0.00247801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92146,-0.00884313) , 
9, 0.0322791, 1, 0, 0.948995,-0.0162279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923499,0.00452591) , 
11, 0.481491, 1, 0, 0.940441,-0.000748822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443303,-0.00231462) , 
3, 0.475507, 1, 0, 0.710531,-0.0253214) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281616,0.000864726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813419,0.00576748) , 
12, 0.0874576, 1, 0, 0.477478,0.0390226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76748,-0.00227866) , 
5, 0.0305415, 1, 0, 0.556513,0.0201036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187749,-0.00200926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132168,-0.000176164) , 
14, 0.0759522, 1, 0, 0.153882,-0.0133485) , 
7, 0.507078, 1, 0, 0.300853,-0.00113755) , 
7, 0.243504, 1, 0, 0.456578,-0.0103302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924939,0.00482965) , 
2, 0.0571667, 1, 0, 0.490523,-0.00719556)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73588,-0.000790248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606289,-0.00400155) , 
6, 0.267663, 1, 0, 0.674803,-0.0294975) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544672,-0.00201737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704858,0.0022076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212094,-0.00193868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149978,0.00054899) , 
10, 0.66197, 1, 0, 0.167967,-0.00494313) , 
10, 0.484446, 1, 0, 0.255543,0.0012616) , 
7, 0.132666, 1, 0, 0.297711,-0.00418538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848284,0.00375649) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932891,-0.00235053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950091,0.00566653) , 
16, 0.0527048, 1, 0, 0.94277,0.0137747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826313,-0.00298027) , 
8, 0.0182342, 1, 0, 0.900702,-0.00189234) , 
1, 0.317644, 1, 0, 0.88372,0.01466) , 
12, 0.134826, 1, 0, 0.478931,0.00164244) , 
15, 0.0185073, 1, 0, 0.502547,-0.00211208)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867057,-0.0014334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40672,-0.00458505) , 
7, 0.278496, 1, 0, 0.646874,-0.0343969) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910087,0.00443811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783643,0.00113269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154417,-0.00156664) , 
7, 0.229039, 1, 0, 0.286024,-0.0165023) , 
10, 0.437314, 1, 0, 0.45081,-0.00540638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296058,0.00120941) , 
13, 0.927768, 1, 0, 0.376863,0.00803691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979835,0.00528559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702603,-0.00436335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740817,0.000392497) , 
16, 0.108387, 1, 0, 0.721249,-0.0346042) , 
17, 0.394342, 1, 0, 0.836432,-0.0141563) , 
5, 0.0371787, 1, 0, 0.476679,0.00321667) , 
14, 0.0166059, 1, 0, 0.497552,-0.00139638)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983433,-0.00546848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978881,0.00876227) , 
6, 0.168045, 1, 0, 0.981232,0.00813999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901334,-0.00264886) , 
15, 0.103822, 1, 0, 0.956045,0.00101402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909842,0.00581857) , 
13, 0.866202, 1, 0, 0.945241,0.0117603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506867,0.00336609) , 
17, 0.641661, 1, 0, 0.794667,0.0277727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414469,0.00277584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169072,-0.00116999) , 
15, 0.0512523, 1, 0, 0.233828,-0.00306162) , 
16, 0.27063, 1, 0, 0.584014,0.0161912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698826,0.00221304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276696,-0.00119316) , 
13, 0.697765, 1, 0, 0.432223,-0.00522642) , 
14, 0.125346, 1, 0, 0.534184,0.00916032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403063,-0.000797053) , 
13, 1.22718, 1, 0, 0.508739,0.00381751)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996481,0.0154211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968584,-0.0107707) , 
16, 0.0954616, 1, 0, 0.981112,-0.00225322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877973,0.00407246) , 
3, 0.284487, 1, 0, 0.946413,0.012704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813096,-0.00432512) , 
10, 0.462224, 1, 0, 0.910866,-0.00104918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414794,-0.00366107) , 
17, 0.779202, 1, 0, 0.767491,-0.0266733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448674,0.0014231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823702,-0.0019638) , 
12, 0.161161, 1, 0, 0.557262,0.0124755) , 
9, 0.0407909, 1, 0, 0.684701,-0.0112561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412303,0.00304599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138908,0.000546664) , 
10, 0.611794, 1, 0, 0.189606,0.014968) , 
7, 0.487008, 1, 0, 0.497296,-0.0013297)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666394,-0.000232098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561689,-0.00454499) , 
7, 0.0914575, 1, 0, 0.611148,-0.041394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591796,0.00293082) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38973,-0.00230847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19415,-0.00120645) , 
16, 0.31836, 1, 0, 0.265003,-0.0220439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200347,0.000406831) , 
14, 0.0644907, 1, 0, 0.226651,-0.00550587) , 
16, 0.174457, 1, 0, 0.27767,0.0026704) , 
7, 0.222116, 1, 0, 0.350656,-0.00697368) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981491,0.00373779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86106,0.00343326) , 
17, 0.300536, 1, 0, 0.923151,0.0238005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813031,-0.00141832) , 
16, 0.0878045, 1, 0, 0.878454,0.0073212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852369,0.0039946) , 
16, 0.154415, 1, 0, 0.87297,0.0153642) , 
2, 0.0329793, 1, 0, 0.539836,0.00111704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445729,0.0030557) , 
15, 0.274157, 1, 0, 0.530181,0.00597414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343514,-0.00149693) , 
15, 0.349557, 1, 0, 0.50952,0.00256139)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580933,-0.00526713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211614,-0.002496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759152,0.00100033) , 
2, 0.0178999, 1, 0, 0.387903,-0.0209927) , 
8, 0.0172966, 1, 0, 0.429392,-0.0344424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668066,0.00232096) , 
14, 0.187927, 1, 0, 0.470898,-0.0236726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945201,0.00482766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982592,0.00257669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824202,-0.00383497) , 
3, 0.330492, 1, 0, 0.924867,-0.0117455) , 
2, 0.0391141, 1, 0, 0.933074,0.00330252) , 
4, 0.287787, 1, 0, 0.674718,-0.0117765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194287,0.000562083) , 
8, 0.0518925, 1, 0, 0.533159,-0.00592385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401719,0.000808066) , 
11, 1.14948, 1, 0, 0.502594,-0.000532666)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894785,0.00115517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64395,-0.00455851) , 
10, 0.337308, 1, 0, 0.790643,-0.0260223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970067,-0.00230958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900868,0.00376935) , 
17, 0.3472, 1, 0, 0.944675,0.00877203) , 
4, 0.376026, 1, 0, 0.87224,-0.00759023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765816,0.00255077) , 
15, 0.224119, 1, 0, 0.850046,4.57218e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607502,0.0030575) , 
7, 0.371491, 1, 0, 0.812623,0.00547695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272877,-0.00114061) , 
17, 0.98388, 1, 0, 0.654115,-0.00304718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519538,0.00410921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168028,0.000465954) , 
8, 0.0341528, 1, 0, 0.22941,0.0172007) , 
10, 0.688147, 1, 0, 0.500557,0.00427372)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416489,-0.00272474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730777,0.000716775) , 
2, 0.0150626, 1, 0, 0.573997,-0.0198629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196801,0.00176329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45857,-0.000487262) , 
5, 0.012125, 1, 0, 0.292831,0.0138775) , 
8, 0.0287244, 1, 0, 0.372512,0.00431571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131926,-0.00127508) , 
16, 0.318272, 1, 0, 0.27867,-0.00372374) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987307,0.00543352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963127,0.00918992) , 
6, 0.225566, 1, 0, 0.976607,0.0206781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912467,0.00105653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90153,-0.00937613) , 
12, 0.18199, 1, 0, 0.907403,-0.0146699) , 
14, 0.0548723, 1, 0, 0.942217,0.00311222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74361,0.00376097) , 
3, 0.570104, 1, 0, 0.880791,0.0273935) , 
2, 0.0213392, 1, 0, 0.508789,0.00816868)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636073,0.00289632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916769,-0.000984559) , 
12, 0.155159, 1, 0, 0.802737,0.0104022) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709363,-0.00556771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654003,-0.00110293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674422,0.00279029) , 
9, 0.0400199, 1, 0, 0.662923,0.00478928) , 
9, 0.0253286, 1, 0, 0.679571,-0.00987507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460523,-0.00241551) , 
6, 0.401395, 1, 0, 0.569939,-0.0296068) , 
14, 0.0236994, 1, 0, 0.627394,-0.0197325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225975,0.000966061) , 
8, 0.0568595, 1, 0, 0.528709,-0.0111627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408712,0.0029608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478838,-0.00197685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467903,0.0012487) , 
15, 0.318318, 1, 0, 0.472757,-0.00184701) , 
14, 0.165566, 1, 0, 0.441563,0.0204855) , 
14, 0.120873, 1, 0, 0.501267,-0.00119661)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961284,-0.0147284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939943,0.00208243) , 
10, 0.369872, 1, 0, 0.951042,-0.00677925) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546969,0.00475153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846714,-0.00183892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952839,0.00785654) , 
5, 0.0321405, 1, 0, 0.908491,0.0178729) , 
12, 0.0936252, 1, 0, 0.783828,0.0368412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18283,0.000707121) , 
17, 0.862943, 1, 0, 0.42006,0.0208769) , 
11, 0.492446, 1, 0, 0.567726,0.0131858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509543,-0.00121975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308518,0.000470569) , 
10, 0.586092, 1, 0, 0.402696,-0.00861486) , 
13, 1.06711, 1, 0, 0.515275,0.00625695)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701303,0.00286798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303909,-0.00156426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142737,0.000290058) , 
3, 0.561733, 1, 0, 0.168475,-0.000488061) , 
10, 0.374317, 1, 0, 0.222565,0.00417671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805555,0.00435972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698278,0.000426294) , 
15, 0.138855, 1, 0, 0.748409,0.0341496) , 
12, 0.094002, 1, 0, 0.352219,0.0115669) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962336,-0.000764679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981245,0.00745453) , 
12, 0.197155, 1, 0, 0.971867,0.0084856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93311,-0.00555575) , 
12, 0.290874, 1, 0, 0.958897,-0.000657541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691549,-0.00562175) , 
17, 0.477855, 1, 0, 0.88766,-0.0258957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849914,0.00138318) , 
8, 0.0228972, 1, 0, 0.877253,-0.0147452) , 
4, 0.282019, 1, 0, 0.508387,0.00374058)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993444,0.00386298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944273,-0.0185937) , 
3, 0.14081, 1, 0, 0.97238,-0.0115247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894105,0.00234337) , 
3, 0.256481, 1, 0, 0.950036,-0.00334257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74857,0.00445628) , 
10, 0.503975, 1, 0, 0.908821,0.00753913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140391,-0.00126917) , 
7, 0.575117, 1, 0, 0.59586,-0.00294742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611766,-0.000130258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426078,0.00289716) , 
10, 0.486724, 1, 0, 0.515187,0.0258383) , 
6, 0.432271, 1, 0, 0.565508,0.00788286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655847,-0.00370709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495332,0.000627506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184641,-0.00108937) , 
16, 0.167499, 1, 0, 0.279501,-0.00793867) , 
16, 0.0877783, 1, 0, 0.363881,-0.0177554) , 
15, 0.223929, 1, 0, 0.504963,0.000184174)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419916,-0.00272042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148082,-0.000668602) , 
11, 0.670528, 1, 0, 0.199864,-0.0157424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88272,0.00350557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904025,-0.00660197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982081,0.00272291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894589,-0.00565159) , 
10, 0.324558, 1, 0, 0.936815,-0.0136688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808896,0.00190431) , 
13, 0.855581, 1, 0, 0.893637,6.21304e-05) , 
9, 0.0140729, 1, 0, 0.89592,-0.00618959) , 
2, 0.0236181, 1, 0, 0.893351,0.00139673) , 
4, 0.11751, 1, 0, 0.556142,-0.00693721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423628,0.000142644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341704,0.00149016) , 
15, 0.0972027, 1, 0, 0.371744,0.0201314) , 
11, 1.0672, 1, 0, 0.501347,0.0011063)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973797,-0.00428533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925532,0.00671847) , 
17, 0.440211, 1, 0, 0.95024,0.0178679) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902624,0.00370489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693401,-0.00253421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288451,-6.75793e-05) , 
16, 0.192603, 1, 0, 0.433288,-0.0147786) , 
7, 0.126962, 1, 0, 0.569041,-0.00209494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452714,-0.00508624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422868,-0.00217614) , 
15, 0.0922016, 1, 0, 0.436885,-0.0506124) , 
15, 0.0740513, 1, 0, 0.523635,-0.0187645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676758,-0.00233063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364174,0.00283813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239302,-0.000383056) , 
14, 0.087489, 1, 0, 0.293762,0.01742) , 
8, 0.0196262, 1, 0, 0.391732,0.00483436) , 
15, 0.111079, 1, 0, 0.463052,-0.00792551) , 
10, 0.216846, 1, 0, 0.536118,-0.00405715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219182,-0.0022857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82781,-0.000611679) , 
12, 0.137697, 1, 0, 0.34829,-0.0315122) , 
14, 0.123239, 1, 0, 0.487601,-0.011149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574153,0.002554) , 
14, 0.224479, 1, 0, 0.493828,-0.00777033)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707495,0.00294483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.343739,-0.00317188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125352,0.000347611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311679,-0.00169934) , 
12, 0.064514, 1, 0, 0.183759,-0.00566338) , 
16, 0.21779, 1, 0, 0.21337,-0.0153231) , 
7, 0.229039, 1, 0, 0.299659,-0.00503477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281944,0.00123025) , 
11, 1.11995, 1, 0, 0.294395,0.00400535) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95996,0.00244309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944349,-0.00792166) , 
4, 0.435625, 1, 0, 0.951203,-0.00669951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941965,0.00363292) , 
14, 0.0737306, 1, 0, 0.947847,0.00240769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70583,-0.00520444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715366,-0.00190542) , 
10, 0.464436, 1, 0, 0.710788,-0.058393) , 
6, 0.414729, 1, 0, 0.860955,-0.0198783) , 
4, 0.219348, 1, 0, 0.495708,-0.00448113)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979933,-0.000604546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982198,0.0102359) , 
10, 0.347726, 1, 0, 0.980824,0.0107961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834756,-0.00356841) , 
11, 0.551449, 1, 0, 0.927563,-0.00487963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368282,0.000970773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784406,0.00203416) , 
0, 0.129662, 1, 0, 0.521516,0.0249595) , 
17, 0.620095, 1, 0, 0.767337,0.00689493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390024,-0.00210123) , 
8, 0.0377243, 1, 0, 0.696759,-0.000453982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269126,0.00158156) , 
8, 0.0493319, 1, 0, 0.551832,0.00821594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871368,0.00209867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235886,-0.0019577) , 
11, 0.626433, 1, 0, 0.399333,-0.022938) , 
14, 0.120873, 1, 0, 0.502412,-0.00188017)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156341,-0.000106224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139278,-0.00105643) , 
6, 0.33995, 1, 0, 0.146746,-0.0105509) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910677,-0.00441377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995317,0.0135263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967891,-0.00674782) , 
4, 0.474041, 1, 0, 0.984434,0.00893926) , 
4, 0.253535, 1, 0, 0.965964,0.00124858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869828,0.00407133) , 
11, 0.663564, 1, 0, 0.943313,0.0095871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624145,-0.00138616) , 
13, 1.0011, 1, 0, 0.855193,-0.00104328) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570103,0.000662178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584944,0.00374486) , 
15, 0.0994699, 1, 0, 0.577937,0.0437895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519668,0.000479316) , 
15, 0.195123, 1, 0, 0.549617,0.0271446) , 
10, 0.529344, 1, 0, 0.735833,0.0099671) , 
5, 0.00619644, 1, 0, 0.498436,0.00169852)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490895,-0.00399105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96739,0.00132578) , 
12, 0.173183, 1, 0, 0.72375,-0.0170112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668239,0.00393061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960192,0.00446822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192535,-0.00147937) , 
11, 0.577409, 1, 0, 0.504378,-0.00787461) , 
15, 0.0918176, 1, 0, 0.55549,0.00285492) , 
14, 0.0371639, 1, 0, 0.621092,-0.00489068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602138,0.00333308) , 
6, 0.323145, 1, 0, 0.617849,0.00157892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683626,0.000756098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365423,-0.00259893) , 
8, 0.0317745, 1, 0, 0.498272,-0.0257503) , 
6, 0.433703, 1, 0, 0.576776,-0.0078083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467564,-0.000818847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39588,0.00234024) , 
14, 0.0730156, 1, 0, 0.418334,0.0214495) , 
9, 0.044341, 1, 0, 0.526532,0.00146969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33598,-0.00139668) , 
15, 0.315909, 1, 0, 0.496755,-0.00236491)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959906,-0.0135067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980949,0.00543788) , 
10, 0.171748, 1, 0, 0.972012,-0.0047178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702987,-0.00472663) , 
3, 0.316476, 1, 0, 0.888122,-0.0183276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392492,0.00173576) , 
3, 0.576456, 1, 0, 0.661491,0.00444222) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718063,-0.00230213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508958,-0.00561035) , 
16, 0.102843, 1, 0, 0.644355,-0.0542336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447047,0.00154675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146319,-0.00182087) , 
16, 0.260687, 1, 0, 0.260633,-0.0055705) , 
16, 0.149857, 1, 0, 0.414993,-0.0251462) , 
15, 0.0843427, 1, 0, 0.530066,-0.0113334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386585,0.00248873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383316,0.000881898) , 
14, 0.149923, 1, 0, 0.384845,0.0240707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51434,-0.000650218) , 
14, 0.199079, 1, 0, 0.428353,0.0129431) , 
14, 0.125346, 1, 0, 0.499608,-0.00406372)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490909,-0.00332058) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886239,0.00311892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904173,-0.00326121) , 
12, 0.239542, 1, 0, 0.893735,0.00749885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807283,-0.00289933) , 
7, 0.0724794, 1, 0, 0.858369,-0.00817964) , 
5, 0.0180526, 1, 0, 0.779326,-0.0194524) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884073,0.00286951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302284,-0.00213719) , 
16, 0.276266, 1, 0, 0.604381,-0.00417717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482461,0.00456571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447058,0.00478922) , 
15, 0.177156, 1, 0, 0.46449,0.0499235) , 
15, 0.102087, 1, 0, 0.543174,0.0194938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306825,-0.000687527) , 
9, 0.0466253, 1, 0, 0.46671,0.0100462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292746,-0.00168271) , 
6, 0.444458, 1, 0, 0.415216,-0.00138854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34729,0.00149256) , 
11, 1.1012, 1, 0, 0.395538,0.00746782) , 
16, 0.099786, 1, 0, 0.505552,-0.000248929)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.299656,-0.00133536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699238,-0.00459515) , 
4, 0.113856, 1, 0, 0.41402,-0.0420361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851869,0.00228142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81962,-0.0021864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792137,6.84192e-06) , 
16, 0.0936083, 1, 0, 0.805445,-0.0118154) , 
2, 0.0350809, 1, 0, 0.821259,0.00117919) , 
2, 0.0224479, 1, 0, 0.590135,-0.0233472) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114466,0.000123186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203582,0.00211056) , 
12, 0.0531076, 1, 0, 0.152526,0.0135352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605859,-0.000428739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414685,-0.00207144) , 
16, 0.283105, 1, 0, 0.500065,-0.0233868) , 
5, 0.0151742, 1, 0, 0.247022,0.00349608) , 
16, 0.19892, 1, 0, 0.402001,-0.00862862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964978,0.0039176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925508,-0.00652861) , 
4, 0.530185, 1, 0, 0.94692,-0.00326379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829663,0.00414837) , 
17, 0.53232, 1, 0, 0.916891,0.0144449) , 
4, 0.387115, 1, 0, 0.502585,-0.00412119)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927153,-0.00323148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744014,0.00323945) , 
13, 0.85369, 1, 0, 0.847106,0.017379) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967107,-0.00542832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521112,-0.00464696) , 
3, 0.342432, 1, 0, 0.700351,-0.0560417) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982059,0.00529476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581844,-0.00241264) , 
17, 0.392509, 1, 0, 0.781099,-0.0182816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581119,0.00246828) , 
16, 0.13989, 1, 0, 0.709083,0.000637623) , 
14, 0.0712081, 1, 0, 0.705254,-0.0242187) , 
15, 0.0324424, 1, 0, 0.745919,-0.0122937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430909,0.00194382) , 
10, 0.688147, 1, 0, 0.700075,-0.00611966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56231,0.0032209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351852,9.01765e-05) , 
15, 0.247386, 1, 0, 0.44188,0.022825) , 
9, 0.0508431, 1, 0, 0.60641,0.00438049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0937168,-0.00108074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355002,-0.00230019) , 
0, 0.0715461, 1, 0, 0.150562,-0.0189639) , 
16, 0.324304, 1, 0, 0.49306,-0.00142427)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989057,0.0119521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999166,0.0162548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925659,-0.0162855) , 
3, 0.152677, 1, 0, 0.966047,-0.0143926) , 
5, 0.0304846, 1, 0, 0.973299,-0.00440516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875938,0.00335418) , 
3, 0.279748, 1, 0, 0.953046,0.00220187) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616116,-0.0017937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468495,-0.00322932) , 
8, 0.0275068, 1, 0, 0.545564,-0.0539499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391437,-0.000715385) , 
10, 0.554911, 1, 0, 0.47026,-0.0350412) , 
3, 0.396313, 1, 0, 0.66413,-0.0200856) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481677,-8.49197e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370141,0.00390307) , 
14, 0.0635373, 1, 0, 0.42616,0.0261795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122984,-0.000280801) , 
10, 0.705916, 1, 0, 0.241163,0.00782133) , 
16, 0.233238, 1, 0, 0.498706,-0.00917113)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126029,-0.00284737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578054,0.00311704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165229,0.00023896) , 
10, 0.541514, 1, 0, 0.266849,0.016846) , 
12, 0.0452248, 1, 0, 0.23667,0.0052451) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764504,-0.00214789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955414,0.00422897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972333,-0.00317976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878454,-0.0111853) , 
17, 0.279236, 1, 0, 0.935513,-0.0233515) , 
1, 0.361513, 1, 0, 0.941134,-0.0115613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874374,0.00262502) , 
6, 0.354773, 1, 0, 0.921466,0.000372724) , 
4, 0.258207, 1, 0, 0.882678,-0.0068328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586938,-0.00264755) , 
11, 1.14694, 1, 0, 0.829834,-0.0169204) , 
4, 0.144169, 1, 0, 0.500612,-0.00461793)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99649,0.0153338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509215,-0.0052414) , 
3, 0.173214, 1, 0, 0.805616,-0.0136359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680432,0.00614103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519895,-0.000736376) , 
9, 0.0287695, 1, 0, 0.609433,0.0195564) , 
6, 0.190863, 1, 0, 0.705493,0.00330398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51283,-0.00290578) , 
6, 0.374399, 1, 0, 0.661478,-0.0064613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870234,0.00201515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720307,0.00361917) , 
16, 0.082897, 1, 0, 0.796975,0.032688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231809,0.000849509) , 
16, 0.156596, 1, 0, 0.451934,0.0200652) , 
15, 0.170105, 1, 0, 0.570431,0.00506448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370237,-0.00149798) , 
13, 1.03019, 1, 0, 0.525077,-0.00177522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419846,0.00137506) , 
11, 1.19881, 1, 0, 0.503795,0.00468597)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956088,0.00341414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910908,-0.00611159) , 
15, 0.037371, 1, 0, 0.932913,-0.00717199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969271,0.00636372) , 
8, 0.0241669, 1, 0, 0.942925,-0.000277249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929703,0.00497019) , 
9, 0.0355265, 1, 0, 0.938738,0.00990383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796062,-0.00231367) , 
10, 0.529785, 1, 0, 0.90997,0.00294276) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196057,-0.00181966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250212,-0.000281233) , 
11, 0.926282, 1, 0, 0.230899,-0.0133768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64202,-0.00415578) , 
4, 0.284821, 1, 0, 0.283288,-0.0224273) , 
17, 0.682453, 1, 0, 0.539638,-0.0120495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33765,0.000844782) , 
9, 0.0624781, 1, 0, 0.501157,-0.00700803)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337754,-0.0020689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948018,-0.00931664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861534,0.00293815) , 
6, 0.205662, 1, 0, 0.899388,0.0109296) , 
12, 0.120162, 1, 0, 0.678113,-0.00606772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624972,0.00305485) , 
14, 0.0329175, 1, 0, 0.663692,0.0047151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495578,-0.0042913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549195,0.00170505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522669,-0.0017815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462053,-0.000392029) , 
15, 0.148713, 1, 0, 0.492214,-0.0134165) , 
14, 0.0914164, 1, 0, 0.51173,-0.000814878) , 
14, 0.0712895, 1, 0, 0.506921,-0.0179499) , 
14, 0.0508754, 1, 0, 0.591124,-0.0057764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507591,0.00144762) , 
9, 0.0434787, 1, 0, 0.573611,-0.000236279) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542725,-0.0028251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18703,-0.000513237) , 
10, 0.56257, 1, 0, 0.255658,-0.0162551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74605,-0.00416464) , 
12, 0.129678, 1, 0, 0.356023,-0.0252551) , 
15, 0.199635, 1, 0, 0.495459,-0.00922246)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965197,-0.0147736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986078,0.00984145) , 
10, 0.222267, 1, 0, 0.977805,0.00201925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856351,-0.00478289) , 
8, 0.0301219, 1, 0, 0.946202,-0.00499863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301516,0.00202811) , 
10, 0.515261, 1, 0, 0.693251,0.00653645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24668,-0.00237126) , 
13, 0.915091, 1, 0, 0.58244,-0.00279956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350035,0.00257098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846995,0.00054746) , 
12, 0.153052, 1, 0, 0.494226,0.0293759) , 
6, 0.354985, 1, 0, 0.553469,0.00776732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378435,-0.000733349) , 
6, 0.624304, 1, 0, 0.505038,0.00110578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518682,-0.00328427) , 
14, 0.20891, 1, 0, 0.506249,-0.00297383)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955343,-0.0115941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969384,-0.00262583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947893,0.00530242) , 
6, 0.212833, 1, 0, 0.95952,0.00974534) , 
11, 0.276295, 1, 0, 0.958079,-0.00119433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810659,-0.0049877) , 
11, 0.541972, 1, 0, 0.925788,-0.0105295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782904,-0.000921674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451211,0.00241207) , 
6, 0.186078, 1, 0, 0.58781,0.0150474) , 
16, 0.157748, 1, 0, 0.803674,-0.00128836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106189,-0.00119888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593099,-0.00496741) , 
4, 0.10792, 1, 0, 0.197642,-0.0290261) , 
11, 0.767833, 1, 0, 0.544158,-0.0131663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549875,-0.00113258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369365,0.000893968) , 
3, 0.689103, 1, 0, 0.428409,0.00670934) , 
6, 0.494024, 1, 0, 0.50139,-0.00582253)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992423,0.0086502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94234,-0.0120451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707032,0.00118196) , 
8, 0.0295359, 1, 0, 0.846129,-0.0108053) , 
17, 0.213108, 1, 0, 0.895402,-0.00364484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884557,-0.000517949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774121,-0.00284414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460329,-0.00403987) , 
9, 0.0367118, 1, 0, 0.607491,-0.0492156) , 
7, 0.0916155, 1, 0, 0.693989,-0.0350804) , 
6, 0.259394, 1, 0, 0.80877,-0.017166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376953,0.000205732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257707,-0.0010274) , 
14, 0.0644096, 1, 0, 0.315106,-0.00770646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247928,0.00117054) , 
9, 0.0492336, 1, 0, 0.286367,0.00452919) , 
3, 0.540427, 1, 0, 0.494447,-0.00411227)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938475,0.000301493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679562,0.00370494) , 
6, 0.290224, 1, 0, 0.781827,0.0410592) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940809,-0.000157926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951985,0.00633678) , 
10, 0.342118, 1, 0, 0.944669,0.0115862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883976,-0.00645189) , 
7, 0.190053, 1, 0, 0.927074,-0.00183314) , 
4, 0.256738, 1, 0, 0.871018,0.0147207) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59746,-0.00394012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429646,0.000854356) , 
6, 0.190632, 1, 0, 0.495943,-0.0041031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430298,-0.00195348) , 
6, 0.388892, 1, 0, 0.462386,-0.0214592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26859,0.00111061) , 
10, 0.760085, 1, 0, 0.394349,-0.00767095) , 
10, 0.471575, 1, 0, 0.605389,0.00224272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174961,-0.0015569) , 
17, 1.17246, 1, 0, 0.494449,-0.0055166)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947916,-0.0043829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975406,0.00610728) , 
16, 0.0458349, 1, 0, 0.963793,0.0042392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577718,-0.00243766) , 
11, 0.566308, 1, 0, 0.787037,-0.0198384) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908624,0.00483086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862818,-0.00198895) , 
7, 0.206887, 1, 0, 0.88016,0.00379753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639318,-0.00264267) , 
10, 0.340434, 1, 0, 0.810042,-0.00959788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588042,-0.000750324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110179,0.0001789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534033,0.00292039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458345,0.00158257) , 
15, 0.119102, 1, 0, 0.485056,0.0450419) , 
4, 0.0673156, 1, 0, 0.226504,0.0156275) , 
7, 0.237778, 1, 0, 0.283998,0.0110401) , 
10, 0.423475, 1, 0, 0.421983,0.0056266) , 
7, 0.0974016, 1, 0, 0.504577,-0.000134913)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721176,-0.000569676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776042,-1.44999e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471322,0.00249843) , 
11, 0.767896, 1, 0, 0.583924,0.0338705) , 
16, 0.0738759, 1, 0, 0.621255,0.0226406) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930252,0.0026699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905997,-0.00325995) , 
5, 0.0485534, 1, 0, 0.920521,0.00249808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792343,-0.00322998) , 
8, 0.0221769, 1, 0, 0.889574,-0.00779255) , 
12, 0.176988, 1, 0, 0.73698,0.00951491) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655482,-0.00462114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328232,-0.00141268) , 
7, 0.335797, 1, 0, 0.456152,-0.0385299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555748,0.00271161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116407,-0.000664277) , 
10, 0.612518, 1, 0, 0.222019,0.000644127) , 
16, 0.243467, 1, 0, 0.282093,-0.00940716) , 
16, 0.171265, 1, 0, 0.5055,-0.000114051)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32719,-0.00104733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142521,0.000996913) , 
7, 0.41927, 1, 0, 0.19177,0.00428528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571736,0.00210418) , 
2, 0.0146274, 1, 0, 0.264239,0.0101663) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994783,0.0116049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903476,-0.0148187) , 
6, 0.18987, 1, 0, 0.95017,-0.0194315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967732,0.00518701) , 
16, 0.125474, 1, 0, 0.956202,-0.00835543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775146,0.00355098) , 
3, 0.395212, 1, 0, 0.907404,0.00792415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588811,-0.00136024) , 
11, 0.997626, 1, 0, 0.810859,-0.00367806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519045,-0.00373585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754687,-0.00221883) , 
5, 0.0323537, 1, 0, 0.648832,-0.0481213) , 
14, 0.102229, 1, 0, 0.758804,-0.0179566) , 
5, 0.0182908, 1, 0, 0.495811,-0.00300179)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821493,-0.00751343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987317,0.00134418) , 
2, 0.032778, 1, 0, 0.907752,-0.0181819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844726,0.00505945) , 
13, 0.640226, 1, 0, 0.879432,-0.000648919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639105,-0.0041943) , 
13, 0.859261, 1, 0, 0.817491,-0.0122895) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622717,-0.000640256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325963,0.0013671) , 
16, 0.167502, 1, 0, 0.444051,0.00748315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389228,0.00286582) , 
14, 0.0546217, 1, 0, 0.416762,0.0291295) , 
11, 0.825145, 1, 0, 0.607135,0.00945265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87619,0.00256221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220267,-0.00121166) , 
17, 0.59934, 1, 0, 0.372152,-0.0121246) , 
15, 0.174167, 1, 0, 0.506904,0.00024892)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983424,0.00453882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904479,-0.0085235) , 
13, 0.715357, 1, 0, 0.954858,-0.00946792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90488,0.00399079) , 
11, 0.520678, 1, 0, 0.941544,0.000609131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483773,-0.00201482) , 
6, 0.497839, 1, 0, 0.732379,-0.0210314) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642281,0.000261044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473025,-0.00353334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338867,-0.00315864) , 
14, 0.0533419, 1, 0, 0.401432,-0.0402398) , 
15, 0.0400901, 1, 0, 0.504038,-0.0222207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16697,0.000414917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796712,0.00374616) , 
0, 0.091881, 1, 0, 0.292054,0.0144443) , 
14, 0.0759522, 1, 0, 0.378285,-0.000470242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339985,0.00152731) , 
11, 1.09958, 1, 0, 0.367554,0.0078146) , 
16, 0.119352, 1, 0, 0.49745,-0.00245603)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748868,-0.00613496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27553,0.000205025) , 
17, 0.820771, 1, 0, 0.438727,-0.0191359) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842689,-0.00566429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979356,-0.00394531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87954,0.00385785) , 
3, 0.262648, 1, 0, 0.931511,0.0187893) , 
2, 0.0316454, 1, 0, 0.907046,0.00155951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922873,0.00518632) , 
9, 0.0348026, 1, 0, 0.910988,0.012453) , 
12, 0.139317, 1, 0, 0.67813,-0.00312257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708657,0.0036601) , 
15, 0.237338, 1, 0, 0.681251,0.00124991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461511,-0.00121893) , 
9, 0.0537985, 1, 0, 0.627215,-0.00437618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224215,0.00149091) , 
10, 0.741082, 1, 0, 0.512101,0.00336263)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990332,0.00873835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953699,-0.00724045) , 
10, 0.29607, 1, 0, 0.973509,-0.0025981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856412,0.00359922) , 
3, 0.285423, 1, 0, 0.934117,0.0113876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929204,-0.00911419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961101,0.00388813) , 
12, 0.297715, 1, 0, 0.943497,-0.00980143) , 
0, 0.210589, 1, 0, 0.938096,0.00239855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533372,-0.00405739) , 
8, 0.039496, 1, 0, 0.871856,-0.00734835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425967,0.00146034) , 
3, 0.485221, 1, 0, 0.747072,0.00111421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241749,-0.00198232) , 
3, 0.634566, 1, 0, 0.593042,-0.00986897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281638,0.000659681) , 
3, 0.809084, 1, 0, 0.501926,-0.00319585)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70325,-0.00202644) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209275,-0.000321628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577625,-0.00371173) , 
5, 0.0132397, 1, 0, 0.325418,-0.0199762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940289,0.00479282) , 
4, 0.212701, 1, 0, 0.461922,-0.00987656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448694,0.00218012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155262,0.0003014) , 
7, 0.438307, 1, 0, 0.244779,0.0177018) , 
11, 0.85526, 1, 0, 0.326521,0.00732019) , 
16, 0.0795681, 1, 0, 0.373569,0.00303167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714781,-0.00465959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858136,0.000450928) , 
5, 0.0387544, 1, 0, 0.781152,-0.0359771) , 
5, 0.0355383, 1, 0, 0.426464,-0.0020308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965035,0.00159429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836086,0.00336733) , 
6, 0.349448, 1, 0, 0.911198,0.0225195) , 
5, 0.0464733, 1, 0, 0.499191,0.00165259)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847473,-0.0067014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999063,0.0195948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951494,0.000880619) , 
13, 0.691106, 1, 0, 0.975272,0.00741995) , 
12, 0.173016, 1, 0, 0.928524,-0.00469202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494484,0.00275126) , 
8, 0.0365757, 1, 0, 0.810757,0.00486946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574986,-0.00143844) , 
6, 0.371025, 1, 0, 0.727063,-0.00475396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622146,0.00388155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490135,0.000915818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87798,-0.00241867) , 
0, 0.103003, 1, 0, 0.681665,-0.00244447) , 
14, 0.134382, 1, 0, 0.654938,0.0198003) , 
14, 0.0932429, 1, 0, 0.700681,0.00422744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517266,0.00240985) , 
11, 1.20828, 1, 0, 0.666423,0.0138795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330123,-0.00217953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132041,-0.000645482) , 
17, 0.9989, 1, 0, 0.196311,-0.0193142) , 
10, 0.705916, 1, 0, 0.501685,0.00224769)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82219,-0.00432683) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80321,0.00315589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49964,-0.0028989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884769,0.00151171) , 
12, 0.145638, 1, 0, 0.676242,-0.0242161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622239,0.00158559) , 
15, 0.264655, 1, 0, 0.652451,-0.00267943) , 
15, 0.124182, 1, 0, 0.699996,0.00980578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887256,-0.00380432) , 
4, 0.464538, 1, 0, 0.740574,0.00255429) , 
15, 0.0180422, 1, 0, 0.753126,-0.00418638) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279517,0.00252604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164308,-0.000458819) , 
15, 0.0797597, 1, 0, 0.205062,0.0074867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194227,0.00221355) , 
14, 0.118121, 1, 0, 0.20096,0.0167251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739053,0.000337411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612338,0.00487831) , 
15, 0.114363, 1, 0, 0.682194,0.0463012) , 
2, 0.0181055, 1, 0, 0.314539,0.0237055) , 
7, 0.274847, 1, 0, 0.517314,0.0108101)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990391,0.015087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967302,-0.00248316) , 
5, 0.0295353, 1, 0, 0.978905,0.00591254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590363,-0.00287287) , 
3, 0.304831, 1, 0, 0.807195,-0.0185558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994107,0.00571389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955232,0.00807428) , 
3, 0.219864, 1, 0, 0.97619,0.025198) , 
2, 0.0420741, 1, 0, 0.872002,-0.00177678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206024,0.000927957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896571,0.00525594) , 
1, 0.143092, 1, 0, 0.391677,0.0222389) , 
8, 0.0275271, 1, 0, 0.6232,0.010663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157671,0.000251419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59641,-0.00233613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46113,-0.000959408) , 
10, 0.470611, 1, 0, 0.514816,-0.035216) , 
5, 0.0150439, 1, 0, 0.324595,-0.0143047) , 
11, 0.96735, 1, 0, 0.505418,0.000814781)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885893,0.00563167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507827,-0.00187078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485437,0.000787946) , 
15, 0.0182738, 1, 0, 0.495886,-0.00705298) , 
13, 0.762576, 1, 0, 0.633775,0.00210127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50688,-0.00248448) , 
15, 0.0847323, 1, 0, 0.602615,-0.00574856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605779,0.00432928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459626,-0.000562659) , 
9, 0.0315457, 1, 0, 0.532875,0.0175476) , 
9, 0.021488, 1, 0, 0.579419,0.00200005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503221,2.7674e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394805,-0.0024248) , 
15, 0.160215, 1, 0, 0.448647,-0.0184478) , 
9, 0.0353517, 1, 0, 0.535134,-0.00492445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595558,-0.000719627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262159,0.00132379) , 
8, 0.0324941, 1, 0, 0.375311,0.0114655) , 
9, 0.0530281, 1, 0, 0.482661,0.000456705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936713,0.00534217) , 
12, 0.329691, 1, 0, 0.508858,0.00247079)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58555,0.00446868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452245,-0.000144459) , 
15, 0.223929, 1, 0, 0.517824,0.0264285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140196,-0.000878802) , 
3, 0.564893, 1, 0, 0.265616,-0.000483122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834575,0.00425141) , 
12, 0.0985501, 1, 0, 0.3409,0.00641192) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997308,0.0131337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953262,-0.00832384) , 
10, 0.27189, 1, 0, 0.97703,-0.00209127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955895,0.00618134) , 
13, 0.735034, 1, 0, 0.970338,0.00826341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85084,-0.00247169) , 
10, 0.462224, 1, 0, 0.93175,-0.00155705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704172,-0.00485241) , 
11, 0.822197, 1, 0, 0.881365,-0.0178153) , 
12, 0.122588, 1, 0, 0.587066,-0.00462286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295203,0.000977046) , 
3, 0.823201, 1, 0, 0.503719,0.00228748)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975646,-0.00211619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989233,0.0115964) , 
10, 0.237324, 1, 0, 0.981601,0.00630139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673965,-0.00271339) , 
6, 0.303485, 1, 0, 0.841869,-0.0170771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158061,0.000408396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72523,0.00440567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871127,-0.00164491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862193,0.00420936) , 
10, 0.499997, 1, 0, 0.866101,0.0230986) , 
12, 0.160828, 1, 0, 0.819151,0.0444343) , 
12, 0.0984964, 1, 0, 0.406324,0.0207073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513564,0.00104825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279242,-0.00120205) , 
6, 0.305955, 1, 0, 0.340856,-0.014351) , 
15, 0.248809, 1, 0, 0.385092,0.00933758) , 
10, 0.366774, 1, 0, 0.500878,0.00264185)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998968,0.016961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935363,-0.00791119) , 
3, 0.139863, 1, 0, 0.968587,-0.00850462) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978632,0.00689369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9385,-0.00246498) , 
15, 0.0532961, 1, 0, 0.95788,0.00227701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891428,0.00527963) , 
10, 0.39453, 1, 0, 0.936119,0.0164787) , 
11, 0.366849, 1, 0, 0.949272,0.00635831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576195,-0.00329251) , 
17, 0.569219, 1, 0, 0.886723,-0.00279467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444168,0.00138599) , 
8, 0.0363595, 1, 0, 0.760448,0.0033094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432243,-0.0020072) , 
11, 0.89123, 1, 0, 0.694469,-0.00362537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135355,0.00152245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460337,0.000362979) , 
12, 0.071786, 1, 0, 0.272726,0.0159991) , 
3, 0.684541, 1, 0, 0.503759,0.00524875)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370337,-0.00226569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14339,0.000368372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562117,0.00369098) , 
2, 0.00165732, 1, 0, 0.22956,0.0162841) , 
6, 0.213082, 1, 0, 0.263827,0.00653145) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998956,0.0215093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96345,-0.0280426) , 
17, 0.324857, 1, 0, 0.984541,-0.00364768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827947,0.00387367) , 
3, 0.231609, 1, 0, 0.924691,0.0114697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777107,-0.00411206) , 
15, 0.204037, 1, 0, 0.894816,0.00193141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60552,-0.00454606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778532,-0.00333874) , 
2, 0.0389756, 1, 0, 0.680635,-0.0649056) , 
6, 0.386249, 1, 0, 0.826181,-0.019487) , 
5, 0.0179887, 1, 0, 0.540131,-0.00625228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403262,0.00111707) , 
6, 0.679284, 1, 0, 0.508992,0.000793678)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162857,0.00130964) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997803,0.0121233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986978,-0.000690965) , 
17, 0.217032, 1, 0, 0.992986,0.00398569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960869,-0.0115882) , 
11, 0.44144, 1, 0, 0.981859,-0.00273522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828354,0.00382206) , 
3, 0.243716, 1, 0, 0.933233,0.0101684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310579,-0.00122265) , 
11, 0.804129, 1, 0, 0.812751,0.00407629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636872,-0.00385218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595463,-0.000470138) , 
13, 0.888702, 1, 0, 0.609331,-0.0242393) , 
6, 0.392839, 1, 0, 0.745004,-0.00535392) , 
0, 0.0627208, 1, 0, 0.536963,0.00266795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348845,-0.00110824) , 
6, 0.71553, 1, 0, 0.498015,-0.00315163)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943421,-0.00293761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817921,0.00410916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957353,0.00101819) , 
5, 0.0463465, 1, 0, 0.888927,0.0153664) , 
13, 0.626803, 1, 0, 0.912386,0.00623763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647259,-0.00365425) , 
15, 0.192427, 1, 0, 0.861286,-0.00332585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362264,0.00249438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813458,-0.000516162) , 
1, 0.270017, 1, 0, 0.487315,0.0266929) , 
11, 0.697316, 1, 0, 0.685489,0.0107854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165303,-0.000545395) , 
10, 0.741082, 1, 0, 0.535964,0.00543439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586698,0.0025171) , 
14, 0.188019, 1, 0, 0.541792,0.00831597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345212,-0.000998729) , 
6, 0.746759, 1, 0, 0.504613,0.00232094)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823918,-0.000621231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698532,0.00369239) , 
15, 0.177385, 1, 0, 0.760604,0.0201832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233235,-0.000983419) , 
8, 0.037734, 1, 0, 0.495029,0.0025624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867361,-0.00535537) , 
5, 0.034978, 1, 0, 0.56185,-0.00460629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417747,0.00326436) , 
11, 1.01548, 1, 0, 0.53711,0.00563159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200497,-0.000909076) , 
3, 0.783015, 1, 0, 0.416464,-0.00249765) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98973,0.00385658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959289,0.00538127) , 
13, 0.707275, 1, 0, 0.974396,0.0120766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828053,0.00411082) , 
13, 1.0235, 1, 0, 0.922998,0.0314651) , 
2, 0.0451316, 1, 0, 0.500267,0.00312129)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331569,0.000463137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0837575,-0.00114301) , 
17, 0.914975, 1, 0, 0.139349,-0.00924696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594295,0.00330813) , 
2, 0.00957491, 1, 0, 0.214012,0.000116896) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963008,-0.0044798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920523,0.00334425) , 
10, 0.286421, 1, 0, 0.94194,0.00532036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982464,-0.00125766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853607,-0.00629006) , 
3, 0.224288, 1, 0, 0.933049,-0.0185752) , 
0, 0.186437, 1, 0, 0.937215,-0.00737858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538134,-0.00216766) , 
3, 0.497354, 1, 0, 0.808657,-0.0190902) , 
2, 0.0162775, 1, 0, 0.537115,-0.0103194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390097,0.000367769) , 
6, 0.684529, 1, 0, 0.503956,-0.00613699)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944298,0.007145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775353,0.000479777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877004,-0.00689038) , 
4, 0.404992, 1, 0, 0.817226,-0.0148169) , 
15, 0.0445457, 1, 0, 0.853737,0.000483827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768983,0.00407971) , 
10, 0.57367, 1, 0, 0.834856,0.0120931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661546,-0.00346557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530962,0.00146873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809763,-0.00222488) , 
12, 0.132294, 1, 0, 0.67275,-0.000234519) , 
8, 0.0232377, 1, 0, 0.6694,-0.014924) , 
8, 0.0188518, 1, 0, 0.769969,0.00149772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517066,0.0023362) , 
8, 0.0437019, 1, 0, 0.727938,0.00873864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126423,-0.00124292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435167,0.000408831) , 
2, 0.0121886, 1, 0, 0.209467,-0.0111703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712505,-0.00406074) , 
5, 0.0225339, 1, 0, 0.306433,-0.0203511) , 
16, 0.191312, 1, 0, 0.574907,-0.00182265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200532,0.00183006) , 
16, 0.361369, 1, 0, 0.504503,0.00290728)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966971,0.00367789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926236,-0.00565912) , 
9, 0.0257471, 1, 0, 0.950966,-0.00303048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905524,0.00495783) , 
13, 0.793564, 1, 0, 0.937165,0.0103688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557788,-0.00361868) , 
10, 0.448263, 1, 0, 0.818958,-0.00656089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836204,-0.00316827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641403,0.00315856) , 
13, 0.601775, 1, 0, 0.727181,0.0178003) , 
14, 0.101853, 1, 0, 0.788558,0.00150865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475255,-0.00290816) , 
9, 0.0571072, 1, 0, 0.714881,-0.00992186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336519,0.000411642) , 
3, 0.720569, 1, 0, 0.580419,-0.00325751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144638,-0.00213131) , 
16, 0.358121, 1, 0, 0.495534,-0.00797448)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154375,-0.00187285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203222,0.00027496) , 
14, 0.103332, 1, 0, 0.178899,-0.0131221) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9968,0.00760144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982146,0.00691377) , 
3, 0.147626, 1, 0, 0.991001,0.00802305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887971,-0.0069625) , 
11, 0.491827, 1, 0, 0.953878,-0.00734602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908898,0.00342826) , 
13, 0.754202, 1, 0, 0.939104,0.00332254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77316,-0.00301329) , 
6, 0.49356, 1, 0, 0.911875,-0.00407926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621714,0.00202811) , 
3, 0.651206, 1, 0, 0.828953,0.0115172) , 
4, 0.0940064, 1, 0, 0.511151,-0.000528622)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966761,0.000650591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375166,-0.00194277) , 
3, 0.291829, 1, 0, 0.544467,-0.0304085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148848,-0.000757347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260234,0.000939311) , 
14, 0.149453, 1, 0, 0.179528,-0.0042443) , 
10, 0.570538, 1, 0, 0.3086,-0.0134981) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813429,-0.00179094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935684,0.00306719) , 
0, 0.187575, 1, 0, 0.884375,0.00192366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795821,0.00328712) , 
8, 0.0228057, 1, 0, 0.846902,0.0225519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986772,0.00443155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752996,-0.0024978) , 
3, 0.335584, 1, 0, 0.873628,-0.0159318) , 
2, 0.0517972, 1, 0, 0.856666,0.00849324) , 
2, 0.0300529, 1, 0, 0.494328,-0.00604566)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958125,-0.00128874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876522,0.00485274) , 
6, 0.179934, 1, 0, 0.91846,0.0131362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276227,0.000305412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288529,-0.00260996) , 
6, 0.265655, 1, 0, 0.282703,-0.0169973) , 
11, 0.646407, 1, 0, 0.593605,-0.00226123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474918,0.00198114) , 
6, 0.43707, 1, 0, 0.565709,0.00584276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455781,0.00282402) , 
15, 0.288791, 1, 0, 0.541749,0.0134169) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489302,0.000834929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200383,-0.00149038) , 
10, 0.579423, 1, 0, 0.307382,-0.0102195) , 
11, 1.02781, 1, 0, 0.459284,0.00510021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8344,-0.00424998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893755,-0.000654444) , 
5, 0.0627629, 1, 0, 0.863944,-0.0231702) , 
5, 0.0548723, 1, 0, 0.500669,0.00220904)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912684,0.00129392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847815,0.00746029) , 
13, 0.781663, 1, 0, 0.88826,0.0234169) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961473,0.00168048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738088,-0.00444002) , 
6, 0.192614, 1, 0, 0.852019,-0.0186617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876009,0.00276855) , 
14, 0.161882, 1, 0, 0.859964,-0.00673577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362701,0.00234552) , 
11, 0.658333, 1, 0, 0.713577,0.0053065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424078,-0.00186966) , 
13, 0.779423, 1, 0, 0.599578,-0.00766012) , 
15, 0.0558279, 1, 0, 0.677578,0.00073666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22689,-0.00184716) , 
11, 0.88279, 1, 0, 0.582279,-0.00537398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176016,-0.000380676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448843,0.00106413) , 
6, 0.509605, 1, 0, 0.351377,0.0131647) , 
11, 1.0005, 1, 0, 0.499878,0.00124185)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131354,-0.00136565) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277882,0.0016165) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909545,-0.00676799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976319,-0.00637467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862044,0.00396908) , 
3, 0.233619, 1, 0, 0.923011,0.0145334) , 
16, 0.0961179, 1, 0, 0.918454,-0.000536603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468618,-0.00144067) , 
3, 0.572151, 1, 0, 0.688735,-0.0182021) , 
5, 0.0151625, 1, 0, 0.588334,-0.00725116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974569,-0.00192029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89924,0.00540535) , 
13, 0.861464, 1, 0, 0.940189,0.0223638) , 
4, 0.464538, 1, 0, 0.661222,-0.00111626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820348,0.00207412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477131,0.00290699) , 
10, 0.596466, 1, 0, 0.613675,0.0387646) , 
14, 0.146237, 1, 0, 0.651879,0.00672088) , 
12, 0.0576521, 1, 0, 0.50424,-0.000545017)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944671,-0.00588046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976503,0.00566054) , 
8, 0.0184822, 1, 0, 0.957931,-0.00449794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979148,0.00638829) , 
12, 0.239217, 1, 0, 0.964669,0.00166285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882744,-0.00438205) , 
10, 0.469475, 1, 0, 0.948031,-0.00381436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514547,0.00205923) , 
17, 0.580835, 1, 0, 0.857851,0.00249941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350536,-0.00174469) , 
10, 0.647128, 1, 0, 0.736493,-0.00405266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486576,0.00457388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170922,0.000395878) , 
3, 0.633588, 1, 0, 0.247897,0.0182573) , 
11, 0.845425, 1, 0, 0.555735,0.00420098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460184,-0.00194061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362991,-4.0695e-05) , 
3, 0.751023, 1, 0, 0.39872,-0.0138236) , 
6, 0.574393, 1, 0, 0.507559,-0.00132943)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970445,0.00214428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546512,-0.00095425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687299,-0.00527586) , 
2, 0.0320135, 1, 0, 0.614581,-0.051215) , 
11, 0.535262, 1, 0, 0.772518,-0.0263957) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320628,-0.0031453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209327,-0.00103969) , 
14, 0.0643992, 1, 0, 0.249509,-0.0234832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928818,0.00403361) , 
4, 0.242968, 1, 0, 0.383201,-0.0142816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316666,0.000968079) , 
11, 1.00899, 1, 0, 0.354545,-0.000459023) , 
8, 0.0222397, 1, 0, 0.477519,-0.00809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972962,-0.0133138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842447,0.00281692) , 
3, 0.27645, 1, 0, 0.901309,0.015703) , 
2, 0.0526698, 1, 0, 0.542139,-0.00446203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702954,-0.00125175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2761,0.00202189) , 
11, 0.658029, 1, 0, 0.388906,0.023217) , 
15, 0.25284, 1, 0, 0.503387,0.00253785)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952168,0.000811196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831259,-0.00656463) , 
16, 0.101281, 1, 0, 0.895084,-0.0167388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860821,0.00555015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292028,0.00108326) , 
17, 0.670363, 1, 0, 0.461972,0.0288628) , 
11, 0.563528, 1, 0, 0.613685,0.0128893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166627,-0.00114632) , 
10, 0.718225, 1, 0, 0.449482,0.00197955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86539,-0.00722888) , 
5, 0.0381604, 1, 0, 0.488648,-0.00247297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329217,0.0010849) , 
11, 1.06444, 1, 0, 0.437788,0.00530493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95994,-0.000467599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698893,-0.00394011) , 
17, 0.492908, 1, 0, 0.865074,-0.0253097) , 
5, 0.0474681, 1, 0, 0.504897,0.000496645)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911969,0.00796161) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994614,0.0106669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967133,-0.00373598) , 
1, 0.482416, 1, 0, 0.983293,0.00638144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88144,-0.00434068) , 
17, 0.406826, 1, 0, 0.946537,-0.00585755) , 
1, 0.197455, 1, 0, 0.938514,0.00924198) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352828,-0.000620999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361384,0.00102556) , 
15, 0.0360548, 1, 0, 0.357191,0.00250596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.299373,-0.00201898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227093,-0.00305551) , 
9, 0.0374946, 1, 0, 0.250933,-0.0384837) , 
15, 0.0875644, 1, 0, 0.288811,-0.0238719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366742,0.000263864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428408,0.000205401) , 
15, 0.339153, 1, 0, 0.396017,0.00303449) , 
14, 0.146237, 1, 0, 0.31931,-0.0162172) , 
10, 0.423475, 1, 0, 0.537734,-0.00723653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430597,0.000919628) , 
6, 0.591184, 1, 0, 0.506226,0.000681181)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971747,0.00330331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87679,-0.00399432) , 
8, 0.0180917, 1, 0, 0.928961,-0.00462405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615436,0.00528353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306308,0.00081105) , 
14, 0.0889534, 1, 0, 0.448074,0.0298778) , 
11, 0.573374, 1, 0, 0.652517,0.0152097) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292993,-0.00071567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223085,-0.00287463) , 
13, 0.9033, 1, 0, 0.257132,-0.0276182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303841,0.00060159) , 
13, 1.05034, 1, 0, 0.274693,-0.0132198) , 
13, 0.7726, 1, 0, 0.42698,-0.00176092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400218,0.00110678) , 
11, 1.26453, 1, 0, 0.422267,0.0030153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813028,-0.00636636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931993,0.00295334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855311,-0.00369835) , 
9, 0.0194735, 1, 0, 0.88957,-0.0110676) , 
2, 0.0340804, 1, 0, 0.859126,-0.0299744) , 
12, 0.210152, 1, 0, 0.503501,-0.00311912)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260389,0.000865586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187852,-0.00188572) , 
6, 0.248414, 1, 0, 0.214796,-0.017084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631632,-0.00582064) , 
5, 0.0260699, 1, 0, 0.28552,-0.0314112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277396,0.000410744) , 
9, 0.039133, 1, 0, 0.282532,-0.0174307) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928647,0.00145813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826893,-0.00303957) , 
7, 0.209019, 1, 0, 0.893098,-0.00493347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978539,0.00486554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817577,0.0037425) , 
3, 0.338332, 1, 0, 0.896062,0.0345251) , 
14, 0.0475235, 1, 0, 0.894488,0.0135668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827152,-0.00302589) , 
15, 0.201981, 1, 0, 0.884067,0.00664572) , 
12, 0.122588, 1, 0, 0.531002,-0.00748571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364292,0.00176074) , 
9, 0.0643824, 1, 0, 0.499501,-0.000235129)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946132,-0.0025635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561897,0.0036752) , 
11, 0.697521, 1, 0, 0.777962,0.0169371) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868298,-0.00619446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950355,0.00190959) , 
1, 0.451892, 1, 0, 0.902035,-0.0208019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919045,0.00485842) , 
14, 0.14378, 1, 0, 0.906746,-0.00652851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384993,-0.00337783) , 
17, 0.601893, 1, 0, 0.706468,-0.0279771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145364,-0.000685844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784846,0.00242187) , 
1, 0.161246, 1, 0, 0.233349,-0.00364147) , 
8, 0.0370661, 1, 0, 0.470639,-0.0158469) , 
14, 0.020891, 1, 0, 0.512545,-0.0113765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436145,0.00069049) , 
11, 1.31766, 1, 0, 0.501961,-0.0075572)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562613,-0.00130595) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955402,-0.0163474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972058,0.00245871) , 
12, 0.2562, 1, 0, 0.963666,-0.00948876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906406,-0.000552902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848222,0.00321936) , 
10, 0.313508, 1, 0, 0.87257,0.0223573) , 
17, 0.346723, 1, 0, 0.914357,0.00774918) , 
12, 0.121465, 1, 0, 0.826589,-0.000498306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556873,-0.00351032) , 
7, 0.38382, 1, 0, 0.786796,-0.00884739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204008,0.000964649) , 
7, 0.529104, 1, 0, 0.599052,-0.00154072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644516,-0.00151543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377381,-0.00299163) , 
6, 0.236728, 1, 0, 0.485471,-0.0343487) , 
14, 0.138141, 1, 0, 0.57578,-0.00826284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426646,0.00105507) , 
9, 0.049535, 1, 0, 0.544126,-0.00310382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29913,-0.00187658) , 
9, 0.0664871, 1, 0, 0.501329,-0.00823953)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843702,-0.00172237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697457,-0.00607861) , 
10, 0.458517, 1, 0, 0.78252,-0.0409921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700652,0.00406024) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409991,-0.00402807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205008,-8.25826e-05) , 
11, 0.793915, 1, 0, 0.258371,-0.0137974) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800896,-0.000269919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926074,0.00562196) , 
4, 0.286256, 1, 0, 0.862195,0.0201274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882971,-0.00270339) , 
4, 0.405857, 1, 0, 0.870084,0.00589325) , 
12, 0.115394, 1, 0, 0.495648,-0.00615961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683772,0.00343174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226302,0.000290142) , 
10, 0.54061, 1, 0, 0.332945,0.0158745) , 
9, 0.0495393, 1, 0, 0.429737,0.00276644) , 
9, 0.00732318, 1, 0, 0.453396,0.00623068) , 
8, 0.00406176, 1, 0, 0.502767,-0.000853159)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870964,0.000570971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505734,-0.0047313) , 
16, 0.135418, 1, 0, 0.677472,-0.0273742) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367901,-0.00155682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145965,0.000355321) , 
8, 0.0359055, 1, 0, 0.202395,-0.00276447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466992,-0.00206606) , 
5, 0.0158147, 1, 0, 0.270778,-0.0122229) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825992,-0.00231098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827375,0.00124841) , 
16, 0.107449, 1, 0, 0.826512,-0.00998794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924695,0.00250177) , 
0, 0.204639, 1, 0, 0.865265,0.000291379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72762,0.00354522) , 
8, 0.0392523, 1, 0, 0.842238,0.0120073) , 
2, 0.0210371, 1, 0, 0.471371,-0.00371768) , 
14, 0.020891, 1, 0, 0.50107,-0.00712655)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784455,-0.00331206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665374,0.00269886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556276,0.00199685) , 
8, 0.0277239, 1, 0, 0.610792,0.0369274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196115,0.000622994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157373,-0.000548756) , 
3, 0.76605, 1, 0, 0.175684,-0.00011399) , 
17, 0.843968, 1, 0, 0.254622,0.00660611) , 
11, 0.602073, 1, 0, 0.326524,0.00227529) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980214,0.00764257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889408,-0.00180979) , 
10, 0.227463, 1, 0, 0.927039,0.00188373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891171,0.00362592) , 
10, 0.362524, 1, 0, 0.916814,0.011241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763518,-0.00252282) , 
10, 0.462224, 1, 0, 0.865212,-0.00447858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675192,-0.00450104) , 
7, 0.275451, 1, 0, 0.825551,-0.0187882) , 
5, 0.0300529, 1, 0, 0.496971,-0.00491914)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99436,0.0134965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999664,0.0203438) , 
5, 0.0344315, 1, 0, 0.99702,0.00602094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949456,-0.0112472) , 
3, 0.144504, 1, 0, 0.980093,-0.00276386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386751,0.00158002) , 
3, 0.237735, 1, 0, 0.704956,0.00738575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62002,-0.00478711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415952,-0.00183184) , 
11, 0.779526, 1, 0, 0.508615,-0.0422683) , 
6, 0.326373, 1, 0, 0.649861,-0.0065475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44529,0.00169753) , 
9, 0.0508431, 1, 0, 0.587569,0.00234312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334168,-0.00183942) , 
13, 0.966142, 1, 0, 0.529628,-0.00492729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424149,0.00115627) , 
13, 1.14589, 1, 0, 0.503528,0.00216688)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275512,0.000353049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337811,0.00207998) , 
14, 0.095848, 1, 0, 0.303898,0.0199043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110233,-0.00062434) , 
10, 0.715881, 1, 0, 0.203878,0.00511509) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973511,-0.0203582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98617,0.00684586) , 
11, 0.340566, 1, 0, 0.9809,-0.00125747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892253,-0.00695153) , 
13, 0.686178, 1, 0, 0.944696,-0.0162266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825783,-0.000220206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92018,0.00671926) , 
4, 0.344946, 1, 0, 0.87295,0.0272366) , 
11, 0.598935, 1, 0, 0.921691,-0.00229003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611135,-0.00259434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575901,-0.000537519) , 
15, 0.0935398, 1, 0, 0.590859,-0.032652) , 
17, 0.722661, 1, 0, 0.81209,-0.0123486) , 
4, 0.10792, 1, 0, 0.501252,-0.00342345)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98339,0.00547809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984878,0.0117526) , 
13, 0.652245, 1, 0, 0.984076,0.011953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444449,-0.00090765) , 
3, 0.364786, 1, 0, 0.659914,-0.00439447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64874,0.00368082) , 
9, 0.0304805, 1, 0, 0.657249,0.00636216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145774,-0.000482526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902219,0.00191844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903585,-0.00257939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428702,-0.00342493) , 
17, 0.619274, 1, 0, 0.60374,-0.0554519) , 
16, 0.0722738, 1, 0, 0.674964,-0.0389765) , 
0, 0.0751557, 1, 0, 0.423753,-0.0238512) , 
15, 0.0936681, 1, 0, 0.525497,-0.010686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658764,0.00169344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250928,0.000691885) , 
7, 0.173603, 1, 0, 0.377536,0.0162443) , 
15, 0.298571, 1, 0, 0.498899,-0.00584495)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581226,-0.00156907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895705,0.00323427) , 
2, 0.0330965, 1, 0, 0.741327,0.00119579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685825,0.00302054) , 
14, 0.0684758, 1, 0, 0.722879,0.0162081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951546,0.00464158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874095,-0.00520264) , 
14, 0.0220104, 1, 0, 0.900747,-0.0170462) , 
12, 0.172399, 1, 0, 0.805702,0.000723432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789642,-0.00427094) , 
14, 0.124727, 1, 0, 0.803066,-0.00580019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223284,0.000251961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870369,0.00387504) , 
4, 0.215841, 1, 0, 0.405358,0.0158093) , 
10, 0.509449, 1, 0, 0.613899,0.00447821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188598,-0.00114169) , 
8, 0.0563999, 1, 0, 0.500047,-0.00176004)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545404,0.00205814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971649,-0.00254033) , 
12, 0.147938, 1, 0, 0.781493,0.00480743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644169,-0.00276115) , 
6, 0.270963, 1, 0, 0.743266,-0.00378855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696084,0.000715051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385055,0.00353249) , 
11, 0.850674, 1, 0, 0.506632,0.0328468) , 
13, 0.853205, 1, 0, 0.647362,0.0110593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493055,-0.00216967) , 
9, 0.0360966, 1, 0, 0.609131,0.00180842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494818,0.00339356) , 
9, 0.0511378, 1, 0, 0.58954,0.00885667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462844,0.00237378) , 
11, 1.20338, 1, 0, 0.563121,0.0178195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259064,-0.000205171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628587,-0.00377909) , 
5, 0.0187293, 1, 0, 0.363215,-0.0197524) , 
15, 0.233875, 1, 0, 0.506585,0.00719367)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767115,0.00473889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955067,0.00318313) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919069,-0.00699458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436793,0.00113024) , 
13, 0.491459, 1, 0, 0.577484,0.00597274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10661,-0.00114642) , 
7, 0.657704, 1, 0, 0.327689,-0.00533086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881641,-0.00665972) , 
4, 0.325208, 1, 0, 0.425489,-0.0109099) , 
8, 0.0120857, 1, 0, 0.514356,-0.0070664) , 
9, 0.0105322, 1, 0, 0.542665,-0.00332864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250626,0.000368346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74131,0.00267368) , 
12, 0.101586, 1, 0, 0.43411,0.0254199) , 
6, 0.543921, 1, 0, 0.507089,0.00609297)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340639,-0.000848611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963495,-0.00760211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964317,0.00831174) , 
10, 0.250153, 1, 0, 0.963954,0.0110436) , 
4, 0.161165, 1, 0, 0.724179,0.00270124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541903,0.00192795) , 
13, 0.995708, 1, 0, 0.661101,0.0135847) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891513,0.00171648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72243,-0.00162402) , 
10, 0.332323, 1, 0, 0.801593,-0.005732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794326,0.00298084) , 
16, 0.116337, 1, 0, 0.798783,0.0103062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390664,-0.0024826) , 
10, 0.473537, 1, 0, 0.586713,-0.01782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227264,0.000573664) , 
10, 0.679307, 1, 0, 0.430568,-0.0061274) , 
9, 0.0292927, 1, 0, 0.507947,0.000489054)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902424,-0.00581497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268622,-1.04089e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295972,0.00265309) , 
15, 0.0769939, 1, 0, 0.279413,0.0130839) , 
10, 0.34583, 1, 0, 0.462374,0.00157159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306752,-0.00198065) , 
9, 0.0386908, 1, 0, 0.405393,-0.00867875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317314,0.00139418) , 
14, 0.113914, 1, 0, 0.38249,-0.00169351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423036,-0.00162787) , 
14, 0.165999, 1, 0, 0.390624,-0.0056225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350651,0.00124699) , 
6, 0.606304, 1, 0, 0.379105,0.00380941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966072,-0.00943818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96777,0.00892022) , 
13, 0.684541, 1, 0, 0.966897,0.00966064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660338,-0.00328796) , 
13, 0.980927, 1, 0, 0.840084,-0.0211558) , 
5, 0.0361053, 1, 0, 0.496495,-0.00254808)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972617,-0.0208603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961543,0.00668752) , 
6, 0.185403, 1, 0, 0.967086,0.00447564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488825,0.000617626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290072,-0.00341703) , 
6, 0.254955, 1, 0, 0.399107,-0.0177144) , 
10, 0.360022, 1, 0, 0.683986,-0.00658462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507048,0.00114634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477255,0.00296325) , 
14, 0.109083, 1, 0, 0.495476,0.0195986) , 
14, 0.0770088, 1, 0, 0.61843,0.00252083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375027,-0.00209754) , 
13, 1.01556, 1, 0, 0.559746,-0.00572346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417684,0.00290738) , 
14, 0.135431, 1, 0, 0.54048,0.000199884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454988,0.0016215) , 
6, 0.59109, 1, 0, 0.516009,0.0100055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367966,-0.00257455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566391,-0.000602616) , 
14, 0.242093, 1, 0, 0.442305,-0.0271501) , 
14, 0.172676, 1, 0, 0.505152,0.00453232)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813182,0.000488945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520382,-0.00221228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431614,-0.00369544) , 
9, 0.00933113, 1, 0, 0.474878,-0.0457849) , 
13, 0.824377, 1, 0, 0.632774,-0.0233998) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978101,0.00488385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95551,-0.000378926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7999,-0.00560885) , 
16, 0.0938574, 1, 0, 0.87349,-0.0230481) , 
14, 0.0429288, 1, 0, 0.907499,-0.0127567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53861,0.00242756) , 
3, 0.409834, 1, 0, 0.778664,0.00493609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252774,-0.00158063) , 
3, 0.597212, 1, 0, 0.559718,-0.00856499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456687,0.00170168) , 
14, 0.145878, 1, 0, 0.541746,-0.00291354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2787,0.00102381) , 
3, 0.823201, 1, 0, 0.460364,0.0041714) , 
9, 0.0176267, 1, 0, 0.498336,-0.00190099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484726,-0.00242329) , 
14, 0.205011, 1, 0, 0.497031,-0.00513148)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961933,-0.00583663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836495,0.00225003) , 
13, 0.685461, 1, 0, 0.899765,0.00740826) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657674,-0.00771471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466205,-0.0016046) , 
10, 0.440314, 1, 0, 0.532657,-0.0488575) , 
10, 0.310041, 1, 0, 0.688865,-0.0249159) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886563,-0.0040967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562505,0.00155281) , 
11, 0.61459, 1, 0, 0.686474,0.0119433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264517,-0.0010901) , 
10, 0.519979, 1, 0, 0.450819,-0.00535629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981048,0.00510484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883339,0.00493787) , 
11, 0.501454, 1, 0, 0.934466,0.0334659) , 
0, 0.180757, 1, 0, 0.562901,0.00364056) , 
9, 0.0215194, 1, 0, 0.608858,-0.00677805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220907,0.00157734) , 
10, 0.752977, 1, 0, 0.50419,0.00149589)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96257,-0.0110571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967181,0.00748672) , 
9, 0.0206203, 1, 0, 0.96499,-0.00151611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896854,0.00368796) , 
6, 0.171612, 1, 0, 0.934603,0.00714956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314331,-0.00295897) , 
11, 0.664971, 1, 0, 0.772664,-0.0040207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59053,0.00398403) , 
6, 0.336633, 1, 0, 0.732985,0.00750633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818566,-3.08299e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1958,-0.00262513) , 
16, 0.126266, 1, 0, 0.4032,-0.0270444) , 
13, 0.822064, 1, 0, 0.60109,-0.00631205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321668,0.00147593) , 
11, 1.02781, 1, 0, 0.54391,-0.00027434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353033,-0.000888717) , 
6, 0.686735, 1, 0, 0.500118,-0.00491878)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94651,-0.00593544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879131,0.00158212) , 
10, 0.350218, 1, 0, 0.913347,-0.00354824) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443399,-0.000122399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984808,0.0105589) , 
1, 0.198338, 1, 0, 0.706834,0.00911644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481888,0.00482239) , 
6, 0.295083, 1, 0, 0.606561,0.0367424) , 
16, 0.125834, 1, 0, 0.758761,0.0167538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227752,-0.00115489) , 
16, 0.33777, 1, 0, 0.644986,0.0101664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417398,-0.00191105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178464,-0.000810556) , 
16, 0.159136, 1, 0, 0.269269,-0.0249426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80317,0.00144901) , 
2, 0.0391141, 1, 0, 0.367801,-0.0163594) , 
13, 0.864983, 1, 0, 0.496322,-0.00406033)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969997,-0.000389316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858448,-0.0102266) , 
17, 0.377224, 1, 0, 0.929662,-0.0220523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958723,-0.00427091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898175,0.00285657) , 
11, 0.41268, 1, 0, 0.928893,0.00572302) , 
9, 0.0266962, 1, 0, 0.929272,-0.00797397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586978,-0.000467862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721377,0.0044659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504339,0.00424331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31558,0.000727995) , 
3, 0.572589, 1, 0, 0.35715,0.0272166) , 
10, 0.411584, 1, 0, 0.437363,0.0387391) , 
15, 0.0323939, 1, 0, 0.463915,0.030485) , 
17, 0.549679, 1, 0, 0.650983,0.0150249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19641,-0.000911965) , 
10, 0.733549, 1, 0, 0.515678,0.00628797)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946311,0.00811272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983957,0.00863631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964472,-0.00165365) , 
15, 0.036682, 1, 0, 0.974285,0.00532885) , 
4, 0.364493, 1, 0, 0.96475,0.0156604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514127,-0.00225065) , 
8, 0.0351422, 1, 0, 0.851273,0.0063129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388478,0.00376183) , 
11, 0.844323, 1, 0, 0.709235,0.0199047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587302,-0.00346729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731625,0.00482548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923171,-0.00435175) , 
4, 0.224514, 1, 0, 0.82198,0.0255666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254977,-0.000426031) , 
10, 0.541362, 1, 0, 0.425395,0.00314582) , 
9, 0.0292345, 1, 0, 0.446687,-0.0014404) , 
15, 0.116937, 1, 0, 0.556451,0.00748343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473699,-0.00157646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345191,-0.000248743) , 
15, 0.09179, 1, 0, 0.394312,-0.015903) , 
13, 1.12047, 1, 0, 0.512094,0.00108549)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930504,-0.00835869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941531,0.00529014) , 
13, 0.617731, 1, 0, 0.936065,-0.00142292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67913,-0.0039308) , 
6, 0.355596, 1, 0, 0.859059,-0.017226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927824,-0.00306233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649947,0.00254343) , 
11, 0.547, 1, 0, 0.77186,0.0183453) , 
9, 0.0315965, 1, 0, 0.818645,-0.000739976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293276,-0.00233505) , 
10, 0.556943, 1, 0, 0.669443,-0.0107679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20295,0.000954323) , 
10, 0.692796, 1, 0, 0.501342,-0.00183293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450759,0.00110226) , 
11, 1.29449, 1, 0, 0.493909,0.00215418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653334,0.00394082) , 
14, 0.241746, 1, 0, 0.502337,0.00458041)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898107,-0.00496122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991194,0.00874202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82091,0.00493608) , 
3, 0.279549, 1, 0, 0.919784,0.0317622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720075,-0.00063991) , 
9, 0.0395803, 1, 0, 0.829642,0.0137715) , 
9, 0.0151488, 1, 0, 0.842285,0.00704313) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841206,-0.00244725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464421,-0.00423856) , 
10, 0.448341, 1, 0, 0.661794,-0.0471377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544391,-0.00156863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240876,0.000704245) , 
7, 0.427571, 1, 0, 0.32703,0.00196779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114248,-0.00175726) , 
16, 0.331414, 1, 0, 0.226078,-0.0100187) , 
16, 0.16019, 1, 0, 0.315566,-0.0176422) , 
8, 0.0222397, 1, 0, 0.507245,-0.00865892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440098,0.00110397) , 
11, 1.29325, 1, 0, 0.497266,-0.00363333)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739444,0.00243334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993934,0.0119843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728411,-0.00402685) , 
3, 0.329815, 1, 0, 0.868157,-0.0236482) , 
5, 0.0365815, 1, 0, 0.818498,-0.0013041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794843,0.00598214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.409037,-0.000483626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2398,0.00264472) , 
16, 0.342163, 1, 0, 0.305368,0.01739) , 
16, 0.242208, 1, 0, 0.451691,0.0304919) , 
16, 0.149857, 1, 0, 0.636317,0.014488) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796296,0.00361288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989242,0.00481375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830875,-0.00377009) , 
3, 0.231665, 1, 0, 0.913519,-0.015895) , 
4, 0.232353, 1, 0, 0.867734,0.00712299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115219,-0.000628547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356479,-0.00142538) , 
12, 0.0633964, 1, 0, 0.230941,-0.0197662) , 
17, 0.659898, 1, 0, 0.412247,-0.0121104) , 
14, 0.0667177, 1, 0, 0.500675,-0.00161346)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562735,-0.00287297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914029,0.00209528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893443,-0.00297429) , 
12, 0.243861, 1, 0, 0.904264,-0.0014333) , 
12, 0.140331, 1, 0, 0.777655,-0.0200944) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149319,-0.00105985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550995,-0.000699456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545875,0.00293691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348212,0.00135665) , 
16, 0.163489, 1, 0, 0.418128,0.0361229) , 
15, 0.0874208, 1, 0, 0.456834,0.0225525) , 
12, 0.0592289, 1, 0, 0.321264,0.00593559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814941,-0.00198145) , 
12, 0.137306, 1, 0, 0.417373,0.000556008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913368,0.00430655) , 
12, 0.225896, 1, 0, 0.476553,0.0045027) , 
16, 0.0951879, 1, 0, 0.577746,-0.0037638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211411,0.0021604) , 
8, 0.0626762, 1, 0, 0.508416,0.00318555)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472496,-0.00200727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975343,0.00679116) , 
2, 0.0314912, 1, 0, 0.740259,-0.00017036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692549,0.0028392) , 
6, 0.356884, 1, 0, 0.72376,0.0161605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59948,-0.00282358) , 
9, 0.0191957, 1, 0, 0.681304,0.000464117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715096,-0.00123919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935106,0.00157706) , 
4, 0.341156, 1, 0, 0.82583,-0.00378119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710992,0.00584601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264105,0.00169464) , 
16, 0.21002, 1, 0, 0.388992,0.0404577) , 
7, 0.176888, 1, 0, 0.529368,0.0262417) , 
14, 0.051666, 1, 0, 0.598426,0.0145252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366968,0.00181249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283291,-0.000328049) , 
15, 0.193159, 1, 0, 0.309119,0.00507811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787695,-0.00431056) , 
12, 0.169929, 1, 0, 0.380745,-0.00319199) , 
9, 0.0407909, 1, 0, 0.508502,0.00720623)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990617,0.00537098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765886,-0.00205128) , 
11, 0.505443, 1, 0, 0.887405,-0.00854066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847966,0.00404681) , 
10, 0.316126, 1, 0, 0.871809,0.0120748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781698,-0.00369972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628271,-0.000355063) , 
16, 0.0740964, 1, 0, 0.70446,-0.0219163) , 
10, 0.447848, 1, 0, 0.812499,2.81559e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69463,0.00304885) , 
15, 0.301554, 1, 0, 0.793125,0.00732506) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721366,-0.003346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409927,-0.00431175) , 
10, 0.448341, 1, 0, 0.567209,-0.0658882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501477,-0.000853837) , 
7, 0.300161, 1, 0, 0.539337,-0.0446933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71062,0.00254887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341453,-0.00101591) , 
7, 0.392515, 1, 0, 0.508622,0.00317867) , 
16, 0.196246, 1, 0, 0.526062,-0.0240029) , 
7, 0.188989, 1, 0, 0.668043,-0.00734774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191589,0.00120777) , 
7, 0.566973, 1, 0, 0.565611,-0.00168633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147214,-0.00220742) , 
16, 0.382805, 1, 0, 0.499305,-0.00589478)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674749,0.000412956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476844,0.00452548) , 
11, 0.670132, 1, 0, 0.565255,0.0493163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128888,7.10456e-05) , 
7, 0.51988, 1, 0, 0.259904,0.0154702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752424,-0.00394776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904582,-0.0047872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940457,0.00458864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808753,-0.00321573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917661,0.00134645) , 
5, 0.033246, 1, 0, 0.866436,-0.0114559) , 
14, 0.0671079, 1, 0, 0.898007,0.00430646) , 
9, 0.0175983, 1, 0, 0.900199,-0.00470659) , 
12, 0.137427, 1, 0, 0.871828,-0.0130041) , 
12, 0.106193, 1, 0, 0.537616,0.00254759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349016,-0.0012678) , 
6, 0.702036, 1, 0, 0.496327,-0.00447265)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986745,0.000362627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504536,-0.00433169) , 
3, 0.22293, 1, 0, 0.687953,-0.0315239) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951105,-0.00111529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39019,0.0031283) , 
17, 0.512298, 1, 0, 0.60962,0.0237304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499233,-0.00296819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484835,0.000881702) , 
9, 0.0419583, 1, 0, 0.491349,-0.00884693) , 
9, 0.0315197, 1, 0, 0.534945,0.00316154) , 
15, 0.0333322, 1, 0, 0.578497,-0.00671118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493975,0.00129627) , 
6, 0.645906, 1, 0, 0.559253,0.00152995) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418704,-0.00379939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432711,-0.000400201) , 
15, 0.216903, 1, 0, 0.425024,-0.0315599) , 
14, 0.122006, 1, 0, 0.533653,-0.00478099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316993,0.00215176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53778,-0.000288095) , 
14, 0.229488, 1, 0, 0.386065,0.0232607) , 
15, 0.283327, 1, 0, 0.504116,0.000831028)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935413,-0.0043413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904597,0.00420823) , 
9, 0.019649, 1, 0, 0.921561,0.00157266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750244,-0.00394641) , 
6, 0.292797, 1, 0, 0.882161,-0.00659314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44804,0.00247926) , 
11, 0.782703, 1, 0, 0.795657,0.00121628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170319,-0.00177568) , 
16, 0.333046, 1, 0, 0.592183,-0.00651975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48605,0.00240335) , 
9, 0.0400841, 1, 0, 0.576522,-0.00195328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397749,-0.00175663) , 
9, 0.0537985, 1, 0, 0.5383,-0.00655951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608278,0.00173387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386478,0.000165769) , 
9, 0.031288, 1, 0, 0.442131,0.0115062) , 
6, 0.49776, 1, 0, 0.503343,7.35452e-06)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261298,-0.00186106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328867,-0.00157504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180335,0.000877355) , 
11, 0.808723, 1, 0, 0.220421,0.00465122) , 
9, 0.0244651, 1, 0, 0.231863,-0.00408823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261846,-0.00207067) , 
15, 0.323452, 1, 0, 0.237592,-0.00954117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471288,-0.00276681) , 
2, 0.0179916, 1, 0, 0.273484,-0.0164879) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979124,0.00571298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809096,-0.00181846) , 
11, 0.540283, 1, 0, 0.904878,-0.00193233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720348,0.00295378) , 
13, 1.0175, 1, 0, 0.843839,0.0197302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876246,-0.00586872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861194,0.00106684) , 
16, 0.0896881, 1, 0, 0.869653,-0.0164851) , 
2, 0.0502698, 1, 0, 0.853082,0.00676268) , 
2, 0.0213392, 1, 0, 0.494397,-0.00762596)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872122,0.000987097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519411,-0.00524885) , 
13, 0.757514, 1, 0, 0.727093,-0.0169426) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989529,0.00852454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669442,-0.00265453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197248,-4.00882e-05) , 
16, 0.277212, 1, 0, 0.418744,-0.0115978) , 
16, 0.105901, 1, 0, 0.611644,-0.00298554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43088,0.00171547) , 
6, 0.321323, 1, 0, 0.564326,0.00336091) , 
9, 0.0175536, 1, 0, 0.6059,-0.001825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285596,-0.00183051) , 
13, 1.01677, 1, 0, 0.547994,-0.00636388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204052,-0.000448053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815456,0.0038912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664168,0.000807252) , 
11, 1.10619, 1, 0, 0.732459,0.0384042) , 
4, 0.108127, 1, 0, 0.43398,0.0115809) , 
6, 0.468228, 1, 0, 0.50453,0.000477027)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495458,-0.00346838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486662,0.000336371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188361,-0.00207712) , 
16, 0.217673, 1, 0, 0.294028,-0.0187892) , 
16, 0.119368, 1, 0, 0.34252,-0.0304493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923374,0.000238114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794997,-0.00426004) , 
8, 0.0207436, 1, 0, 0.875243,-0.016777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951448,-0.00608604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807465,0.00264758) , 
3, 0.337028, 1, 0, 0.874189,0.0167657) , 
14, 0.0488305, 1, 0, 0.874766,-0.00160192) , 
12, 0.121228, 1, 0, 0.641769,-0.0142302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208236,0.00164206) , 
16, 0.358121, 1, 0, 0.548353,-0.00668929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346588,0.000948341) , 
9, 0.056808, 1, 0, 0.501162,-0.00138078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.292164,-0.000921601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665384,-0.00478251) , 
5, 0.0184593, 1, 0, 0.413963,-0.0322832) , 
14, 0.166026, 1, 0, 0.486608,-0.00653847)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771943,0.00362339) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944492,0.00657456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96241,-2.35155e-05) , 
12, 0.214302, 1, 0, 0.953351,0.0151299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90268,-0.000757931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539965,-0.00457191) , 
6, 0.265059, 1, 0, 0.766285,-0.0272912) , 
16, 0.0768458, 1, 0, 0.84121,-0.0103004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682538,0.00225504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389627,-0.000432196) , 
7, 0.305711, 1, 0, 0.56781,0.0225648) , 
11, 0.691971, 1, 0, 0.721423,0.00409911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110533,-9.8627e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354473,-0.00197101) , 
12, 0.0693791, 1, 0, 0.199994,-0.0185306) , 
17, 0.964466, 1, 0, 0.476028,-0.00655087) , 
9, 0.0109848, 1, 0, 0.504888,-0.00266992)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964223,-0.0017723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486268,0.00336151) , 
8, 0.0310514, 1, 0, 0.776775,0.0108067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788264,-0.00201486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384538,-0.00515216) , 
11, 0.812738, 1, 0, 0.572126,-0.045929) , 
6, 0.24678, 1, 0, 0.676698,-0.0169381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554904,0.00124464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553559,0.00443708) , 
9, 0.0247966, 1, 0, 0.55416,0.0307119) , 
14, 0.0614605, 1, 0, 0.638913,-0.00224519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499477,0.00175382) , 
13, 1.14589, 1, 0, 0.600605,0.00840592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.355518,-0.00291504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835801,0.00230909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241108,-0.000492674) , 
3, 0.459581, 1, 0, 0.387967,-0.00226422) , 
14, 0.0984664, 1, 0, 0.381188,-0.0122155) , 
15, 0.149286, 1, 0, 0.495583,-0.00146439)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202011,-0.0019224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109302,-0.000360768) , 
3, 0.671917, 1, 0, 0.139284,-0.0133755) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700111,0.00118531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503256,-0.00158327) , 
8, 0.0308292, 1, 0, 0.612852,-0.00321664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796944,-0.00550727) , 
4, 0.227563, 1, 0, 0.663605,-0.0190594) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967448,-0.00653484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96013,0.00616015) , 
11, 0.408949, 1, 0, 0.963536,0.00756284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940801,-0.00685964) , 
5, 0.0558657, 1, 0, 0.95696,-0.000648823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829877,0.00328289) , 
13, 1.01181, 1, 0, 0.919659,0.0144171) , 
4, 0.297588, 1, 0, 0.808737,-8.48871e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469966,0.00151693) , 
8, 0.0491341, 1, 0, 0.742043,0.00606225) , 
2, 0.00883929, 1, 0, 0.502106,-0.00167523)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277278,0.0012266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129359,-0.000942055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267374,-0.00165573) , 
12, 0.0630397, 1, 0, 0.183046,-0.0209324) , 
9, 0.031288, 1, 0, 0.208312,-0.0103325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736211,-0.00412959) , 
4, 0.146202, 1, 0, 0.273464,-0.0163711) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945176,-0.0037441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981362,-0.00525233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979482,0.0108652) , 
13, 0.602416, 1, 0, 0.980409,0.0143791) , 
7, 0.0562595, 1, 0, 0.967675,0.0048408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731258,-0.00307318) , 
17, 0.577548, 1, 0, 0.910321,-0.0077343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871656,0.000134414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712196,0.0022031) , 
13, 0.947193, 1, 0, 0.779505,0.0265922) , 
10, 0.440136, 1, 0, 0.854837,0.00682473) , 
2, 0.0210371, 1, 0, 0.489511,-0.00775119)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834906,0.00439407) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971573,0.000617492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978799,0.0125713) , 
10, 0.249242, 1, 0, 0.975251,0.0147312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920213,-0.00589956) , 
9, 0.0281573, 1, 0, 0.950545,-0.00303059) , 
5, 0.0246556, 1, 0, 0.921254,0.00566964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506571,-0.0032318) , 
10, 0.577788, 1, 0, 0.851793,-0.00242275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318421,0.00228031) , 
8, 0.0451798, 1, 0, 0.7087,0.00688481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645848,-0.00274081) , 
14, 0.183476, 1, 0, 0.69961,0.00211654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462912,-0.00341385) , 
6, 0.543955, 1, 0, 0.656464,-0.0098713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16276,-0.000447662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393523,0.00141249) , 
6, 0.620772, 1, 0, 0.270316,0.0115799) , 
3, 0.720569, 1, 0, 0.500344,-0.0011986)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517404,-0.000244765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951737,-0.00414671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570646,-0.00385749) , 
17, 0.422367, 1, 0, 0.754324,-0.0489142) , 
5, 0.0181624, 1, 0, 0.669972,-0.033084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573103,0.000801771) , 
10, 0.627794, 1, 0, 0.647307,-0.0218625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903208,0.00532907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506739,-0.0024751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119847,-0.000118812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655926,0.00197634) , 
4, 0.116507, 1, 0, 0.186685,0.00409189) , 
10, 0.512125, 1, 0, 0.22416,-0.00148577) , 
10, 0.351365, 1, 0, 0.320338,0.00429207) , 
16, 0.1279, 1, 0, 0.423979,-0.0039983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894022,0.00581167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918295,0.0022343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897668,-0.00225518) , 
12, 0.224142, 1, 0, 0.909647,0.0021521) , 
4, 0.376026, 1, 0, 0.904852,0.0219181) , 
2, 0.0411492, 1, 0, 0.510859,0.000684044)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953432,0.00596178) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410472,-0.00168986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918571,0.00430044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869362,0.00154636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807473,-0.0024541) , 
14, 0.070544, 1, 0, 0.838475,-0.00645866) , 
16, 0.0709276, 1, 0, 0.865711,0.00814946) , 
1, 0.181988, 1, 0, 0.687243,-0.00968796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851077,-0.00878402) , 
4, 0.490523, 1, 0, 0.719535,-0.0190447) , 
16, 0.041577, 1, 0, 0.752667,-0.0125589) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900229,0.00203441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798992,-0.00333269) , 
7, 0.280622, 1, 0, 0.853035,-0.00373919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272403,0.0021561) , 
10, 0.54541, 1, 0, 0.579087,0.0132324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172847,-0.00088437) , 
8, 0.0449442, 1, 0, 0.353201,-0.0011088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339713,0.00123238) , 
11, 1.12265, 1, 0, 0.349921,0.00500026) , 
16, 0.124732, 1, 0, 0.497763,-0.00144543)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577788,-0.00284437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643902,9.15947e-05) , 
14, 0.109767, 1, 0, 0.60156,-0.0329785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965201,-0.00674064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869245,0.00262399) , 
6, 0.305276, 1, 0, 0.929209,0.00437287) , 
4, 0.314331, 1, 0, 0.767993,-0.0140055) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661765,0.00193831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438907,-0.00201449) , 
14, 0.0438867, 1, 0, 0.563987,-0.00205726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435379,0.00320376) , 
15, 0.131693, 1, 0, 0.517573,0.0176671) , 
7, 0.257173, 1, 0, 0.65784,-7.35796e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0847827,-0.00188262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612798,-7.03149e-05) , 
4, 0.116146, 1, 0, 0.180016,-0.0220537) , 
10, 0.66547, 1, 0, 0.477084,-0.00838845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401295,0.00167559) , 
15, 0.373214, 1, 0, 0.469543,-0.00481133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845094,-0.00852646) , 
5, 0.0601755, 1, 0, 0.489246,-0.00756926)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982659,0.0101035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987944,0.00352299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924391,-0.0210154) , 
10, 0.341225, 1, 0, 0.962786,-0.0156458) , 
5, 0.0313784, 1, 0, 0.96968,-0.00523462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894756,0.00249645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656105,0.00248355) , 
7, 0.17107, 1, 0, 0.775106,0.0292586) , 
3, 0.304575, 1, 0, 0.906315,0.00599849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445912,-0.00318663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364315,-0.000148107) , 
3, 0.708851, 1, 0, 0.392231,-0.02247) , 
3, 0.501079, 1, 0, 0.621132,-0.00979413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59114,0.00386093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133913,0.000623157) , 
10, 0.594357, 1, 0, 0.211037,0.0145891) , 
16, 0.278488, 1, 0, 0.491195,-0.00206837)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171167,-0.000876809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194732,0.000674227) , 
14, 0.086338, 1, 0, 0.185461,0.00104009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781961,-0.000718642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695949,0.00409126) , 
7, 0.275942, 1, 0, 0.741885,0.0278676) , 
4, 0.0924157, 1, 0, 0.299516,0.00653914) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915016,0.00110472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965556,-0.00204997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723161,-0.00312638) , 
6, 0.276308, 1, 0, 0.833657,-0.0295607) , 
14, 0.0397657, 1, 0, 0.861362,-0.0171095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944168,0.00408833) , 
2, 0.0535208, 1, 0, 0.886651,-0.00615956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592656,-0.0012747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729736,-0.00523287) , 
12, 0.134299, 1, 0, 0.662443,-0.051897) , 
8, 0.0327103, 1, 0, 0.823534,-0.0190351) , 
2, 0.0247858, 1, 0, 0.499331,-0.00321263)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953441,-0.00677381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880328,0.00364936) , 
16, 0.108001, 1, 0, 0.913774,0.00271864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21711,-0.00234062) , 
10, 0.561808, 1, 0, 0.646508,-0.0101083) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655704,0.00332304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490551,-0.0017385) , 
15, 0.0990494, 1, 0, 0.566595,0.000801148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416841,0.00227433) , 
15, 0.167026, 1, 0, 0.511501,0.00950997) , 
9, 0.0281333, 1, 0, 0.579495,-0.000370455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494393,-0.00257524) , 
6, 0.451711, 1, 0, 0.565809,-0.00652233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473587,0.00080497) , 
6, 0.606304, 1, 0, 0.542967,-0.000513767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540315,0.00343493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320433,0.000709976) , 
9, 0.0548856, 1, 0, 0.394439,0.0228198) , 
15, 0.245818, 1, 0, 0.50467,0.00550272)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529723,-0.00164202) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92533,-0.00346192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966115,-0.00173858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968462,0.00584564) , 
10, 0.303452, 1, 0, 0.967414,0.00840643) , 
12, 0.152325, 1, 0, 0.955847,0.00193993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761371,0.00278324) , 
17, 0.545949, 1, 0, 0.902477,0.0150709) , 
5, 0.0176786, 1, 0, 0.83597,0.00730169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694472,0.00360275) , 
10, 0.64485, 1, 0, 0.814795,0.0144354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185194,0.000884413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942548,0.00175393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474034,-0.00253903) , 
17, 0.641467, 1, 0, 0.675194,-0.0250585) , 
5, 0.0105485, 1, 0, 0.446202,-0.00774242) , 
16, 0.14731, 1, 0, 0.644678,0.00419963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181143,-0.00092418) , 
17, 1.11384, 1, 0, 0.499586,-0.00195237)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877593,-0.00754642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982659,0.00294877) , 
4, 0.421715, 1, 0, 0.936012,-0.0173359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947651,0.00391503) , 
16, 0.087368, 1, 0, 0.940758,-0.00360731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842748,0.00308803) , 
13, 0.963447, 1, 0, 0.919629,0.00564371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469839,-0.00110547) , 
17, 0.662282, 1, 0, 0.740738,-0.00668561) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855357,0.00448133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187577,-0.00101356) , 
11, 0.649697, 1, 0, 0.351289,-0.00498082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172099,0.00125235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7708,0.00497288) , 
4, 0.112193, 1, 0, 0.312454,0.0363096) , 
6, 0.304191, 1, 0, 0.330876,0.0167227) , 
16, 0.159136, 1, 0, 0.516194,0.0061387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365614,-0.00178707) , 
15, 0.373214, 1, 0, 0.501108,0.00253876)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946716,-0.00506547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532171,0.00285676) , 
17, 0.508146, 1, 0, 0.707246,0.0185754) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980427,0.00388142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747701,-0.00531966) , 
11, 0.487037, 1, 0, 0.879846,-0.0152776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8068,0.00211568) , 
13, 0.649151, 1, 0, 0.859228,-0.00599376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43537,-0.0014307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748684,-0.00545676) , 
5, 0.0388778, 1, 0, 0.538064,-0.0450437) , 
13, 0.769924, 1, 0, 0.691469,-0.0263913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312083,0.00177258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225997,-0.000892351) , 
9, 0.0369622, 1, 0, 0.253126,-0.00245436) , 
10, 0.585609, 1, 0, 0.457448,-0.013612) , 
14, 0.017222, 1, 0, 0.487967,-0.00967947)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382636,0.00263569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0906576,-0.000655244) , 
17, 0.943258, 1, 0, 0.176082,0.00718343) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978059,-0.00251273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979228,0.00847327) , 
11, 0.399578, 1, 0, 0.978673,0.00948834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931705,-0.0157546) , 
4, 0.53439, 1, 0, 0.967249,-0.00116229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803566,-0.00538972) , 
6, 0.389234, 1, 0, 0.935562,-0.0120267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689244,0.00160126) , 
3, 0.5234, 1, 0, 0.873453,-0.000762234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475588,-0.00353826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382101,-0.00152184) , 
16, 0.306088, 1, 0, 0.432421,-0.0474154) , 
7, 0.342663, 1, 0, 0.755551,-0.0132342) , 
5, 0.0120212, 1, 0, 0.519473,-0.00491597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43954,0.00136405) , 
11, 1.31766, 1, 0, 0.508158,0.000236836)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752674,-0.00477423) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365811,0.00235307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943702,-0.00628957) , 
0, 0.108804, 1, 0, 0.732574,0.00063092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474369,0.00381254) , 
13, 0.874573, 1, 0, 0.640006,0.0171478) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749119,0.00451698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658854,-0.000615615) , 
9, 0.0350464, 1, 0, 0.704918,0.013321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297834,-0.00166192) , 
13, 0.736397, 1, 0, 0.480222,-0.00782477) , 
14, 0.0889834, 1, 0, 0.560602,0.00473794) , 
9, 0.0128829, 1, 0, 0.591388,-0.00111487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486471,0.00128713) , 
13, 1.17382, 1, 0, 0.568265,0.00506299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195382,-0.00021043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578613,-0.00283494) , 
2, 0.0183421, 1, 0, 0.331684,-0.0214178) , 
9, 0.0547541, 1, 0, 0.497887,-0.00281453)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919499,0.00305518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211603,-0.00110698) , 
10, 0.348863, 1, 0, 0.384137,-0.0095684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986699,0.00680627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918515,0.00673413) , 
3, 0.314841, 1, 0, 0.958054,0.0322993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911884,-0.00303733) , 
0, 0.207003, 1, 0, 0.940955,0.0144374) , 
1, 0.226219, 1, 0, 0.642545,0.00157218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500766,0.00271614) , 
15, 0.302545, 1, 0, 0.61509,0.0091077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16423,-0.00141729) , 
3, 0.729978, 1, 0, 0.471061,-0.00125737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427967,0.00125851) , 
11, 1.28994, 1, 0, 0.464043,0.00366985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900309,-0.000434431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809527,-0.00609408) , 
15, 0.0707082, 1, 0, 0.855479,-0.0324979) , 
0, 0.281931, 1, 0, 0.502954,7.46189e-05)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972604,-0.00762557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998183,0.0170347) , 
0, 0.168471, 1, 0, 0.987491,0.0023532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44173,0.00289746) , 
3, 0.227386, 1, 0, 0.824063,0.0113097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409988,-0.00162705) , 
13, 0.775522, 1, 0, 0.693938,0.00263676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294085,-0.00184119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885934,0.000458364) , 
4, 0.251814, 1, 0, 0.49291,-0.017558) , 
6, 0.275303, 1, 0, 0.60531,-0.00626659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309722,0.0019892) , 
11, 1.08111, 1, 0, 0.561908,-0.000920097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410157,-0.0018047) , 
6, 0.638215, 1, 0, 0.531441,-0.0092379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355561,0.00133653) , 
9, 0.0625761, 1, 0, 0.497077,-0.00295738)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517399,-0.0025761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928882,0.00390312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8867,-0.00630405) , 
2, 0.0481404, 1, 0, 0.90985,-0.00217138) , 
12, 0.121902, 1, 0, 0.796143,-0.0158961) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953968,0.000638028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875224,-0.00414826) , 
7, 0.200686, 1, 0, 0.914292,-0.0084245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808708,0.00512195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302552,0.000682436) , 
7, 0.448754, 1, 0, 0.552564,0.0290571) , 
11, 0.568592, 1, 0, 0.708453,0.0129043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321593,-0.00169342) , 
13, 0.836507, 1, 0, 0.609736,0.00301136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440646,0.00227782) , 
13, 0.969602, 1, 0, 0.543539,0.0188171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181013,-0.000943748) , 
8, 0.0577164, 1, 0, 0.426303,0.00771458) , 
7, 0.0962007, 1, 0, 0.508119,0.00249144)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581419,0.00224182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977958,-0.0134625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986681,0.00865013) , 
13, 0.587324, 1, 0, 0.983516,0.00525744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918697,-0.00655668) , 
7, 0.196038, 1, 0, 0.962285,-0.00425966) , 
4, 0.140199, 1, 0, 0.874193,0.00209838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272542,-0.00347611) , 
10, 0.638036, 1, 0, 0.749156,-0.00808994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579387,0.00436433) , 
13, 0.895064, 1, 0, 0.716602,0.00326804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154743,-0.00202349) , 
11, 0.897835, 1, 0, 0.588731,-0.00380004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351161,-0.00194309) , 
6, 0.48849, 1, 0, 0.528062,-0.0117804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395922,0.000933306) , 
11, 1.11655, 1, 0, 0.493924,-0.00366826)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130535,-0.00129556) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922193,0.00035159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945109,0.00869908) , 
9, 0.0198264, 1, 0, 0.930149,0.0141293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947704,0.00183686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609219,-0.00383053) , 
11, 0.567986, 1, 0, 0.787207,-0.0258878) , 
14, 0.0548247, 1, 0, 0.861327,-0.00513782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856812,0.0032796) , 
14, 0.155349, 1, 0, 0.860516,0.000870331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643398,0.00431095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276623,0.00062395) , 
8, 0.0481594, 1, 0, 0.391188,0.0244026) , 
8, 0.0352554, 1, 0, 0.666309,0.0106079) , 
12, 0.0522438, 1, 0, 0.542115,0.00442579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334723,-0.00172465) , 
6, 0.71795, 1, 0, 0.501162,-0.00436723)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965608,-0.00303973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984806,0.00930987) , 
16, 0.130548, 1, 0, 0.972782,0.00179438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525352,0.00398134) , 
17, 0.558375, 1, 0, 0.823361,0.0180449) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604416,-0.00427446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848378,-0.0031569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934354,0.00298621) , 
12, 0.209639, 1, 0, 0.892905,-0.00403029) , 
2, 0.0329194, 1, 0, 0.801769,-0.0240221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12351,-0.000315536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680487,0.00169777) , 
1, 0.134576, 1, 0, 0.216506,0.00246369) , 
17, 0.711647, 1, 0, 0.413161,-0.00643584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368835,-0.00144145) , 
11, 1.25776, 1, 0, 0.403811,-0.0120489) , 
13, 0.640267, 1, 0, 0.493367,-0.0056252)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313808,-0.00335454) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508941,0.00119093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144302,-0.000505797) , 
7, 0.428329, 1, 0, 0.258483,0.0021467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268162,-0.0011866) , 
15, 0.294942, 1, 0, 0.261286,-0.00430822) , 
9, 0.015644, 1, 0, 0.266214,-0.00815447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813585,0.0024175) , 
2, 0.0204512, 1, 0, 0.332724,-0.00340988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671076,-0.00422286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837097,-0.000858837) , 
5, 0.039318, 1, 0, 0.767826,-0.03549) , 
5, 0.0353564, 1, 0, 0.407331,-0.00891066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955065,0.00840678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920158,0.00270633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893312,-0.00261337) , 
2, 0.0393916, 1, 0, 0.905941,-0.000387916) , 
0, 0.221509, 1, 0, 0.921716,0.0126629) , 
1, 0.420612, 1, 0, 0.490121,-0.0054384)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991516,0.00578713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651921,-0.00291952) , 
11, 0.471141, 1, 0, 0.818972,-0.00832669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681154,0.00232024) , 
15, 0.0810326, 1, 0, 0.775376,-0.000828952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853858,0.0078597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358704,0.000951673) , 
11, 0.722474, 1, 0, 0.599539,0.0313265) , 
6, 0.243579, 1, 0, 0.710142,0.0111004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302955,-0.00193056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923767,0.000798525) , 
12, 0.121327, 1, 0, 0.513247,-0.0151272) , 
14, 0.10084, 1, 0, 0.634602,0.00103801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641636,-0.00301013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375533,-0.000539886) , 
3, 0.584923, 1, 0, 0.48151,-0.0242783) , 
6, 0.400741, 1, 0, 0.578515,-0.00823685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287737,0.000788452) , 
3, 0.828655, 1, 0, 0.497279,-0.00156762)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981222,-0.0117717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964234,0.00467795) , 
13, 0.68681, 1, 0, 0.971665,0.00518265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679802,-0.0042879) , 
17, 0.470359, 1, 0, 0.861206,-0.0199054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960913,-0.0050126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594063,0.00141179) , 
3, 0.281863, 1, 0, 0.741083,0.0113845) , 
15, 0.109237, 1, 0, 0.799478,-0.00382651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200353,0.00162774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499495,-0.000597665) , 
2, 0.0154449, 1, 0, 0.295637,0.0121036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890874,0.00564997) , 
4, 0.219762, 1, 0, 0.434783,0.0240733) , 
8, 0.0310327, 1, 0, 0.635684,0.00870406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181503,-0.00114567) , 
17, 1.14256, 1, 0, 0.508212,0.000600682)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958271,-0.00618128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951384,0.00745929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970463,-0.00244031) , 
5, 0.0390201, 1, 0, 0.960864,0.0111552) , 
15, 0.0329851, 1, 0, 0.959842,0.002046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723588,-0.00431695) , 
11, 0.679488, 1, 0, 0.897607,-0.0089756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361011,0.0012343) , 
3, 0.540427, 1, 0, 0.608863,0.00749779) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945553,0.00471509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435209,-0.00532922) , 
7, 0.195673, 1, 0, 0.735168,-0.0201552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203028,0.000971531) , 
11, 0.693831, 1, 0, 0.442666,-0.00138893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298354,-0.00197964) , 
6, 0.52887, 1, 0, 0.383253,-0.0182941) , 
15, 0.152931, 1, 0, 0.498545,-0.00511376)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819795,-0.00532011) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965412,-0.0145565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618755,0.00310371) , 
3, 0.259746, 1, 0, 0.746765,0.0291793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375061,-0.00262161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849535,0.000620912) , 
12, 0.131938, 1, 0, 0.589294,-0.0279663) , 
8, 0.0191552, 1, 0, 0.675033,0.00314789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679861,0.00569039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403593,0.000571147) , 
7, 0.354998, 1, 0, 0.508678,0.0416247) , 
7, 0.268618, 1, 0, 0.619696,0.015947) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540349,0.000258262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321151,0.00173081) , 
6, 0.206117, 1, 0, 0.407036,0.0149271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149257,-0.00102633) , 
13, 0.762245, 1, 0, 0.229158,-0.00570343) , 
16, 0.217673, 1, 0, 0.421698,0.00497049) , 
16, 0.049893, 1, 0, 0.445267,0.00196142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975768,0.00217856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687674,-0.00525351) , 
17, 0.440847, 1, 0, 0.84954,-0.0372537) , 
5, 0.0515455, 1, 0, 0.495279,-0.0028898)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965064,-0.00270593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821547,0.00250784) , 
13, 0.650004, 1, 0, 0.894718,0.0120006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609087,-0.00516371) , 
10, 0.392517, 1, 0, 0.802359,-0.0129462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400341,0.00307106) , 
10, 0.588797, 1, 0, 0.70225,-0.00019279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851967,-0.0089092) , 
5, 0.0548723, 1, 0, 0.732058,-0.0119086) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497593,-0.000652216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880764,0.00461477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881082,0.00028097) , 
5, 0.0386089, 1, 0, 0.880948,0.0221786) , 
5, 0.0222159, 1, 0, 0.705412,0.00660245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293719,0.00261113) , 
16, 0.198097, 1, 0, 0.542284,0.0185384) , 
9, 0.027377, 1, 0, 0.609342,0.00777975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191765,-0.00069725) , 
17, 1.17246, 1, 0, 0.502088,0.00265454)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58288,-0.00240699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982507,-0.0161667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9943,0.0152244) , 
6, 0.109336, 1, 0, 0.988951,0.00339926) , 
4, 0.227348, 1, 0, 0.864617,-0.00422979) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916141,-0.000713304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76743,0.00361923) , 
6, 0.362397, 1, 0, 0.835016,0.0269703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474897,-0.000665089) , 
11, 1.02498, 1, 0, 0.683371,0.00890037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43318,0.000926016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41482,0.00351146) , 
11, 0.865779, 1, 0, 0.423465,0.0376272) , 
16, 0.156118, 1, 0, 0.575015,0.0208767) , 
6, 0.185873, 1, 0, 0.642223,0.0150502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187284,-0.0011468) , 
10, 0.741082, 1, 0, 0.510731,0.00554854)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849553,-0.002065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990605,-0.00189902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966746,0.00701316) , 
3, 0.188507, 1, 0, 0.980749,0.009918) , 
2, 0.0312212, 1, 0, 0.929962,0.000224639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581763,-0.00227297) , 
13, 0.925392, 1, 0, 0.821452,-0.0142667) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197486,0.000842156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552195,0.00294276) , 
2, 0.0155566, 1, 0, 0.288217,0.0253681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802824,-0.00126699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758959,-5.23004e-05) , 
9, 0.0351187, 1, 0, 0.780426,-0.00751466) , 
2, 0.0240423, 1, 0, 0.438519,0.0153269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189716,-0.000683315) , 
10, 0.735951, 1, 0, 0.326015,0.00362337) , 
10, 0.44828, 1, 0, 0.495907,-0.00251138)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959223,0.000796633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910264,0.00792221) , 
11, 0.570742, 1, 0, 0.937334,0.0259046) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186339,-0.0022648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330867,0.00260499) , 
15, 0.111125, 1, 0, 0.276221,0.00785303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215352,-0.00111114) , 
6, 0.307465, 1, 0, 0.249071,-0.00317862) , 
10, 0.454998, 1, 0, 0.432065,0.00455396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988283,0.00324231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812273,-0.0063977) , 
3, 0.25384, 1, 0, 0.916289,-0.0229467) , 
2, 0.0374527, 1, 0, 0.533751,-0.00122111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418489,0.00143122) , 
6, 0.560069, 1, 0, 0.509893,0.00461859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388718,-0.000865509) , 
13, 1.17792, 1, 0, 0.481939,-0.00103692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922982,0.00391917) , 
2, 0.0616201, 1, 0, 0.504019,0.000305441)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966107,-0.00480022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973804,0.00904096) , 
17, 0.357214, 1, 0, 0.969079,0.004412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52368,-0.00237422) , 
17, 0.552064, 1, 0, 0.823504,-0.00584122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584531,0.00160283) , 
6, 0.496828, 1, 0, 0.743031,0.00721783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565965,-0.00409599) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778813,-0.00120686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470243,0.0016896) , 
10, 0.440118, 1, 0, 0.594509,0.0114395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466539,-0.00164603) , 
15, 0.241776, 1, 0, 0.545708,-0.00294851) , 
15, 0.135132, 1, 0, 0.551151,-0.0167883) , 
14, 0.069203, 1, 0, 0.651925,-0.00418051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221656,0.00107703) , 
10, 0.688147, 1, 0, 0.505882,0.00266107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521943,-0.00206336) , 
14, 0.235293, 1, 0, 0.506894,0.000673737)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247984,0.00106028) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765813,-0.0049664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93304,-0.000637528) , 
0, 0.193725, 1, 0, 0.861898,-0.0273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79835,0.00297856) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99166,0.0120405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817795,-0.00256009) , 
6, 0.26533, 1, 0, 0.911672,-0.00638592) , 
4, 0.281741, 1, 0, 0.868111,0.0103577) , 
8, 0.00871972, 1, 0, 0.86587,-0.00322736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631589,-0.00484585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603423,-0.000256309) , 
7, 0.327704, 1, 0, 0.616946,-0.0438982) , 
8, 0.0342086, 1, 0, 0.794496,-0.0148889) , 
5, 0.00899437, 1, 0, 0.668671,-0.00746563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421514,0.00202902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127132,0.000295886) , 
16, 0.265989, 1, 0, 0.238454,0.0167006) , 
10, 0.679265, 1, 0, 0.504851,0.0017365)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982262,-0.00263608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647378,0.00219486) , 
11, 0.533015, 1, 0, 0.820346,0.00628297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608697,-0.00180621) , 
6, 0.327143, 1, 0, 0.727124,-0.00981178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384767,0.000491439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914542,0.00530993) , 
5, 0.0252082, 1, 0, 0.65583,0.0260563) , 
14, 0.0346162, 1, 0, 0.697201,0.00524276) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759866,-0.00389869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506642,-4.99194e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508564,0.00306034) , 
15, 0.183891, 1, 0, 0.507542,0.0170606) , 
6, 0.209548, 1, 0, 0.619452,0.00128028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398194,-0.00170974) , 
6, 0.464682, 1, 0, 0.52791,-0.0139785) , 
14, 0.0679021, 1, 0, 0.612186,-0.00440982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43457,0.00193323) , 
9, 0.062247, 1, 0, 0.584996,0.00126692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173438,-0.00157282) , 
10, 0.819852, 1, 0, 0.505486,-0.00388288)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750965,0.000864353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640817,-0.00441817) , 
9, 0.00988389, 1, 0, 0.691029,-0.0147139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648744,0.00324906) , 
9, 0.0180029, 1, 0, 0.675954,-0.000910307) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470294,-0.00186378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249784,-0.00365478) , 
6, 0.248404, 1, 0, 0.359614,-0.0333398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955686,0.00252677) , 
1, 0.361513, 1, 0, 0.473058,-0.0253116) , 
9, 0.0286925, 1, 0, 0.561276,-0.0147021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597233,-0.00103325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389451,-0.000825754) , 
14, 0.0787628, 1, 0, 0.459803,-0.0142388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487311,-0.000308485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374655,0.00199457) , 
15, 0.136427, 1, 0, 0.42638,0.018733) , 
11, 0.931403, 1, 0, 0.439169,0.00611676) , 
6, 0.372621, 1, 0, 0.502594,-0.00469699)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571415,-0.000297541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567795,0.00208432) , 
7, 0.122334, 1, 0, 0.569317,0.0195996) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397506,-0.00139003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213033,-0.00229528) , 
15, 0.109735, 1, 0, 0.280611,-0.0280216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261836,0.000361591) , 
11, 0.897038, 1, 0, 0.27202,-0.0121734) , 
7, 0.311967, 1, 0, 0.386863,0.0001002) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948,-0.00980067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936356,0.00272019) , 
10, 0.374594, 1, 0, 0.942977,-0.00606195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697081,-0.00352151) , 
6, 0.432775, 1, 0, 0.859364,-0.0259125) , 
12, 0.140101, 1, 0, 0.566464,-0.0097874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934702,0.0044887) , 
2, 0.055768, 1, 0, 0.610339,-0.00527581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222049,0.00140297) , 
10, 0.764174, 1, 0, 0.512814,0.00147939)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991171,0.00584478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612997,-0.00573483) , 
3, 0.193828, 1, 0, 0.847916,-0.0179278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922278,-0.00351718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731017,0.00361203) , 
6, 0.203764, 1, 0, 0.827226,0.0119914) , 
14, 0.082804, 1, 0, 0.839234,-0.00537262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67501,0.00424199) , 
13, 0.73073, 1, 0, 0.806329,0.00256979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842381,-0.00129072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357752,-0.00348166) , 
16, 0.115299, 1, 0, 0.605991,-0.0317322) , 
13, 0.828186, 1, 0, 0.745699,-0.00781139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441561,-0.00157146) , 
6, 0.577916, 1, 0, 0.641833,-0.0173132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484268,-0.00186322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167727,0.000933722) , 
17, 0.849065, 1, 0, 0.220924,0.00619665) , 
10, 0.688147, 1, 0, 0.490947,-0.00888551)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955134,0.00410441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447542,-0.000406716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246609,-0.00302474) , 
14, 0.0822828, 1, 0, 0.316279,-0.0351011) , 
17, 0.462852, 1, 0, 0.491917,-0.021363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45438,0.0040382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191299,0.00058708) , 
3, 0.605057, 1, 0, 0.233747,0.0188067) , 
11, 0.800399, 1, 0, 0.318511,0.00561796) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966346,-0.00308197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873597,0.0041246) , 
17, 0.371379, 1, 0, 0.928646,0.016888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832949,-0.00264116) , 
9, 0.039689, 1, 0, 0.900997,0.00398824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903647,-0.000735521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577363,-0.00357326) , 
13, 0.93384, 1, 0, 0.723581,-0.0466048) , 
8, 0.0204693, 1, 0, 0.835132,-0.014794) , 
5, 0.0269831, 1, 0, 0.502826,-0.00166443)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774103,0.00250884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811185,0.00362645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52797,-0.00128592) , 
6, 0.310518, 1, 0, 0.626075,-0.00966743) , 
9, 0.0173895, 1, 0, 0.67725,0.00321631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467163,0.00177364) , 
9, 0.042236, 1, 0, 0.588408,0.0147619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395938,-0.00104691) , 
14, 0.134139, 1, 0, 0.541648,0.00697641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674852,0.00372509) , 
14, 0.220682, 1, 0, 0.554228,0.0110007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947005,0.00791635) , 
0, 0.268909, 1, 0, 0.584768,0.0148671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901577,-0.00314594) , 
4, 0.514016, 1, 0, 0.62244,0.0111274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170062,-0.00157447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168062,-0.00033421) , 
16, 0.412172, 1, 0, 0.169064,-0.0122663) , 
16, 0.320702, 1, 0, 0.509243,0.00528655)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974382,-0.00445621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910303,0.00587881) , 
17, 0.448136, 1, 0, 0.94391,0.0197962) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958546,0.000260065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518357,-0.00335003) , 
17, 0.464553, 1, 0, 0.703615,-0.0428421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362702,2.05397e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288237,-0.00301187) , 
14, 0.030222, 1, 0, 0.320107,-0.0259624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290818,0.000668653) , 
14, 0.0770709, 1, 0, 0.306624,-0.00956049) , 
16, 0.119352, 1, 0, 0.424451,-0.0194385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927334,0.00485745) , 
12, 0.28826, 1, 0, 0.481315,-0.0133779) , 
10, 0.242984, 1, 0, 0.571396,-0.00691794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247827,0.000255867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845274,0.00371335) , 
2, 0.0240313, 1, 0, 0.42013,0.0169635) , 
9, 0.042236, 1, 0, 0.518538,0.00142705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324566,-0.00181559) , 
15, 0.32771, 1, 0, 0.492071,-0.00291756)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943107,-0.00549713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637936,-0.00473551) , 
17, 0.501843, 1, 0, 0.838079,-0.0360532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952949,0.00405864) , 
2, 0.0548723, 1, 0, 0.872541,-0.0200118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655353,-0.00226161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663707,0.0026956) , 
6, 0.239026, 1, 0, 0.660166,0.013767) , 
8, 0.0255839, 1, 0, 0.788456,-0.006638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197192,-0.00231054) , 
17, 1.0246, 1, 0, 0.579875,-0.0189647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570536,-0.00154641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615079,0.0021844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247729,0.000744314) , 
16, 0.125307, 1, 0, 0.364089,0.0213784) , 
6, 0.223375, 1, 0, 0.4067,0.0144716) , 
15, 0.154009, 1, 0, 0.499397,-0.00342609)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997735,0.0139574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961539,-0.014366) , 
8, 0.0133771, 1, 0, 0.979516,-0.0035231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547021,0.00269549) , 
16, 0.19021, 1, 0, 0.821363,0.00645592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858455,-0.00606778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938786,-0.00579663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810075,0.00565668) , 
3, 0.318883, 1, 0, 0.874555,0.0276047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344456,-0.00323273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192719,-0.000197212) , 
11, 0.819667, 1, 0, 0.244737,-0.0164863) , 
16, 0.159672, 1, 0, 0.399765,-0.0056334) , 
8, 0.0112411, 1, 0, 0.458794,-0.010602) , 
6, 0.173877, 1, 0, 0.549592,-0.00633017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422168,0.00156772) , 
6, 0.591184, 1, 0, 0.527106,0.00015012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386912,-0.00143358) , 
13, 1.22718, 1, 0, 0.499608,-0.00626224)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902115,-0.00960539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781735,0.003641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976287,0.00585065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901974,-0.00378509) , 
8, 0.0265741, 1, 0, 0.952183,0.00201288) , 
1, 0.197455, 1, 0, 0.90745,0.0132089) , 
16, 0.0550581, 1, 0, 0.906215,0.000597314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67402,-0.00510171) , 
16, 0.234003, 1, 0, 0.865536,-0.00743842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437728,0.003082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413766,0.000853452) , 
14, 0.103332, 1, 0, 0.422161,0.0214725) , 
10, 0.57633, 1, 0, 0.733138,0.00119477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137479,-0.00114234) , 
3, 0.644986, 1, 0, 0.535333,-0.00503744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333374,-0.00195337) , 
13, 1.10474, 1, 0, 0.505612,-0.00956689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446011,0.00058025) , 
13, 1.28053, 1, 0, 0.496014,-0.00587585)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239605,0.000549143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211822,-0.00205757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155375,-0.00033902) , 
11, 0.866207, 1, 0, 0.176968,-0.0153523) , 
9, 0.0326327, 1, 0, 0.19453,-0.00882627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584716,-0.00263635) , 
4, 0.109727, 1, 0, 0.242651,-0.0143664) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97138,0.000198604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890552,-0.00919717) , 
17, 0.309284, 1, 0, 0.933473,-0.0208209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964059,-0.00212751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985497,0.0101396) , 
15, 0.052156, 1, 0, 0.975588,0.0101969) , 
2, 0.03963, 1, 0, 0.954648,-0.00522549) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809326,0.00306344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786947,-0.000741011) , 
4, 0.288939, 1, 0, 0.796802,0.0164835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741651,0.00333912) , 
10, 0.564881, 1, 0, 0.776391,0.0368625) , 
17, 0.492927, 1, 0, 0.874287,0.0137484) , 
4, 0.174882, 1, 0, 0.506056,-0.002642)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920258,-0.00271472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900012,0.00570056) , 
10, 0.256464, 1, 0, 0.912338,0.0108489) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818786,-0.000709697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716471,-0.00412467) , 
10, 0.473223, 1, 0, 0.771673,-0.0269689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635868,0.00103988) , 
10, 0.607416, 1, 0, 0.72664,-0.0126969) , 
10, 0.344202, 1, 0, 0.800128,-0.00337886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685219,0.00363689) , 
8, 0.0196228, 1, 0, 0.774113,0.00607064) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152858,-0.000658595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213271,0.000474163) , 
6, 0.367175, 1, 0, 0.183598,0.000139363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618547,-0.00375545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763127,-0.00170844) , 
4, 0.292587, 1, 0, 0.686792,-0.0509808) , 
4, 0.15707, 1, 0, 0.293314,-0.0110068) , 
8, 0.0333595, 1, 0, 0.503688,-0.00353456)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982537,-0.00998944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752164,-0.00790828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514968,-0.00391848) , 
8, 0.0205412, 1, 0, 0.634384,-0.0747429) , 
3, 0.217847, 1, 0, 0.796162,-0.0425508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426785,-0.000350679) , 
6, 0.473457, 1, 0, 0.579987,-0.0222997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421991,0.00301771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125093,-0.000124317) , 
10, 0.585609, 1, 0, 0.170839,0.00558348) , 
7, 0.481004, 1, 0, 0.399356,-0.00998985) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933997,0.00398224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873258,-0.00252344) , 
14, 0.0403346, 1, 0, 0.909194,0.00522463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891962,0.00359557) , 
14, 0.0894423, 1, 0, 0.904247,0.0141754) , 
12, 0.205921, 1, 0, 0.491165,-0.00559563)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204611,-0.000883035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906794,0.00351303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978491,0.0062188) , 
5, 0.0453955, 1, 0, 0.942422,0.014677) , 
12, 0.0897681, 1, 0, 0.604687,0.00321048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923371,-0.00868367) , 
12, 0.254345, 1, 0, 0.680902,-0.00438057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500665,-0.00180784) , 
6, 0.412155, 1, 0, 0.610844,-0.0167723) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752444,-0.00112533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397797,-0.000140802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29987,0.00150346) , 
6, 0.235638, 1, 0, 0.331883,0.0160827) , 
16, 0.117546, 1, 0, 0.448387,0.00792393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311372,-0.000793213) , 
9, 0.0485585, 1, 0, 0.378859,-0.00309886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903667,0.00396641) , 
2, 0.041384, 1, 0, 0.43512,0.00091166) , 
14, 0.0683371, 1, 0, 0.505438,-0.0061648)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992209,0.0145483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989325,0.00616601) , 
5, 0.0449934, 1, 0, 0.990725,0.0115437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963345,-0.00449974) , 
8, 0.0190498, 1, 0, 0.981494,0.00515892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761281,-0.00394378) , 
3, 0.332543, 1, 0, 0.912997,-0.0114574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523068,0.00124398) , 
17, 0.611429, 1, 0, 0.788459,-0.00078624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13511,-0.00147219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673693,-0.00515762) , 
12, 0.098909, 1, 0, 0.239147,-0.0285817) , 
16, 0.230221, 1, 0, 0.546278,-0.0130407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855795,-0.00213177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306911,0.00150527) , 
11, 0.578024, 1, 0, 0.48773,0.0118304) , 
14, 0.146237, 1, 0, 0.532729,-0.00728506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419393,0.001731) , 
11, 1.17663, 1, 0, 0.507668,0.0026381)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997138,0.0156145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961142,-0.00481135) , 
10, 0.287612, 1, 0, 0.976828,0.00115152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517998,0.00262333) , 
3, 0.280216, 1, 0, 0.803311,0.0161723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461422,-0.0013899) , 
6, 0.371611, 1, 0, 0.692112,0.00325257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477003,0.00316777) , 
11, 0.866142, 1, 0, 0.637679,0.0158014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393776,0.000300027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102904,-0.00121134) , 
7, 0.645327, 1, 0, 0.163126,-0.0117165) , 
16, 0.308956, 1, 0, 0.448845,0.00485143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976211,0.00184874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787098,-0.00522458) , 
6, 0.289073, 1, 0, 0.890936,-0.0253436) , 
2, 0.0451316, 1, 0, 0.527076,-0.000491804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353506,-0.00124803) , 
6, 0.702036, 1, 0, 0.490745,-0.00648539)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958835,0.00194035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903317,-0.00826103) , 
9, 0.0189491, 1, 0, 0.929902,-0.0158054) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626321,0.00287812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121196,-0.000189507) , 
17, 0.85566, 1, 0, 0.252107,0.00847454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871514,-0.00313727) , 
5, 0.0390688, 1, 0, 0.339196,0.00419351) , 
10, 0.349904, 1, 0, 0.513572,-0.00171014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344949,-0.00137867) , 
6, 0.571482, 1, 0, 0.47536,-0.00737797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946391,0.00527277) , 
12, 0.333285, 1, 0, 0.506212,-0.00486985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623062,0.00261818) , 
14, 0.237657, 1, 0, 0.514184,-0.00242033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446125,0.00147325) , 
11, 1.29285, 1, 0, 0.504517,0.00267267)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99878,0.0167833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968977,-0.0268587) , 
3, 0.117457, 1, 0, 0.985684,-0.00491768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943573,0.00539295) , 
3, 0.187203, 1, 0, 0.970372,0.00752032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865474,-0.00412411) , 
11, 0.497869, 1, 0, 0.943152,-0.00141581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843884,0.00292066) , 
11, 0.619035, 1, 0, 0.921742,0.00575233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600861,-0.0035484) , 
17, 0.606138, 1, 0, 0.866092,-0.00561469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270963,0.00153802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158735,-0.000280555) , 
3, 0.644244, 1, 0, 0.186348,0.00282825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690411,0.00184128) , 
2, 0.0207758, 1, 0, 0.273462,0.00938245) , 
17, 0.736041, 1, 0, 0.500627,0.0036338)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891091,-0.0065857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997133,0.0154997) , 
2, 0.0338167, 1, 0, 0.951584,-0.00411404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551908,0.00463058) , 
11, 0.630111, 1, 0, 0.806655,0.015343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126109,0.00028278) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908505,-0.000725074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847172,-0.00619028) , 
16, 0.0574145, 1, 0, 0.873113,-0.030098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769594,0.00269107) , 
17, 0.58893, 1, 0, 0.837408,-0.00353261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438652,-0.00229557) , 
17, 0.85816, 1, 0, 0.666494,-0.0270253) , 
4, 0.0774229, 1, 0, 0.42364,-0.0130503) , 
13, 0.705165, 1, 0, 0.527873,-0.00532347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762705,0.00535888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257311,0.000368844) , 
8, 0.0187352, 1, 0, 0.399306,0.0220297) , 
15, 0.291608, 1, 0, 0.503841,-0.000210662)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36078,0.00246032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216565,-0.000628271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266723,0.00124489) , 
14, 0.122526, 1, 0, 0.238658,0.00277663) , 
9, 0.018936, 1, 0, 0.260025,0.00801382) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986124,-0.00387141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960755,0.00552541) , 
3, 0.20272, 1, 0, 0.977124,0.00484515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922798,-0.00897539) , 
7, 0.18964, 1, 0, 0.959914,-0.00526693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874058,0.0031399) , 
3, 0.380343, 1, 0, 0.943377,0.00215877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529923,-0.00197066) , 
3, 0.517452, 1, 0, 0.756419,-0.0198314) , 
5, 0.0179887, 1, 0, 0.504261,-0.00568665)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914241,0.00244352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485217,-0.00408346) , 
8, 0.021174, 1, 0, 0.675719,-0.0227839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690783,0.00433437) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186962,-0.000547819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63317,-0.00544142) , 
5, 0.0212559, 1, 0, 0.293517,-0.0295248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968365,0.000624008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827454,0.00235763) , 
11, 0.607328, 1, 0, 0.903337,0.0153277) , 
0, 0.143092, 1, 0, 0.503901,-0.014051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396043,0.000678618) , 
9, 0.0509335, 1, 0, 0.460761,-0.00398727) , 
15, 0.046073, 1, 0, 0.485003,0.00125719) , 
14, 0.0216682, 1, 0, 0.522418,-0.0034592) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692918,-0.00480763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232677,-0.0024511) , 
7, 0.216617, 1, 0, 0.394197,-0.0461223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400106,2.80472e-05) , 
15, 0.35322, 1, 0, 0.396407,-0.028706) , 
14, 0.138141, 1, 0, 0.49103,-0.00974796)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948278,0.000537718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488321,-0.00251047) , 
11, 0.718722, 1, 0, 0.720675,-0.0207467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940577,0.00343679) , 
2, 0.0487754, 1, 0, 0.792524,-0.00854571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259538,-0.00308474) , 
8, 0.0434808, 1, 0, 0.60878,-0.022911) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99711,0.0178091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507414,-0.00492147) , 
3, 0.176009, 1, 0, 0.746927,-0.0280071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706974,0.00141087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550995,0.00213059) , 
7, 0.0869617, 1, 0, 0.639632,0.0281869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.299489,-0.00163367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187166,0.000839728) , 
17, 1.02585, 1, 0, 0.228379,-0.00254395) , 
8, 0.0274429, 1, 0, 0.342784,0.00600495) , 
13, 0.610576, 1, 0, 0.414929,-6.66591e-05) , 
15, 0.0995238, 1, 0, 0.487743,-0.00864737)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751848,0.00328676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940762,-0.00313017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79721,-0.00125271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705986,0.00301736) , 
14, 0.0592094, 1, 0, 0.741068,0.0256486) , 
13, 0.702071, 1, 0, 0.812607,0.0128033) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464844,-0.0013409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431973,0.000730974) , 
14, 0.0735809, 1, 0, 0.449324,-0.00366785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307646,-0.00257965) , 
9, 0.035571, 1, 0, 0.379631,-0.0165702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312077,0.00240768) , 
6, 0.281526, 1, 0, 0.351056,0.00489932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311893,-0.00103088) , 
6, 0.445707, 1, 0, 0.333544,-0.00658816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823651,-0.00579781) , 
1, 0.405026, 1, 0, 0.37201,-0.0100479) , 
16, 0.0874643, 1, 0, 0.471205,-0.00490325) , 
9, 0.00815817, 1, 0, 0.495715,-0.00174819)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975441,-0.00080554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650153,-0.0024593) , 
3, 0.317241, 1, 0, 0.83441,-0.0193147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941049,-0.00178701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651376,0.00334947) , 
17, 0.621392, 1, 0, 0.834729,0.0203302) , 
9, 0.0183555, 1, 0, 0.834581,0.00193226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813853,0.0018339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221538,-0.000312965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210973,-0.00264236) , 
9, 0.0251165, 1, 0, 0.215063,-0.0291043) , 
11, 0.658828, 1, 0, 0.317203,-0.0220181) , 
10, 0.467855, 1, 0, 0.553652,-0.0110724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227097,0.000187002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849199,0.00288103) , 
4, 0.178828, 1, 0, 0.37823,0.0115331) , 
9, 0.0492754, 1, 0, 0.489704,-0.0028318)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671669,-0.00339191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994368,0.0102364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960341,-0.00695874) , 
16, 0.106754, 1, 0, 0.980001,0.00129737) , 
4, 0.18946, 1, 0, 0.870586,-0.0131489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783733,0.00287795) , 
13, 0.690482, 1, 0, 0.848325,-0.00405012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397763,-0.00276108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245582,-0.00401699) , 
16, 0.346789, 1, 0, 0.318771,-0.042131) , 
16, 0.247489, 1, 0, 0.674341,-0.0165615) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303632,0.000635794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859121,0.00146543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63455,-0.00397608) , 
8, 0.0204693, 1, 0, 0.776347,-0.0180617) , 
12, 0.127131, 1, 0, 0.488759,0.000810614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221711,0.00209074) , 
10, 0.752977, 1, 0, 0.393653,0.0116999) , 
13, 0.800334, 1, 0, 0.501974,0.000793554)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96844,-0.0101898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457024,-0.00286968) , 
3, 0.250539, 1, 0, 0.620702,-0.0461135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390736,-0.000710338) , 
7, 0.384352, 1, 0, 0.542255,-0.0342689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330299,0.00125979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137421,-0.00115049) , 
11, 0.807708, 1, 0, 0.182099,-0.00975358) , 
10, 0.60746, 1, 0, 0.330257,-0.0198384) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924618,-0.00130194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929723,0.00573522) , 
16, 0.0478517, 1, 0, 0.927216,0.0217004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79816,-0.00471469) , 
16, 0.0697272, 1, 0, 0.883184,-0.00387005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889879,0.00442676) , 
16, 0.0935825, 1, 0, 0.885504,0.0119542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730133,-0.00217466) , 
7, 0.265203, 1, 0, 0.854746,0.00290279) , 
2, 0.0340804, 1, 0, 0.484951,-0.0131311)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.179644,-0.00179233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855072,0.00426195) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995938,0.0080163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971381,0.00655599) , 
3, 0.164249, 1, 0, 0.984516,0.0113756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86213,-0.00289225) , 
17, 0.402601, 1, 0, 0.941139,-0.000661678) , 
12, 0.138413, 1, 0, 0.922006,0.00748128) , 
0, 0.0866356, 1, 0, 0.691811,-0.00211392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523455,0.00335837) , 
14, 0.0972528, 1, 0, 0.653212,0.00743219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686117,0.000277916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418238,-0.00315864) , 
9, 0.0367646, 1, 0, 0.503314,-0.0290017) , 
14, 0.137776, 1, 0, 0.612728,-0.00240781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576318,0.00257099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197761,0.000393726) , 
17, 0.997773, 1, 0, 0.297948,0.016304) , 
11, 0.959394, 1, 0, 0.520641,0.00306623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39977,-0.000945932) , 
13, 1.28053, 1, 0, 0.501001,-0.000977283)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991801,0.0106784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927359,-0.00594398) , 
8, 0.01753, 1, 0, 0.967372,0.00444153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761598,-0.00370216) , 
11, 0.534316, 1, 0, 0.901928,-0.00657695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542319,0.00331786) , 
11, 0.680671, 1, 0, 0.820487,0.00278228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844979,0.000752623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335418,-0.00284901) , 
16, 0.105971, 1, 0, 0.524633,-0.0244101) , 
15, 0.199048, 1, 0, 0.718432,-0.00659777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284616,-0.00272052) , 
11, 0.806909, 1, 0, 0.623688,-0.0138902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55245,-0.00140423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313847,0.00221354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250774,0.000320813) , 
14, 0.0868582, 1, 0, 0.277389,0.0192358) , 
10, 0.43998, 1, 0, 0.333068,0.0089954) , 
11, 0.914221, 1, 0, 0.49393,-0.00367208)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689556,-0.000538061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485351,-0.00311641) , 
8, 0.0241737, 1, 0, 0.578804,-0.0346713) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988184,0.00778306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951787,-0.00239487) , 
10, 0.377928, 1, 0, 0.975575,0.00501686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852406,-0.00287325) , 
17, 0.457794, 1, 0, 0.94283,-0.00280012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769385,0.00331097) , 
17, 0.686702, 1, 0, 0.903482,0.0123749) , 
2, 0.0216876, 1, 0, 0.806948,-0.00161291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321004,0.00219659) , 
7, 0.491032, 1, 0, 0.709353,0.00518703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392041,0.000963443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902063,0.00597497) , 
2, 0.0247889, 1, 0, 0.56734,0.032815) , 
9, 0.0470809, 1, 0, 0.669694,0.0129025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109943,0.000353878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433572,-0.00105353) , 
2, 0.0103879, 1, 0, 0.228015,-0.00549628) , 
10, 0.688455, 1, 0, 0.515017,0.00645924)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962015,-0.0033282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997054,0.0148243) , 
5, 0.0446929, 1, 0, 0.979973,0.00433632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479347,0.00591173) , 
17, 0.594756, 1, 0, 0.819696,0.0239345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582898,-0.00298647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496302,0.00150686) , 
9, 0.0360245, 1, 0, 0.535632,-0.00205013) , 
14, 0.0460468, 1, 0, 0.655843,0.00894609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336232,-0.00131039) , 
13, 0.981186, 1, 0, 0.579012,0.00242323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449753,0.000954188) , 
6, 0.526639, 1, 0, 0.535144,0.00823456) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789484,-0.00121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562218,-0.0039947) , 
16, 0.0764898, 1, 0, 0.674695,-0.0384659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230803,-0.000234266) , 
7, 0.229542, 1, 0, 0.404578,-0.0173841) , 
14, 0.138141, 1, 0, 0.501172,0.00156881)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953009,-0.0160184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928843,0.00233523) , 
11, 0.416275, 1, 0, 0.939683,-0.00421914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529014,-0.00309294) , 
17, 0.503228, 1, 0, 0.768516,-0.0232743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481974,-0.00125528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301926,0.00180623) , 
15, 0.118656, 1, 0, 0.373965,0.0104974) , 
8, 0.0348238, 1, 0, 0.596739,-0.00857103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64292,0.00232347) , 
14, 0.187927, 1, 0, 0.603086,-0.00365419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468842,0.00193124) , 
11, 1.0427, 1, 0, 0.574162,0.00533328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180367,-0.00106036) , 
17, 1.17246, 1, 0, 0.461429,-0.00159497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859441,-0.00468274) , 
12, 0.280202, 1, 0, 0.499083,-0.00484442)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841939,0.00223724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838694,-0.00463171) , 
9, 0.00822661, 1, 0, 0.840423,-0.0047603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798051,0.00330869) , 
14, 0.0265072, 1, 0, 0.822819,0.00948607) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950619,-0.00747558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850865,0.00272373) , 
17, 0.295839, 1, 0, 0.904695,0.00489993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83507,-0.0040161) , 
7, 0.139528, 1, 0, 0.880524,-0.00752557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325431,-0.00194618) , 
17, 0.65617, 1, 0, 0.606519,-0.0233175) , 
15, 0.0751305, 1, 0, 0.688744,-0.0108474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160257,5.44645e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593306,0.00205399) , 
5, 0.0181055, 1, 0, 0.249991,0.00914625) , 
8, 0.0434573, 1, 0, 0.513099,-0.00284343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394533,0.00137228) , 
15, 0.348333, 1, 0, 0.50015,-0.000236902)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989962,0.00606599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870141,-0.00342214) , 
6, 0.160434, 1, 0, 0.930864,-0.00850774) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546506,0.00378207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409121,-7.29442e-05) , 
6, 0.188163, 1, 0, 0.468959,0.0141549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419581,0.00469162) , 
6, 0.282247, 1, 0, 0.451732,0.0305907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362669,0.000299115) , 
6, 0.378845, 1, 0, 0.413092,0.0194239) , 
11, 0.468235, 1, 0, 0.526564,0.0133026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419116,-0.00121247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182553,0.000136255) , 
10, 0.60746, 1, 0, 0.267125,-0.00856301) , 
11, 0.95525, 1, 0, 0.41508,0.00390665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995308,0.00307713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966704,0.00738024) , 
3, 0.17296, 1, 0, 0.980272,0.0103002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81618,0.00350423) , 
3, 0.474637, 1, 0, 0.91935,0.0278824) , 
2, 0.0420137, 1, 0, 0.501495,0.00801531)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998366,0.0218853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729077,-0.00227288) , 
3, 0.226446, 1, 0, 0.846375,-0.0135632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813684,0.00312087) , 
14, 0.103606, 1, 0, 0.833964,0.00367518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763399,0.00133281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905714,-0.00135313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407067,-0.00331891) , 
17, 0.525832, 1, 0, 0.56381,-0.0533333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292649,-7.66557e-05) , 
16, 0.223462, 1, 0, 0.478724,-0.0369371) , 
15, 0.052037, 1, 0, 0.55268,-0.0239108) , 
8, 0.0173781, 1, 0, 0.672615,-0.0121486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165925,-0.000289228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749133,0.00360188) , 
5, 0.0209051, 1, 0, 0.25082,0.0058678) , 
8, 0.0402857, 1, 0, 0.495737,-0.00459348)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836054,0.00378899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489262,-0.00308357) , 
13, 0.816116, 1, 0, 0.663232,-0.0123139) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969755,0.00517603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487894,-0.00150827) , 
10, 0.344202, 1, 0, 0.746137,0.000300944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451691,0.00218724) , 
13, 0.840123, 1, 0, 0.599487,0.0160074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478484,0.00361308) , 
14, 0.0775078, 1, 0, 0.558874,0.0252351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823954,0.00253224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260601,-0.000389791) , 
16, 0.119352, 1, 0, 0.422765,0.00391747) , 
14, 0.108114, 1, 0, 0.497027,0.0155486) , 
9, 0.0175536, 1, 0, 0.53513,0.00916097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350215,-0.00109139) , 
6, 0.747891, 1, 0, 0.500806,0.00270492)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194186,-0.000762439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347093,0.0019405) , 
12, 0.0551149, 1, 0, 0.277828,0.0134873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118533,-0.000761012) , 
17, 1.11384, 1, 0, 0.199603,0.0011245) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991873,0.00375606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920347,-0.018836) , 
11, 0.443288, 1, 0, 0.956557,-0.0217645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955891,0.00295421) , 
10, 0.361405, 1, 0, 0.956319,-0.01028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910203,0.00593851) , 
11, 0.613648, 1, 0, 0.945717,0.00329541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814367,-0.00447904) , 
15, 0.212125, 1, 0, 0.918716,-0.00640781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554953,-0.00537997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639623,-0.000996351) , 
6, 0.507675, 1, 0, 0.617005,-0.0455142) , 
11, 0.822197, 1, 0, 0.801297,-0.0216272) , 
4, 0.108127, 1, 0, 0.493711,-0.00999652)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982357,0.000192359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91035,-0.00857619) , 
11, 0.475778, 1, 0, 0.952595,-0.0129405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934179,0.00266714) , 
9, 0.0352659, 1, 0, 0.945641,-0.00355277) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795597,0.00246966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69533,0.00441876) , 
15, 0.0823601, 1, 0, 0.745745,0.0583058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549684,-0.000112034) , 
8, 0.0370593, 1, 0, 0.66938,0.0347345) , 
11, 0.636211, 1, 0, 0.804368,0.0160264) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454492,-0.0021334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172472,-0.0014458) , 
16, 0.120382, 1, 0, 0.247232,-0.0283326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856474,0.00110313) , 
12, 0.175126, 1, 0, 0.385296,-0.0191657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171821,0.000431764) , 
8, 0.0528639, 1, 0, 0.284025,-0.00686116) , 
10, 0.517672, 1, 0, 0.502175,0.00273429)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365458,0.0024964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131678,-0.000174274) , 
11, 0.745782, 1, 0, 0.189701,0.00654358) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976369,-0.00239395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982781,0.00851961) , 
10, 0.300935, 1, 0, 0.978894,0.00424131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912507,-0.0161157) , 
14, 0.106815, 1, 0, 0.960365,-0.0109297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882596,0.00253534) , 
17, 0.486818, 1, 0, 0.940533,-0.0025741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650916,-0.00272409) , 
10, 0.59031, 1, 0, 0.890679,-0.00909994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425781,-0.00475966) , 
8, 0.0441978, 1, 0, 0.809379,-0.0230454) , 
2, 0.0131213, 1, 0, 0.546323,-0.0104848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508426,-0.000258205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299933,0.00210298) , 
10, 0.646463, 1, 0, 0.406561,0.0147058) , 
13, 1.01763, 1, 0, 0.496368,-0.00148089)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989764,0.002355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979704,0.00540029) , 
10, 0.317312, 1, 0, 0.983741,0.00798573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888526,-0.00533206) , 
11, 0.4707, 1, 0, 0.957215,-0.00247843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766382,0.00400673) , 
17, 0.447304, 1, 0, 0.911519,0.0114757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21681,-0.0025716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879798,0.000641143) , 
4, 0.0959935, 1, 0, 0.510968,-0.0198331) , 
7, 0.22084, 1, 0, 0.739025,-0.0020071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262033,0.00133627) , 
10, 0.674412, 1, 0, 0.586971,0.00470614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479647,-0.00319912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308959,-0.000361344) , 
3, 0.645319, 1, 0, 0.332959,-0.013661) , 
11, 1.0005, 1, 0, 0.49576,-0.00188916)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941666,0.00477145) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490298,-0.00319582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353537,-0.00110571) , 
16, 0.125999, 1, 0, 0.416658,-0.0381204) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928761,0.00492465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861496,-0.00296373) , 
14, 0.110907, 1, 0, 0.901065,0.00992813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873884,-0.00768038) , 
4, 0.479095, 1, 0, 0.893482,-0.00573479) , 
4, 0.178346, 1, 0, 0.717646,-0.0176775) , 
15, 0.0360446, 1, 0, 0.765631,-0.00934217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34868,0.00305252) , 
16, 0.306004, 1, 0, 0.697901,-0.00207795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173624,-0.00198496) , 
8, 0.0487115, 1, 0, 0.511648,-0.0123223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450349,0.0013368) , 
11, 1.27797, 1, 0, 0.502053,-0.0055917)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982952,0.00173082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908034,-0.00855421) , 
11, 0.469666, 1, 0, 0.956414,-0.0105448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861179,0.00429037) , 
17, 0.47371, 1, 0, 0.929343,0.000588281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444207,-0.00338969) , 
8, 0.0404587, 1, 0, 0.834346,-0.00821353) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755365,0.00155172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939752,-0.00260704) , 
1, 0.283599, 1, 0, 0.848122,0.00247678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514926,0.0041326) , 
11, 0.671871, 1, 0, 0.704412,0.0292166) , 
9, 0.035199, 1, 0, 0.775539,0.00872699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424059,-0.00121152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157827,2.99282e-05) , 
7, 0.389606, 1, 0, 0.259073,-0.010443) , 
3, 0.620136, 1, 0, 0.499491,-0.00151927)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998485,0.0188808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975718,-0.00700035) , 
10, 0.231119, 1, 0, 0.987189,0.00302032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628393,0.00619331) , 
3, 0.247975, 1, 0, 0.863065,0.0211917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401181,-0.00232153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97043,0.0064791) , 
12, 0.135768, 1, 0, 0.690331,-0.00276567) , 
9, 0.0315965, 1, 0, 0.786636,0.0105914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152433,-0.00133039) , 
11, 0.85384, 1, 0, 0.58603,0.00156354) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583946,-0.00541576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336763,-0.00225359) , 
15, 0.0907853, 1, 0, 0.43369,-0.0462896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479894,-0.000494604) , 
6, 0.552557, 1, 0, 0.454377,-0.0296214) , 
6, 0.365979, 1, 0, 0.535578,-0.0103872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659778,-0.00131122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422317,0.00194168) , 
6, 0.23421, 1, 0, 0.496463,0.0184299) , 
14, 0.154998, 1, 0, 0.52787,-0.0047087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393996,0.0011468) , 
6, 0.74664, 1, 0, 0.503824,0.000845237)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953657,-0.00678657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98057,0.00964018) , 
14, 0.034444, 1, 0, 0.967207,0.00244849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83469,-0.00754885) , 
8, 0.0296529, 1, 0, 0.931633,-0.0101885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304299,0.00203178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777967,-0.000575883) , 
4, 0.30014, 1, 0, 0.405252,0.0258811) , 
3, 0.432342, 1, 0, 0.625705,0.0107748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571323,0.000634702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.159935,-0.00117001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699792,-0.00352895) , 
4, 0.12887, 1, 0, 0.342516,-0.0327074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371704,-0.000137936) , 
14, 0.151507, 1, 0, 0.352012,-0.0227877) , 
14, 0.0562734, 1, 0, 0.383453,-0.0183245) , 
9, 0.035199, 1, 0, 0.493913,-0.0050561)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99863,0.0204246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98043,-0.014432) , 
10, 0.255347, 1, 0, 0.98864,-0.000646601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763094,-0.00628409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344399,-3.42248e-05) , 
11, 0.638692, 1, 0, 0.57823,-0.0257661) , 
3, 0.166369, 1, 0, 0.792673,-0.0126409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569232,0.00145955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482703,0.00460708) , 
6, 0.262201, 1, 0, 0.534989,0.025288) , 
13, 0.720478, 1, 0, 0.698269,0.00125455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431221,-0.0018174) , 
6, 0.393345, 1, 0, 0.627279,-0.00654247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462264,0.00223729) , 
13, 1.02073, 1, 0, 0.60099,0.000108842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239619,-0.000538404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64123,-0.00279936) , 
0, 0.142833, 1, 0, 0.318781,-0.0200127) , 
11, 0.993771, 1, 0, 0.494954,-0.00745158)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999519,0.0188027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997953,0.017025) , 
3, 0.126297, 1, 0, 0.998771,0.00823752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96723,-0.00601796) , 
11, 0.479856, 1, 0, 0.988158,0.00282526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812067,-0.0052068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357632,-0.000192495) , 
8, 0.0324879, 1, 0, 0.571107,-0.0203497) , 
3, 0.230044, 1, 0, 0.778282,-0.00883729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589529,0.00232978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756921,-0.00171341) , 
5, 0.0383036, 1, 0, 0.647573,0.0202177) , 
6, 0.418519, 1, 0, 0.73384,0.00104152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192749,-0.00126114) , 
17, 1.04321, 1, 0, 0.53574,-0.00738248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38414,0.0020063) , 
15, 0.278562, 1, 0, 0.520134,-0.00343673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324131,-0.00226053) , 
15, 0.364278, 1, 0, 0.499394,-0.00709262)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91491,0.00133427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719339,-0.00521376) , 
13, 0.64788, 1, 0, 0.827329,-0.0145537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746888,0.00357591) , 
15, 0.128062, 1, 0, 0.806648,-0.00277646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843683,0.00425022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455781,0.00128206) , 
10, 0.433491, 1, 0, 0.62616,0.0304038) , 
13, 0.826051, 1, 0, 0.74448,0.00865236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690573,-0.00242153) , 
14, 0.134491, 1, 0, 0.736385,0.00319387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479513,-0.00112553) , 
13, 1.17027, 1, 0, 0.675966,-0.00389586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262091,0.00352911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214002,0.000373211) , 
15, 0.153728, 1, 0, 0.234973,0.0239257) , 
10, 0.662795, 1, 0, 0.524765,0.00564316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348811,-0.00155066) , 
15, 0.326675, 1, 0, 0.501188,0.00146307)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953976,-0.00735891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990696,0.0124853) , 
15, 0.0426369, 1, 0, 0.974849,0.0069633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705964,-0.00217729) , 
13, 0.779933, 1, 0, 0.886713,-0.00607844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698123,-0.00461277) , 
10, 0.324812, 1, 0, 0.84388,-0.0195384) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913396,-0.00547593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620434,0.00229072) , 
6, 0.324271, 1, 0, 0.730449,0.0182568) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453155,-0.000919198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145332,0.00109061) , 
7, 0.61701, 1, 0, 0.225584,0.00749496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29127,-0.00123194) , 
6, 0.461964, 1, 0, 0.253591,-0.0059643) , 
8, 0.0203088, 1, 0, 0.381412,0.000528107) , 
10, 0.376489, 1, 0, 0.505112,-0.00483926)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978724,0.00425517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419271,-0.00183508) , 
3, 0.291829, 1, 0, 0.530326,-0.0326511) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949908,0.00318797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863608,-0.00351627) , 
16, 0.067913, 1, 0, 0.897699,-0.0110424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90661,0.00232986) , 
15, 0.131152, 1, 0, 0.900226,-0.00259167) , 
4, 0.313355, 1, 0, 0.700872,-0.0187919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714335,-0.00513679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568358,0.00358109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146779,-0.000123429) , 
10, 0.578489, 1, 0, 0.229398,0.00946438) , 
13, 0.53196, 1, 0, 0.285465,0.00412485) , 
16, 0.17318, 1, 0, 0.487187,-0.00700354)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397584,-0.00225607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119195,0.000123646) , 
13, 0.602393, 1, 0, 0.166819,-0.00374131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500345,-0.00204377) , 
5, 0.0120952, 1, 0, 0.261986,-0.0123021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938044,0.00426058) , 
4, 0.186052, 1, 0, 0.385339,-0.00587534) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926254,-0.0117817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976307,-0.00182418) , 
5, 0.0421421, 1, 0, 0.95884,-0.0132797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732936,-0.00550271) , 
3, 0.368307, 1, 0, 0.895948,-0.0304988) , 
5, 0.0342825, 1, 0, 0.529428,-0.0128239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685009,0.00224861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317168,0.000120949) , 
3, 0.857756, 1, 0, 0.42187,0.0134594) , 
13, 1.09722, 1, 0, 0.498081,-0.00516386)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982376,0.00407889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729637,-0.00488305) , 
11, 0.563823, 1, 0, 0.90486,-0.00648514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282412,0.00246083) , 
10, 0.57367, 1, 0, 0.705092,0.00493732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537907,-0.0031286) , 
6, 0.356929, 1, 0, 0.676577,-0.00201795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368103,-0.00274179) , 
13, 0.988409, 1, 0, 0.602115,-0.0107821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767584,-0.00182716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28185,0.00249555) , 
11, 0.616566, 1, 0, 0.435824,0.0195415) , 
9, 0.042236, 1, 0, 0.543267,-5.10845e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340834,-0.00191728) , 
6, 0.587209, 1, 0, 0.502717,-0.00742016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440356,0.00108424) , 
11, 1.29285, 1, 0, 0.492678,-0.00209394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650324,0.00372631) , 
14, 0.250692, 1, 0, 0.50071,0.000387431)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86984,-0.00240858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876291,0.00187496) , 
9, 0.0162563, 1, 0, 0.872832,-0.00227559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468504,-0.0012474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417869,-0.00490244) , 
14, 0.0114861, 1, 0, 0.442797,-0.0417477) , 
7, 0.263811, 1, 0, 0.663009,-0.0215349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798973,-0.000257639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495372,0.00169245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436803,0.0023044) , 
14, 0.0520293, 1, 0, 0.464589,0.0261612) , 
16, 0.118024, 1, 0, 0.600219,0.0144024) , 
14, 0.0344614, 1, 0, 0.634184,-0.00503712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585942,0.000104234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399975,-0.00298276) , 
6, 0.258928, 1, 0, 0.459997,-0.03428) , 
15, 0.103394, 1, 0, 0.57795,-0.0144779) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641165,0.00427117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484003,0.00176084) , 
16, 0.114903, 1, 0, 0.567694,0.048996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802462,-0.00112457) , 
5, 0.0298292, 1, 0, 0.651302,0.0263222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16922,-3.81667e-05) , 
7, 0.366462, 1, 0, 0.401869,0.0124008) , 
15, 0.170105, 1, 0, 0.503862,-0.00316839)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419407,0.000450731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486399,0.00362656) , 
14, 0.086845, 1, 0, 0.451269,0.0360304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140179,2.04659e-05) , 
10, 0.61129, 1, 0, 0.246125,0.0124695) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900556,-0.00347558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950671,0.00537033) , 
14, 0.0238677, 1, 0, 0.927203,0.00491878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749148,-0.00272686) , 
10, 0.329637, 1, 0, 0.867597,-0.00992769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943467,0.00362381) , 
12, 0.250146, 1, 0, 0.888533,-0.00198706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936123,0.00434173) , 
14, 0.101458, 1, 0, 0.897279,0.00355849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566112,-0.00392047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689961,-0.00101809) , 
14, 0.0992216, 1, 0, 0.627585,-0.0546028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846065,-0.00025402) , 
12, 0.201682, 1, 0, 0.718362,-0.0329964) , 
10, 0.466995, 1, 0, 0.829447,-0.0103004) , 
4, 0.143894, 1, 0, 0.508292,0.00223582)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996593,0.00872922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959418,-0.0273998) , 
17, 0.27741, 1, 0, 0.978201,-0.0109051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958935,0.00445538) , 
3, 0.162554, 1, 0, 0.971527,-0.00289502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668177,-0.00342864) , 
3, 0.296085, 1, 0, 0.908532,-0.0104345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189527,0.000824122) , 
3, 0.457591, 1, 0, 0.573476,-0.000126427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472852,-0.00299737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667197,-0.000666926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501383,0.00189449) , 
17, 0.806379, 1, 0, 0.570775,0.0168537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248697,-0.00144234) , 
17, 1.05423, 1, 0, 0.390163,-0.00948867) , 
11, 0.830949, 1, 0, 0.411618,-0.0196818) , 
6, 0.373945, 1, 0, 0.49425,-0.00969833)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57457,-0.00298715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224354,0.000750561) , 
13, 0.709648, 1, 0, 0.30983,0.00178441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639514,-0.0049339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898547,0.00195068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87508,-0.00497487) , 
12, 0.18897, 1, 0, 0.887386,-0.0078564) , 
12, 0.123195, 1, 0, 0.82409,-0.0281274) , 
5, 0.0300529, 1, 0, 0.519078,-0.0103865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92119,0.00264122) , 
12, 0.269043, 1, 0, 0.576701,-0.00646962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461081,0.00154052) , 
9, 0.0512481, 1, 0, 0.551874,5.91383e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343063,-0.00204328) , 
15, 0.256437, 1, 0, 0.519307,-0.00489746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416871,0.00194557) , 
15, 0.37368, 1, 0, 0.509984,-0.00164767)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886061,0.00441348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956395,-0.00638965) , 
0, 0.15803, 1, 0, 0.927433,0.00347149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209589,-0.00103614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780905,-0.00455231) , 
5, 0.0159883, 1, 0, 0.398123,-0.0235612) , 
8, 0.0265633, 1, 0, 0.621712,-0.0121421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20067,-5.13358e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772774,0.00048599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708654,0.00284923) , 
10, 0.511363, 1, 0, 0.740448,0.0335434) , 
2, 0.0215451, 1, 0, 0.336045,0.00774877) , 
13, 0.804268, 1, 0, 0.447938,-4.22982e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965396,-0.00315058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733736,-0.00489282) , 
6, 0.302428, 1, 0, 0.851363,-0.0374981) , 
5, 0.0509681, 1, 0, 0.499583,-0.00483722)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.380775,0.000547611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983165,0.00254767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783176,-0.00612788) , 
6, 0.192338, 1, 0, 0.864522,-0.0387149) , 
4, 0.24418, 1, 0, 0.633244,-0.0163799) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793405,0.00473967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979158,0.00161727) , 
1, 0.2889, 1, 0, 0.900656,0.0135648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603674,-0.00183235) , 
6, 0.253239, 1, 0, 0.766602,-0.00325415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620082,0.00269026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225831,-4.08845e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225415,0.000638938) , 
9, 0.0490594, 1, 0, 0.225606,0.00591503) , 
17, 0.883874, 1, 0, 0.318315,0.0155433) , 
11, 0.705193, 1, 0, 0.460807,0.00956834) , 
9, 0.019555, 1, 0, 0.50893,0.00232673)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838909,-0.00440717) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811398,-0.00512353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967475,-0.000107146) , 
2, 0.0318839, 1, 0, 0.902313,-0.0149031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357367,0.00340848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809397,0.000708847) , 
5, 0.0166619, 1, 0, 0.589169,0.0269632) , 
11, 0.576366, 1, 0, 0.760044,0.00411778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453928,-0.00300345) , 
11, 0.871249, 1, 0, 0.708866,-0.00418547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605461,0.0027855) , 
6, 0.557483, 1, 0, 0.686537,0.00863603) , 
16, 0.0540007, 1, 0, 0.711902,0.0012927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102602,-0.000534824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353537,-0.00128405) , 
12, 0.0683052, 1, 0, 0.195615,-0.0158219) , 
17, 0.9989, 1, 0, 0.494742,-0.00590602)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989827,0.00857394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927881,-0.00310527) , 
15, 0.141416, 1, 0, 0.964234,0.00128833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690481,-0.004218) , 
11, 0.567563, 1, 0, 0.886438,-0.0142782) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718686,-0.000187459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36318,-0.00318028) , 
8, 0.0408326, 1, 0, 0.570268,-0.0190468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960245,0.00558834) , 
12, 0.185487, 1, 0, 0.681109,-0.00794435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479369,0.00260378) , 
9, 0.0421287, 1, 0, 0.602117,0.0104227) , 
8, 0.0179087, 1, 0, 0.714348,0.000672407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545098,0.00149889) , 
13, 1.10325, 1, 0, 0.679699,0.00655446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193185,-0.000464414) , 
17, 1.05521, 1, 0, 0.500189,0.00123964)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907531,0.00743203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643004,-0.00221187) , 
6, 0.118378, 1, 0, 0.748296,-0.00406182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791551,0.00157683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44542,0.00379648) , 
10, 0.407725, 1, 0, 0.602608,0.0400115) , 
6, 0.208182, 1, 0, 0.657376,0.0234432) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614909,-0.00619223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647262,-0.000944177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599208,0.00179653) , 
14, 0.0700011, 1, 0, 0.617434,0.0120564) , 
9, 0.0354459, 1, 0, 0.616821,-0.00701174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420816,-0.00266649) , 
15, 0.26847, 1, 0, 0.555232,-0.0194287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21443,0.0006769) , 
8, 0.0483428, 1, 0, 0.415044,-0.00698854) , 
9, 0.0285536, 1, 0, 0.496908,0.00329191)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139669,-0.00142639) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966037,-0.0283937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827478,0.00324794) , 
3, 0.220125, 1, 0, 0.895052,0.0097271) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687069,0.000900938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444426,0.000298837) , 
6, 0.216258, 1, 0, 0.561467,0.00518845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483171,-0.00260883) , 
6, 0.393917, 1, 0, 0.528887,-0.0178776) , 
10, 0.394297, 1, 0, 0.712119,-0.00406394) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787855,0.00155974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447111,0.00238353) , 
13, 0.875577, 1, 0, 0.574629,0.0328895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416864,-0.00025241) , 
15, 0.22988, 1, 0, 0.507796,0.0170428) , 
9, 0.0351967, 1, 0, 0.601699,0.00734255) , 
12, 0.0530965, 1, 0, 0.498407,0.00149299)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487499,0.000901229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373547,-0.00341129) , 
15, 0.223879, 1, 0, 0.426712,-0.0242779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113208,0.000205639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272804,0.00127252) , 
12, 0.0613269, 1, 0, 0.182246,0.0129928) , 
13, 0.687761, 1, 0, 0.230771,0.00559492) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993407,0.0062719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953581,-0.0100404) , 
13, 0.658389, 1, 0, 0.97319,-0.00737593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725403,-0.00350906) , 
3, 0.311161, 1, 0, 0.854828,-0.0310506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902088,0.00100062) , 
16, 0.105221, 1, 0, 0.868705,-0.0198785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878967,0.0039189) , 
8, 0.0233941, 1, 0, 0.870595,-0.00934453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547911,-0.00315232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698519,-0.00181945) , 
2, 0.0339708, 1, 0, 0.614615,-0.0528412) , 
8, 0.0361552, 1, 0, 0.802587,-0.0209006) , 
12, 0.0960868, 1, 0, 0.494398,-0.00662046)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626666,-0.00230933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256478,0.00254421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140801,-0.000149681) , 
17, 1.12857, 1, 0, 0.197114,0.0196627) , 
17, 0.695851, 1, 0, 0.249037,0.01286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93036,0.00656529) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838941,-0.00626813) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964628,-0.000205167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768278,0.00269545) , 
17, 0.508146, 1, 0, 0.871208,0.0212813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8748,-0.00346736) , 
12, 0.250638, 1, 0, 0.872297,0.00678673) , 
9, 0.0179796, 1, 0, 0.862303,-0.00957934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736825,-0.00304089) , 
9, 0.0442375, 1, 0, 0.823772,-0.020834) , 
9, 0.00703934, 1, 0, 0.838314,-0.0114702) , 
4, 0.154846, 1, 0, 0.506403,0.00223377)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970699,0.00026863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698878,-0.00400178) , 
11, 0.596167, 1, 0, 0.855349,-0.0250883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523479,0.000318882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410481,0.00296012) , 
14, 0.0361096, 1, 0, 0.475516,0.0215348) , 
8, 0.0229292, 1, 0, 0.645743,0.000640004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250201,0.0011331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994102,0.0129228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844173,0.00557594) , 
3, 0.292666, 1, 0, 0.913357,0.0501614) , 
12, 0.1029, 1, 0, 0.591061,0.0339378) , 
9, 0.0213513, 1, 0, 0.621497,0.0154044) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520395,0.00370323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504531,0.000469993) , 
15, 0.252498, 1, 0, 0.510877,0.0226815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194773,-0.000661987) , 
11, 0.783255, 1, 0, 0.295672,-0.000624548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808838,-0.00257275) , 
0, 0.154881, 1, 0, 0.390367,-0.00601756) , 
15, 0.141664, 1, 0, 0.50464,0.00457365)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87745,0.00342963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978657,0.00745077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601134,-0.00289989) , 
11, 0.68521, 1, 0, 0.796674,-0.0193022) , 
9, 0.0140429, 1, 0, 0.828569,-0.000322841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311471,0.0028337) , 
10, 0.474434, 1, 0, 0.641255,0.0144831) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385342,0.000266825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701897,0.00426144) , 
5, 0.0165207, 1, 0, 0.510846,0.0330631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815134,-0.00381452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834308,0.00158493) , 
15, 0.206339, 1, 0, 0.822135,-0.0172981) , 
5, 0.0263309, 1, 0, 0.670289,0.00726798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130375,-0.00156062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730891,0.000948168) , 
1, 0.136409, 1, 0, 0.222091,-0.016845) , 
16, 0.159136, 1, 0, 0.405245,-0.00699132) , 
14, 0.0512529, 1, 0, 0.47425,-0.000712559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822562,-0.00754193) , 
0, 0.346542, 1, 0, 0.492712,-0.00422019)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987751,-3.87684e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99898,0.0224923) , 
16, 0.123511, 1, 0, 0.99287,0.00663952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967606,-0.0109082) , 
13, 0.634232, 1, 0, 0.984933,0.000353876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898766,0.00495686) , 
3, 0.251726, 1, 0, 0.964568,0.00927991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79605,-0.00267704) , 
11, 0.639927, 1, 0, 0.920678,0.000651319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618383,0.00286486) , 
3, 0.535259, 1, 0, 0.846031,0.013868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526026,-0.00262125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179654,6.96714e-05) , 
11, 0.700416, 1, 0, 0.251186,-0.00698004) , 
10, 0.564733, 1, 0, 0.529971,0.00279074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341173,-0.00103444) , 
6, 0.746759, 1, 0, 0.496383,-0.0019992)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172975,-0.00156919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747812,0.00287821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984842,0.00513413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964486,0.0026923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854653,-0.00495787) , 
15, 0.0850155, 1, 0, 0.91741,-0.0104035) , 
8, 0.0152672, 1, 0, 0.945325,-0.0030515) , 
5, 0.0182094, 1, 0, 0.905911,0.00234767) , 
2, 0.00780402, 1, 0, 0.667988,-0.00528468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205705,0.00273406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815105,-0.000226894) , 
12, 0.147737, 1, 0, 0.362015,0.0269295) , 
13, 0.864252, 1, 0, 0.5535,0.00676914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246786,-0.00166264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719234,0.000876848) , 
2, 0.0240702, 1, 0, 0.412044,-0.016448) , 
6, 0.499443, 1, 0, 0.501168,-0.00181998)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463607,-0.000908044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356577,-0.00169953) , 
14, 0.0693726, 1, 0, 0.411749,-0.0129704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985714,-0.00183485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979153,0.0122109) , 
11, 0.422464, 1, 0, 0.983108,0.00872872) , 
2, 0.0236184, 1, 0, 0.737118,-0.000613513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724528,-0.0050482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290927,-0.000348744) , 
8, 0.0382291, 1, 0, 0.515708,-0.0284185) , 
6, 0.263588, 1, 0, 0.641819,-0.0125812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357507,0.00191447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604794,-0.00151378) , 
14, 0.219133, 1, 0, 0.444323,0.0120593) , 
15, 0.25284, 1, 0, 0.588997,-0.00599088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75964,-0.00124517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451356,-0.00269703) , 
10, 0.489684, 1, 0, 0.57214,-0.0361638) , 
13, 0.969602, 1, 0, 0.585893,-0.0115465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278617,0.000710803) , 
3, 0.802529, 1, 0, 0.492555,-0.0038298)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992608,0.0123586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998862,0.0183165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943948,-0.0109841) , 
6, 0.148416, 1, 0, 0.974196,-0.00566426) , 
1, 0.324006, 1, 0, 0.980553,0.00183037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889182,-0.00575586) , 
6, 0.270331, 1, 0, 0.960189,-0.00555628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780737,0.00273249) , 
3, 0.387967, 1, 0, 0.914295,0.00670191) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.161459,-0.0014672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183961,0.000318353) , 
13, 0.952284, 1, 0, 0.172415,-0.00858906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693627,-0.000260746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598824,-0.00260127) , 
9, 0.0264715, 1, 0, 0.634607,-0.0390916) , 
4, 0.154846, 1, 0, 0.279498,-0.0156561) , 
17, 0.644853, 1, 0, 0.495708,-0.008041)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555598,-0.00541402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6084,0.00291374) , 
14, 0.0690704, 1, 0, 0.58413,-0.00565781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743218,0.00282689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283811,0.000607047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192985,-0.00108792) , 
6, 0.30091, 1, 0, 0.224807,-0.00800412) , 
16, 0.151729, 1, 0, 0.371776,0.00483321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303059,0.00150429) , 
11, 0.979293, 1, 0, 0.339829,0.0158314) , 
6, 0.191464, 1, 0, 0.382823,0.0120496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972235,-0.00585551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919239,0.00283139) , 
11, 0.449006, 1, 0, 0.946107,0.00503986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648486,-0.00219138) , 
11, 0.84284, 1, 0, 0.848081,-0.011397) , 
5, 0.0353572, 1, 0, 0.509375,0.00567203)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425534,0.00253315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224808,-0.00158445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123041,0.00087089) , 
7, 0.544254, 1, 0, 0.148719,0.00109078) , 
16, 0.135108, 1, 0, 0.187085,0.00735183) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923982,-0.00361265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901458,0.00307702) , 
10, 0.236085, 1, 0, 0.911848,0.00519271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846729,-0.00517634) , 
14, 0.0553736, 1, 0, 0.882326,-0.015782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881979,0.00515748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744508,-0.000745025) , 
10, 0.56838, 1, 0, 0.807971,0.017443) , 
10, 0.445946, 1, 0, 0.853491,-0.00289721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646906,-0.00198028) , 
8, 0.0344013, 1, 0, 0.819176,-0.0085371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774486,0.0028656) , 
7, 0.304457, 1, 0, 0.813912,-0.00271782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461502,-0.0024761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342561,-0.00124422) , 
16, 0.273683, 1, 0, 0.39466,-0.0368087) , 
7, 0.398158, 1, 0, 0.725552,-0.00990267) , 
5, 0.0144833, 1, 0, 0.485319,-0.00220471)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973217,-0.00222999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699022,-0.00648865) , 
6, 0.265883, 1, 0, 0.85817,-0.0388559) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955404,0.00183205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303563,-0.00225119) , 
10, 0.266686, 1, 0, 0.472292,-0.0213943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953571,0.00405024) , 
2, 0.0395567, 1, 0, 0.582773,-0.0129759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368126,0.00188673) , 
14, 0.0958692, 1, 0, 0.538689,-0.00537667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356676,0.0016976) , 
11, 1.06394, 1, 0, 0.496414,0.00238685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334051,-0.00263342) , 
14, 0.128669, 1, 0, 0.465489,-0.0052143) , 
8, 0.0132382, 1, 0, 0.535095,-0.0111776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418788,0.0016553) , 
15, 0.298571, 1, 0, 0.514356,-0.00473324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372663,-0.00209079) , 
13, 1.28053, 1, 0, 0.491219,-0.0119866)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866199,-0.0037689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988615,0.00218626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961495,0.00572149) , 
6, 0.204571, 1, 0, 0.976792,0.00938838) , 
2, 0.0365815, 1, 0, 0.927416,-0.00311944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327643,0.0021827) , 
3, 0.479339, 1, 0, 0.699939,0.010424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158879,-0.00170999) , 
16, 0.385347, 1, 0, 0.573125,0.00298703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445779,0.00325584) , 
14, 0.140683, 1, 0, 0.553533,0.00810029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243492,-0.00146884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708881,0.000691009) , 
2, 0.0269831, 1, 0, 0.399523,-0.0153421) , 
6, 0.496828, 1, 0, 0.495307,-0.000762435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517638,-0.00275858) , 
14, 0.205011, 1, 0, 0.497505,-0.00451646)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972033,0.00171138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916881,-0.00843904) , 
10, 0.305147, 1, 0, 0.947214,-0.0115814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867503,0.00492924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24117,0.00125042) , 
7, 0.482267, 1, 0, 0.493775,0.0304069) , 
17, 0.485864, 1, 0, 0.702882,0.0110436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91806,0.00277203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840272,-0.000761115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257932,-0.00354069) , 
11, 0.632455, 1, 0, 0.414086,-0.0398166) , 
7, 0.0755965, 1, 0, 0.506726,-0.0295061) , 
9, 0.0229292, 1, 0, 0.596103,-0.0110299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376199,-0.00239788) , 
11, 1.20429, 1, 0, 0.554164,-0.0193816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562081,-0.00106089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242768,0.00137465) , 
8, 0.0343036, 1, 0, 0.367802,0.00721728) , 
9, 0.0508431, 1, 0, 0.48979,-0.0101937)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946557,-0.0023601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925749,0.00527295) , 
16, 0.0989709, 1, 0, 0.936024,0.00764323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902595,0.00746334) , 
9, 0.0354728, 1, 0, 0.925043,0.022201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382165,-0.00128853) , 
16, 0.210331, 1, 0, 0.717243,0.00846443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801809,0.000276351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302192,-0.00201605) , 
16, 0.119666, 1, 0, 0.500144,-0.0171112) , 
15, 0.192527, 1, 0, 0.628717,-0.00196457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287539,0.0027392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266755,0.000289254) , 
11, 1.00529, 1, 0, 0.274966,0.0185476) , 
11, 0.880926, 1, 0, 0.485864,0.00631872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921189,-0.00761691) , 
5, 0.0557968, 1, 0, 0.522315,0.0034648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375817,-0.00148368) , 
13, 1.21681, 1, 0, 0.493772,-0.00368446)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950076,-0.00530369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972491,0.00435455) , 
14, 0.0471715, 1, 0, 0.961516,-0.000404973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984332,0.0105254) , 
16, 0.111655, 1, 0, 0.968892,0.00694561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837092,-0.00348452) , 
7, 0.284769, 1, 0, 0.93699,0.000467959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612736,0.00396771) , 
10, 0.525262, 1, 0, 0.869344,0.00887744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150486,-0.00146933) , 
3, 0.596073, 1, 0, 0.58346,-0.00288851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687762,0.00229466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365284,0.000757148) , 
17, 0.970645, 1, 0, 0.487809,0.027004) , 
6, 0.510572, 1, 0, 0.551675,0.00704486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630142,-0.00308581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250157,-0.000640903) , 
16, 0.106866, 1, 0, 0.359182,-0.020499) , 
15, 0.267307, 1, 0, 0.510569,0.00116308)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98558,-0.00795344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589431,-0.00500535) , 
3, 0.170091, 1, 0, 0.836047,-0.0253546) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971795,0.0045445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882457,-0.0033157) , 
16, 0.0827483, 1, 0, 0.928898,-0.00271418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350114,0.000791401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831944,0.00391093) , 
4, 0.350164, 1, 0, 0.437147,0.0231545) , 
3, 0.469267, 1, 0, 0.61219,0.0139463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338517,-0.000670776) , 
9, 0.0530208, 1, 0, 0.512701,0.00427978) , 
13, 0.559695, 1, 0, 0.565303,-0.000541131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131976,-0.00240298) , 
16, 0.383701, 1, 0, 0.494841,-0.005543)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873554,-0.00550975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742804,0.000619509) , 
8, 0.0276117, 1, 0, 0.818341,-0.0179418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816136,0.00369504) , 
14, 0.0853222, 1, 0, 0.817762,-0.00446228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190252,-0.00196482) , 
10, 0.542854, 1, 0, 0.492287,-0.0175753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967519,0.00753968) , 
4, 0.501368, 1, 0, 0.561354,-0.0112395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346424,0.00259032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864281,-0.000725904) , 
4, 0.137686, 1, 0, 0.536635,0.0206297) , 
14, 0.155408, 1, 0, 0.556309,-0.0047362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253525,-0.00234099) , 
11, 1.065, 1, 0, 0.504107,-0.0111672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433801,0.000923844) , 
11, 1.2632, 1, 0, 0.492272,-0.00565522)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168076,0.000356257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130595,-0.00172436) , 
6, 0.305955, 1, 0, 0.144883,-0.0159206) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964057,-0.00625381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986502,-0.0112509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969306,0.00857942) , 
3, 0.163891, 1, 0, 0.977637,0.0132245) , 
15, 0.0457522, 1, 0, 0.971269,0.00274377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914817,-0.0054483) , 
15, 0.194448, 1, 0, 0.958909,-0.00281889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862798,0.0041778) , 
3, 0.379973, 1, 0, 0.942497,0.00510644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593447,-0.00224019) , 
3, 0.496928, 1, 0, 0.855137,-0.00664989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480029,0.00110464) , 
3, 0.703986, 1, 0, 0.73686,0.00396436) , 
2, 0.0123929, 1, 0, 0.491397,-0.00428092)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961779,0.00545827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953335,-0.0131491) , 
9, 0.0281573, 1, 0, 0.958174,-0.00432971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374646,-0.00367846) , 
8, 0.0313053, 1, 0, 0.739385,-0.0172228) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73315,0.000827326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740059,0.0041118) , 
8, 0.0124263, 1, 0, 0.73674,0.0382867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867293,-0.000361638) , 
12, 0.228796, 1, 0, 0.776454,0.0255622) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168253,0.000893431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397214,-0.00119151) , 
2, 0.0155735, 1, 0, 0.223571,0.00362929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734963,0.00209097) , 
2, 0.0256213, 1, 0, 0.298324,0.00860506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777638,-0.00229063) , 
4, 0.325208, 1, 0, 0.359192,0.00362719) , 
7, 0.137423, 1, 0, 0.466424,0.00926426) , 
6, 0.191464, 1, 0, 0.526427,0.00344175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351124,-0.00209253) , 
15, 0.36782, 1, 0, 0.509349,-0.000285964)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223094,9.76591e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877676,0.00757085) , 
2, 0.0141588, 1, 0, 0.47174,0.0157865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313852,-0.00150541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233209,0.000212133) , 
11, 0.914362, 1, 0, 0.281097,-0.012598) , 
6, 0.243403, 1, 0, 0.346628,-0.00284115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278685,0.00189815) , 
13, 1.06607, 1, 0, 0.325809,0.00935395) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951231,0.00359709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965339,-0.00539262) , 
1, 0.387873, 1, 0, 0.958285,0.00220059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842381,-0.00514991) , 
15, 0.130701, 1, 0, 0.914107,-0.0147773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600665,-0.00263471) , 
13, 1.01376, 1, 0, 0.792677,-0.032151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932782,0.00428405) , 
12, 0.258181, 1, 0, 0.823314,-0.0190166) , 
2, 0.0300877, 1, 0, 0.49798,-0.000464195)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974431,-0.0101838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995686,0.0111986) , 
2, 0.0382505, 1, 0, 0.985812,-0.00152769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648287,-0.00354894) , 
3, 0.228464, 1, 0, 0.863259,-0.0135946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771618,0.00575262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570415,-0.00100876) , 
9, 0.0482101, 1, 0, 0.667542,0.0124534) , 
15, 0.130596, 1, 0, 0.770357,-0.00123027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473282,-0.00342316) , 
13, 0.943674, 1, 0, 0.728733,-0.0074816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19699,0.00156787) , 
16, 0.336708, 1, 0, 0.576357,-0.000150439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36656,-0.0013253) , 
6, 0.489869, 1, 0, 0.52623,-0.00570149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435997,0.00113619) , 
13, 1.14589, 1, 0, 0.503639,0.00159126)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874512,-0.00423144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976856,0.00407176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742388,0.00347342) , 
6, 0.343367, 1, 0, 0.855226,0.0345309) , 
10, 0.284947, 1, 0, 0.861235,0.0152032) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498797,-2.8323e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301112,-0.00212517) , 
7, 0.324996, 1, 0, 0.373918,-0.0260248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117152,-0.000288007) , 
7, 0.581818, 1, 0, 0.207112,-0.0115794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818351,0.00325032) , 
12, 0.104622, 1, 0, 0.324604,-0.00130625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967526,-0.00344961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695728,-0.00410651) , 
3, 0.289356, 1, 0, 0.827722,-0.0375423) , 
12, 0.172121, 1, 0, 0.416064,-0.00789349) , 
16, 0.096727, 1, 0, 0.536832,-0.0016277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339396,0.00139594) , 
9, 0.0611863, 1, 0, 0.49792,0.00320034)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971082,-0.0132847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961592,0.00596955) , 
6, 0.205168, 1, 0, 0.967581,0.000722085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568237,-0.00341527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665943,0.000356017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518107,-0.00228102) , 
8, 0.0359659, 1, 0, 0.589528,-0.0212307) , 
16, 0.088575, 1, 0, 0.581458,-0.0397583) , 
17, 0.414868, 1, 0, 0.743918,-0.0227262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735248,-0.000480987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493084,0.00351213) , 
11, 0.768442, 1, 0, 0.637768,0.0153776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170115,-0.000517674) , 
3, 0.624406, 1, 0, 0.341281,0.00067751) , 
16, 0.157626, 1, 0, 0.533395,-0.0104893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403704,0.00225817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39679,-0.000128972) , 
15, 0.367063, 1, 0, 0.401024,0.0207183) , 
15, 0.251667, 1, 0, 0.501705,-0.00301821)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135977,-0.00239974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150898,1.5257e-05) , 
9, 0.0430211, 1, 0, 0.143598,-0.0164605) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98085,0.00719044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968781,-0.00855009) , 
0, 0.204066, 1, 0, 0.97642,0.00545835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850447,-0.00541686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960766,0.00265753) , 
12, 0.218487, 1, 0, 0.903442,-0.0165125) , 
13, 0.647153, 1, 0, 0.944711,-0.00408794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554814,0.00380755) , 
7, 0.42091, 1, 0, 0.878258,0.00694096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546259,-0.002786) , 
13, 0.924526, 1, 0, 0.791354,-0.00689381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599,0.00133891) , 
6, 0.558932, 1, 0, 0.731849,0.00463301) , 
5, 0.00883929, 1, 0, 0.489966,-0.00404044)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996243,0.0156563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995344,0.00127727) , 
2, 0.0371718, 1, 0, 0.995833,0.00521952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514264,-0.00267966) , 
3, 0.161108, 1, 0, 0.771958,-0.00842409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367858,0.00206175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92274,-0.00162092) , 
5, 0.025854, 1, 0, 0.54318,0.0157445) , 
6, 0.219614, 1, 0, 0.667378,0.00262397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26617,-0.00160332) , 
13, 0.91467, 1, 0, 0.558585,-0.00423742) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617538,0.00113478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418035,-0.000984205) , 
16, 0.126107, 1, 0, 0.524801,0.00309672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305317,0.00285524) , 
10, 0.664566, 1, 0, 0.445249,0.019754) , 
6, 0.41484, 1, 0, 0.508434,0.0063787)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984117,0.0101929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889774,-0.00555971) , 
14, 0.0535941, 1, 0, 0.940102,-0.00351525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916507,0.00424277) , 
14, 0.136674, 1, 0, 0.934146,0.00327606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630952,-0.00329545) , 
8, 0.0351422, 1, 0, 0.878561,-0.00431978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451115,-0.00365659) , 
11, 0.648256, 1, 0, 0.80304,-0.0127558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119821,-0.000327859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66179,0.000199135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40935,0.000462181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592101,0.0035293) , 
6, 0.436001, 1, 0, 0.513849,0.0462578) , 
7, 0.229542, 1, 0, 0.576849,0.0283114) , 
2, 0.00309822, 1, 0, 0.338481,0.0111381) , 
11, 0.718722, 1, 0, 0.501988,0.00272837)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878875,0.0031238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446576,-0.004542) , 
13, 0.813414, 1, 0, 0.71195,-0.0132784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966156,-0.00328991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446123,0.00509005) , 
17, 0.461312, 1, 0, 0.703492,0.0262749) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537398,-0.0013119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508052,0.000798807) , 
14, 0.0828821, 1, 0, 0.522771,-0.0025132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371275,0.00369287) , 
15, 0.170856, 1, 0, 0.460496,0.0152693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476762,-0.00220877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490852,0.00133887) , 
15, 0.333227, 1, 0, 0.481796,-0.00912687) , 
14, 0.133601, 1, 0, 0.470103,0.00426545) , 
15, 0.0940039, 1, 0, 0.527076,0.00963823) , 
15, 0.0385055, 1, 0, 0.573147,0.0039274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441624,-0.00307632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419232,-0.00106461) , 
11, 0.962342, 1, 0, 0.432887,-0.0374984) , 
6, 0.41327, 1, 0, 0.533184,-0.00787546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39737,0.000954513) , 
6, 0.679901, 1, 0, 0.502815,-0.00142327)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897927,-0.000390355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875732,0.00435914) , 
10, 0.332188, 1, 0, 0.889041,0.0138567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642627,0.00184237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953197,-0.00507842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658493,-0.00619347) , 
17, 0.584874, 1, 0, 0.827937,-0.0478128) , 
5, 0.0174614, 1, 0, 0.773025,-0.0251501) , 
7, 0.135013, 1, 0, 0.822218,-0.00861055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13346,-0.000431738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696788,0.00414471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681293,0.000777901) , 
15, 0.131652, 1, 0, 0.689655,0.0394407) , 
2, 0.0149906, 1, 0, 0.364291,0.0130512) , 
10, 0.470611, 1, 0, 0.578162,0.00293428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225006,-0.00160701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784253,0.000920314) , 
2, 0.02231, 1, 0, 0.347595,-0.0187675) , 
9, 0.0508431, 1, 0, 0.498977,-0.00451892)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652108,-0.000828761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65608,0.00445436) , 
6, 0.267663, 1, 0, 0.653945,0.0242266) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887388,-0.00274138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741777,0.00256281) , 
10, 0.365577, 1, 0, 0.816182,0.00530485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391852,-0.00280808) , 
8, 0.0347902, 1, 0, 0.649318,-0.0129398) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549573,-0.0011618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945127,0.00218872) , 
2, 0.0324846, 1, 0, 0.709628,-0.00453408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379743,0.00254938) , 
11, 0.721041, 1, 0, 0.515067,0.0256576) , 
9, 0.0365441, 1, 0, 0.568073,0.0104182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169038,-0.000820739) , 
17, 1.14256, 1, 0, 0.441989,0.00274644) , 
9, 0.0163163, 1, 0, 0.475728,0.00616566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855257,-0.00492271) , 
12, 0.312339, 1, 0, 0.501075,0.00317818)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212773,-0.000316688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126351,0.00141862) , 
16, 0.270216, 1, 0, 0.161395,0.0075987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589368,0.00320225) , 
0, 0.0715461, 1, 0, 0.211039,0.012502) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918069,-0.00454784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905702,-0.00742755) , 
14, 0.00910491, 1, 0, 0.911874,-0.0245619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749431,-0.00151697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939268,-0.00312981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924149,0.00573418) , 
10, 0.413541, 1, 0, 0.933392,0.00908363) , 
2, 0.0261218, 1, 0, 0.881605,0.00137241) , 
15, 0.0386983, 1, 0, 0.890942,-0.00662771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417774,-0.00300067) , 
10, 0.66733, 1, 0, 0.800726,-0.0167371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564097,0.000833123) , 
13, 1.19292, 1, 0, 0.737689,-0.00696179) , 
5, 0.0154911, 1, 0, 0.501883,0.0017531)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825551,-0.00257098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574411,0.00455841) , 
13, 0.714969, 1, 0, 0.729016,0.0157917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259202,-0.0017375) , 
16, 0.270216, 1, 0, 0.518427,-0.000885722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154567,-0.00158317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695895,-0.000449003) , 
4, 0.167773, 1, 0, 0.274038,-0.0240193) , 
13, 0.889383, 1, 0, 0.387081,-0.0133188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526631,-0.00159299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333587,0.0014136) , 
6, 0.26066, 1, 0, 0.388535,0.0135361) , 
14, 0.138141, 1, 0, 0.387491,-0.00574616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972779,0.00295326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70538,-0.00457251) , 
6, 0.289572, 1, 0, 0.827492,-0.0371636) , 
2, 0.038272, 1, 0, 0.452293,-0.0103732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917041,0.00365266) , 
2, 0.055768, 1, 0, 0.494484,-0.00697298)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382778,0.0049731) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841498,-0.00638036) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996608,0.0145124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914765,-0.00817347) , 
10, 0.297958, 1, 0, 0.959541,-0.00441716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985948,0.010596) , 
15, 0.130175, 1, 0, 0.967536,0.00517758) , 
12, 0.13461, 1, 0, 0.938345,-0.00373608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869873,0.00386212) , 
6, 0.329289, 1, 0, 0.925274,0.00350777) , 
12, 0.0700505, 1, 0, 0.829533,0.0125355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181966,-0.000872095) , 
8, 0.0453332, 1, 0, 0.573686,0.00292188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611147,-0.00465275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332212,-0.000161725) , 
3, 0.569916, 1, 0, 0.404774,-0.0212229) , 
6, 0.453885, 1, 0, 0.516257,-0.00528732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453552,0.00150056) , 
11, 1.32503, 1, 0, 0.507607,0.000339517)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572227,-0.00266303) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863697,-0.00499291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948332,0.000378887) , 
12, 0.203402, 1, 0, 0.905069,-0.0181029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87324,0.00260254) , 
8, 0.022111, 1, 0, 0.895576,-0.00509265) , 
2, 0.0204796, 1, 0, 0.803956,-0.017149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371356,0.00153363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749673,-0.00305512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845415,0.00102751) , 
5, 0.0335732, 1, 0, 0.804299,-0.0119343) , 
12, 0.119633, 1, 0, 0.586429,0.0096584) , 
10, 0.462224, 1, 0, 0.707046,-0.00520607) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63192,0.000586854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339354,0.00391946) , 
11, 0.797983, 1, 0, 0.452307,0.0381751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148154,-0.000346834) , 
8, 0.0503106, 1, 0, 0.274108,0.0128408) , 
16, 0.19892, 1, 0, 0.506655,0.00314719)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613513,0.0042605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982778,-0.000255532) , 
4, 0.335621, 1, 0, 0.812291,0.013597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498163,-0.000650748) , 
6, 0.177278, 1, 0, 0.695595,0.00639435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613881,-0.00305384) , 
9, 0.0315052, 1, 0, 0.669911,-0.00187554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5005,0.00218187) , 
6, 0.237937, 1, 0, 0.624026,0.00463489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470446,-0.00202901) , 
9, 0.0502119, 1, 0, 0.594113,6.49493e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695816,0.00183312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356678,-0.00254873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221648,-0.000392558) , 
3, 0.656615, 1, 0, 0.260654,-0.0192893) , 
10, 0.370258, 1, 0, 0.330944,-0.0109433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773939,-0.00399964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668959,-0.00412254) , 
7, 0.16022, 1, 0, 0.729103,-0.063103) , 
12, 0.172956, 1, 0, 0.410851,-0.0214113) , 
6, 0.31115, 1, 0, 0.487834,-0.0123897)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663951,-0.00399421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793822,-0.000323554) , 
7, 0.255078, 1, 0, 0.723176,-0.0328605) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22695,-0.000126363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799733,0.00322064) , 
4, 0.176089, 1, 0, 0.318394,0.00673676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141917,-0.0011885) , 
10, 0.768479, 1, 0, 0.246809,-0.00358275) , 
10, 0.406136, 1, 0, 0.347404,-0.00976532) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938254,-0.000129302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908911,0.00445664) , 
10, 0.335331, 1, 0, 0.92588,0.0153024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891171,-0.00218087) , 
15, 0.0690519, 1, 0, 0.914211,0.00534198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912617,0.00437254) , 
9, 0.0365896, 1, 0, 0.913738,0.0150214) , 
4, 0.309692, 1, 0, 0.499784,-0.00309608)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464531,0.000393929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31502,0.0019127) , 
6, 0.270447, 1, 0, 0.3581,0.0248429) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9297,0.001008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792961,-0.00531961) , 
7, 0.223861, 1, 0, 0.869675,-0.0211637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974108,-0.00733036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984348,0.00513052) , 
11, 0.338443, 1, 0, 0.97905,-0.00109161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961912,0.00940166) , 
11, 0.479461, 1, 0, 0.973451,0.0120056) , 
4, 0.336704, 1, 0, 0.92766,-0.00263015) , 
4, 0.129382, 1, 0, 0.700456,0.00832918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178838,-0.00104576) , 
16, 0.335663, 1, 0, 0.57098,0.00306293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587923,-0.00280663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279841,-0.000305797) , 
17, 0.89767, 1, 0, 0.372207,-0.0198044) , 
13, 1.01376, 1, 0, 0.498605,-0.0052633)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970185,0.0012737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612882,-0.00445832) , 
11, 0.425718, 1, 0, 0.776325,-0.0414499) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999489,0.0250784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935491,-0.00643534) , 
3, 0.151177, 1, 0, 0.976086,1.89688e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879806,0.00555485) , 
3, 0.257007, 1, 0, 0.949718,0.0120645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594485,-0.00290839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158608,-0.000346249) , 
17, 0.77623, 1, 0, 0.265284,-0.0155771) , 
3, 0.409626, 1, 0, 0.571763,-0.00319962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501719,0.00173768) , 
6, 0.540225, 1, 0, 0.551468,0.00777936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181307,-0.00108449) , 
17, 1.18754, 1, 0, 0.444459,-3.60739e-05) , 
8, 0.00374704, 1, 0, 0.493825,-0.00619641)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924658,-0.00216503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781903,-0.00498898) , 
16, 0.0396458, 1, 0, 0.85284,-0.0294212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925762,-0.0039874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660019,0.00248102) , 
13, 0.777327, 1, 0, 0.765696,0.0203735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699309,-0.00171649) , 
7, 0.135162, 1, 0, 0.747942,0.00902378) , 
16, 0.0561653, 1, 0, 0.782422,-0.00361313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937673,0.00209272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684911,-0.00761476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275386,-0.00171233) , 
17, 0.741147, 1, 0, 0.418527,-0.0501901) , 
13, 0.535753, 1, 0, 0.528285,-0.0382267) , 
16, 0.119352, 1, 0, 0.663867,-0.0197604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322501,-0.00092066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248262,0.00188438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233002,0.000800891) , 
13, 0.862411, 1, 0, 0.239101,0.0190036) , 
9, 0.0246129, 1, 0, 0.261347,0.00994287) , 
8, 0.0406176, 1, 0, 0.497953,-0.00751703)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999036,0.0222814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961261,-0.0276646) , 
10, 0.33292, 1, 0, 0.985319,-0.00342412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814348,0.00398634) , 
3, 0.206153, 1, 0, 0.9405,0.00464991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818828,-0.00553897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603023,-0.000164972) , 
10, 0.378849, 1, 0, 0.709379,-0.0267115) , 
6, 0.269314, 1, 0, 0.849175,-0.0077423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667058,0.00296066) , 
11, 0.859324, 1, 0, 0.820072,0.00127184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518596,0.000523957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136218,-0.00175319) , 
3, 0.59085, 1, 0, 0.245367,-0.016577) , 
10, 0.585497, 1, 0, 0.539945,-0.00742817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377537,0.000683519) , 
11, 1.11836, 1, 0, 0.498856,-0.00195329)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436352,-0.000914215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488691,-0.00215197) , 
15, 0.203722, 1, 0, 0.459373,-0.0211573) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989249,0.00928605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965664,-0.00671342) , 
2, 0.0500477, 1, 0, 0.978807,0.00290716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93215,-0.00647488) , 
17, 0.32138, 1, 0, 0.9638,-0.0049833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916322,0.00430216) , 
17, 0.442987, 1, 0, 0.950997,0.00550826) , 
1, 0.176781, 1, 0, 0.793869,-0.00301434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599138,-0.00466777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441317,-0.00091583) , 
8, 0.0309679, 1, 0, 0.506245,-0.0425185) , 
11, 0.850449, 1, 0, 0.71954,-0.0132232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27307,0.000900579) , 
10, 0.688147, 1, 0, 0.587442,-0.00529646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283388,0.00086593) , 
3, 0.802529, 1, 0, 0.497743,0.00120342)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301346,0.00132663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106314,-0.000605456) , 
3, 0.635132, 1, 0, 0.164646,1.22549e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815672,0.00238982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90472,-0.00278221) , 
12, 0.115614, 1, 0, 0.866445,0.00317806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721359,0.00469416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402596,0.00157019) , 
16, 0.116315, 1, 0, 0.509705,0.0497542) , 
10, 0.374317, 1, 0, 0.632899,0.0336699) , 
12, 0.0680475, 1, 0, 0.386552,0.0159627) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909612,-0.00448853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968582,0.00369242) , 
5, 0.0377452, 1, 0, 0.939942,-0.00507227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672514,-0.00303648) , 
11, 0.802046, 1, 0, 0.862139,-0.0207849) , 
12, 0.173521, 1, 0, 0.505383,0.00678089)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232107,-0.00172095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104889,-0.000421257) , 
10, 0.617097, 1, 0, 0.140888,-0.0130563) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944588,-0.00345907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977571,0.00397169) , 
12, 0.161817, 1, 0, 0.964208,0.00160891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922183,0.00610583) , 
11, 0.559518, 1, 0, 0.949643,0.0133458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451096,-0.00091716) , 
3, 0.491765, 1, 0, 0.76549,0.00148052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572446,0.00104387) , 
6, 0.614017, 1, 0, 0.709444,0.00823372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901575,-0.00439208) , 
4, 0.515796, 1, 0, 0.738622,0.00367114) , 
2, 0.00899437, 1, 0, 0.502133,-0.00294693)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330668,0.00232725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121322,0.000498801) , 
3, 0.592731, 1, 0, 0.162377,0.0126083) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899279,-0.00503439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3971,0.000856887) , 
17, 0.588832, 1, 0, 0.582754,0.000440646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412359,-0.0020646) , 
6, 0.460513, 1, 0, 0.495862,-0.0266937) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946981,0.00510767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89023,-0.00347765) , 
14, 0.0626731, 1, 0, 0.919008,0.00374251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845842,-0.00602834) , 
7, 0.0603995, 1, 0, 0.894751,-0.0131058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950927,-0.00504663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847909,0.0044742) , 
13, 0.736528, 1, 0, 0.896613,0.0262326) , 
16, 0.0874643, 1, 0, 0.89572,0.00736567) , 
4, 0.252296, 1, 0, 0.708682,-0.00856598) , 
2, 0.00929467, 1, 0, 0.488743,-4.13681e-05)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959399,-0.0216781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998292,0.0159302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973029,0.000736403) , 
10, 0.267132, 1, 0, 0.984907,0.00751635) , 
9, 0.0177975, 1, 0, 0.975607,-0.0027733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732155,-0.00285051) , 
3, 0.285187, 1, 0, 0.903418,-0.0123828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865992,0.00672757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247952,0.00225972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167316,-0.000781072) , 
9, 0.0285536, 1, 0, 0.187053,-0.00138764) , 
16, 0.125001, 1, 0, 0.320778,0.0106618) , 
10, 0.486578, 1, 0, 0.580381,0.000393981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.310607,-0.00331548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37758,-3.71233e-05) , 
13, 1.12869, 1, 0, 0.345448,-0.0252381) , 
13, 0.987266, 1, 0, 0.515262,-0.00671079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411361,0.000770365) , 
11, 1.23409, 1, 0, 0.496714,-0.00247581)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999076,0.0195564) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364948,-0.00490591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968416,0.000442618) , 
2, 0.0297043, 1, 0, 0.663216,-0.0276732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397948,0.000790061) , 
13, 0.820592, 1, 0, 0.540685,-0.0109452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375078,-0.003631) , 
9, 0.037029, 1, 0, 0.482788,-0.0213913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397767,0.000175618) , 
14, 0.144922, 1, 0, 0.464587,-0.0163477) , 
3, 0.122592, 1, 0, 0.565577,-0.0117056) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320844,0.0025949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797811,-0.000159944) , 
5, 0.0270476, 1, 0, 0.498648,0.0245358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384473,-0.000136906) , 
6, 0.658917, 1, 0, 0.44167,0.0107507) , 
6, 0.373379, 1, 0, 0.505013,-0.000729254)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981319,-0.00206876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982455,0.0100795) , 
17, 0.307868, 1, 0, 0.981799,0.0060949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92408,-0.00596647) , 
8, 0.0286749, 1, 0, 0.965491,-0.00172024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601674,-0.00217515) , 
3, 0.396313, 1, 0, 0.841345,-0.0162377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766379,-0.000521773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513891,0.00341657) , 
8, 0.0302575, 1, 0, 0.650198,0.0273289) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426606,-0.000406928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301747,0.00276417) , 
10, 0.687284, 1, 0, 0.357729,0.018538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206481,-0.00093037) , 
11, 0.90703, 1, 0, 0.271007,-0.00119075) , 
10, 0.546598, 1, 0, 0.361428,0.00560995) , 
10, 0.389879, 1, 0, 0.493218,-0.000389617)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985578,0.00578732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875547,-0.00370438) , 
17, 0.370364, 1, 0, 0.931929,-0.00615498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905804,0.00344135) , 
9, 0.0376826, 1, 0, 0.924494,0.00171589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529056,-0.00156954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371058,-0.0040151) , 
15, 0.143918, 1, 0, 0.447856,-0.0375214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472295,0.000464961) , 
15, 0.262168, 1, 0, 0.457213,-0.0204474) , 
10, 0.458936, 1, 0, 0.693092,-0.00925961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678628,0.00223407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272436,-0.000101289) , 
10, 0.529344, 1, 0, 0.421409,0.0143286) , 
11, 0.88823, 1, 0, 0.598445,-0.00104216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180999,-0.00131313) , 
17, 1.18303, 1, 0, 0.496937,-0.00643499)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994274,0.0153603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982304,-0.00886615) , 
2, 0.0391971, 1, 0, 0.988179,0.00754154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428106,-0.00311412) , 
3, 0.288043, 1, 0, 0.785542,-0.00834001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657931,0.00485331) , 
14, 0.0663533, 1, 0, 0.750357,0.00386696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645897,-0.00303709) , 
14, 0.120873, 1, 0, 0.725782,-0.00226137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490282,-0.00415526) , 
9, 0.0466253, 1, 0, 0.666268,-0.0125361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555132,-0.00149826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409382,0.00152375) , 
14, 0.0945154, 1, 0, 0.47677,0.00351987) , 
6, 0.353589, 1, 0, 0.595009,-0.0064984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414098,0.00119713) , 
11, 1.05982, 1, 0, 0.566145,-0.0021262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246261,-0.00122597) , 
3, 0.864683, 1, 0, 0.493934,-0.00726343)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60999,-0.00153596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398628,-0.00414661) , 
6, 0.22145, 1, 0, 0.526963,-0.0237586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981692,0.00524585) , 
2, 0.0451688, 1, 0, 0.650867,-0.0155184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717031,-0.00409093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418636,0.00255201) , 
6, 0.181167, 1, 0, 0.535663,0.00811978) , 
15, 0.111044, 1, 0, 0.606755,-0.00646726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409152,-0.00276385) , 
9, 0.0502119, 1, 0, 0.559974,-0.0123592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195383,-8.10718e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726739,0.000414933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726974,0.00303993) , 
16, 0.0996069, 1, 0, 0.726876,0.0386913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77477,-0.000779898) , 
0, 0.211067, 1, 0, 0.740715,0.0239987) , 
4, 0.108127, 1, 0, 0.438342,0.0098699) , 
6, 0.342264, 1, 0, 0.495961,-0.000660313)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963196,-0.00223633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636777,0.00581028) , 
7, 0.272971, 1, 0, 0.829309,0.016785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541136,-0.00127408) , 
13, 0.973055, 1, 0, 0.72361,0.00209686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556116,-0.00451423) , 
15, 0.0557768, 1, 0, 0.689366,-0.0116197) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309627,-0.000247337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488506,0.00371692) , 
14, 0.136013, 1, 0, 0.373743,0.0135013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78714,-0.00641376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938361,-0.00030462) , 
2, 0.0335529, 1, 0, 0.881268,-0.0219209) , 
5, 0.0182094, 1, 0, 0.602716,-0.00247964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442023,0.00133504) , 
13, 0.945923, 1, 0, 0.538553,0.00923983) , 
14, 0.0471874, 1, 0, 0.588383,0.00234761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16398,-0.00150617) , 
10, 0.806628, 1, 0, 0.496021,-0.00326672)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492967,0.00406823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377113,0.000864438) , 
14, 0.0199705, 1, 0, 0.425505,0.0267557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351614,-0.00259983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349876,0.000501053) , 
9, 0.0239705, 1, 0, 0.350586,-0.00908473) , 
14, 0.0679021, 1, 0, 0.389012,0.00929778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926919,0.00251921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885162,-0.0026184) , 
15, 0.0548746, 1, 0, 0.908516,8.99362e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707719,-0.00308874) , 
8, 0.0342086, 1, 0, 0.859223,-0.0119872) , 
5, 0.027884, 1, 0, 0.60633,-0.000539517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506613,0.00246365) , 
9, 0.0368062, 1, 0, 0.584046,0.00682128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670872,-0.00258405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208976,-0.000247054) , 
17, 0.79912, 1, 0, 0.366708,-0.0158342) , 
9, 0.0469321, 1, 0, 0.501743,-0.00175811)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13524,-0.000946375) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952888,-0.0109268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99684,0.0156956) , 
5, 0.0395567, 1, 0, 0.975286,-0.00574712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984333,0.00899452) , 
10, 0.347873, 1, 0, 0.978529,0.000516372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877512,0.00317618) , 
3, 0.328037, 1, 0, 0.949692,0.00983421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565815,-0.000877045) , 
6, 0.529637, 1, 0, 0.823333,7.42727e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814003,0.00398301) , 
16, 0.193454, 1, 0, 0.821501,0.00794033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36235,-0.00223491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366912,-0.000570831) , 
6, 0.291207, 1, 0, 0.365206,-0.0195009) , 
10, 0.611794, 1, 0, 0.681155,-0.000499955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46827,0.00138913) , 
9, 0.0599308, 1, 0, 0.64194,0.00434436) , 
12, 0.0576521, 1, 0, 0.506203,-0.000220831)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961467,0.00790233) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45142,-0.00241056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965707,-0.00330828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969484,0.0111393) , 
6, 0.217743, 1, 0, 0.966993,0.0161268) , 
2, 0.0183698, 1, 0, 0.817489,0.00364842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380262,0.00393455) , 
10, 0.665262, 1, 0, 0.712654,0.0144009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13174,-0.000763854) , 
11, 0.849293, 1, 0, 0.486138,0.00466589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434326,-0.000792394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721256,-0.00401741) , 
4, 0.278133, 1, 0, 0.5307,-0.034095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297247,9.98024e-05) , 
10, 0.553249, 1, 0, 0.398203,-0.01374) , 
6, 0.382929, 1, 0, 0.442209,-0.00452902) , 
10, 0.211738, 1, 0, 0.493186,-0.00123147)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857933,0.00451414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964724,0.00543937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909185,-0.00459013) , 
7, 0.111427, 1, 0, 0.935451,-0.00144118) , 
5, 0.0271292, 1, 0, 0.908865,0.0130737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750059,-0.00258593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864744,-0.00537681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626932,0.00238267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308554,-0.000158655) , 
10, 0.551143, 1, 0, 0.426903,0.0145851) , 
11, 0.556458, 1, 0, 0.517211,0.00514365) , 
8, 0.000921696, 1, 0, 0.571644,-0.00327005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261676,-0.00153713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131076,-0.000992848) , 
10, 0.699529, 1, 0, 0.181561,-0.0203449) , 
8, 0.0470072, 1, 0, 0.393261,-0.0110783) , 
10, 0.317606, 1, 0, 0.49546,-0.00629108)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999202,0.0178036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939117,-0.0130601) , 
3, 0.129423, 1, 0, 0.967023,-0.0124147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817425,0.00391648) , 
10, 0.385499, 1, 0, 0.921509,-0.00271938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159036,-0.003868) , 
11, 0.729562, 1, 0, 0.677294,-0.0178582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468887,0.00306581) , 
15, 0.176956, 1, 0, 0.631386,-0.00734425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825599,0.00227889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575444,-0.00129995) , 
6, 0.435367, 1, 0, 0.676507,-0.00711362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304486,0.00168746) , 
8, 0.0341528, 1, 0, 0.445028,0.0133783) , 
6, 0.287349, 1, 0, 0.535276,0.00334298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453227,0.00144759) , 
13, 1.1639, 1, 0, 0.515201,0.00996291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484671,-0.00206076) , 
14, 0.200838, 1, 0, 0.51197,0.00566679)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496451,-0.00112704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990927,0.00377249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87142,0.00266804) , 
3, 0.238897, 1, 0, 0.929176,0.0172011) , 
12, 0.122588, 1, 0, 0.796798,0.00507733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914113,8.69539e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562383,-0.00165191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403143,-0.00480809) , 
15, 0.0799962, 1, 0, 0.473121,-0.0561716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408104,-0.000735423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373192,-0.00097814) , 
15, 0.277211, 1, 0, 0.388959,-0.0147321) , 
15, 0.177385, 1, 0, 0.431276,-0.0355684) , 
10, 0.317606, 1, 0, 0.566066,-0.0255086) , 
7, 0.114332, 1, 0, 0.665394,-0.0123417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289796,-0.00169179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348016,0.00424933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180276,0.00021642) , 
8, 0.0564799, 1, 0, 0.236197,0.0235309) , 
9, 0.0236573, 1, 0, 0.249947,0.0106008) , 
8, 0.0402857, 1, 0, 0.496254,-0.00300117)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835055,0.00181727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519625,-0.00370037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11905,-0.000484165) , 
17, 0.761421, 1, 0, 0.189891,-0.0164982) , 
10, 0.462327, 1, 0, 0.320009,-0.00994665) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983021,0.000776864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96841,0.00731828) , 
11, 0.402956, 1, 0, 0.976502,0.0115637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863669,-0.00316314) , 
7, 0.22045, 1, 0, 0.946855,0.00320923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820888,0.00377251) , 
13, 0.924431, 1, 0, 0.914006,0.0163242) , 
2, 0.0213392, 1, 0, 0.572985,0.00124177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48398,0.00233187) , 
11, 1.13533, 1, 0, 0.56279,0.00605248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257894,-0.000768598) , 
3, 0.864683, 1, 0, 0.491542,0.000968601)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908614,0.00201342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586478,-0.000458888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398866,-0.00250032) , 
7, 0.165019, 1, 0, 0.499139,-0.0313182) , 
13, 0.741152, 1, 0, 0.629689,-0.0180509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967205,-0.00173391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843822,0.00422386) , 
13, 0.982786, 1, 0, 0.921313,0.0209264) , 
2, 0.0441964, 1, 0, 0.727456,-0.00498366) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382872,0.00258117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114787,-0.00068139) , 
7, 0.535585, 1, 0, 0.170989,0.0012419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602303,0.00587693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804555,0.00175569) , 
5, 0.0284515, 1, 0, 0.713082,0.0573923) , 
2, 0.0181055, 1, 0, 0.305459,0.0151704) , 
16, 0.174929, 1, 0, 0.510883,0.00535963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385568,-0.00158425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522547,-0.00140888) , 
14, 0.256857, 1, 0, 0.441212,-0.0233189) , 
14, 0.188019, 1, 0, 0.50221,0.0017895)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972771,-0.00389191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978534,0.00941423) , 
13, 0.576572, 1, 0, 0.975612,0.01557) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986511,0.00769857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268301,-0.00333457) , 
17, 0.401988, 1, 0, 0.625483,-0.0144895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542958,0.00281352) , 
15, 0.118442, 1, 0, 0.595543,-0.00077885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615737,-0.00434692) , 
14, 0.135037, 1, 0, 0.601891,-0.0116738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438815,0.00199818) , 
6, 0.283365, 1, 0, 0.550896,-7.73706e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3861,-0.001343) , 
6, 0.401444, 1, 0, 0.49034,-0.00834872) , 
10, 0.235749, 1, 0, 0.572193,-0.00431426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24668,-0.001899) , 
11, 1.04322, 1, 0, 0.51945,-0.00876954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420709,0.00110594) , 
11, 1.20919, 1, 0, 0.501391,-0.0027217)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142701,-4.46867e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24838,-0.00234318) , 
12, 0.0624663, 1, 0, 0.18162,-0.016873) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977235,0.00654493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978271,-0.0091396) , 
4, 0.371317, 1, 0, 0.977722,0.00345009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881597,-0.00377708) , 
13, 0.689627, 1, 0, 0.936682,-0.00739071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68414,0.0023163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78329,-0.000284341) , 
12, 0.209912, 1, 0, 0.721164,0.0284239) , 
13, 0.91614, 1, 0, 0.844358,0.00795172) , 
12, 0.0884941, 1, 0, 0.551654,-0.0030123) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493576,-0.000546359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195212,0.00139518) , 
7, 0.292205, 1, 0, 0.293709,0.0108108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89429,0.00478655) , 
12, 0.134521, 1, 0, 0.427078,0.0192377) , 
14, 0.104455, 1, 0, 0.501508,0.00594416)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896781,-0.00560103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688928,0.00319927) , 
13, 0.965929, 1, 0, 0.813709,0.0111809) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986081,-0.0111134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947923,0.00784706) , 
3, 0.158367, 1, 0, 0.967293,0.0141042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418158,-0.0026556) , 
3, 0.384611, 1, 0, 0.629187,-0.0272195) , 
15, 0.0517795, 1, 0, 0.700187,-0.0124439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864201,-0.000569363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455799,-0.00151842) , 
8, 0.0172024, 1, 0, 0.60939,-0.0163684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368519,0.0013486) , 
11, 0.780979, 1, 0, 0.470705,0.00840052) , 
9, 0.0407909, 1, 0, 0.60318,-0.00363251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23845,0.00302187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176417,0.00059444) , 
16, 0.385001, 1, 0, 0.202092,0.0203269) , 
16, 0.313187, 1, 0, 0.504052,0.00228898)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971849,-0.0101534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865321,0.00208356) , 
6, 0.211473, 1, 0, 0.910281,0.00661644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822118,-0.00305668) , 
16, 0.162002, 1, 0, 0.884534,-0.000701201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755331,-0.00428803) , 
14, 0.0568095, 1, 0, 0.844481,-0.0143572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919623,-0.00152209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616863,0.00283202) , 
11, 0.520082, 1, 0, 0.756848,0.0228545) , 
14, 0.093469, 1, 0, 0.811871,-0.000509769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302425,-0.000988637) , 
17, 0.958682, 1, 0, 0.659913,-0.00658079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568388,0.00341679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149554,0.000179573) , 
16, 0.174929, 1, 0, 0.230454,0.0145336) , 
10, 0.688147, 1, 0, 0.50281,0.0011432)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280827,0.0007369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759155,-0.00391478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893496,-5.66141e-05) , 
12, 0.120745, 1, 0, 0.839435,-0.0187069) , 
4, 0.10201, 1, 0, 0.541632,-0.0029664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400967,0.00128062) , 
11, 1.05527, 1, 0, 0.499496,0.00628549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172026,-0.0010537) , 
8, 0.0528029, 1, 0, 0.366424,-0.0032211) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991947,-0.00603134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901232,-0.00782362) , 
3, 0.154525, 1, 0, 0.949929,-0.0180413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945235,0.00527057) , 
17, 0.348727, 1, 0, 0.948429,-0.00309962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67808,-0.00317516) , 
17, 0.538974, 1, 0, 0.852295,-0.0237854) , 
12, 0.175413, 1, 0, 0.484703,-0.00822722)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935016,-0.00388605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961334,0.00755683) , 
14, 0.0690704, 1, 0, 0.948139,0.01104) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922328,-0.01147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838214,-0.00400429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452516,0.00326509) , 
13, 0.601582, 1, 0, 0.643665,0.0129529) , 
16, 0.142359, 1, 0, 0.72974,-0.00183638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410364,-0.00284632) , 
6, 0.32527, 1, 0, 0.630596,-0.0141197) , 
16, 0.0841771, 1, 0, 0.741113,-0.00536323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554356,-0.000430234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468786,0.00308626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247139,0.00138811) , 
8, 0.0479028, 1, 0, 0.315995,0.0329087) , 
8, 0.0293427, 1, 0, 0.370562,0.0233772) , 
11, 0.846431, 1, 0, 0.556804,0.00893201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290524,-0.00156481) , 
9, 0.0652654, 1, 0, 0.508711,0.00237528)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990428,0.00858627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984825,-0.00581901) , 
5, 0.03963, 1, 0, 0.987911,0.00523215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940094,-0.0059595) , 
11, 0.414573, 1, 0, 0.971179,-0.00178979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926901,0.0048767) , 
6, 0.288694, 1, 0, 0.961459,0.00458887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351291,7.91012e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706459,-0.00330281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769668,-0.00106243) , 
2, 0.0464733, 1, 0, 0.738204,-0.0375736) , 
4, 0.232269, 1, 0, 0.500577,-0.014384) , 
3, 0.391507, 1, 0, 0.689252,-0.00661693) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133598,0.00156193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230545,-0.0015039) , 
12, 0.0630694, 1, 0, 0.164322,0.00446578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83763,0.00590739) , 
12, 0.110916, 1, 0, 0.254202,0.0133323) , 
16, 0.216821, 1, 0, 0.50343,0.00190393)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967086,-0.00600905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548607,0.00427475) , 
3, 0.304403, 1, 0, 0.73751,0.0287169) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935205,-0.0022779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703455,0.00298373) , 
11, 0.511327, 1, 0, 0.820492,0.018427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911393,-0.00442171) , 
12, 0.22295, 1, 0, 0.850956,0.00473776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449543,-0.00129382) , 
11, 0.963719, 1, 0, 0.703325,-0.0085636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584831,0.00284893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125473,-0.000475257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672278,0.00129289) , 
4, 0.0929167, 1, 0, 0.230302,-0.00109555) , 
16, 0.187065, 1, 0, 0.281941,0.00617467) , 
16, 0.144548, 1, 0, 0.457525,3.34785e-05) , 
9, 0.0147648, 1, 0, 0.493657,0.00373506)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951996,-0.0095715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958738,-0.0037101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960198,0.00673138) , 
11, 0.375926, 1, 0, 0.959369,0.00831529) , 
15, 0.0540669, 1, 0, 0.956607,-0.0018887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895174,0.00456642) , 
17, 0.427586, 1, 0, 0.941104,0.00792032) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815104,-0.000379331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413259,-0.00265803) , 
3, 0.501647, 1, 0, 0.536105,-0.0398495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248413,6.69653e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181415,-0.00101662) , 
17, 1.21425, 1, 0, 0.219964,-0.00697235) , 
17, 0.878105, 1, 0, 0.302301,-0.015535) , 
17, 0.559151, 1, 0, 0.487141,-0.00874808)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519771,-0.00335953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501064,6.16586e-05) , 
7, 0.304595, 1, 0, 0.511831,-0.0358128) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940516,0.00286539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859776,-0.00335397) , 
7, 0.126034, 1, 0, 0.897869,-0.00712824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984808,0.00482776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841646,0.00337232) , 
3, 0.285605, 1, 0, 0.908883,0.0271976) , 
14, 0.0380756, 1, 0, 0.903655,0.0109044) , 
12, 0.122789, 1, 0, 0.77565,-0.00435765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184432,0.0013697) , 
7, 0.535709, 1, 0, 0.56992,0.0038889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591485,0.00403629) , 
15, 0.277609, 1, 0, 0.571581,0.0071416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441561,0.000605394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262139,-0.00165717) , 
15, 0.266019, 1, 0, 0.350147,-0.010429) , 
9, 0.0530281, 1, 0, 0.500394,0.00149298)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976993,0.00345481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770826,-0.00517322) , 
11, 0.540567, 1, 0, 0.905572,-0.0077403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826219,0.00541396) , 
14, 0.0643136, 1, 0, 0.881242,0.00507418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674736,-0.00274136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257488,-0.000508571) , 
17, 0.880069, 1, 0, 0.366416,-0.0176718) , 
11, 0.725512, 1, 0, 0.548942,-0.00960745) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937397,0.00211096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660023,-0.00311931) , 
8, 0.0174143, 1, 0, 0.805443,-0.0113925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449495,0.00400656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232135,9.45291e-05) , 
3, 0.633588, 1, 0, 0.298231,0.0211235) , 
11, 0.625516, 1, 0, 0.430132,0.0126677) , 
14, 0.102506, 1, 0, 0.500692,-0.000561222)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903583,-0.00319216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973169,0.00567379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952301,-0.00159902) , 
8, 0.0153023, 1, 0, 0.962977,0.00608982) , 
2, 0.0317779, 1, 0, 0.946517,-0.00013058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769115,-0.00419519) , 
17, 0.554345, 1, 0, 0.913564,-0.00876969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600409,0.00226281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27433,0.000820891) , 
16, 0.23174, 1, 0, 0.390424,0.0206223) , 
17, 0.706797, 1, 0, 0.73305,0.00137226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243868,-0.00112419) , 
3, 0.684541, 1, 0, 0.505573,-0.00893586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802243,-0.00111255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359522,0.00167871) , 
10, 0.552182, 1, 0, 0.48145,0.0168302) , 
14, 0.153759, 1, 0, 0.501021,-0.0040739)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678896,-0.00240601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985372,0.000257522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992746,0.0178859) , 
8, 0.018798, 1, 0, 0.988129,0.00843385) , 
2, 0.0214081, 1, 0, 0.86977,-0.00213779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556262,-0.00741746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434854,-0.00127101) , 
9, 0.0194695, 1, 0, 0.488258,-0.0369704) , 
13, 0.74478, 1, 0, 0.715318,-0.0162394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629131,-0.000917385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647913,0.00242349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34398,9.5669e-05) , 
10, 0.516704, 1, 0, 0.469201,0.0206629) , 
8, 0.0165882, 1, 0, 0.509435,0.0112409) , 
6, 0.374583, 1, 0, 0.614083,-0.00272699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233907,0.0020135) , 
8, 0.0563999, 1, 0, 0.513196,0.00635906)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517209,0.0045749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384384,0.00097804) , 
6, 0.206349, 1, 0, 0.437134,0.0217094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907823,-0.00361493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978911,0.0074668) , 
4, 0.400898, 1, 0, 0.94759,-0.00037511) , 
5, 0.0243877, 1, 0, 0.697826,0.0104308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503013,-0.00364279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50526,4.6059e-05) , 
9, 0.0369321, 1, 0, 0.504298,-0.0141471) , 
9, 0.0318258, 1, 0, 0.618622,0.000371916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461915,0.00239873) , 
9, 0.0491855, 1, 0, 0.59072,0.00552409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333008,-0.00104525) , 
9, 0.0611863, 1, 0, 0.539695,0.00118819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4248,-0.00265079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323834,-0.000145481) , 
14, 0.0726802, 1, 0, 0.370893,-0.0273637) , 
13, 1.05809, 1, 0, 0.484238,-0.00819211)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414853,0.00241629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881807,-0.00268305) , 
4, 0.250453, 1, 0, 0.674068,0.00460698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838357,-0.000753786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300126,-0.00348077) , 
8, 0.0342342, 1, 0, 0.556613,-0.0321305) , 
9, 0.016236, 1, 0, 0.612745,-0.0145733) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640469,-8.10739e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920317,0.00410029) , 
2, 0.0361008, 1, 0, 0.776088,0.0148875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645752,0.0030976) , 
16, 0.084602, 1, 0, 0.725134,0.029515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184015,0.00059126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550094,-0.00173539) , 
5, 0.0173522, 1, 0, 0.289554,-0.00333787) , 
16, 0.116619, 1, 0, 0.429473,0.00721527) , 
9, 0.0285536, 1, 0, 0.493989,-0.000454789)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963973,-0.0027679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897227,0.00428455) , 
6, 0.265867, 1, 0, 0.940143,0.00962113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767187,-0.00304085) , 
9, 0.042236, 1, 0, 0.884903,-0.00324581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393709,-0.00225811) , 
6, 0.502223, 1, 0, 0.635673,-0.0280562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963837,9.92139e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838856,0.00397262) , 
11, 0.700329, 1, 0, 0.918667,0.0215118) , 
2, 0.0451316, 1, 0, 0.71228,-0.0146382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362011,-0.000506445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350657,0.0038844) , 
6, 0.275277, 1, 0, 0.354718,0.0392355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136132,0.00015798) , 
10, 0.705916, 1, 0, 0.220796,0.016602) , 
7, 0.413176, 1, 0, 0.505257,-0.00147914)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901071,0.00416699) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983184,0.00782087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96223,3.15647e-06) , 
16, 0.0501565, 1, 0, 0.970872,0.00621546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919879,-0.00957641) , 
16, 0.10232, 1, 0, 0.952947,-0.00679014) , 
4, 0.218462, 1, 0, 0.941728,0.000876039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537007,0.00167056) , 
3, 0.501805, 1, 0, 0.7869,0.0135891) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510581,-0.0023608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314547,0.000981251) , 
8, 0.0400147, 1, 0, 0.38799,-0.000847149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315443,-0.00172058) , 
6, 0.460902, 1, 0, 0.353138,-0.0171954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188835,0.000358342) , 
8, 0.0598911, 1, 0, 0.293201,-0.00889643) , 
8, 0.0324941, 1, 0, 0.505068,0.000753091)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969842,0.00727107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873085,-0.00375088) , 
6, 0.126679, 1, 0, 0.931892,7.64722e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826609,0.00408333) , 
6, 0.170017, 1, 0, 0.89041,0.00831336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140552,-0.00103401) , 
11, 0.752336, 1, 0, 0.628264,0.00086002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17492,-0.000797296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520134,-0.00565273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873882,-0.00212473) , 
4, 0.289652, 1, 0, 0.692159,-0.0552059) , 
5, 0.0166619, 1, 0, 0.425021,-0.0323155) , 
6, 0.262754, 1, 0, 0.539304,-0.0136611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432049,0.00166159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444162,-0.000469977) , 
13, 1.22075, 1, 0, 0.437339,0.011661) , 
6, 0.478661, 1, 0, 0.499828,-0.00385773)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957258,0.00690467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976606,0.00184099) , 
1, 0.384795, 1, 0, 0.969036,0.0145522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913364,-0.00254575) , 
7, 0.107224, 1, 0, 0.948107,0.00475817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644864,-0.00199421) , 
11, 0.638538, 1, 0, 0.873676,-0.00420553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570743,0.0017014) , 
13, 1.06711, 1, 0, 0.773474,0.00900736) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102082,-0.00176673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44257,-0.000214141) , 
2, 0.00949839, 1, 0, 0.18535,-0.018417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177362,0.000778542) , 
14, 0.110624, 1, 0, 0.181967,-0.00569916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75134,-0.00128436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508353,-0.00385706) , 
6, 0.31508, 1, 0, 0.602842,-0.0558952) , 
5, 0.0187083, 1, 0, 0.27997,-0.0173876) , 
7, 0.260404, 1, 0, 0.493423,-0.00597115)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973398,-0.00249446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816236,0.00216279) , 
17, 0.284544, 1, 0, 0.900219,0.0110152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746741,-0.00149871) , 
9, 0.0406032, 1, 0, 0.845867,0.000990307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665225,-0.00321183) , 
8, 0.0165067, 1, 0, 0.790223,-0.0143786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901805,-0.000596562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694705,0.00326362) , 
10, 0.370541, 1, 0, 0.797456,0.0198023) , 
7, 0.132322, 1, 0, 0.792461,-0.00380374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521094,-0.00253389) , 
8, 0.0345803, 1, 0, 0.738707,-0.0125913) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126708,0.000811415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262727,-0.000775384) , 
0, 0.0608791, 1, 0, 0.177926,0.000967301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796169,0.00374633) , 
4, 0.171827, 1, 0, 0.253775,0.00742394) , 
7, 0.321359, 1, 0, 0.494601,-0.00251601)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178245,-0.00168984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888244,0.00514152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987791,0.00425499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914801,-0.00717312) , 
17, 0.295325, 1, 0, 0.959279,-0.00703507) , 
5, 0.0263712, 1, 0, 0.940075,0.0019796) , 
0, 0.0789819, 1, 0, 0.652173,-0.00623019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778957,0.00190614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52218,0.00422134) , 
11, 0.796303, 1, 0, 0.640801,0.0363184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367609,-0.00178164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372418,0.00140604) , 
14, 0.112832, 1, 0, 0.370609,0.00364681) , 
14, 0.0667177, 1, 0, 0.448403,0.0130537) , 
6, 0.259343, 1, 0, 0.537329,0.00463814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389008,-0.00105474) , 
13, 1.14589, 1, 0, 0.500235,-0.00217162)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916872,-0.0133763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881157,0.000358296) , 
10, 0.372885, 1, 0, 0.899972,-0.0212221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976671,-0.0107771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969508,0.00656997) , 
6, 0.183544, 1, 0, 0.973535,0.00278169) , 
2, 0.0365815, 1, 0, 0.937881,-0.00885236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833008,0.00386096) , 
6, 0.346738, 1, 0, 0.917371,0.00061975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471333,-0.00241727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461366,-0.000293254) , 
11, 1.14013, 1, 0, 0.466096,-0.0262614) , 
6, 0.491214, 1, 0, 0.708615,-0.0118153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336524,0.00300166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177721,0.000221024) , 
14, 0.0593274, 1, 0, 0.22265,0.0138124) , 
7, 0.41227, 1, 0, 0.504733,-0.0010634)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701662,0.00344272) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98173,-0.00605219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97349,0.00570926) , 
11, 0.369801, 1, 0, 0.977682,0.0041278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914855,-0.00843856) , 
16, 0.150801, 1, 0, 0.95739,-0.00724702) , 
4, 0.115428, 1, 0, 0.901188,0.0027975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.347044,-0.0023494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862469,-0.00324935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769989,0.00141722) , 
17, 0.609954, 1, 0, 0.829718,-0.00840869) , 
2, 0.0299812, 1, 0, 0.621618,-0.0245005) , 
13, 0.736197, 1, 0, 0.754367,-0.0115385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321505,0.000910919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119759,-0.000220182) , 
16, 0.317859, 1, 0, 0.228842,0.0085541) , 
17, 0.914975, 1, 0, 0.498449,-0.00175389)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996009,0.006095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99937,0.0176922) , 
16, 0.101281, 1, 0, 0.997633,0.00592973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94372,-0.00471738) , 
3, 0.15372, 1, 0, 0.975268,-0.00199536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716716,0.00319251) , 
3, 0.30153, 1, 0, 0.906549,0.00940916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792615,0.00108769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264367,-0.00190854) , 
10, 0.529344, 1, 0, 0.480316,-0.0139796) , 
11, 0.659063, 1, 0, 0.714624,-0.00112237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473935,0.00150486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159912,0.000373307) , 
16, 0.184939, 1, 0, 0.283417,0.0173313) , 
3, 0.668837, 1, 0, 0.517107,0.00733042)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196198,-0.000840381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644602,-0.00288256) , 
12, 0.0791296, 1, 0, 0.352453,-0.0241489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149651,-0.000880387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518723,0.000893783) , 
12, 0.0764907, 1, 0, 0.255787,-0.00441151) , 
9, 0.036912, 1, 0, 0.294881,-0.0123938) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98829,0.00934019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96415,-0.0024923) , 
16, 0.0549996, 1, 0, 0.976303,0.00713658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923744,-0.00763539) , 
16, 0.096727, 1, 0, 0.95285,-0.00714041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775498,0.00229924) , 
3, 0.434692, 1, 0, 0.883338,0.0118981) , 
12, 0.134521, 1, 0, 0.496342,-0.00407733)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753854,-0.00420042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749023,0.0025447) , 
14, 0.120873, 1, 0, 0.751582,-0.0078293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358011,0.00169474) , 
13, 0.791367, 1, 0, 0.530192,0.0155046) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901112,-0.000775134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929365,0.00413784) , 
9, 0.00966147, 1, 0, 0.915092,0.00855935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838421,-0.00704794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936231,0.0025793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71732,-0.00134395) , 
10, 0.45592, 1, 0, 0.827163,-0.00444653) , 
9, 0.0334715, 1, 0, 0.831464,-0.0236192) , 
9, 0.0175983, 1, 0, 0.857381,-0.0136469) , 
2, 0.0274362, 1, 0, 0.713632,-0.000839381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353401,-0.00176673) , 
8, 0.0472153, 1, 0, 0.641891,-0.00759998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144565,0.00157737) , 
7, 0.640763, 1, 0, 0.504746,0.000247882)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983718,0.00674993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903433,-0.00411817) , 
10, 0.199316, 1, 0, 0.935718,-0.0067542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646101,0.00158556) , 
17, 0.692424, 1, 0, 0.847205,0.00468533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897989,-0.0061562) , 
0, 0.220097, 1, 0, 0.86202,-0.00618856) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694654,-0.00444204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812524,0.00287713) , 
14, 0.0830785, 1, 0, 0.758413,-0.00481769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436963,-0.00263708) , 
11, 0.865589, 1, 0, 0.61341,-0.0292271) , 
10, 0.376488, 1, 0, 0.754087,-0.0161907) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544217,0.000804185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561277,0.00417006) , 
14, 0.116757, 1, 0, 0.553586,0.040271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163207,-0.000184031) , 
17, 0.937968, 1, 0, 0.282808,0.0103652) , 
10, 0.564733, 1, 0, 0.508704,-0.00236372)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972631,-0.010126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975338,0.00527742) , 
11, 0.460139, 1, 0, 0.974035,-0.0002565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96614,0.00702962) , 
10, 0.287959, 1, 0, 0.970888,0.0105703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733021,-0.00205014) , 
17, 0.553396, 1, 0, 0.912158,0.00129811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67593,-0.00557109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437528,-0.00116319) , 
16, 0.124947, 1, 0, 0.565454,-0.0450293) , 
10, 0.458936, 1, 0, 0.801891,-0.0134359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236668,0.00169326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153083,-0.000317678) , 
16, 0.371149, 1, 0, 0.197461,0.0112322) , 
7, 0.458078, 1, 0, 0.537014,-0.00262569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377159,-0.00299228) , 
14, 0.164141, 1, 0, 0.516927,-0.0078112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643039,0.00324921) , 
14, 0.23918, 1, 0, 0.52597,-0.00448564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439327,0.00103288) , 
13, 1.1639, 1, 0, 0.505441,0.00188128)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989333,-0.00188954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994221,0.0166917) , 
11, 0.341316, 1, 0, 0.991885,0.0102276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696767,-0.00245586) , 
8, 0.0225914, 1, 0, 0.880128,0.000109068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764788,0.0038496) , 
6, 0.238178, 1, 0, 0.84892,0.00733187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814141,-0.0035288) , 
9, 0.0466253, 1, 0, 0.842109,0.0018341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305506,0.00342169) , 
10, 0.65972, 1, 0, 0.704727,0.0124331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780586,0.00194041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28075,-0.00172227) , 
16, 0.111212, 1, 0, 0.445332,-0.00947765) , 
6, 0.347069, 1, 0, 0.607757,0.00424222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444318,-0.00186204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264016,0.000129551) , 
7, 0.274847, 1, 0, 0.330947,-0.0149942) , 
11, 0.96735, 1, 0, 0.499435,-0.00328545)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545431,-0.00273615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954556,-0.00614071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830179,0.003076) , 
6, 0.361528, 1, 0, 0.90889,0.00872737) , 
2, 0.028889, 1, 0, 0.791905,-0.00423551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613497,-0.00545172) , 
15, 0.0801499, 1, 0, 0.741291,-0.0226649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739087,0.00229353) , 
15, 0.145991, 1, 0, 0.740841,-0.0132127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738337,0.00340505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656263,-0.00101914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389805,0.000863893) , 
16, 0.102135, 1, 0, 0.501823,0.00230094) , 
15, 0.162575, 1, 0, 0.583669,0.0161545) , 
9, 0.037872, 1, 0, 0.675437,-0.000992097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286879,0.0020109) , 
8, 0.055094, 1, 0, 0.595395,0.00611099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179028,-0.0010262) , 
10, 0.794016, 1, 0, 0.50027,0.000960661)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411603,-0.000590888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269986,0.0018448) , 
11, 0.767117, 1, 0, 0.315058,0.0215562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105757,-0.00100619) , 
10, 0.692796, 1, 0, 0.200802,0.0021816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574606,-0.00302234) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845281,-0.000875152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932654,0.00406273) , 
0, 0.173075, 1, 0, 0.887287,0.00850155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929118,-0.00327914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648024,-0.00273879) , 
13, 0.832917, 1, 0, 0.790348,-0.0339312) , 
16, 0.110296, 1, 0, 0.84305,-0.0108623) , 
4, 0.184886, 1, 0, 0.780096,-0.0226124) , 
4, 0.107392, 1, 0, 0.437354,-0.0079429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921242,0.00538469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913906,0.000441883) , 
1, 0.476467, 1, 0, 0.917232,0.0225823) , 
12, 0.249826, 1, 0, 0.497575,-0.00411226)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992695,0.00912014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919338,-0.0101189) , 
11, 0.496285, 1, 0, 0.959974,-0.00939868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971434,-0.00312441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957938,0.00656033) , 
17, 0.291784, 1, 0, 0.964872,0.00977335) , 
14, 0.0690704, 1, 0, 0.962034,-0.0013341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740828,0.00169459) , 
3, 0.399234, 1, 0, 0.896108,0.0069294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.395292,0.00041457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276634,-0.00103901) , 
3, 0.656615, 1, 0, 0.304655,-0.0139667) , 
17, 0.783307, 1, 0, 0.631067,-0.00243453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385697,0.00107726) , 
9, 0.0643824, 1, 0, 0.587325,0.00154068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200558,0.00116298) , 
8, 0.0593058, 1, 0, 0.499459,0.00530927)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915408,0.00450043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187137,-0.00258329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657831,-0.000292965) , 
5, 0.0173442, 1, 0, 0.347129,-0.0258155) , 
11, 0.634344, 1, 0, 0.495807,-0.0144828) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776678,0.00188638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59506,-0.00326579) , 
15, 0.242872, 1, 0, 0.688788,-0.0123643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256471,0.00131399) , 
11, 0.69736, 1, 0, 0.387991,0.0104001) , 
9, 0.0286925, 1, 0, 0.422757,0.00237634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85942,-0.0046235) , 
2, 0.0441673, 1, 0, 0.47571,-0.00227415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950215,0.00507671) , 
4, 0.488648, 1, 0, 0.533327,0.000562963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330548,-0.00131965) , 
6, 0.749165, 1, 0, 0.494719,-0.00554812)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446469,-0.00224403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192291,-0.00030572) , 
16, 0.19021, 1, 0, 0.254735,-0.0147095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934992,-0.00435384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840616,0.00334052) , 
6, 0.225271, 1, 0, 0.881096,0.0203126) , 
4, 0.16911, 1, 0, 0.4774,-0.00225945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973706,0.000301527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703082,-0.00486762) , 
17, 0.450425, 1, 0, 0.863528,-0.0311002) , 
5, 0.0390688, 1, 0, 0.581937,-0.0100675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931205,-0.00288353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557961,0.00236296) , 
17, 0.37333, 1, 0, 0.667229,0.0304211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221014,1.98168e-05) , 
16, 0.149679, 1, 0, 0.400524,0.0124199) , 
9, 0.037872, 1, 0, 0.494749,0.000740056)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498078,-0.00199422) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903817,-0.00957714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928559,0.00270659) , 
10, 0.312007, 1, 0, 0.915244,-0.0145472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969716,-0.000751542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825612,0.00290587) , 
17, 0.474064, 1, 0, 0.895525,0.0209285) , 
8, 0.0171427, 1, 0, 0.905422,0.00312406) , 
12, 0.104488, 1, 0, 0.829357,-0.00479954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792116,0.0035914) , 
10, 0.530436, 1, 0, 0.823544,0.0033758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887148,0.00130336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413577,-0.00201328) , 
13, 0.736197, 1, 0, 0.591148,-0.0236083) , 
15, 0.174842, 1, 0, 0.735073,-0.00689683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454115,-0.0030475) , 
7, 0.369547, 1, 0, 0.708905,-0.0112983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261969,0.00171654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151213,-0.000227981) , 
16, 0.328915, 1, 0, 0.200547,0.0110178) , 
7, 0.438307, 1, 0, 0.50169,-0.00220191)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14761,-0.000419081) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984932,-0.0108025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995892,0.0124053) , 
12, 0.214241, 1, 0, 0.990815,0.00171342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956884,-0.00725038) , 
11, 0.488009, 1, 0, 0.979609,-0.00302046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675144,0.00343669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919273,0.00240581) , 
4, 0.293467, 1, 0, 0.784221,0.0363492) , 
3, 0.244189, 1, 0, 0.891488,0.0147354) , 
0, 0.0715461, 1, 0, 0.610943,0.007163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46009,0.00389659) , 
15, 0.275908, 1, 0, 0.592125,0.0124725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382204,-0.00166879) , 
13, 1.03019, 1, 0, 0.536374,0.00150632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458944,0.00172907) , 
11, 1.29202, 1, 0, 0.524238,0.00753528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351772,-0.00206071) , 
15, 0.370302, 1, 0, 0.506865,0.00330806)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8841,0.00236361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915721,-0.00380044) , 
5, 0.0371303, 1, 0, 0.900455,-0.000478013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490525,0.00146435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522711,0.004188) , 
14, 0.0156088, 1, 0, 0.507452,0.0373397) , 
10, 0.327753, 1, 0, 0.697372,0.0190641) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95722,0.00493361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9927,0.0137012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648365,-0.00496478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30877,-0.000756418) , 
3, 0.466976, 1, 0, 0.424903,-0.0267439) , 
3, 0.214555, 1, 0, 0.564671,-0.0180299) , 
7, 0.0757782, 1, 0, 0.653268,-0.00925827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517977,0.00185373) , 
9, 0.0508673, 1, 0, 0.600417,0.0047745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223281,-0.00100104) , 
3, 0.729572, 1, 0, 0.435654,-0.00548141) , 
15, 0.0497619, 1, 0, 0.49242,-0.000157555)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893988,-0.00242521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638234,0.002773) , 
13, 0.563085, 1, 0, 0.763827,0.0119942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452063,0.00337563) , 
11, 0.798915, 1, 0, 0.600092,0.0381141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349285,-0.000417492) , 
9, 0.0547541, 1, 0, 0.509395,0.0215103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183862,-2.43309e-05) , 
8, 0.0493319, 1, 0, 0.349415,0.0107502) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911485,-0.00878708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965046,-0.00211741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844516,0.00271158) , 
11, 0.479148, 1, 0, 0.908023,0.0151687) , 
10, 0.310851, 1, 0, 0.909192,-0.00218124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734698,-0.00508994) , 
8, 0.0280274, 1, 0, 0.869935,-0.0180628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867552,0.00344965) , 
16, 0.168354, 1, 0, 0.869472,-0.00794792) , 
12, 0.153739, 1, 0, 0.504603,0.00517059)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940914,0.00363847) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951288,0.000696644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361374,-0.00216119) , 
3, 0.426295, 1, 0, 0.552227,-0.0257774) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879298,0.00108984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737403,-0.00586083) , 
14, 0.0935697, 1, 0, 0.815145,-0.0234962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264356,0.000702515) , 
17, 0.745554, 1, 0, 0.436114,0.000948551) , 
14, 0.0449345, 1, 0, 0.475798,-0.00818567) , 
10, 0.211738, 1, 0, 0.541904,-0.00480469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491133,0.00120954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600647,0.00352025) , 
15, 0.306997, 1, 0, 0.537208,0.0264822) , 
14, 0.15278, 1, 0, 0.541077,0.000702988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344233,0.00176849) , 
9, 0.0611863, 1, 0, 0.501624,0.0063267)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66888,-0.00403598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935414,0.00091396) , 
4, 0.407207, 1, 0, 0.802093,-0.0267236) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700024,-0.00216247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589513,0.00174437) , 
6, 0.23862, 1, 0, 0.636751,0.00921595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529798,-0.00249422) , 
15, 0.0458935, 1, 0, 0.612362,-9.28117e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752458,0.00433567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245411,0.000562697) , 
16, 0.22003, 1, 0, 0.495759,0.0317614) , 
15, 0.0668752, 1, 0, 0.560796,0.0139944) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716459,-0.000452116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247354,-0.0026651) , 
10, 0.629442, 1, 0, 0.485114,-0.0251606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220189,0.000388131) , 
3, 0.668787, 1, 0, 0.339369,-0.00759271) , 
15, 0.136427, 1, 0, 0.446597,0.00286104) , 
7, 0.0459085, 1, 0, 0.500982,-0.0016649)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37447,-0.000806123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.343644,0.00258337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104542,0.000125744) , 
3, 0.601133, 1, 0, 0.161441,0.0102157) , 
16, 0.19892, 1, 0, 0.219082,0.0032165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895705,0.000206217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493649,0.00202754) , 
11, 0.638667, 1, 0, 0.613735,0.0296187) , 
2, 0.0166166, 1, 0, 0.331503,0.0107374) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819102,-0.00248759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947411,0.00446743) , 
4, 0.444176, 1, 0, 0.88297,-0.00388206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890617,0.00316145) , 
14, 0.0370664, 1, 0, 0.885484,0.00677968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828743,-0.00511405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700473,-0.000459554) , 
10, 0.545728, 1, 0, 0.778925,-0.0316226) , 
15, 0.0945312, 1, 0, 0.836458,-0.0108885) , 
5, 0.0300529, 1, 0, 0.500422,0.00350308)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788819,0.0050914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565753,-0.00147893) , 
14, 0.073729, 1, 0, 0.679932,0.00840786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606535,0.0041785) , 
6, 0.353708, 1, 0, 0.654457,0.0268246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199564,1.29295e-05) , 
3, 0.620136, 1, 0, 0.362972,0.00977657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954968,-0.0106294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853004,0.00287477) , 
6, 0.261296, 1, 0, 0.9058,0.00689825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971332,0.000907843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670964,-0.00309434) , 
3, 0.33024, 1, 0, 0.786975,-0.0353049) , 
15, 0.0679582, 1, 0, 0.843055,-0.0153868) , 
5, 0.0353572, 1, 0, 0.501129,0.00253515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505172,-0.00152855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435944,-0.00285584) , 
15, 0.357605, 1, 0, 0.468026,-0.0333262) , 
14, 0.188019, 1, 0, 0.497217,-0.00170204)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963681,0.00567492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870664,-0.00219882) , 
13, 0.498874, 1, 0, 0.922085,0.000371495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823456,0.00297749) , 
13, 0.636068, 1, 0, 0.885687,0.00890325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669003,-0.000332286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505596,-0.00241841) , 
15, 0.0593943, 1, 0, 0.571653,-0.0334233) , 
13, 0.85369, 1, 0, 0.752211,-0.00908706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108146,-0.000100133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443591,0.000213654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550732,0.00282025) , 
14, 0.115196, 1, 0, 0.494071,0.0274054) , 
2, 0.0103879, 1, 0, 0.24888,0.00917306) , 
10, 0.545831, 1, 0, 0.470692,0.00112605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846147,-0.00482164) , 
12, 0.311429, 1, 0, 0.498945,-0.00205186)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556565,0.00394055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464123,0.00185767) , 
15, 0.204702, 1, 0, 0.502108,0.0422179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151736,0.000123866) , 
17, 0.909012, 1, 0, 0.243517,0.0124996) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88382,0.00278686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712225,-0.00365684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930951,0.00275313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867073,-0.00521192) , 
14, 0.0368658, 1, 0, 0.902249,-0.00797844) , 
4, 0.309722, 1, 0, 0.856656,-0.0197935) , 
2, 0.0309822, 1, 0, 0.862891,-0.00976362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822956,0.0026576) , 
9, 0.0487562, 1, 0, 0.854822,-0.0002555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784097,-0.0021022) , 
14, 0.125346, 1, 0, 0.840277,-0.00578011) , 
4, 0.143894, 1, 0, 0.511093,0.00430332)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875838,-0.000178729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516969,-0.00279464) , 
13, 0.800334, 1, 0, 0.66494,-0.0256702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684821,-0.00632171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655107,0.00327088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692966,-0.00190963) , 
14, 0.134292, 1, 0, 0.675072,0.00274671) , 
14, 0.0729618, 1, 0, 0.679107,-0.0131493) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554429,0.00557857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592021,0.00164911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453042,-0.000932636) , 
14, 0.0580836, 1, 0, 0.523353,0.0057516) , 
6, 0.304203, 1, 0, 0.530905,0.016164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464193,0.0033968) , 
14, 0.101899, 1, 0, 0.510716,0.0269153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318432,0.000296976) , 
9, 0.0519685, 1, 0, 0.426866,0.0174512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378598,-0.00100331) , 
14, 0.184649, 1, 0, 0.42099,0.0133348) , 
6, 0.20397, 1, 0, 0.474571,0.0078371) , 
15, 0.0243007, 1, 0, 0.501482,0.00310048)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992583,0.00107726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997711,0.0164226) , 
10, 0.344202, 1, 0, 0.994984,0.00580498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821364,-0.00329399) , 
3, 0.22436, 1, 0, 0.946389,-0.00340284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818932,0.00262118) , 
11, 0.526276, 1, 0, 0.915033,0.00272041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300502,-0.00234114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871692,6.30694e-05) , 
4, 0.246391, 1, 0, 0.45964,-0.026739) , 
11, 0.638667, 1, 0, 0.725394,-0.00954739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451183,0.0018622) , 
11, 0.986095, 1, 0, 0.679554,-0.00259393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42496,-0.00144288) , 
13, 1.22718, 1, 0, 0.629497,-0.00865236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226027,0.000713569) , 
8, 0.0523713, 1, 0, 0.496625,-0.00196891)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997714,0.0142186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991076,-0.00114825) , 
1, 0.412012, 1, 0, 0.99439,0.00334979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965283,0.00615198) , 
3, 0.192218, 1, 0, 0.985033,0.0108163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898005,-0.00148235) , 
10, 0.466995, 1, 0, 0.95966,0.00526768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686896,0.00119307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648394,0.00508124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854039,0.00389189) , 
2, 0.0322255, 1, 0, 0.755368,0.0705164) , 
16, 0.0979673, 1, 0, 0.724948,0.0482305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466244,0.000150357) , 
15, 0.187701, 1, 0, 0.636506,0.0328286) , 
11, 0.574849, 1, 0, 0.776892,0.0208554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384593,-0.00317333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364756,0.00348426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202063,-0.000784017) , 
14, 0.0755437, 1, 0, 0.257987,0.00988357) , 
14, 0.0335018, 1, 0, 0.284179,-0.00196808) , 
7, 0.384355, 1, 0, 0.608693,0.0130641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162237,-0.00176532) , 
10, 0.794016, 1, 0, 0.509706,0.00401461)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64954,-0.00271513) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453484,-0.0028964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180846,-0.000168759) , 
16, 0.171338, 1, 0, 0.236787,-0.0138926) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819557,-0.00398766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987458,0.00177712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958358,0.00638357) , 
6, 0.161314, 1, 0, 0.972173,0.0135046) , 
2, 0.0287635, 1, 0, 0.928254,-0.000118575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838903,0.00103593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8472,0.00547997) , 
16, 0.0983026, 1, 0, 0.842895,0.0433686) , 
6, 0.35771, 1, 0, 0.895144,0.0167499) , 
12, 0.1029, 1, 0, 0.562426,0.00126392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290111,0.00125513) , 
3, 0.818606, 1, 0, 0.482401,0.00807866) , 
14, 0.00865354, 1, 0, 0.49998,0.00427032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515138,-0.00242979) , 
14, 0.220682, 1, 0, 0.501185,0.00120243)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986043,-0.00200306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979648,0.00617523) , 
11, 0.446777, 1, 0, 0.982664,0.00504188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931792,-0.00662008) , 
13, 0.64687, 1, 0, 0.965499,-0.00315844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758747,0.005574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230758,0.000539826) , 
10, 0.595191, 1, 0, 0.36442,0.0149904) , 
10, 0.424541, 1, 0, 0.603008,0.00778653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631754,0.000928615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34404,-0.00152731) , 
9, 0.028172, 1, 0, 0.426379,-0.0121398) , 
6, 0.308507, 1, 0, 0.547797,0.00155794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479744,0.00229709) , 
6, 0.476793, 1, 0, 0.53869,0.00606071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386273,-0.000706955) , 
6, 0.593089, 1, 0, 0.494043,-0.000267592)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800579,-0.000179488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435074,-0.00255468) , 
13, 0.499488, 1, 0, 0.602462,-0.0230298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175308,0.000775693) , 
3, 0.526625, 1, 0, 0.263359,0.0050593) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97393,-0.00287655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993287,0.0111487) , 
12, 0.227213, 1, 0, 0.983205,0.00739672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956265,-0.00812564) , 
16, 0.0926864, 1, 0, 0.973783,-0.000790373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878883,-0.00564705) , 
11, 0.523398, 1, 0, 0.951144,-0.00879301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81469,0.00197292) , 
17, 0.487673, 1, 0, 0.920206,-0.00140346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592072,-0.00356281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561039,-0.00016014) , 
8, 0.0305985, 1, 0, 0.574706,-0.03506) , 
11, 0.834375, 1, 0, 0.784316,-0.014641) , 
5, 0.0185893, 1, 0, 0.50036,-0.00390302)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978759,-0.00432678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989859,0.0102827) , 
9, 0.0211921, 1, 0, 0.984382,0.00644197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670574,-0.00444052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299706,9.03617e-07) , 
16, 0.314291, 1, 0, 0.493668,-0.0168424) , 
16, 0.145551, 1, 0, 0.720647,-0.00607223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547716,0.00166488) , 
6, 0.277549, 1, 0, 0.677208,-0.000528428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303146,-0.00152004) , 
13, 0.934161, 1, 0, 0.58522,-0.00524959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695969,-0.00487033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377783,-0.000671409) , 
3, 0.53687, 1, 0, 0.433441,-0.02233) , 
6, 0.40443, 1, 0, 0.516343,-0.0130006) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421752,0.00143728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484816,-0.00114262) , 
14, 0.186415, 1, 0, 0.451684,0.00290753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459374,0.00238039) , 
15, 0.374042, 1, 0, 0.454365,0.0142643) , 
14, 0.146237, 1, 0, 0.502778,-0.00703312)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566066,-0.00240302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21074,0.000580207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101556,-0.00116712) , 
10, 0.73823, 1, 0, 0.15369,-0.00378405) , 
10, 0.423021, 1, 0, 0.210545,-0.00910443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598651,-0.00326702) , 
12, 0.0947386, 1, 0, 0.268499,-0.0169711) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993179,-0.00326382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979026,0.00917192) , 
3, 0.135042, 1, 0, 0.986918,0.0121044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8929,-0.00758127) , 
13, 0.662353, 1, 0, 0.952868,-0.00628201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848547,-0.000674883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837146,0.00463002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702145,-0.000306628) , 
16, 0.117626, 1, 0, 0.761496,0.0298728) , 
16, 0.0722738, 1, 0, 0.790439,0.017599) , 
13, 0.810237, 1, 0, 0.874118,0.00529616) , 
12, 0.123892, 1, 0, 0.489475,-0.00884628)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336125,0.00161129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0980584,-0.000662772) , 
7, 0.54383, 1, 0, 0.172635,0.00270585) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922268,-0.00556299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977775,0.00488237) , 
5, 0.0376339, 1, 0, 0.948145,-0.00771254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92089,0.00583931) , 
8, 0.0318526, 1, 0, 0.941589,0.00313242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43201,-0.00183177) , 
3, 0.471961, 1, 0, 0.728309,-0.0141706) , 
12, 0.0668195, 1, 0, 0.508651,-0.00749935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975644,0.0101988) , 
4, 0.568123, 1, 0, 0.540648,-0.00472734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394226,0.00101578) , 
11, 1.11655, 1, 0, 0.50302,0.00188194)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591254,-0.00305371) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670174,-8.96168e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522469,0.00400814) , 
6, 0.194778, 1, 0, 0.591436,0.0219741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94545,0.00231831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216209,-0.00221322) , 
10, 0.426703, 1, 0, 0.44499,-0.0170374) , 
9, 0.0285313, 1, 0, 0.511124,0.000579968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498963,0.00236121) , 
6, 0.496828, 1, 0, 0.506896,0.0175009) , 
14, 0.00779899, 1, 0, 0.517563,0.0109305) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351267,-0.00353234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279615,-0.00049717) , 
6, 0.302533, 1, 0, 0.299826,-0.0182585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644431,0.00159943) , 
14, 0.245271, 1, 0, 0.352935,-0.0124439) , 
15, 0.199048, 1, 0, 0.453231,0.00179637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965061,-0.00597869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701034,-0.00502565) , 
13, 0.895841, 1, 0, 0.835475,-0.0458891) , 
5, 0.0518239, 1, 0, 0.501181,-0.0041855)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989755,-0.000507307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626584,0.00444881) , 
16, 0.152168, 1, 0, 0.802138,0.0159728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210899,0.000267588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87584,-0.0045559) , 
12, 0.0989042, 1, 0, 0.446915,-0.00716059) , 
6, 0.162231, 1, 0, 0.559052,0.000142195) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.161897,-0.00150444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717775,0.00113524) , 
4, 0.0998267, 1, 0, 0.262756,-0.0168472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785477,-0.0047817) , 
12, 0.130133, 1, 0, 0.376394,-0.0252002) , 
6, 0.306438, 1, 0, 0.462412,-0.0132659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405182,0.000627825) , 
13, 1.22115, 1, 0, 0.450923,-0.00780775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970786,7.47998e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876199,0.00485226) , 
17, 0.309366, 1, 0, 0.923594,0.0290348) , 
12, 0.265482, 1, 0, 0.501597,-0.00385798)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978472,-0.0102801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967825,0.00396663) , 
7, 0.134908, 1, 0, 0.973844,-0.00226722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781307,-0.00561276) , 
6, 0.234753, 1, 0, 0.923893,-0.0149599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278028,0.00015345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939065,0.00823575) , 
0, 0.096636, 1, 0, 0.481005,0.0192772) , 
11, 0.58076, 1, 0, 0.714032,0.00126326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389493,-0.00326135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360652,-0.00231823) , 
13, 0.831365, 1, 0, 0.371711,-0.0331394) , 
13, 0.782543, 1, 0, 0.611385,-0.00905248) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824185,-0.000570729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2576,0.00222259) , 
3, 0.654294, 1, 0, 0.387215,0.0270362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426647,-0.000290128) , 
13, 1.29833, 1, 0, 0.400606,0.015503) , 
13, 0.907046, 1, 0, 0.512062,0.0025185)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552636,-0.0023703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978527,-0.00478909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974962,0.00774599) , 
7, 0.202356, 1, 0, 0.97695,0.0030878) , 
5, 0.0155615, 1, 0, 0.841582,-0.00588469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324521,0.000545151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953634,0.00873751) , 
12, 0.124447, 1, 0, 0.60278,0.0300599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947563,-0.00199149) , 
4, 0.459909, 1, 0, 0.735289,0.0162987) , 
13, 0.596023, 1, 0, 0.779885,0.00699144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545506,-0.00217001) , 
6, 0.48975, 1, 0, 0.735193,-0.00141391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192248,0.000537426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396225,0.00158695) , 
11, 1.12041, 1, 0, 0.286676,0.0203792) , 
3, 0.648512, 1, 0, 0.512189,0.00942168)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958276,-0.000679322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961195,0.00581001) , 
16, 0.107998, 1, 0, 0.959443,0.00682425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743706,-0.00226061) , 
15, 0.15011, 1, 0, 0.903148,-0.00162561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826999,0.00309665) , 
14, 0.153759, 1, 0, 0.887052,0.00417959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28147,-0.00227761) , 
7, 0.403814, 1, 0, 0.786425,-0.00267161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441102,-0.00196306) , 
11, 0.847573, 1, 0, 0.710082,-0.00983961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270936,0.00133834) , 
16, 0.324004, 1, 0, 0.637323,-0.00559813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516498,0.00109054) , 
13, 1.14589, 1, 0, 0.613797,-0.000100231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170004,-0.00157717) , 
17, 1.16751, 1, 0, 0.500114,-0.0070868)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890041,-0.00191608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928152,0.00516591) , 
9, 0.0271276, 1, 0, 0.906232,0.00527393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822495,-0.000766584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741278,-0.00394597) , 
8, 0.0125386, 1, 0, 0.78425,-0.0256468) , 
10, 0.339865, 1, 0, 0.848034,-0.00947832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686547,0.0021799) , 
10, 0.577779, 1, 0, 0.809236,0.000155237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663081,-0.00309077) , 
8, 0.0188082, 1, 0, 0.772767,-0.00919771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683342,0.00232997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307377,-0.00140784) , 
8, 0.0386431, 1, 0, 0.405997,-0.00918603) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293088,3.26827e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254156,-0.000526108) , 
14, 0.117017, 1, 0, 0.271853,-0.0042007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285424,0.00199464) , 
13, 0.915864, 1, 0, 0.278768,0.0158152) , 
15, 0.0995238, 1, 0, 0.321306,0.00745615) , 
8, 0.0299763, 1, 0, 0.502879,0.00075815)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986261,-0.000968335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982313,0.00700477) , 
10, 0.363974, 1, 0, 0.984259,0.00747708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797713,-0.00436528) , 
11, 0.437262, 1, 0, 0.919677,-0.0095884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686733,0.00185311) , 
13, 0.883437, 1, 0, 0.824337,0.00739748) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197058,0.000874469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849886,-0.000287885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611329,-0.00375559) , 
14, 0.083275, 1, 0, 0.761709,-0.0199098) , 
5, 0.0104526, 1, 0, 0.536931,-0.00767778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407323,-0.00220238) , 
6, 0.402196, 1, 0, 0.486408,-0.0205136) , 
7, 0.147819, 1, 0, 0.618687,-0.00958805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208136,0.000692978) , 
17, 1.11675, 1, 0, 0.494762,-0.00316316)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868762,-0.00253884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973524,-0.000898399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376518,0.00389622) , 
7, 0.144301, 1, 0, 0.608909,0.0250682) , 
13, 0.593136, 1, 0, 0.698872,0.013392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597449,-0.0021687) , 
6, 0.347476, 1, 0, 0.674976,0.00358037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556139,0.0019799) , 
13, 1.12047, 1, 0, 0.64633,0.012524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732641,-0.00815729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565511,0.000417983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798591,-0.00519552) , 
5, 0.0361053, 1, 0, 0.65514,-0.017999) , 
9, 0.0375232, 1, 0, 0.674186,-0.0357171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440078,0.00078947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144977,-0.0013386) , 
10, 0.695625, 1, 0, 0.269662,-0.00625949) , 
8, 0.0265633, 1, 0, 0.40687,-0.016251) , 
9, 0.0317281, 1, 0, 0.497908,-0.00531136)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438158,-0.00437947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885105,-0.00050749) , 
2, 0.0335331, 1, 0, 0.659622,-0.0312238) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746359,-0.00440744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482949,0.00311998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33805,-0.00113215) , 
9, 0.0323656, 1, 0, 0.398355,0.00646566) , 
16, 0.114225, 1, 0, 0.501472,-0.0103247) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879763,0.000201876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499856,0.00171946) , 
13, 0.728744, 1, 0, 0.642397,0.0224636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163553,-0.000466368) , 
7, 0.389606, 1, 0, 0.398643,0.00744553) , 
14, 0.0752943, 1, 0, 0.432126,0.00165931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945075,0.00736667) , 
12, 0.28531, 1, 0, 0.4706,0.00547181) , 
15, 0.0248809, 1, 0, 0.498714,1.4017e-05)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406325,0.00319322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29568,0.000167607) , 
9, 0.0332208, 1, 0, 0.329907,0.0161083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118813,-0.000873057) , 
17, 1.05521, 1, 0, 0.208895,-0.000728097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721594,0.00358677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792316,-0.00100831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825025,0.00304698) , 
15, 0.141416, 1, 0, 0.808167,0.0144831) , 
4, 0.191525, 1, 0, 0.769978,0.038841) , 
4, 0.118499, 1, 0, 0.356952,0.00971329) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961353,-0.0138677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981238,0.0106248) , 
10, 0.373477, 1, 0, 0.969049,-0.00137659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836697,-0.00722766) , 
6, 0.326262, 1, 0, 0.933682,-0.0164674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76633,0.00128556) , 
3, 0.542596, 1, 0, 0.891484,-0.00648188) , 
4, 0.287787, 1, 0, 0.508001,0.00513682)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45674,-0.00240706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995205,0.00798471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954526,0.00694373) , 
3, 0.186499, 1, 0, 0.974906,0.0171342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948786,-0.00374307) , 
12, 0.22594, 1, 0, 0.962826,0.00441206) , 
12, 0.10381, 1, 0, 0.843798,-0.00320359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862455,0.00468753) , 
15, 0.192102, 1, 0, 0.847391,0.0026757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621792,0.000138365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433737,-0.00207274) , 
9, 0.0290856, 1, 0, 0.496341,-0.0297046) , 
6, 0.437013, 1, 0, 0.691222,-0.0117291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111967,0.000363105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523064,0.00245926) , 
4, 0.062671, 1, 0, 0.245614,0.0185842) , 
10, 0.636811, 1, 0, 0.501985,0.00114403)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880897,0.00413792) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935596,-0.0142054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968281,0.00539396) , 
10, 0.237707, 1, 0, 0.956099,-0.00198393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878902,-0.00611034) , 
10, 0.466277, 1, 0, 0.933735,-0.0125484) , 
1, 0.271135, 1, 0, 0.920364,-0.000733632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449973,-0.00212107) , 
17, 0.615492, 1, 0, 0.763655,-0.0153462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576093,0.00262155) , 
8, 0.0289819, 1, 0, 0.733963,-0.00736733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386988,-0.00283428) , 
8, 0.0351927, 1, 0, 0.66352,-0.0159986) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272294,0.000735997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163824,-0.000926035) , 
14, 0.0693959, 1, 0, 0.202453,-0.00498937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332119,0.00159661) , 
6, 0.474217, 1, 0, 0.249404,0.00772882) , 
8, 0.0417424, 1, 0, 0.496582,-0.00643365)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99087,0.00786286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949441,-0.00649895) , 
17, 0.271506, 1, 0, 0.971715,-0.00135059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730394,0.0054468) , 
11, 0.552309, 1, 0, 0.893952,0.011506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170211,-0.00260044) , 
11, 0.782497, 1, 0, 0.653387,-0.00380048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720415,0.00112946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562172,0.00417758) , 
10, 0.400886, 1, 0, 0.641243,0.0445526) , 
6, 0.352564, 1, 0, 0.649057,0.0134378) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779596,-0.00148025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540003,-0.00336502) , 
7, 0.130746, 1, 0, 0.659528,-0.0382701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508743,-8.74459e-07) , 
9, 0.0576698, 1, 0, 0.599205,-0.0229665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203948,0.000519293) , 
16, 0.204083, 1, 0, 0.414725,-0.00881496) , 
9, 0.031288, 1, 0, 0.503448,-0.00038959)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883948,0.00479542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971059,-0.00540343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913542,0.00392397) , 
6, 0.205455, 1, 0, 0.94414,0.00793058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894198,-0.0102074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443461,0.000771035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407285,-0.000929162) , 
15, 0.207944, 1, 0, 0.427828,-0.000558338) , 
10, 0.358502, 1, 0, 0.58531,-0.0160067) , 
8, 0.0172012, 1, 0, 0.731828,-0.00623258) , 
15, 0.0218473, 1, 0, 0.759504,-0.00136036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435137,-0.00158744) , 
6, 0.52392, 1, 0, 0.640917,-0.0135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259573,-0.000221296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206869,0.00157777) , 
9, 0.0371758, 1, 0, 0.230196,0.0123079) , 
8, 0.0487411, 1, 0, 0.491966,-0.00414062)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984255,0.00973986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920649,-0.00265027) , 
6, 0.15346, 1, 0, 0.953129,-0.000476268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445968,0.00169603) , 
8, 0.0295327, 1, 0, 0.711805,0.00786487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551246,-0.00290914) , 
6, 0.313075, 1, 0, 0.669279,-0.0024557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589009,0.00247058) , 
6, 0.483885, 1, 0, 0.645211,0.0125993) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833487,2.63079e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295315,-0.00270365) , 
10, 0.40816, 1, 0, 0.464769,-0.0282254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186099,-0.000567549) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80597,-0.000214965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912834,0.00253338) , 
12, 0.170389, 1, 0, 0.859785,0.00946004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66181,0.00248559) , 
8, 0.0281359, 1, 0, 0.787627,0.0251437) , 
1, 0.100586, 1, 0, 0.392881,0.00274436) , 
15, 0.155182, 1, 0, 0.411266,-0.00517588) , 
14, 0.0672265, 1, 0, 0.500641,0.00161485)    );
  // itree = 1000
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907695,0.000116768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302346,-0.00409534) , 
10, 0.417391, 1, 0, 0.517538,-0.0397569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181389,-0.000544734) , 
13, 0.701878, 1, 0, 0.280607,-0.0174819) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85681,-0.0027746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893198,-0.00206322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995592,0.00676855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957949,0.0060827) , 
3, 0.168975, 1, 0, 0.975322,0.0158865) , 
0, 0.149462, 1, 0, 0.94886,0.00655347) , 
5, 0.0330643, 1, 0, 0.926734,0.000223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749425,0.00161771) , 
13, 1.05775, 1, 0, 0.886291,0.00668459) , 
2, 0.0210614, 1, 0, 0.519986,-0.00793079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389215,0.00126612) , 
6, 0.749165, 1, 0, 0.497733,-0.00178252)    );
  // itree = 1001
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950773,-0.0172025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975101,0.00311392) , 
15, 0.0269187, 1, 0, 0.964892,-0.00858878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957703,0.00686559) , 
6, 0.2391, 1, 0, 0.962598,0.00260566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540357,-0.00271116) , 
3, 0.415078, 1, 0, 0.829573,-0.0113586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919058,-0.00176691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630683,0.00373301) , 
11, 0.557079, 1, 0, 0.782095,0.0261262) , 
15, 0.137294, 1, 0, 0.813673,0.00119409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130509,-0.00070002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668232,-0.00346999) , 
12, 0.104113, 1, 0, 0.237228,-0.0194881) , 
10, 0.582278, 1, 0, 0.531402,-0.00893351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401086,0.000724871) , 
11, 1.1339, 1, 0, 0.500959,-0.00327065)    );
  // itree = 1002
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991684,0.00954883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983992,-0.00125663) , 
4, 0.484601, 1, 0, 0.988926,0.00610326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879426,-0.002782) , 
6, 0.249921, 1, 0, 0.960547,-0.000304477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801884,-0.00427839) , 
13, 0.853205, 1, 0, 0.923541,-0.01069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768098,0.00400831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464769,0.000207587) , 
17, 0.713958, 1, 0, 0.557272,0.022232) , 
17, 0.523904, 1, 0, 0.76355,0.00369072) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829917,-0.000219305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490076,-0.00426029) , 
8, 0.0406936, 1, 0, 0.642682,-0.0481037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23539,0.000833644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131642,-0.00113065) , 
10, 0.704275, 1, 0, 0.164579,-0.00726973) , 
10, 0.509449, 1, 0, 0.264212,-0.0157792) , 
7, 0.275451, 1, 0, 0.483604,-0.0072248)    );
  // itree = 1003
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977117,-0.00280583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576253,-0.00455851) , 
11, 0.536307, 1, 0, 0.751268,-0.0240202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694451,0.0015778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36456,0.00021743) , 
10, 0.421327, 1, 0, 0.500464,0.0135399) , 
13, 0.883904, 1, 0, 0.632902,-0.00629376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530246,-0.00382441) , 
9, 0.032523, 1, 0, 0.608747,-0.0163232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.146836,-0.000358783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967878,0.00664848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776584,-0.00206647) , 
16, 0.084196, 1, 0, 0.867659,0.00170507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533542,0.00180922) , 
11, 0.72263, 1, 0, 0.688533,0.0217981) , 
2, 0.0026203, 1, 0, 0.425174,0.00865193) , 
15, 0.0995238, 1, 0, 0.495118,-0.000863982)    );
  // itree = 1004
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315621,-0.000558206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163066,0.000707769) , 
7, 0.422791, 1, 0, 0.217843,0.00238081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627897,0.00205574) , 
4, 0.083465, 1, 0, 0.297721,0.00953451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707825,-0.002876) , 
2, 0.0318839, 1, 0, 0.366036,0.000245309) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976154,0.00224075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990442,0.0108828) , 
5, 0.0507326, 1, 0, 0.983243,0.0107118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843736,-0.00446113) , 
17, 0.465899, 1, 0, 0.936242,-0.00579538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953219,0.00575622) , 
14, 0.0879635, 1, 0, 0.94176,0.0066718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767839,0.00346883) , 
17, 0.742548, 1, 0, 0.900651,0.0215576) , 
12, 0.121391, 1, 0, 0.595278,0.009384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858378,-0.00613371) , 
12, 0.325849, 1, 0, 0.613943,0.00556295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186841,-0.00077637) , 
10, 0.769449, 1, 0, 0.507841,0.00118111)    );
  // itree = 1005
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99514,0.011019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956396,-0.00644424) , 
17, 0.261011, 1, 0, 0.979513,0.000837359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814663,0.00540407) , 
11, 0.518111, 1, 0, 0.928774,0.0101166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797216,-0.00604884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751828,-0.00127638) , 
15, 0.0892298, 1, 0, 0.774678,-0.029415) , 
6, 0.261501, 1, 0, 0.869151,-0.00517914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260503,0.00154872) , 
3, 0.554239, 1, 0, 0.634744,0.00545847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256403,-0.000727634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655845,-0.00356581) , 
5, 0.0150501, 1, 0, 0.428053,-0.0265517) , 
15, 0.25284, 1, 0, 0.586983,-0.00193824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327162,0.00225778) , 
11, 1.05711, 1, 0, 0.539336,0.00473046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336502,-0.00127988) , 
6, 0.702036, 1, 0, 0.496174,-0.00252553)    );
  // itree = 1006
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944051,-0.00952532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756068,0.00254761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924259,-0.00490652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966337,0.00283588) , 
4, 0.461806, 1, 0, 0.951353,-0.00297687) , 
4, 0.351524, 1, 0, 0.892059,0.00685939) , 
13, 0.50043, 1, 0, 0.904414,4.23813e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348251,-0.0031275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776083,-3.95318e-05) , 
0, 0.155024, 1, 0, 0.502686,-0.0447718) , 
11, 0.778531, 1, 0, 0.765112,-0.0154972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398731,0.0015548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217134,-0.00195987) , 
14, 0.0790173, 1, 0, 0.299094,-0.0068502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471902,0.00213616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238043,0.000194648) , 
17, 1.07939, 1, 0, 0.331127,0.0170087) , 
6, 0.313373, 1, 0, 0.318316,0.00746676) , 
8, 0.0311771, 1, 0, 0.505982,-0.00217873)    );
  // itree = 1007
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88775,-0.00244902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814863,0.00357175) , 
16, 0.056249, 1, 0, 0.843935,0.017709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686174,-0.00273351) , 
16, 0.0956233, 1, 0, 0.802643,0.0028659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804667,0.00417421) , 
16, 0.121923, 1, 0, 0.803065,0.0121016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51255,-0.00173143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911957,0.00204572) , 
4, 0.276111, 1, 0, 0.639755,-0.0167731) , 
14, 0.102506, 1, 0, 0.741917,0.00128998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635422,-0.00352205) , 
16, 0.168056, 1, 0, 0.723057,-0.00672962) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466775,-0.00259883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149829,0.000252764) , 
13, 0.617638, 1, 0, 0.206353,-0.00247248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267837,0.00289232) , 
11, 1.03855, 1, 0, 0.227946,0.0150104) , 
7, 0.389606, 1, 0, 0.499541,0.00308482)    );
  // itree = 1008
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967848,-0.00361857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948254,0.00602854) , 
6, 0.158756, 1, 0, 0.957993,0.00786464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926015,-0.00319471) , 
9, 0.0284684, 1, 0, 0.946621,0.00160271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898881,0.00592265) , 
15, 0.143771, 1, 0, 0.935293,0.00819542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354237,-0.00308457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54819,-0.000307171) , 
6, 0.329422, 1, 0, 0.433745,-0.0225797) , 
11, 0.632345, 1, 0, 0.727478,-0.00455612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336897,0.00294244) , 
11, 0.947974, 1, 0, 0.666424,0.00229715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526606,-0.00214098) , 
6, 0.541967, 1, 0, 0.641904,-0.00480888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3285,0.00177242) , 
3, 0.802529, 1, 0, 0.549009,0.00688205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201982,-0.000859509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546663,-0.00263141) , 
5, 0.015524, 1, 0, 0.335645,-0.0276956) , 
15, 0.25284, 1, 0, 0.495447,-0.00179826)    );
  // itree = 1009
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.19145,0.00202731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170975,-0.000137615) , 
15, 0.194405, 1, 0, 0.181363,0.0136609) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964956,-0.00463632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983989,0.00458572) , 
9, 0.017903, 1, 0, 0.975343,0.000967633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917246,-0.0104694) , 
10, 0.265097, 1, 0, 0.953985,-0.0123492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975627,2.44761e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90514,0.00490851) , 
11, 0.353513, 1, 0, 0.937743,0.019932) , 
10, 0.375557, 1, 0, 0.947767,1.01473e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666394,-0.00427477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495243,-0.000658217) , 
3, 0.632563, 1, 0, 0.541544,-0.0313451) , 
3, 0.471887, 1, 0, 0.752861,-0.0150341) , 
4, 0.0774229, 1, 0, 0.504089,-0.00254327)    );
  // itree = 1010
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187504,-0.00034437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549427,0.00370982) , 
4, 0.0437862, 1, 0, 0.273021,0.00989861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973577,0.00380959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91773,-0.00454298) , 
16, 0.097491, 1, 0, 0.94827,-0.00325894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776012,-0.00600763) , 
8, 0.0327103, 1, 0, 0.90375,-0.0187309) , 
4, 0.124062, 1, 0, 0.585617,-0.00429045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987044,0.011234) , 
12, 0.30088, 1, 0, 0.625798,-0.00109739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384474,0.0024024) , 
9, 0.0609716, 1, 0, 0.582429,0.00532066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301275,-0.00052282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690712,-0.00303911) , 
12, 0.196111, 1, 0, 0.37079,-0.018444) , 
13, 1.01677, 1, 0, 0.50368,-0.00352199)    );
  // itree = 1011
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.415673,0.00226001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149753,-5.74605e-05) , 
8, 0.0379476, 1, 0, 0.221276,0.00855086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65088,-0.00303063) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960372,-0.0246716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992855,0.00598989) , 
5, 0.0384827, 1, 0, 0.979141,-0.00736856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913369,0.00477765) , 
3, 0.239623, 1, 0, 0.957967,0.00703942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765404,-0.00157853) , 
6, 0.393157, 1, 0, 0.890733,-0.00392831) , 
4, 0.233684, 1, 0, 0.831507,-0.0166766) , 
4, 0.108589, 1, 0, 0.566339,-0.00571434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4295,-0.000549157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352601,0.00149264) , 
6, 0.37332, 1, 0, 0.378033,0.0169092) , 
9, 0.0508431, 1, 0, 0.503272,0.00186264)    );
  // itree = 1012
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444205,-0.00166972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190864,0.00106146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106786,-0.000427473) , 
3, 0.709472, 1, 0, 0.140432,0.00294055) , 
10, 0.505327, 1, 0, 0.191813,-0.00315877) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68488,-5.01892e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617191,0.00198938) , 
16, 0.156453, 1, 0, 0.652205,0.0159107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885835,0.00647122) , 
12, 0.165882, 1, 0, 0.723239,0.0347772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872177,-0.00258208) , 
4, 0.323645, 1, 0, 0.765056,0.0194326) , 
12, 0.087073, 1, 0, 0.379726,0.00424682) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905852,-0.00478136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983006,0.00644335) , 
0, 0.162821, 1, 0, 0.953184,-0.000817836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669857,-0.00263215) , 
13, 0.940633, 1, 0, 0.829902,-0.0227778) , 
5, 0.0360635, 1, 0, 0.500718,-0.00301652)    );
  // itree = 1013
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790497,-0.00306654) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939334,0.00606262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808757,-0.00100821) , 
14, 0.0933725, 1, 0, 0.880666,0.00605681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579204,0.00259569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433831,0.00164485) , 
16, 0.142435, 1, 0, 0.515268,0.0415994) , 
11, 0.707582, 1, 0, 0.678121,0.0257586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492686,-0.00150114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207698,-0.00030631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18028,0.00127534) , 
9, 0.0369519, 1, 0, 0.192063,0.00889462) , 
7, 0.405795, 1, 0, 0.264177,-0.000215951) , 
8, 0.0359055, 1, 0, 0.413068,0.0091268) , 
16, 0.0570629, 1, 0, 0.441555,0.00604445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950764,3.02033e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737612,-0.00442341) , 
6, 0.295942, 1, 0, 0.857666,-0.0288001) , 
12, 0.227664, 1, 0, 0.506074,0.000641766)    );
  // itree = 1014
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241577,-0.000238953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838558,-0.00575386) , 
4, 0.132201, 1, 0, 0.453824,-0.0168345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913035,0.00202145) , 
5, 0.0330467, 1, 0, 0.599308,-0.00747597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877487,-0.00974864) , 
5, 0.0526698, 1, 0, 0.655585,-0.0163716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637414,0.00436344) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998895,0.0156423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776451,-0.00328757) , 
3, 0.165502, 1, 0, 0.881811,-0.0127766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367484,0.00139285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826776,0.00346027) , 
2, 0.0268386, 1, 0, 0.516326,0.0336412) , 
11, 0.572575, 1, 0, 0.66176,0.0151705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130549,-0.000875617) , 
17, 0.964466, 1, 0, 0.419007,0.00233601) , 
9, 0.0316729, 1, 0, 0.441326,0.00639424) , 
9, 0.0244745, 1, 0, 0.50918,-0.000815581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443522,0.00148093) , 
11, 1.26965, 1, 0, 0.498978,0.00443415)    );
  // itree = 1015
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952777,-0.00495323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99584,0.0162594) , 
1, 0.399682, 1, 0, 0.972205,0.00267779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701674,-0.00486415) , 
17, 0.574564, 1, 0, 0.884675,-0.0198424) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356042,0.00169566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145385,-0.000128914) , 
3, 0.603051, 1, 0, 0.193002,0.00456567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750815,0.000812643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53349,-0.00328579) , 
16, 0.137413, 1, 0, 0.637246,-0.0322753) , 
12, 0.0991905, 1, 0, 0.27622,-0.00233555) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990701,0.0136751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897083,-0.00361931) , 
13, 0.736929, 1, 0, 0.944717,-0.00190227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822703,0.00357279) , 
13, 1.01941, 1, 0, 0.893954,0.0233208) , 
4, 0.297588, 1, 0, 0.411424,0.00327989) , 
10, 0.282366, 1, 0, 0.489053,-0.000512933)    );
  // itree = 1016
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993641,0.0127239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483291,-0.00234093) , 
3, 0.207678, 1, 0, 0.785029,-0.0088038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773034,-0.000100895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258518,0.00201143) , 
8, 0.0327103, 1, 0, 0.448146,0.0178621) , 
13, 0.584805, 1, 0, 0.579831,0.00743857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619233,0.000913563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16591,-0.00159253) , 
16, 0.12694, 1, 0, 0.279664,-0.0138243) , 
13, 0.877211, 1, 0, 0.446561,-0.00200185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396011,0.00126382) , 
11, 1.22897, 1, 0, 0.436541,0.00396871) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924598,0.00177734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904016,-0.00187122) , 
4, 0.484659, 1, 0, 0.914237,-3.18994e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740722,-0.00545431) , 
10, 0.534451, 1, 0, 0.856368,-0.02497) , 
12, 0.224118, 1, 0, 0.502363,-0.000568403)    );
  // itree = 1017
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211987,0.00177435) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865705,0.000205373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38391,-0.00291488) , 
11, 0.645202, 1, 0, 0.610811,-0.0270229) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999217,0.0153776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949402,-0.0080296) , 
10, 0.321881, 1, 0, 0.974637,-0.00316494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923391,0.00584904) , 
11, 0.55246, 1, 0, 0.959867,0.00950281) , 
4, 0.245566, 1, 0, 0.823898,-0.00472519) , 
12, 0.0645175, 1, 0, 0.636283,0.00343225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494907,-0.00233442) , 
6, 0.445403, 1, 0, 0.613753,-0.00322763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504863,0.00138137) , 
6, 0.567927, 1, 0, 0.584492,0.00539963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18032,-0.000852468) , 
17, 1.16751, 1, 0, 0.473658,-9.30757e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845193,-0.00565349) , 
12, 0.329048, 1, 0, 0.495271,-0.00274354)    );
  // itree = 1018
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986278,0.00800936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575298,0.00434824) , 
17, 0.436288, 1, 0, 0.783014,0.0219713) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793335,-0.000584229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641603,0.00359782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687823,0.00122038) , 
9, 0.0350458, 1, 0, 0.662768,0.0157936) , 
9, 0.0223825, 1, 0, 0.704375,0.00989721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506303,-0.00207964) , 
6, 0.265456, 1, 0, 0.644186,0.000583615) , 
9, 0.0160399, 1, 0, 0.686569,0.0071131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530381,-0.00203539) , 
6, 0.410254, 1, 0, 0.658232,0.000838606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477941,0.00144845) , 
13, 1.05805, 1, 0, 0.621413,0.00545486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737719,-0.00412844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2759,-0.00097388) , 
8, 0.0170778, 1, 0, 0.368602,-0.0221521) , 
9, 0.0454464, 1, 0, 0.522741,-0.00532015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452927,0.00145373) , 
11, 1.2673, 1, 0, 0.511663,0.000776003)    );
  // itree = 1019
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750222,0.00309942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978308,0.0074865) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8974,-0.0119356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874073,-0.00163831) , 
9, 0.0333697, 1, 0, 0.885593,-0.0272703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742435,0.0024604) , 
16, 0.151168, 1, 0, 0.838692,-0.0100882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445099,-0.00503361) , 
16, 0.230269, 1, 0, 0.729078,-0.0244527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126734,0.000101331) , 
7, 0.620345, 1, 0, 0.433589,-0.0117941) , 
8, 0.00783453, 1, 0, 0.516184,-0.00669196) , 
14, 0.0172676, 1, 0, 0.551518,-0.00291218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45449,-0.00168646) , 
6, 0.47553, 1, 0, 0.533785,-0.00749268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403219,0.000565959) , 
6, 0.638215, 1, 0, 0.500202,-0.00233461)    );
  // itree = 1020
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982743,0.00445841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951311,-0.00496062) , 
9, 0.0286925, 1, 0, 0.967767,-0.00346053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86813,0.00236368) , 
6, 0.334154, 1, 0, 0.945726,0.00241556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829554,-0.00348515) , 
8, 0.0295996, 1, 0, 0.918555,-0.00457954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422039,0.00394527) , 
7, 0.448144, 1, 0, 0.815052,0.00777234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138334,-0.00122564) , 
3, 0.574, 1, 0, 0.562554,-0.00177794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410425,0.00171905) , 
13, 1.06392, 1, 0, 0.532301,0.00410005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370554,-0.000719802) , 
6, 0.655519, 1, 0, 0.492621,-0.000840491)    );
  // itree = 1021
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505252,-0.00174697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349916,-0.000337491) , 
7, 0.403189, 1, 0, 0.440248,-0.0214525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153344,0.000403613) , 
10, 0.570538, 1, 0, 0.234669,-0.00194831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475332,-0.00201301) , 
2, 0.0183451, 1, 0, 0.264973,-0.00667522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799211,0.00102726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772694,0.00459487) , 
7, 0.309404, 1, 0, 0.789963,0.0369647) , 
5, 0.0221986, 1, 0, 0.366106,0.00173153) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982132,-0.00169749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907092,-0.0121019) , 
13, 0.724796, 1, 0, 0.953371,-0.0167391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911882,0.00411547) , 
6, 0.320541, 1, 0, 0.942193,-0.0030162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667575,-0.00329356) , 
17, 0.656062, 1, 0, 0.882777,-0.0164539) , 
4, 0.32438, 1, 0, 0.49647,-0.00285693)    );
  // itree = 1022
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278551,0.00107771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793845,-0.00100674) , 
0, 0.0903784, 1, 0, 0.414647,0.0097046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148448,-0.00076183) , 
8, 0.0446794, 1, 0, 0.255945,-0.00298491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478234,-0.0033642) , 
2, 0.0186299, 1, 0, 0.280798,-0.00962057) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885665,-0.00686768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925027,-0.00291105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87724,0.00362302) , 
15, 0.108756, 1, 0, 0.904345,0.00783512) , 
8, 0.00925091, 1, 0, 0.898792,-0.00673879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710156,0.00236648) , 
11, 0.906794, 1, 0, 0.841862,0.0102518) , 
2, 0.021594, 1, 0, 0.455043,-0.00344897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836686,-0.00917961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882882,0.0003072) , 
9, 0.0253418, 1, 0, 0.858012,-0.0348698) , 
5, 0.0540953, 1, 0, 0.498622,-0.00684697)    );
  // itree = 1023
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893183,0.00135973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425921,-0.00402193) , 
7, 0.253503, 1, 0, 0.668005,-0.018326) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792333,-0.00253609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977404,0.00521419) , 
1, 0.409474, 1, 0, 0.885912,-0.003375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390604,0.00328433) , 
8, 0.0360955, 1, 0, 0.674876,0.0153761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441404,-0.000852353) , 
13, 1.0253, 1, 0, 0.58373,0.00282954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521086,-0.00225227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478317,0.00220632) , 
9, 0.0271174, 1, 0, 0.490927,0.00944201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470677,0.00258184) , 
6, 0.405798, 1, 0, 0.482145,0.0265403) , 
14, 0.0771017, 1, 0, 0.530875,0.0151663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759831,0.00312257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222634,-0.0011998) , 
11, 0.65226, 1, 0, 0.360639,-0.00866563) , 
15, 0.262543, 1, 0, 0.484872,0.00872611) , 
15, 0.0243007, 1, 0, 0.511679,0.00476626)    );
  // itree = 1024
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994961,0.0125428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946442,-0.0145128) , 
13, 0.61371, 1, 0, 0.974063,-0.00592581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911888,0.00304194) , 
6, 0.198419, 1, 0, 0.949316,0.00270034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548656,-0.00383599) , 
16, 0.1926, 1, 0, 0.852695,-0.00752822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30379,0.00194093) , 
16, 0.306961, 1, 0, 0.714914,-0.000193813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.161966,-0.00105417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748495,-0.00792948) , 
2, 0.0330582, 1, 0, 0.31658,-0.0330313) , 
13, 0.823674, 1, 0, 0.565723,-0.0124927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221012,-0.000750961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830553,0.00318275) , 
4, 0.175082, 1, 0, 0.42868,0.00739835) , 
6, 0.42171, 1, 0, 0.517435,-0.00548396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444053,0.00142422) , 
11, 1.29202, 1, 0, 0.506269,0.000405773)    );
  // itree = 1025
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350419,-3.49496e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882167,0.00136478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666746,0.00321473) , 
10, 0.35155, 1, 0, 0.773389,0.0373148) , 
12, 0.0744742, 1, 0, 0.577228,0.019702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761054,-0.00668321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933794,0.00111515) , 
1, 0.331313, 1, 0, 0.847394,-0.0380561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970302,-0.00839984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871694,0.00345612) , 
3, 0.256717, 1, 0, 0.925874,0.0127184) , 
12, 0.192837, 1, 0, 0.894875,-0.00733702) , 
12, 0.135651, 1, 0, 0.743196,0.0055744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341309,-0.00129653) , 
10, 0.597704, 1, 0, 0.664579,0.000402682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389604,0.00305085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157741,0.000461658) , 
8, 0.0455371, 1, 0, 0.240556,0.0224689) , 
10, 0.692796, 1, 0, 0.513585,0.00826042)    );
  // itree = 1026
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980589,0.00346213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471143,-0.00214677) , 
3, 0.288228, 1, 0, 0.668209,-0.0189382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65089,0.00357571) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51647,-0.00172229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531542,0.00267572) , 
14, 0.0570202, 1, 0, 0.522656,0.00249156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428429,-0.00358682) , 
14, 0.0662059, 1, 0, 0.492416,-0.0161206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561198,-0.000382467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540036,0.00523223) , 
9, 0.0246125, 1, 0, 0.551268,0.0279321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158344,-0.00056548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745543,0.00123439) , 
12, 0.090995, 1, 0, 0.360729,0.000825099) , 
9, 0.0347291, 1, 0, 0.410663,0.00792898) , 
14, 0.0773599, 1, 0, 0.434456,0.000929675) , 
14, 0.0439005, 1, 0, 0.454055,0.0046924) , 
14, 0.0320493, 1, 0, 0.500057,-0.000383699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53487,-0.0024384) , 
14, 0.233512, 1, 0, 0.502421,-0.00261284)    );
  // itree = 1027
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966858,-0.00170843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987871,0.0129269) , 
7, 0.139303, 1, 0, 0.975341,0.00608217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99333,0.0146767) , 
15, 0.0877733, 1, 0, 0.980799,0.0129081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910307,-0.00670231) , 
15, 0.165816, 1, 0, 0.964942,0.00320953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636944,-0.00448281) , 
17, 0.55074, 1, 0, 0.88491,-0.0100296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293804,0.00233027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284171,-0.000676529) , 
11, 1.00881, 1, 0, 0.289556,0.0142028) , 
3, 0.521413, 1, 0, 0.571512,0.00272648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398068,-0.000838621) , 
6, 0.68442, 1, 0, 0.533505,-0.00219018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30271,0.000707276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624514,0.00328861) , 
14, 0.246905, 1, 0, 0.391449,0.020506) , 
15, 0.291608, 1, 0, 0.507603,0.00194816)    );
  // itree = 1028
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128036,-0.00107005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624537,0.00413981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173047,0.00018973) , 
3, 0.620136, 1, 0, 0.285457,0.0177866) , 
0, 0.051627, 1, 0, 0.228327,0.00632347) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986836,0.0098886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964622,-0.000821911) , 
0, 0.245154, 1, 0, 0.977662,0.00807819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816807,0.00294252) , 
13, 0.976583, 1, 0, 0.928805,0.0188888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917068,-0.0138146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754648,-0.000386687) , 
17, 0.370655, 1, 0, 0.82871,-0.0239408) , 
15, 0.124169, 1, 0, 0.886136,0.000631024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628621,-0.000536842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680566,-0.0046596) , 
5, 0.035483, 1, 0, 0.651275,-0.041148) , 
8, 0.0341154, 1, 0, 0.816068,-0.0118332) , 
12, 0.0960868, 1, 0, 0.502286,-0.00213975)    );
  // itree = 1029
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981177,0.00458012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725265,-0.00409857) , 
17, 0.354909, 1, 0, 0.832954,-0.0135788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980576,0.00643364) , 
2, 0.0504828, 1, 0, 0.877839,-0.00601569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415244,-0.00433587) , 
11, 0.742917, 1, 0, 0.769386,-0.0181186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736545,0.00504344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460113,-0.000339872) , 
14, 0.0682958, 1, 0, 0.530699,0.00664665) , 
9, 0.036912, 1, 0, 0.661968,-0.00697329) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683732,0.000317103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444174,0.00307247) , 
10, 0.439834, 1, 0, 0.536395,0.0367196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22603,-0.000299362) , 
17, 1.05207, 1, 0, 0.341013,0.0101839) , 
11, 0.880926, 1, 0, 0.504126,0.0014644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506173,-0.00216597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430181,-0.00230056) , 
15, 0.357649, 1, 0, 0.465917,-0.0326476) , 
14, 0.188019, 1, 0, 0.49936,-0.0027909)    );
  // itree = 1030
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845898,-0.000401823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328371,-0.0028082) , 
13, 0.495886, 1, 0, 0.520084,-0.0232277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489732,0.00261792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411601,-0.000320104) , 
6, 0.427555, 1, 0, 0.442638,0.0112824) , 
6, 0.299446, 1, 0, 0.479195,-0.00500726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852214,-0.00898483) , 
12, 0.142621, 1, 0, 0.535343,-0.0129663) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96644,0.00460411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954119,-0.00807038) , 
5, 0.039283, 1, 0, 0.960909,0.000656785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921466,0.00634451) , 
6, 0.35646, 1, 0, 0.950312,0.0167497) , 
12, 0.173183, 1, 0, 0.68911,-0.00195505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32595,-0.00171299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190021,-0.000464457) , 
8, 0.0406408, 1, 0, 0.248161,-0.0202827) , 
3, 0.684541, 1, 0, 0.491793,-0.0101564)    );
  // itree = 1031
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963791,0.00413037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864922,-0.00374316) , 
10, 0.315518, 1, 0, 0.904689,-0.00935602) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886943,-0.000802191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782572,0.00358494) , 
14, 0.0636496, 1, 0, 0.839479,0.0131019) , 
8, 0.0161698, 1, 0, 0.875971,0.000534255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697475,0.00330159) , 
9, 0.052795, 1, 0, 0.831191,0.0116533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591452,-0.00401346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285717,0.00150772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179962,-0.000832518) , 
9, 0.0383709, 1, 0, 0.224921,0.00113646) , 
11, 0.672786, 1, 0, 0.292392,-0.0074607) , 
8, 0.0317183, 1, 0, 0.538238,0.00126073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358547,-0.00115679) , 
11, 1.15336, 1, 0, 0.496013,-0.00500908)    );
  // itree = 1032
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737688,0.00169131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361324,0.00275698) , 
13, 0.6548, 1, 0, 0.470329,0.0428826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178157,-0.000211782) , 
16, 0.304601, 1, 0, 0.349113,0.0239213) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993567,0.00857822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816361,-0.00471101) , 
3, 0.210231, 1, 0, 0.898035,-0.0229715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91276,0.00428704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892333,0.000120051) , 
5, 0.0354868, 1, 0, 0.900306,0.0145171) , 
14, 0.0626731, 1, 0, 0.899045,-0.00630338) , 
4, 0.219348, 1, 0, 0.57838,0.0113206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254984,-0.0008762) , 
3, 0.875486, 1, 0, 0.506672,0.00489541)    );
  // itree = 1033
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934711,0.0035639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278047,-0.000584679) , 
7, 0.391068, 1, 0, 0.605763,0.00352082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342134,0.00354625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87326,0.00127425) , 
12, 0.0855623, 1, 0, 0.549462,0.0329613) , 
14, 0.103606, 1, 0, 0.578073,0.0180004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149885,-0.000430066) , 
16, 0.33777, 1, 0, 0.40385,0.00848578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333436,-0.000469208) , 
6, 0.542482, 1, 0, 0.379297,0.00202266) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940727,0.00626024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859505,-4.98953e-05) , 
16, 0.102397, 1, 0, 0.901177,0.0218395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895198,-0.00397822) , 
12, 0.227646, 1, 0, 0.899103,0.00616573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730746,-0.00234228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793002,-0.00664431) , 
5, 0.0475799, 1, 0, 0.761491,-0.0525347) , 
15, 0.106817, 1, 0, 0.843531,-0.0175394) , 
5, 0.0361053, 1, 0, 0.504051,-0.00323427)    );
  // itree = 1034
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356814,-0.00134869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794374,0.00538732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836439,0.00161726) , 
12, 0.110467, 1, 0, 0.819351,0.0469941) , 
4, 0.0869329, 1, 0, 0.603782,0.0124563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267874,-0.00189414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110121,-0.00057267) , 
16, 0.243823, 1, 0, 0.163327,-0.0184953) , 
10, 0.55009, 1, 0, 0.31409,-0.00790092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945388,-0.00381803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685018,-0.00493009) , 
6, 0.40769, 1, 0, 0.839158,-0.0419636) , 
4, 0.277103, 1, 0, 0.404527,-0.0137678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928414,-0.0029072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951495,-0.00236045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823947,0.00296238) , 
17, 0.380547, 1, 0, 0.885503,0.0194708) , 
10, 0.329427, 1, 0, 0.90199,0.00702282) , 
12, 0.211391, 1, 0, 0.496403,-0.00992802)    );
  // itree = 1035
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986039,0.00690151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903851,-0.00798887) , 
6, 0.19537, 1, 0, 0.953798,-0.00823437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663287,0.00133834) , 
6, 0.383229, 1, 0, 0.838475,0.0048799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453769,-0.00341894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87743,-0.000548091) , 
12, 0.138505, 1, 0, 0.665157,-0.0320586) , 
8, 0.0175356, 1, 0, 0.784096,-0.00670973) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920793,-0.00266755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387797,0.00429245) , 
17, 0.558637, 1, 0, 0.594693,0.0322007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249382,-0.000402518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172733,0.000489702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421679,0.00147718) , 
6, 0.504523, 1, 0, 0.303092,0.0196703) , 
11, 0.918566, 1, 0, 0.288106,0.0125505) , 
11, 0.763362, 1, 0, 0.359317,0.0171146) , 
8, 0.0241714, 1, 0, 0.515858,0.00833482)    );
  // itree = 1036
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991219,-0.00525869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999261,0.0188018) , 
15, 0.0698246, 1, 0, 0.995612,0.00320169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931096,-0.00951862) , 
3, 0.168943, 1, 0, 0.976652,-0.00613913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864492,0.00371557) , 
3, 0.253418, 1, 0, 0.947492,0.0039867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768053,-0.00365635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645885,0.0016272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458571,-0.00132372) , 
15, 0.0927585, 1, 0, 0.523745,-0.00800475) , 
10, 0.281704, 1, 0, 0.584716,-0.0166828) , 
11, 0.632833, 1, 0, 0.771226,-0.00605619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379222,-0.00275591) , 
8, 0.0481723, 1, 0, 0.697425,-0.0149672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459897,-0.00179149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198439,0.000730192) , 
3, 0.563189, 1, 0, 0.24461,0.00490596) , 
10, 0.624649, 1, 0, 0.489305,-0.0058332)    );
  // itree = 1037
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55465,0.00243898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741234,-0.00243698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927691,0.00587241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86144,0.000655497) , 
14, 0.0673539, 1, 0, 0.894324,0.0295371) , 
2, 0.0367099, 1, 0, 0.832167,0.0044889) , 
5, 0.0189474, 1, 0, 0.734171,0.0179584) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45814,-0.00268529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299301,0.00237818) , 
14, 0.0471692, 1, 0, 0.367461,0.0055982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240822,-0.0017147) , 
14, 0.114559, 1, 0, 0.323478,-0.00420829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273592,0.00148925) , 
6, 0.290136, 1, 0, 0.301039,0.00731842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296851,-0.00139342) , 
6, 0.544866, 1, 0, 0.299824,-0.00297368) , 
7, 0.240502, 1, 0, 0.44544,0.00404384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850173,-0.00664683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934889,0.00286699) , 
1, 0.572837, 1, 0, 0.887741,-0.0204787) , 
4, 0.467655, 1, 0, 0.500124,0.00101196)    );
  // itree = 1038
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480939,0.00555371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391926,0.000895847) , 
15, 0.218706, 1, 0, 0.433856,0.0426527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128919,0.000516908) , 
3, 0.60099, 1, 0, 0.208412,0.01657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408224,-0.00134794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907241,0.00528052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969796,-0.0154204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876802,0.00452359) , 
3, 0.286792, 1, 0, 0.928264,0.0175999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938801,0.00189504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652107,-0.00183507) , 
11, 0.77362, 1, 0, 0.792448,-0.0150836) , 
8, 0.0170577, 1, 0, 0.853877,-0.000301009) , 
5, 0.0312158, 1, 0, 0.86537,0.00957166) , 
4, 0.164732, 1, 0, 0.741522,-0.000659489) , 
5, 0.0149906, 1, 0, 0.50762,0.00689992)    );
  // itree = 1039
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95686,-0.00863805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785157,0.00133617) , 
8, 0.0234001, 1, 0, 0.866703,-0.00339319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675459,-0.00620819) , 
15, 0.199048, 1, 0, 0.791891,-0.0224549) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798734,0.00224952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458641,-0.00241648) , 
13, 0.824319, 1, 0, 0.631416,-0.00742497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651493,0.003639) , 
6, 0.416364, 1, 0, 0.63932,0.022534) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897493,0.00396627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33934,0.00121223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277348,-0.00162821) , 
15, 0.135524, 1, 0, 0.302183,-0.00792097) , 
10, 0.417271, 1, 0, 0.449789,0.00194626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366438,-0.00168997) , 
13, 1.0594, 1, 0, 0.414788,-0.0136713) , 
14, 0.0423534, 1, 0, 0.490445,-0.00147177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314683,0.00172897) , 
15, 0.240321, 1, 0, 0.444435,0.0068473) , 
13, 0.586912, 1, 0, 0.504556,0.00177709)    );
  // itree = 1040
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972342,0.00519596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993192,0.00844213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950167,-0.00728848) , 
14, 0.061317, 1, 0, 0.972261,-0.00519863) , 
5, 0.0345409, 1, 0, 0.972291,0.00169361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866184,-0.00418396) , 
11, 0.476028, 1, 0, 0.938656,-0.00793793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753578,0.00371664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742039,-0.00107635) , 
7, 0.228325, 1, 0, 0.748855,0.0309176) , 
17, 0.488909, 1, 0, 0.87538,0.00501571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303062,-0.00152208) , 
17, 0.779202, 1, 0, 0.672079,-0.00754745) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520236,0.00110798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468387,0.00323833) , 
11, 0.852582, 1, 0, 0.487689,0.0472961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132335,-0.000400775) , 
7, 0.599693, 1, 0, 0.257729,0.0130043) , 
8, 0.0402857, 1, 0, 0.49616,0.00117814)    );
  // itree = 1041
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271495,-0.00174993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110432,-0.000383992) , 
7, 0.44222, 1, 0, 0.153991,-0.0129161) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931304,-0.00216566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909659,0.00593953) , 
10, 0.314355, 1, 0, 0.922303,0.0118687) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954243,-0.00736368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885562,0.00258027) , 
6, 0.170522, 1, 0, 0.917741,0.00208151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695632,-0.00180853) , 
6, 0.347879, 1, 0, 0.817423,-0.0126735) , 
9, 0.021118, 1, 0, 0.859365,-0.00285902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488697,0.00163749) , 
17, 0.948955, 1, 0, 0.765553,0.0077814) , 
4, 0.0720845, 1, 0, 0.496212,-0.0013341)    );
  // itree = 1042
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132851,-0.00139327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226116,0.000891832) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99273,0.012543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965236,-0.00535208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990453,0.00733827) , 
2, 0.0495812, 1, 0, 0.978279,-0.000552403) , 
2, 0.0339933, 1, 0, 0.982933,0.00582076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878646,-0.00650349) , 
11, 0.529422, 1, 0, 0.957844,-0.00387837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849058,0.0019815) , 
6, 0.360827, 1, 0, 0.926151,0.00441311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559638,-0.00278934) , 
17, 0.735707, 1, 0, 0.839892,-0.0126489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637882,0.00145477) , 
8, 0.043767, 1, 0, 0.803143,-0.00470981) , 
4, 0.0940064, 1, 0, 0.594293,0.00248824) , 
12, 0.0521298, 1, 0, 0.500229,-0.00163281)    );
  // itree = 1043
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293213,-0.00150447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248931,0.000359151) , 
9, 0.0236144, 1, 0, 0.267723,-0.00557784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17421,-0.00188759) , 
9, 0.0430211, 1, 0, 0.218279,-0.0184998) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969071,0.00588477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9435,-0.00490783) , 
12, 0.185054, 1, 0, 0.955012,0.000285397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780692,-0.00681479) , 
10, 0.399813, 1, 0, 0.907017,-0.0186197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965192,-0.00125336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792737,0.00370023) , 
3, 0.329121, 1, 0, 0.883893,0.0278497) , 
15, 0.104141, 1, 0, 0.896294,0.00292989) , 
4, 0.143894, 1, 0, 0.538095,-0.00839153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540221,0.0013117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287019,0.000174122) , 
10, 0.529785, 1, 0, 0.38285,0.0135968) , 
11, 1.09031, 1, 0, 0.496121,-0.00244645)    );
  // itree = 1044
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999733,0.0234762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974887,-0.00554659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308576,-0.00362086) , 
11, 0.457425, 1, 0, 0.578483,-0.027693) , 
3, 0.115536, 1, 0, 0.720667,-0.0159773) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567366,0.000822965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470528,0.00496128) , 
9, 0.0280858, 1, 0, 0.50852,0.0316097) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5391,-0.00333796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551126,0.000308261) , 
6, 0.353917, 1, 0, 0.544813,-0.0172261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443199,0.00312381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393443,0.00030021) , 
13, 0.917659, 1, 0, 0.410387,0.0158321) , 
13, 0.767218, 1, 0, 0.455785,0.00466772) , 
6, 0.260612, 1, 0, 0.469966,0.0119126) , 
6, 0.192626, 1, 0, 0.545673,0.00349031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443478,-0.00229259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318541,-0.000180946) , 
7, 0.243504, 1, 0, 0.380925,-0.0287092) , 
6, 0.577916, 1, 0, 0.495845,-0.00624834)    );
  // itree = 1045
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970268,-0.049125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998671,0.017993) , 
9, 0.0215194, 1, 0, 0.984957,-0.00734109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987066,0.00927612) , 
3, 0.137325, 1, 0, 0.985749,-0.000288204) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862606,-0.00454673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747114,-0.00590622) , 
10, 0.429316, 1, 0, 0.8088,-0.0527733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195631,-0.000662266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617237,-0.00216145) , 
12, 0.0987347, 1, 0, 0.312594,-0.0215981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736491,0.000874752) , 
2, 0.0361053, 1, 0, 0.405748,-0.0133067) , 
17, 0.536013, 1, 0, 0.509421,-0.0234583) , 
3, 0.218872, 1, 0, 0.637546,-0.0172259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304186,0.00221107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191482,-0.000187168) , 
15, 0.121426, 1, 0, 0.23301,0.0106205) , 
8, 0.0493319, 1, 0, 0.491329,-0.00716101)    );
  // itree = 1046
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999428,0.0206555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968181,-0.0117427) , 
3, 0.122155, 1, 0, 0.985271,-0.00151967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96143,0.00768636) , 
3, 0.20097, 1, 0, 0.979415,0.00538582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506061,-0.00262142) , 
3, 0.310592, 1, 0, 0.829777,-0.00916586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627299,0.0017088) , 
13, 0.867217, 1, 0, 0.780499,-0.00122344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461981,-0.00174984) , 
13, 1.1639, 1, 0, 0.706455,-0.0105232) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708458,0.00487659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1974,0.000861359) , 
7, 0.244478, 1, 0, 0.30776,0.0266853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170509,-0.000990565) , 
10, 0.811106, 1, 0, 0.244611,0.00741316) , 
10, 0.623807, 1, 0, 0.498788,-0.00245816)    );
  // itree = 1047
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950317,-0.00629087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654696,0.00141819) , 
7, 0.189232, 1, 0, 0.790284,-0.000646069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303212,-0.00275654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942482,-0.00121667) , 
0, 0.128195, 1, 0, 0.582972,-0.0221251) , 
14, 0.0539704, 1, 0, 0.692516,-0.0107755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751318,0.00278871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323166,0.000234916) , 
8, 0.0305928, 1, 0, 0.467512,0.0172992) , 
13, 0.907046, 1, 0, 0.589657,0.00205869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45503,-0.00200492) , 
9, 0.0491501, 1, 0, 0.566625,-0.0035817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56407,-0.0021069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492679,0.00451951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337338,0.00112566) , 
9, 0.0530254, 1, 0, 0.381028,0.031176) , 
9, 0.0349938, 1, 0, 0.407506,0.0232968) , 
15, 0.196626, 1, 0, 0.510733,0.00585953)    );
  // itree = 1048
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150335,-0.000420025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393955,0.00178339) , 
1, 0.0562642, 1, 0, 0.192709,0.00050335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726928,-0.00352958) , 
12, 0.0884941, 1, 0, 0.317621,-0.00953568) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986458,0.00601441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931667,-0.00413449) , 
10, 0.317779, 1, 0, 0.957771,-0.004271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915507,0.00760882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771181,0.00107173) , 
11, 0.784042, 1, 0, 0.842196,0.0429341) , 
17, 0.452192, 1, 0, 0.916471,0.0125975) , 
5, 0.0240423, 1, 0, 0.560689,-0.00055201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274945,-0.00194478) , 
11, 1.06466, 1, 0, 0.512847,-0.00610582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446951,0.00114128) , 
11, 1.29285, 1, 0, 0.502682,-0.00102474)    );
  // itree = 1049
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970977,0.00397209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51018,-0.000348362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759344,-0.00270578) , 
5, 0.0304325, 1, 0, 0.630934,-0.0221111) , 
13, 0.634475, 1, 0, 0.765159,-0.00983239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578051,0.00297508) , 
10, 0.62425, 1, 0, 0.725553,0.00212556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205699,-0.00122496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100295,-7.53367e-05) , 
7, 0.617149, 1, 0, 0.141935,-0.00984039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843544,-0.00167537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524843,-0.00258451) , 
11, 0.728305, 1, 0, 0.629649,-0.0452074) , 
4, 0.0932075, 1, 0, 0.273431,-0.0193759) , 
8, 0.0262293, 1, 0, 0.403913,-0.0131706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900336,-0.00276268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890096,0.00221304) , 
16, 0.0896881, 1, 0, 0.895567,-0.000294558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884372,0.00327837) , 
15, 0.130701, 1, 0, 0.892333,0.00982632) , 
2, 0.0426785, 1, 0, 0.488472,-0.00918922)    );
  // itree = 1050
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879538,-0.00276933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85569,0.00278226) , 
10, 0.451435, 1, 0, 0.869967,-0.000584825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697116,-0.00516295) , 
16, 0.0637258, 1, 0, 0.8172,-0.0193363) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231335,0.000716433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713471,0.00297925) , 
0, 0.0865641, 1, 0, 0.352859,0.0227941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906106,0.000929682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826066,-0.00638519) , 
14, 0.0191551, 1, 0, 0.865689,-0.0240044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874817,0.00163538) , 
14, 0.0465209, 1, 0, 0.869839,-0.00572829) , 
1, 0.210306, 1, 0, 0.573926,0.0105976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671182,0.00222747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204701,-0.00268261) , 
7, 0.252592, 1, 0, 0.372762,-0.0179002) , 
15, 0.215793, 1, 0, 0.525561,0.00374602) , 
16, 0.0773816, 1, 0, 0.593795,-0.00165447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162025,-0.00154811) , 
10, 0.794016, 1, 0, 0.496023,-0.0067589)    );
  // itree = 1051
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999619,0.0152016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985971,-0.0146084) , 
11, 0.29969, 1, 0, 0.992802,7.90406e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90119,-0.00600582) , 
3, 0.175865, 1, 0, 0.954607,-0.013075) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924869,0.0018681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477362,-0.0018413) , 
8, 0.0370661, 1, 0, 0.697148,-0.00783913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858557,0.00405917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208924,0.000932052) , 
17, 0.642741, 1, 0, 0.38388,0.0217525) , 
13, 0.654877, 1, 0, 0.492436,0.0114981) , 
17, 0.345049, 1, 0, 0.634634,0.00393765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4533,-0.00157818) , 
6, 0.506464, 1, 0, 0.588447,-0.00471255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293043,0.000962553) , 
3, 0.828655, 1, 0, 0.512499,0.00134632)    );
  // itree = 1052
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787679,-0.00244535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336017,0.00254385) , 
11, 0.725411, 1, 0, 0.5488,0.00952037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677289,0.000503102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140472,-0.00198574) , 
7, 0.356419, 1, 0, 0.313118,-0.0171652) , 
9, 0.027377, 1, 0, 0.374776,-0.0101839) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992805,0.0102609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90106,-0.00274778) , 
13, 0.696486, 1, 0, 0.941864,-0.00394118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911103,0.00502412) , 
15, 0.160225, 1, 0, 0.934123,0.00795253) , 
2, 0.0318632, 1, 0, 0.570718,-0.00383058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322614,0.00200923) , 
11, 1.05711, 1, 0, 0.526811,0.00269713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3931,-0.00135191) , 
13, 1.21681, 1, 0, 0.5003,-0.00378838)    );
  // itree = 1053
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973417,0.00379522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891433,-0.00700324) , 
15, 0.0829305, 1, 0, 0.932238,-0.0127207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67092,0.000667431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698636,0.00344928) , 
10, 0.476222, 1, 0, 0.681688,0.0304855) , 
13, 0.875749, 1, 0, 0.804431,0.00931908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591248,0.00318815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155267,0.000372431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67896,-0.001485) , 
5, 0.0162423, 1, 0, 0.336929,-0.00267104) , 
9, 0.0150795, 1, 0, 0.387807,0.00340988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330546,-0.00221584) , 
6, 0.487092, 1, 0, 0.370518,-0.0105713) , 
16, 0.1279, 1, 0, 0.532643,-0.00313955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666703,0.00427569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270626,0.000357446) , 
13, 0.703312, 1, 0, 0.394851,0.0179641) , 
15, 0.248809, 1, 0, 0.497605,0.00222677)    );
  // itree = 1054
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426718,-0.000409377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330523,-0.00303372) , 
6, 0.236821, 1, 0, 0.371142,-0.0316613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928717,-0.00710767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990177,0.00797485) , 
2, 0.0368584, 1, 0, 0.953992,-0.0100928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876586,0.00307987) , 
13, 0.750655, 1, 0, 0.926678,0.00373522) , 
12, 0.106193, 1, 0, 0.727914,-0.00892926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539234,-0.00212112) , 
6, 0.525218, 1, 0, 0.680807,-0.0180517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198673,3.29071e-05) , 
17, 1.01664, 1, 0, 0.470611,-0.00994131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917348,0.00309849) , 
2, 0.0569643, 1, 0, 0.513631,-0.00684516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400311,0.00178416) , 
15, 0.348333, 1, 0, 0.500401,-0.00279299)    );
  // itree = 1055
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947044,-0.00750503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959051,0.00238244) , 
15, 0.0930466, 1, 0, 0.953181,-0.00496892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620781,0.00201979) , 
3, 0.437743, 1, 0, 0.805045,0.0153467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539056,-0.000990157) , 
8, 0.0358535, 1, 0, 0.748697,0.00806126) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383783,-0.00111203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34662,0.00237038) , 
6, 0.226215, 1, 0, 0.361977,0.0158736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306709,-0.0028239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162354,-0.000540946) , 
13, 0.745135, 1, 0, 0.20099,-0.0163617) , 
9, 0.0285536, 1, 0, 0.247473,-0.00705418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732661,-0.00309213) , 
5, 0.0347044, 1, 0, 0.303095,-0.0113385) , 
16, 0.152168, 1, 0, 0.499616,-0.00278273)    );
  // itree = 1056
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318376,-0.00183536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191703,0.000578052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124247,-0.000566364) , 
8, 0.0549661, 1, 0, 0.152405,-0.000990661) , 
8, 0.0334467, 1, 0, 0.183052,-0.00717835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362736,0.00158147) , 
14, 0.189944, 1, 0, 0.209249,-0.00245073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818338,0.000457293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657233,-0.00474799) , 
16, 0.154166, 1, 0, 0.740903,-0.0326117) , 
12, 0.106682, 1, 0, 0.312076,-0.00828417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956815,-0.00127029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724145,0.00195232) , 
11, 0.59292, 1, 0, 0.811735,0.0228424) , 
2, 0.0329729, 1, 0, 0.40968,-0.00220392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912875,9.32654e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960875,-0.0171366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73822,-0.00604718) , 
3, 0.266136, 1, 0, 0.844516,-0.0525072) , 
14, 0.032553, 1, 0, 0.87353,-0.0299874) , 
1, 0.406431, 1, 0, 0.494947,-0.00731122)    );
  // itree = 1057
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950961,-0.000833529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786971,0.00318431) , 
13, 0.82591, 1, 0, 0.865606,0.0230117) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798597,0.00362174) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546487,-0.00369161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857001,-0.00458864) , 
0, 0.164439, 1, 0, 0.704868,-0.0523201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235462,-0.00158807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89731,-0.00565105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781881,0.00185896) , 
6, 0.294893, 1, 0, 0.834644,0.00433823) , 
12, 0.110944, 1, 0, 0.474697,-0.0134971) , 
16, 0.108591, 1, 0, 0.537688,-0.0241218) , 
9, 0.00815817, 1, 0, 0.571666,-0.017288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691726,0.00215149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322549,0.000225533) , 
16, 0.141099, 1, 0, 0.471439,0.0151023) , 
14, 0.122789, 1, 0, 0.543131,-0.0080666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211308,0.000821425) , 
8, 0.0572715, 1, 0, 0.44862,-0.00212685) , 
8, 0.00741322, 1, 0, 0.510953,0.00163096)    );
  // itree = 1058
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790159,-0.00288528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426436,0.00159774) , 
13, 0.486134, 1, 0, 0.55241,0.0119496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138721,-0.00113999) , 
3, 0.58652, 1, 0, 0.276323,-0.00824708) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99963,0.0163698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972815,-0.00905637) , 
10, 0.288832, 1, 0, 0.985893,-0.000954164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983194,0.00914462) , 
13, 0.69379, 1, 0, 0.984915,0.00648532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852741,-0.00370412) , 
17, 0.456055, 1, 0, 0.953244,-0.00231264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849617,0.0038785) , 
13, 0.91229, 1, 0, 0.919894,0.0158777) , 
4, 0.215841, 1, 0, 0.512542,0.000607773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42603,0.00102989) , 
11, 1.29285, 1, 0, 0.499628,0.00413701)    );
  // itree = 1059
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424895,0.00291064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185736,0.00157201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106794,-0.00135293) , 
9, 0.0369519, 1, 0, 0.137967,-0.0032519) , 
16, 0.177326, 1, 0, 0.202168,0.0093288) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989916,0.00172333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958134,-0.0113345) , 
17, 0.223119, 1, 0, 0.973184,-0.00851582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986579,0.00775321) , 
16, 0.127877, 1, 0, 0.977861,-0.00228377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918487,-0.00971294) , 
10, 0.443847, 1, 0, 0.963589,-0.00953615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756521,0.00188587) , 
3, 0.321345, 1, 0, 0.899385,0.00174802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402153,-0.000438721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664307,-0.00308729) , 
12, 0.138196, 1, 0, 0.511872,-0.0316191) , 
11, 0.807193, 1, 0, 0.724575,-0.0133041) , 
5, 0.0149906, 1, 0, 0.495245,-0.00336859)    );
  // itree = 1060
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839858,0.00284861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980008,-0.00259599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951189,0.0033768) , 
11, 0.343158, 1, 0, 0.964129,0.00596706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905136,-0.00527693) , 
16, 0.0903977, 1, 0, 0.940477,-0.00607978) , 
5, 0.0210371, 1, 0, 0.915666,0.00126888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590307,0.00111894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534567,0.00273529) , 
8, 0.0302575, 1, 0, 0.564801,0.0403475) , 
6, 0.478661, 1, 0, 0.747096,0.0200439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603718,0.00122348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336697,-0.00258805) , 
6, 0.298856, 1, 0, 0.455542,-0.019394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184129,0.000630527) , 
8, 0.0422141, 1, 0, 0.275771,-0.000437468) , 
16, 0.177326, 1, 0, 0.505682,0.00955327)    );
  // itree = 1061
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884681,-0.00120072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5426,0.00497343) , 
11, 0.804562, 1, 0, 0.736836,0.0292392) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293892,-0.00183123) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880579,-0.00578531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819378,0.00236381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842458,-0.00212672) , 
2, 0.0383734, 1, 0, 0.831103,0.00363079) , 
16, 0.054503, 1, 0, 0.850921,-0.0128439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706805,-0.00361731) , 
16, 0.0958599, 1, 0, 0.815228,-0.0238103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831319,0.00120323) , 
16, 0.122227, 1, 0, 0.820068,-0.0124923) , 
12, 0.0854346, 1, 0, 0.670407,-0.0194477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26616,0.00120986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141092,-0.000716526) , 
17, 1.1059, 1, 0, 0.194472,0.00137008) , 
7, 0.389606, 1, 0, 0.446554,-0.0096562) , 
9, 0.015644, 1, 0, 0.487443,-0.0041774)    );
  // itree = 1062
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999545,0.0219832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966903,-0.0144538) , 
6, 0.145254, 1, 0, 0.985406,-0.00280181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945376,0.00683119) , 
3, 0.183674, 1, 0, 0.970355,0.00775671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637508,-0.00245875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667905,0.00141495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18368,-0.0018531) , 
16, 0.132401, 1, 0, 0.295603,-0.0164488) , 
10, 0.377537, 1, 0, 0.364733,-0.0225766) , 
3, 0.360285, 1, 0, 0.564038,-0.0125941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486718,-0.00172731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313466,0.00125687) , 
13, 0.838654, 1, 0, 0.375729,0.00695071) , 
9, 0.0469321, 1, 0, 0.49275,-0.00519505)    );
  // itree = 1063
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994606,0.0107066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944058,-0.00493361) , 
17, 0.313933, 1, 0, 0.972646,0.000330059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887217,0.00434308) , 
11, 0.593766, 1, 0, 0.941927,0.0121983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837999,-0.00269359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176708,-7.12149e-05) , 
7, 0.29422, 1, 0, 0.368433,-0.00684825) , 
10, 0.430935, 1, 0, 0.666988,0.00306723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381295,0.00277348) , 
11, 1.02188, 1, 0, 0.608222,0.0113341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903511,0.00195094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250087,-0.00154357) , 
11, 0.620918, 1, 0, 0.441269,-0.0144444) , 
14, 0.108694, 1, 0, 0.562179,0.00422482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416125,-0.000864956) , 
13, 1.23404, 1, 0, 0.531739,-0.000782933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401093,0.00172784) , 
15, 0.308044, 1, 0, 0.510093,0.00377491)    );
  // itree = 1064
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723612,-0.00247701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387932,0.00267309) , 
13, 0.787964, 1, 0, 0.512064,0.02201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969729,0.000597813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733789,-0.00247112) , 
17, 0.468616, 1, 0, 0.869198,-0.0161541) , 
5, 0.0371787, 1, 0, 0.652025,0.00705336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482475,-0.00484128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434542,-0.00228693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449354,0.000871836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373842,-0.000830295) , 
14, 0.0852455, 1, 0, 0.399372,-0.0041582) , 
14, 0.0694899, 1, 0, 0.408307,-0.0116005) , 
9, 0.0195646, 1, 0, 0.419164,-0.0193741) , 
14, 0.0549422, 1, 0, 0.531619,-0.0066116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572412,0.00375186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20038,-9.59517e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821305,0.00300235) , 
4, 0.116146, 1, 0, 0.377086,0.0111026) , 
9, 0.0359944, 1, 0, 0.433436,0.0210653) , 
14, 0.116756, 1, 0, 0.498995,0.00258472)    );
  // itree = 1065
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193909,0.00115426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144452,-0.000580742) , 
9, 0.0367118, 1, 0, 0.164048,0.00117127) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965174,-0.00014282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888384,-0.00950378) , 
10, 0.405479, 1, 0, 0.930899,-0.0211243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867671,0.00279773) , 
17, 0.445566, 1, 0, 0.906973,-0.00228014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332278,-0.00138206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598424,-0.00376599) , 
12, 0.134092, 1, 0, 0.414358,-0.0471802) , 
17, 0.649285, 1, 0, 0.6315,-0.0273886) , 
12, 0.0707953, 1, 0, 0.394366,-0.0129004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969154,0.000968731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83005,0.00223177) , 
6, 0.332671, 1, 0, 0.906286,0.0151925) , 
2, 0.0402769, 1, 0, 0.485446,-0.00790217)    );
  // itree = 1066
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998827,0.0157489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976329,-0.00974488) , 
17, 0.252531, 1, 0, 0.988108,0.000128409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774542,-0.00444763) , 
3, 0.22436, 1, 0, 0.915817,-0.0154825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695372,0.00355097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501864,0.00160228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293561,-0.00193615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241583,-2.08515e-05) , 
14, 0.0907345, 1, 0, 0.258577,-0.00939451) , 
15, 0.0746428, 1, 0, 0.314996,-0.00265426) , 
11, 0.682946, 1, 0, 0.377623,0.00439061) , 
11, 0.557809, 1, 0, 0.540429,-0.00162107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406511,0.00132331) , 
11, 1.13798, 1, 0, 0.508069,0.00557281)    );
  // itree = 1067
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976877,-0.000605245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91549,0.00385725) , 
11, 0.360242, 1, 0, 0.947754,0.0122221) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938622,0.00259489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967468,-0.00755889) , 
4, 0.318963, 1, 0, 0.951851,0.000682128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774305,-0.00436408) , 
13, 0.708021, 1, 0, 0.898957,-0.0119876) , 
8, 0.0122646, 1, 0, 0.918005,-0.00253738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799824,0.00320824) , 
11, 0.764445, 1, 0, 0.897922,0.00594804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211791,-0.00189253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722444,0.000279549) , 
4, 0.201947, 1, 0, 0.333056,-0.0274027) , 
17, 0.710365, 1, 0, 0.655632,-0.00835719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160345,0.000525133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589721,0.00206457) , 
2, 0.0181055, 1, 0, 0.247926,0.0145299) , 
8, 0.0446794, 1, 0, 0.493628,0.000737145)    );
  // itree = 1068
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991616,0.0115934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935382,-0.00371879) , 
13, 0.56994, 1, 0, 0.967134,0.00221281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778618,0.0029956) , 
13, 0.785595, 1, 0, 0.906957,0.016006) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791367,-0.00238877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818663,0.00192203) , 
14, 0.102506, 1, 0, 0.80452,-0.00476077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605504,-0.00351316) , 
7, 0.0708264, 1, 0, 0.735831,-0.0224778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524153,0.00255191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76621,-0.000182369) , 
5, 0.0340804, 1, 0, 0.611524,0.0297222) , 
7, 0.103215, 1, 0, 0.67512,0.00301638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39265,-0.00330342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272112,-0.00100801) , 
16, 0.200742, 1, 0, 0.315963,-0.0335641) , 
16, 0.158344, 1, 0, 0.544914,-0.0102453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1554,0.00075772) , 
16, 0.278488, 1, 0, 0.400213,-0.00256755) , 
10, 0.317606, 1, 0, 0.505705,0.00129901)    );
  // itree = 1069
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997602,0.0150817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977344,-0.000793251) , 
5, 0.0376565, 1, 0, 0.985443,0.0094348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908404,-0.0039768) , 
17, 0.308883, 1, 0, 0.956245,-0.00103172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624654,0.00500308) , 
7, 0.290697, 1, 0, 0.889814,0.0117805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129146,-0.00183944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592674,0.00094832) , 
5, 0.0173522, 1, 0, 0.21915,-0.0158608) , 
16, 0.240913, 1, 0, 0.557688,-0.00190807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724092,0.00316006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454083,-0.000804303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348987,0.00114731) , 
9, 0.040355, 1, 0, 0.390702,0.00733248) , 
10, 0.368607, 1, 0, 0.452405,0.0169804) , 
6, 0.402724, 1, 0, 0.510589,0.00654176)    );
  // itree = 1070
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994109,0.00983997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956171,-0.014707) , 
10, 0.28889, 1, 0, 0.974708,-0.0076878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885171,0.00396631) , 
3, 0.260376, 1, 0, 0.951007,0.00297826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720999,-0.00327114) , 
6, 0.396844, 1, 0, 0.900586,-0.00847174) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108861,-0.000631927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188101,0.000847778) , 
12, 0.0533979, 1, 0, 0.146375,0.00229887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405952,0.00136799) , 
5, 0.0141395, 1, 0, 0.21319,0.00960701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585532,-0.00240291) , 
5, 0.0240435, 1, 0, 0.25452,0.00243942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780371,0.00343613) , 
2, 0.0393045, 1, 0, 0.29738,0.00749116) , 
17, 0.646147, 1, 0, 0.498769,0.00216171)    );
  // itree = 1071
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974,-0.0432675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994615,0.0133417) , 
6, 0.131748, 1, 0, 0.985282,-0.00387407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861291,-0.00651185) , 
3, 0.220299, 1, 0, 0.945015,-0.0159723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752576,0.00217147) , 
16, 0.158273, 1, 0, 0.879655,-0.00508046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691513,-0.00269525) , 
6, 0.39526, 1, 0, 0.845706,-0.0111545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55653,-0.00469649) , 
11, 0.926667, 1, 0, 0.804022,-0.021327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184571,0.000690614) , 
17, 0.926186, 1, 0, 0.581558,-0.0101238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408114,0.00181568) , 
9, 0.0537483, 1, 0, 0.534878,-0.000257341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338944,-0.00131881) , 
6, 0.746759, 1, 0, 0.499558,-0.0056191)    );
  // itree = 1072
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932071,0.00199643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780532,-0.00215862) , 
10, 0.224339, 1, 0, 0.865278,-0.00546844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253905,0.000988539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91301,0.00620893) , 
12, 0.167121, 1, 0, 0.480181,0.0303182) , 
10, 0.357549, 1, 0, 0.67225,0.0124694) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849182,0.0042685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31808,-0.0012472) , 
11, 0.733026, 1, 0, 0.500002,-0.00578937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414871,-0.00258994) , 
15, 0.159306, 1, 0, 0.46983,-0.017036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378867,0.000674063) , 
15, 0.22114, 1, 0, 0.449529,-0.0110565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512506,-0.00362735) , 
14, 0.218806, 1, 0, 0.457483,-0.0158836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344238,0.000917277) , 
9, 0.0629414, 1, 0, 0.425514,-0.0069048) , 
15, 0.0777969, 1, 0, 0.502425,-0.000865537)    );
  // itree = 1073
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176963,-0.00208049) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922264,0.00529019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961228,0.000594662) , 
4, 0.374747, 1, 0, 0.94536,0.0100682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898174,-0.00332764) , 
9, 0.0320078, 1, 0, 0.930119,0.0015296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725742,-0.00348751) , 
6, 0.370313, 1, 0, 0.885239,-0.00910468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751819,0.00244223) , 
9, 0.0526608, 1, 0, 0.855956,-0.000356026) , 
12, 0.0700505, 1, 0, 0.638017,-0.00947078) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619169,0.0025988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157866,0.000797988) , 
16, 0.270938, 1, 0, 0.309217,0.0225807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375018,-0.000316688) , 
6, 0.717383, 1, 0, 0.334238,0.0112046) , 
11, 0.907737, 1, 0, 0.49982,-6.49959e-05)    );
  // itree = 1074
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622338,0.00261123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882466,-0.00620042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945703,0.00389652) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96838,0.00212396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918765,-0.00424352) , 
15, 0.0696658, 1, 0, 0.945523,-0.00605051) , 
5, 0.0411714, 1, 0, 0.94558,0.00213011) , 
2, 0.0347599, 1, 0, 0.923907,-0.010941) , 
4, 0.154846, 1, 0, 0.854091,0.000436298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359018,-0.00150779) , 
3, 0.605057, 1, 0, 0.625427,-0.0151907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126485,0.000782701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557148,0.00301187) , 
12, 0.0758292, 1, 0, 0.213786,0.0173925) , 
16, 0.281417, 1, 0, 0.497869,-0.00509394)    );
  // itree = 1075
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98025,0.00891773) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999412,0.021075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926865,-0.00758964) , 
3, 0.168601, 1, 0, 0.960138,-0.0110545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976792,0.0060809) , 
12, 0.251853, 1, 0, 0.965183,-0.00325912) , 
5, 0.0277699, 1, 0, 0.968808,0.00298236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732028,-0.00269915) , 
17, 0.579067, 1, 0, 0.918732,-0.00372237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637842,0.00339072) , 
10, 0.582278, 1, 0, 0.869034,0.00358133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129189,-0.000994693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608343,-0.00227067) , 
4, 0.12209, 1, 0, 0.279318,-0.0270085) , 
3, 0.540427, 1, 0, 0.538137,-0.013583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346536,0.000789329) , 
9, 0.0586651, 1, 0, 0.494468,-0.00735374)    );
  // itree = 1076
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736789,-0.00306691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94154,-0.00505944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981776,-0.0135673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924481,0.00378309) , 
3, 0.207489, 1, 0, 0.954938,0.00848612) , 
9, 0.0175536, 1, 0, 0.950114,0.000292429) , 
2, 0.0180318, 1, 0, 0.909078,-0.00577205) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932249,0.00184105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688295,0.0041719) , 
11, 0.492014, 1, 0, 0.799704,0.042556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175455,-0.000367946) , 
16, 0.189398, 1, 0, 0.449863,0.01571) , 
10, 0.482025, 1, 0, 0.689496,0.00449999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389278,-0.00242023) , 
11, 0.965188, 1, 0, 0.634749,-0.0037262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279545,0.000864321) , 
3, 0.756598, 1, 0, 0.508942,0.00327638)    );
  // itree = 1077
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194616,-0.00218572) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987294,0.00783631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897207,-0.00680062) , 
13, 0.686298, 1, 0, 0.954953,-0.00356439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954161,0.00564278) , 
14, 0.0685992, 1, 0, 0.954716,0.00417325) , 
0, 0.0789819, 1, 0, 0.7317,-0.00585346) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904437,0.00629496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347249,0.00181383) , 
7, 0.115633, 1, 0, 0.520028,0.0380629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404397,-0.000139401) , 
11, 1.07075, 1, 0, 0.461128,0.0171713) , 
13, 0.85369, 1, 0, 0.582015,0.00688425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938434,-6.90963e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431639,-0.00407692) , 
11, 0.432369, 1, 0, 0.667936,-0.0356346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244597,-0.000186979) , 
11, 0.687729, 1, 0, 0.366797,-0.0126232) , 
15, 0.194405, 1, 0, 0.502658,-0.000308655)    );
  // itree = 1078
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977723,0.00487645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751862,-0.00215165) , 
13, 0.599593, 1, 0, 0.873976,-0.00924502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807526,0.00473395) , 
10, 0.384934, 1, 0, 0.856903,0.00641076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455831,-0.00129744) , 
10, 0.503408, 1, 0, 0.713785,-0.00348218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236878,-0.00177804) , 
17, 1.02666, 1, 0, 0.549052,-0.0145996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18573,0.000764809) , 
10, 0.733549, 1, 0, 0.424731,-0.00569512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941859,0.00150918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932077,0.0078379) , 
10, 0.445471, 1, 0, 0.938102,0.0263489) , 
4, 0.438697, 1, 0, 0.499612,-0.00102112)    );
  // itree = 1079
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873449,-0.00308418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841217,0.00457671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759153,-0.00257515) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969039,0.00368773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604692,-0.00184375) , 
17, 0.528565, 1, 0, 0.804422,-0.0106679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593582,0.00178913) , 
10, 0.458642, 1, 0, 0.718059,0.00715959) , 
16, 0.0855354, 1, 0, 0.726696,-0.000652542) , 
8, 0.0137734, 1, 0, 0.748634,0.0075068) , 
16, 0.0544673, 1, 0, 0.774768,0.00157561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455257,-0.00275069) , 
16, 0.252531, 1, 0, 0.72609,-0.00320863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208892,0.000805724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730084,0.00406339) , 
2, 0.0188411, 1, 0, 0.321294,0.0250727) , 
8, 0.0413205, 1, 0, 0.593212,0.00607492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171991,-0.00102485) , 
10, 0.806628, 1, 0, 0.504378,0.00145044)    );
  // itree = 1080
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944773,-0.0057612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951201,-0.00226393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849889,0.00292673) , 
10, 0.286835, 1, 0, 0.884497,0.0107956) , 
13, 0.59058, 1, 0, 0.908158,0.00179221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764098,0.00412228) , 
15, 0.27914, 1, 0, 0.881293,0.00959676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531166,-0.00254933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566526,0.00170002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130938,-0.000118396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503644,-0.0021008) , 
12, 0.0847818, 1, 0, 0.202327,-0.00991935) , 
7, 0.352896, 1, 0, 0.275008,-0.00141214) , 
7, 0.183634, 1, 0, 0.327149,-0.0121903) , 
11, 0.659769, 1, 0, 0.490443,-0.00577017)    );
  // itree = 1081
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766527,-0.00398348) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976411,0.00193808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996527,0.0166658) , 
8, 0.016359, 1, 0, 0.985333,0.0152821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938849,-0.00538691) , 
12, 0.259999, 1, 0, 0.971435,0.0053319) , 
2, 0.0243877, 1, 0, 0.910101,-0.00636092) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926287,0.0071322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275001,0.00120546) , 
10, 0.399416, 1, 0, 0.461086,0.0263873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543878,-0.00187324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172876,0.000218742) , 
7, 0.432903, 1, 0, 0.279339,-0.00763502) , 
11, 0.917404, 1, 0, 0.37571,0.0104052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294738,0.00253278) , 
14, 0.148109, 1, 0, 0.357236,0.0175151) , 
11, 0.583438, 1, 0, 0.522646,0.0103717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403721,-0.00123416) , 
13, 1.23404, 1, 0, 0.500658,0.00329365)    );
  // itree = 1082
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721456,-0.00344911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280844,-0.000464261) , 
7, 0.423207, 1, 0, 0.466247,-0.0227236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909126,0.00414302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914753,-0.00117746) , 
4, 0.465344, 1, 0, 0.912335,0.01119) , 
12, 0.159289, 1, 0, 0.670379,-0.00720462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819225,0.00051901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394176,0.00185365) , 
8, 0.0227686, 1, 0, 0.553469,0.0206261) , 
9, 0.0315965, 1, 0, 0.627128,0.0030913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417694,-0.00388331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435953,-0.000314778) , 
14, 0.0783422, 1, 0, 0.42963,-0.0225548) , 
14, 0.067458, 1, 0, 0.567469,-0.0046558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436002,0.00257195) , 
14, 0.0983027, 1, 0, 0.543748,0.00316917) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15906,-0.00120994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435547,0.000177076) , 
12, 0.0648004, 1, 0, 0.275467,-0.00873132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788049,-0.00457086) , 
1, 0.193874, 1, 0, 0.402876,-0.0201639) , 
14, 0.125346, 1, 0, 0.501045,-0.00390388)    );
  // itree = 1083
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926678,0.000170094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806906,0.0029254) , 
10, 0.25724, 1, 0, 0.876619,0.0142966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748678,-0.00371196) , 
14, 0.0309891, 1, 0, 0.836765,-0.00271772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791132,0.00295493) , 
15, 0.0718415, 1, 0, 0.824969,0.00657466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405254,-0.00229525) , 
10, 0.485957, 1, 0, 0.703072,-0.00526397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653242,0.00259935) , 
15, 0.114501, 1, 0, 0.695272,0.000559574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707156,0.0016611) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735717,-0.000574389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298487,-0.00232187) , 
11, 0.684949, 1, 0, 0.460388,-0.0322883) , 
9, 0.0349723, 1, 0, 0.509449,-0.0222893) , 
15, 0.145991, 1, 0, 0.620503,-0.00863407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219564,0.000878559) , 
10, 0.728952, 1, 0, 0.498984,-0.00193806)    );
  // itree = 1084
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674974,0.00393866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378688,0.00126541) , 
7, 0.297969, 1, 0, 0.505317,0.0331738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971169,0.0035627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821886,-0.00346306) , 
10, 0.314109, 1, 0, 0.895684,-0.0131954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971771,-0.0154305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972387,0.00369827) , 
10, 0.344202, 1, 0, 0.972095,-0.00184248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917692,0.00455482) , 
11, 0.514592, 1, 0, 0.952508,0.0117496) , 
12, 0.171112, 1, 0, 0.932717,0.00306155) , 
4, 0.156677, 1, 0, 0.808621,0.0118046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536583,-0.0016779) , 
11, 0.874862, 1, 0, 0.767004,0.00548371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118947,-0.000989426) , 
17, 0.9485, 1, 0, 0.556252,-0.000878275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328975,0.00249361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422229,0.000458137) , 
6, 0.650413, 1, 0, 0.388675,0.020586) , 
11, 1.08827, 1, 0, 0.511303,0.00487906)    );
  // itree = 1085
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990166,-0.0045309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991041,0.0106873) , 
6, 0.129833, 1, 0, 0.990661,0.00579706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763468,-0.00281864) , 
3, 0.25632, 1, 0, 0.919467,-0.00676222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745791,0.00261617) , 
13, 0.901416, 1, 0, 0.855271,0.0102943) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189696,-0.00117391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874157,0.00390442) , 
5, 0.013317, 1, 0, 0.554148,0.00436992) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229959,-0.00256831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1797,-0.000645809) , 
15, 0.202377, 1, 0, 0.206877,-0.0253797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810525,0.000613306) , 
12, 0.151658, 1, 0, 0.2848,-0.0210866) , 
6, 0.216985, 1, 0, 0.358352,-0.014135) , 
16, 0.11259, 1, 0, 0.51984,-0.00619605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45264,0.00164583) , 
11, 1.25776, 1, 0, 0.50933,0.000504246)    );
  // itree = 1086
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388048,0.00263752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260671,0.0015652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0984844,-0.000584102) , 
13, 0.756297, 1, 0, 0.139269,-4.7441e-05) , 
16, 0.159136, 1, 0, 0.186111,0.0100611) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999132,0.0169976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919737,-0.00396262) , 
3, 0.174433, 1, 0, 0.967818,-0.00368869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795427,0.00187203) , 
11, 0.747896, 1, 0, 0.918211,0.00565972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917452,-0.00873488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718708,0.00114786) , 
17, 0.442987, 1, 0, 0.843276,-0.0138647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536592,-0.00290709) , 
11, 0.912785, 1, 0, 0.720014,-0.0359194) , 
10, 0.346022, 1, 0, 0.806587,-0.0177577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538819,0.00165375) , 
10, 0.705916, 1, 0, 0.762291,-0.00920815) , 
12, 0.0768694, 1, 0, 0.500419,-0.00045035)    );
  // itree = 1087
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833801,0.000466908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74569,-0.00144435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367357,-0.00218086) , 
11, 0.829404, 1, 0, 0.517878,-0.0378458) , 
10, 0.33258, 1, 0, 0.612563,-0.0251659) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638136,-5.61779e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244872,-0.00221723) , 
11, 0.65295, 1, 0, 0.378123,-0.0201324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470939,0.00306522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139377,0.00029712) , 
10, 0.625382, 1, 0, 0.210684,0.0149682) , 
11, 0.829386, 1, 0, 0.266242,0.00332135) , 
16, 0.157626, 1, 0, 0.395741,-0.00733083) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992182,0.00934674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890921,-0.00230992) , 
13, 0.729538, 1, 0, 0.950015,-0.00100426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832854,0.0026813) , 
6, 0.359925, 1, 0, 0.906628,0.0139356) , 
12, 0.192955, 1, 0, 0.506346,-0.00272675)    );
  // itree = 1088
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97007,-0.00518342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695134,0.00141583) , 
11, 0.462719, 1, 0, 0.810586,0.0100937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663966,-0.00235625) , 
7, 0.107048, 1, 0, 0.753007,-0.00791727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405294,-0.00246278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944413,0.0037563) , 
2, 0.0185626, 1, 0, 0.690428,-0.00844354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559673,0.00353612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392137,0.0014407) , 
9, 0.0217468, 1, 0, 0.453264,0.0383019) , 
11, 0.763244, 1, 0, 0.553299,0.0185848) , 
16, 0.126002, 1, 0, 0.647648,0.00606423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166623,-0.000932017) , 
10, 0.662795, 1, 0, 0.469012,-0.0014758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929099,0.00433624) , 
12, 0.269043, 1, 0, 0.520651,0.00179312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329213,-0.00210154) , 
15, 0.350812, 1, 0, 0.499318,-0.00207695)    );
  // itree = 1089
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991455,-0.000187731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900467,-0.0067903) , 
3, 0.193904, 1, 0, 0.956243,-0.0130247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855541,0.00126311) , 
17, 0.366038, 1, 0, 0.925187,-0.00532843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907508,0.00539923) , 
14, 0.154998, 1, 0, 0.921411,0.00427774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736805,-0.005622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329267,-0.00147751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270773,0.000322177) , 
16, 0.326277, 1, 0, 0.307872,-0.0129427) , 
7, 0.336095, 1, 0, 0.422359,-0.0234864) , 
7, 0.225113, 1, 0, 0.685087,-0.00886981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535384,-0.000512257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194797,0.00131714) , 
7, 0.395717, 1, 0, 0.293517,0.0106335) , 
11, 0.851556, 1, 0, 0.516736,-0.000484556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418713,-0.00122228) , 
13, 1.28053, 1, 0, 0.501189,-0.00498046)    );
  // itree = 1090
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985947,-0.0062535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653925,0.00260959) , 
3, 0.158812, 1, 0, 0.832824,0.0105609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560279,-0.00183531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0972122,-0.00111789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606253,0.00257852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3572,6.47916e-05) , 
10, 0.611604, 1, 0, 0.443477,0.0185644) , 
12, 0.0704818, 1, 0, 0.20148,-0.00535376) , 
10, 0.399955, 1, 0, 0.242827,-0.00898897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935996,0.00166791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62939,-0.00283263) , 
11, 0.665573, 1, 0, 0.7536,-0.0320125) , 
5, 0.0321095, 1, 0, 0.367562,-0.0146115) , 
13, 0.578968, 1, 0, 0.446843,-0.0103221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913611,0.00302165) , 
2, 0.056361, 1, 0, 0.489477,-0.00729418)    );
  // itree = 1091
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978603,0.00850634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975608,0.00392784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259625,-0.00109304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741895,-0.00684035) , 
5, 0.0246556, 1, 0, 0.433014,-0.0409584) , 
17, 0.384997, 1, 0, 0.590505,-0.0267083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87198,-0.00411758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340565,0.000916683) , 
17, 0.539099, 1, 0, 0.529236,0.000596789) , 
14, 0.0902058, 1, 0, 0.565846,-0.0157189) , 
10, 0.204392, 1, 0, 0.633888,-0.00924202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808144,0.00421004) , 
14, 0.191696, 1, 0, 0.649726,-0.00523516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201596,0.00103871) , 
10, 0.744582, 1, 0, 0.517231,0.000790608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396782,-0.00124451) , 
13, 1.28053, 1, 0, 0.496912,-0.00420857)    );
  // itree = 1092
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998909,0.0218165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98338,-0.0260222) , 
5, 0.0442228, 1, 0, 0.991968,0.000919623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900794,0.00706171) , 
3, 0.211687, 1, 0, 0.962292,0.0168911) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759909,-0.0037509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165054,0.000548535) , 
7, 0.565505, 1, 0, 0.316867,-0.00128717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314004,-0.00198638) , 
6, 0.309679, 1, 0, 0.315739,-0.0115818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508446,0.00165653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324705,-0.000262022) , 
9, 0.0391101, 1, 0, 0.399211,0.0110764) , 
6, 0.478661, 1, 0, 0.355524,-0.000782265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754407,-0.00267698) , 
5, 0.0526698, 1, 0, 0.388592,-0.00406209) , 
11, 0.534462, 1, 0, 0.50194,7.76862e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381084,-0.00305518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616449,-0.000933322) , 
14, 0.256837, 1, 0, 0.477033,-0.0329995) , 
14, 0.188019, 1, 0, 0.498838,-0.00404105)    );
  // itree = 1093
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992619,0.0073009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648354,-0.00375696) , 
6, 0.206354, 1, 0, 0.771267,-0.0360901) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835115,0.00250952) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823052,-0.0039373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889496,0.00385746) , 
7, 0.160812, 1, 0, 0.856189,-0.00359535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4311,-0.00349304) , 
10, 0.527604, 1, 0, 0.703398,-0.0265853) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546143,-0.00205278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372241,-0.00303159) , 
14, 0.0213512, 1, 0, 0.452527,-0.0271986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125236,-0.000383323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69348,0.00197022) , 
4, 0.090939, 1, 0, 0.230396,0.00156449) , 
15, 0.0777969, 1, 0, 0.284987,-0.00550429) , 
16, 0.161096, 1, 0, 0.391191,-0.0108552) , 
16, 0.0896272, 1, 0, 0.442558,-0.00679099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424652,0.00129418) , 
11, 1.25595, 1, 0, 0.439218,-0.000103968) , 
8, 0.00359055, 1, 0, 0.486613,-0.00524042)    );
  // itree = 1094
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345207,0.000988597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222243,-0.000132917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0879302,-0.00158849) , 
10, 0.683341, 1, 0, 0.138749,-0.014555) , 
11, 0.758885, 1, 0, 0.179879,-0.00880552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501447,-0.00193687) , 
12, 0.0862098, 1, 0, 0.227588,-0.0135078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77838,0.00306919) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991162,-0.011006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989317,0.010073) , 
3, 0.135871, 1, 0, 0.990398,0.00308556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813147,-0.00708316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813196,-0.000700501) , 
10, 0.339637, 1, 0, 0.813175,-0.0325508) , 
3, 0.21981, 1, 0, 0.894501,-0.0161976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819092,0.00183539) , 
10, 0.597328, 1, 0, 0.880379,-0.00827586) , 
4, 0.234743, 1, 0, 0.8618,0.00264208) , 
4, 0.162883, 1, 0, 0.488173,-0.00687215)    );
  // itree = 1095
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45799,0.00159737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247312,-0.00139888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158296,-0.000380592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134926,0.000844964) , 
14, 0.0885908, 1, 0, 0.14556,0.00371279) , 
16, 0.239034, 1, 0, 0.171212,-0.00402457) , 
7, 0.22111, 1, 0, 0.214433,0.00133119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747445,-0.00248659) , 
12, 0.121111, 1, 0, 0.293682,-0.00411605) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982269,0.000143349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938904,0.00849879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828493,0.00166059) , 
8, 0.0170943, 1, 0, 0.8816,0.0424987) , 
6, 0.200716, 1, 0, 0.922334,0.0253662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821325,-0.00139264) , 
15, 0.142422, 1, 0, 0.888897,0.0116755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770444,0.00348188) , 
8, 0.0379063, 1, 0, 0.8669,0.0205705) , 
5, 0.0240702, 1, 0, 0.50587,0.00502217)    );
  // itree = 1096
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9333,0.00624135) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897773,0.00184718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810616,-0.00163494) , 
9, 0.0304943, 1, 0, 0.851635,-0.00209455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652781,-0.00276742) , 
8, 0.0271571, 1, 0, 0.791857,-0.0150294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687669,0.00166129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688509,0.00261771) , 
14, 0.0957705, 1, 0, 0.688108,0.0315389) , 
14, 0.0743867, 1, 0, 0.751103,0.00326319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730529,-8.19082e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46568,-0.00254302) , 
7, 0.14202, 1, 0, 0.614484,-0.0200208) , 
14, 0.123957, 1, 0, 0.702291,-0.00505589) , 
9, 0.0143463, 1, 0, 0.73684,0.00134397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52524,-0.00238052) , 
7, 0.329249, 1, 0, 0.71257,-0.00363347) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392245,0.000611481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281769,0.00304356) , 
11, 0.869292, 1, 0, 0.317323,0.0335718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166266,7.0213e-05) , 
14, 0.0759522, 1, 0, 0.228163,0.0143657) , 
7, 0.399809, 1, 0, 0.501152,0.00422222)    );
  // itree = 1097
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999969,0.0220234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980676,-0.00314573) , 
3, 0.125899, 1, 0, 0.991039,0.000895786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942391,-0.0167254) , 
11, 0.443065, 1, 0, 0.974279,-0.00922498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311385,0.00160144) , 
3, 0.246956, 1, 0, 0.643342,0.00501239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858013,0.000528541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447605,-0.00331281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226515,-0.00100548) , 
11, 0.789401, 1, 0, 0.308341,-0.0273841) , 
10, 0.415417, 1, 0, 0.46328,-0.0182713) , 
6, 0.269403, 1, 0, 0.557577,-0.00607782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470981,0.000765472) , 
6, 0.624546, 1, 0, 0.538782,-0.00106135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304337,-0.00127897) , 
9, 0.0664415, 1, 0, 0.496101,-0.00501668)    );
  // itree = 1098
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971484,0.00271116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959831,-0.00154905) , 
0, 0.227702, 1, 0, 0.96594,0.00159799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590264,-0.00370834) , 
17, 0.405899, 1, 0, 0.844544,-0.0205307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65047,-0.0021406) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801485,0.000758755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516751,0.0028493) , 
13, 0.796567, 1, 0, 0.638963,0.0287953) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933795,-0.00225397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355644,0.00176775) , 
17, 0.52404, 1, 0, 0.565059,0.0140304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33594,-0.000702617) , 
13, 0.814101, 1, 0, 0.435277,-0.00169255) , 
15, 0.0880029, 1, 0, 0.492503,0.00687309) , 
9, 0.0143463, 1, 0, 0.516792,0.00221002) , 
8, 0.0137735, 1, 0, 0.581198,-0.00225872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157091,-0.00157846) , 
10, 0.812272, 1, 0, 0.496858,-0.00662467)    );
  // itree = 1099
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91819,0.00337878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975645,-0.00581991) , 
1, 0.363977, 1, 0, 0.947175,0.00370749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868193,0.00418463) , 
13, 0.806535, 1, 0, 0.928675,0.0109517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55823,-0.00194619) , 
11, 0.755059, 1, 0, 0.86453,0.00490227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545719,0.00193127) , 
6, 0.560069, 1, 0, 0.770041,0.0154286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735981,-0.00430597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226137,-0.00113142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225876,0.000602269) , 
9, 0.040355, 1, 0, 0.226004,-0.00401692) , 
10, 0.390406, 1, 0, 0.289978,-0.0101889) , 
8, 0.0341528, 1, 0, 0.504109,0.00123774)    );
  // itree = 1100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980002,-0.00166528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645306,-0.00356063) , 
3, 0.270106, 1, 0, 0.812484,-0.0305713) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948458,0.00139321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530847,0.00252263) , 
17, 0.622302, 1, 0, 0.705386,0.0304795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874316,-0.00288179) , 
12, 0.234961, 1, 0, 0.751133,0.0164339) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188975,-0.000858948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467711,0.000222373) , 
12, 0.0619598, 1, 0, 0.322824,-0.00518576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534392,-0.00313234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857527,-4.27372e-05) , 
12, 0.153755, 1, 0, 0.676456,-0.0359696) , 
5, 0.0187715, 1, 0, 0.441776,-0.0155406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883258,0.00254878) , 
2, 0.0419248, 1, 0, 0.495862,-0.0105818) , 
15, 0.122454, 1, 0, 0.582892,-0.00137132) , 
15, 0.0248809, 1, 0, 0.61869,-0.00592411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147241,0.00213239) , 
7, 0.707208, 1, 0, 0.511976,0.0016789)    );
  // itree = 1101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984323,0.00140425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501434,-0.0030216) , 
16, 0.15827, 1, 0, 0.73667,-0.0130917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664964,0.00308438) , 
15, 0.0691473, 1, 0, 0.711985,-0.00118684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538501,0.000536845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461341,0.00214526) , 
14, 0.0329131, 1, 0, 0.495527,0.0240078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89821,0.0060971) , 
2, 0.04125, 1, 0, 0.597679,0.0345224) , 
6, 0.237922, 1, 0, 0.647886,0.0188378) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935613,-0.000476156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555757,0.00176257) , 
11, 0.613859, 1, 0, 0.733017,0.0174725) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528316,-0.00295762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34215,-0.00179975) , 
15, 0.16545, 1, 0, 0.410908,-0.0361477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221961,0.000294628) , 
8, 0.040555, 1, 0, 0.284671,-0.00889015) , 
8, 0.0215433, 1, 0, 0.430097,-0.000339159) , 
9, 0.0292927, 1, 0, 0.508734,0.00658512)    );
  // itree = 1102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339446,0.0018631) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991631,0.0107015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959625,-0.0069289) , 
9, 0.0281573, 1, 0, 0.975619,-0.00245015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877179,0.00246678) , 
6, 0.331498, 1, 0, 0.94795,0.00530568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905389,-0.00047097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667459,-0.00431291) , 
6, 0.270239, 1, 0, 0.796349,-0.0289314) , 
7, 0.191066, 1, 0, 0.885784,-0.00873364) , 
5, 0.00868997, 1, 0, 0.774892,-0.00133014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131225,0.000892429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551389,0.00368443) , 
2, 0.0132641, 1, 0, 0.244369,0.0252848) , 
10, 0.636997, 1, 0, 0.564848,0.00920721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.34927,-0.00195027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411425,8.64709e-05) , 
6, 0.610866, 1, 0, 0.384655,-0.0124052) , 
13, 1.05775, 1, 0, 0.505782,0.00212279)    );
  // itree = 1103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686659,0.000132717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887924,-0.00213614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370896,-0.00460046) , 
8, 0.0302575, 1, 0, 0.623486,-0.0410965) , 
9, 0.00894934, 1, 0, 0.650787,-0.0227434) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261118,0.000277401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230285,0.000859932) , 
9, 0.0255717, 1, 0, 0.240345,0.0092845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541378,-0.00197073) , 
5, 0.0160468, 1, 0, 0.321725,-0.00212047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885575,0.00641946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880402,0.000455235) , 
2, 0.0370909, 1, 0, 0.882226,0.0248706) , 
5, 0.0240702, 1, 0, 0.53939,0.00836124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404954,-0.0032153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398621,-0.000266903) , 
9, 0.0514783, 1, 0, 0.400836,-0.0180899) , 
9, 0.0418258, 1, 0, 0.490218,-0.00102605) , 
14, 0.0345352, 1, 0, 0.532624,-0.00676156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3473,0.00127662) , 
9, 0.0652654, 1, 0, 0.496668,-0.00121214)    );
  // itree = 1104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144399,-0.000151276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498192,-0.000276381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21251,0.00290836) , 
10, 0.507527, 1, 0, 0.279126,0.0323423) , 
12, 0.052624, 1, 0, 0.215469,0.016153) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962632,0.00507167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942353,-0.00235713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904976,-0.00217055) , 
14, 0.0493697, 1, 0, 0.923545,-0.0103473) , 
16, 0.0604669, 1, 0, 0.939984,0.00221067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801991,-0.0095611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698625,0.000777675) , 
16, 0.202069, 1, 0, 0.749753,-0.0331551) , 
7, 0.181414, 1, 0, 0.862418,-0.0122095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754253,0.00250376) , 
9, 0.052795, 1, 0, 0.83859,-0.00237704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49716,-0.0017386) , 
11, 0.988594, 1, 0, 0.72588,-0.015412) , 
5, 0.0152423, 1, 0, 0.501068,-0.00150913)    );
  // itree = 1105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87844,-0.00578229) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958159,0.0028859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794669,-0.00453749) , 
10, 0.332303, 1, 0, 0.892581,-0.0102034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789342,0.00228204) , 
15, 0.165819, 1, 0, 0.864133,-0.000328633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440403,-0.00207481) , 
11, 1.03398, 1, 0, 0.716865,-0.0175886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630633,0.00326709) , 
16, 0.199806, 1, 0, 0.700852,-0.00697941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357757,0.00134881) , 
10, 0.627723, 1, 0, 0.606722,0.00149607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105241,-0.00011192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3562,-0.00351495) , 
12, 0.0678255, 1, 0, 0.17761,-0.0175382) , 
16, 0.313544, 1, 0, 0.483818,-0.00395565) , 
16, 0.049893, 1, 0, 0.514865,-0.00642454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330647,-0.00208321) , 
15, 0.36782, 1, 0, 0.496362,-0.00922283)    );
  // itree = 1106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928066,0.0028112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861822,-0.00163019) , 
10, 0.359573, 1, 0, 0.901216,0.00411444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912792,0.00639855) , 
8, 0.0196204, 1, 0, 0.904391,0.0141736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795562,-0.00230232) , 
16, 0.154655, 1, 0, 0.870089,0.00433151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578725,-0.0025447) , 
15, 0.187628, 1, 0, 0.815603,-0.00429098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82802,0.00294325) , 
14, 0.159747, 1, 0, 0.817726,0.000849958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257071,-0.00133556) , 
17, 0.901172, 1, 0, 0.592982,-0.00985401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209512,0.00103592) , 
10, 0.764174, 1, 0, 0.489571,-0.002837)    );
  // itree = 1107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959166,-0.00335904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983459,6.27334e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991806,0.0129416) , 
12, 0.265482, 1, 0, 0.98708,0.00811999) , 
1, 0.320662, 1, 0, 0.978641,0.00330001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454554,-0.000693295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713681,-0.00306456) , 
5, 0.0359775, 1, 0, 0.559384,-0.03021) , 
3, 0.324256, 1, 0, 0.719567,-0.0174071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125862,-0.000522372) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594423,0.00187117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794819,-0.00205315) , 
5, 0.030562, 1, 0, 0.683241,0.00570966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58838,0.00331674) , 
14, 0.111033, 1, 0, 0.656885,0.0203278) , 
4, 0.0657278, 1, 0, 0.331672,0.00356269) , 
16, 0.145774, 1, 0, 0.499487,-0.00550945)    );
  // itree = 1108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340743,-0.00219503) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997605,0.0168106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92617,-0.00656537) , 
17, 0.295325, 1, 0, 0.960648,-0.00561255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890209,0.0031749) , 
6, 0.293103, 1, 0, 0.940135,0.00322586) , 
12, 0.0854346, 1, 0, 0.805685,-0.0043251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361456,0.00469059) , 
10, 0.633976, 1, 0, 0.693724,0.0110598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889351,0.00430625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636642,-0.00125889) , 
15, 0.252404, 1, 0, 0.794983,0.00914778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188958,-0.00240516) , 
3, 0.525494, 1, 0, 0.421116,-0.0212499) , 
9, 0.035199, 1, 0, 0.547161,-0.00631093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288208,0.000126721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450802,0.00215154) , 
6, 0.649162, 1, 0, 0.382309,0.0296433) , 
11, 1.0672, 1, 0, 0.499586,0.00406531)    );
  // itree = 1109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67717,-0.00313224) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721921,0.0040526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745523,-0.000671217) , 
9, 0.0164186, 1, 0, 0.734724,0.00927585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716325,0.00465274) , 
6, 0.319628, 1, 0, 0.728967,0.0229646) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984981,0.00258306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764945,-0.00497314) , 
3, 0.233297, 1, 0, 0.90269,-0.0180671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531906,0.00258977) , 
3, 0.383816, 1, 0, 0.75255,0.0055008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245246,-0.00153396) , 
3, 0.559332, 1, 0, 0.498721,-0.0105645) , 
9, 0.0246918, 1, 0, 0.557761,-0.00196697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282064,0.00134307) , 
3, 0.839007, 1, 0, 0.485908,0.00517698) , 
9, 0.00358657, 1, 0, 0.503441,0.00174293)    );
  // itree = 1110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965247,-0.0045632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745155,0.00208614) , 
17, 0.310746, 1, 0, 0.857152,0.0112821) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49942,-0.00332339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862761,-0.00013337) , 
12, 0.148831, 1, 0, 0.681398,-0.0334137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838311,-0.00296971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654801,0.00190457) , 
8, 0.0297845, 1, 0, 0.74223,0.005322) , 
16, 0.15914, 1, 0, 0.705958,-0.0177745) , 
7, 0.10374, 1, 0, 0.763874,-0.00664418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275046,0.00221949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147235,-0.000567353) , 
16, 0.358532, 1, 0, 0.205468,0.0122317) , 
7, 0.481004, 1, 0, 0.552696,0.000494323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284308,-0.00199622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741229,0.00117381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250146,-0.000542824) , 
7, 0.183634, 1, 0, 0.429981,-0.000597116) , 
14, 0.151897, 1, 0, 0.363918,-0.0157923) , 
15, 0.218706, 1, 0, 0.493038,-0.00465257)    );
  // itree = 1111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992826,0.00786783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976871,-0.0205982) , 
1, 0.430102, 1, 0, 0.986148,-0.00309336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956089,0.00783396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757059,0.000447744) , 
11, 0.624062, 1, 0, 0.881739,0.0219009) , 
3, 0.177993, 1, 0, 0.935129,0.00912003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353596,-0.00074318) , 
3, 0.432275, 1, 0, 0.686046,0.000347326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507985,0.0027715) , 
11, 1.04352, 1, 0, 0.661558,0.00655612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264588,-0.00110873) , 
3, 0.787409, 1, 0, 0.539752,-0.00225126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342794,0.00153917) , 
9, 0.0625761, 1, 0, 0.501987,0.00324431)    );
  // itree = 1112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950295,-0.00144651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834823,0.00414747) , 
6, 0.255207, 1, 0, 0.904564,0.0152813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129357,-0.000458746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422217,-0.00231227) , 
5, 0.0138463, 1, 0, 0.201869,-0.0160785) , 
17, 0.660815, 1, 0, 0.416679,-0.00649198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333455,0.00109309) , 
13, 1.07151, 1, 0, 0.391946,0.00200666) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950504,-0.00875384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97874,0.00665738) , 
8, 0.00255839, 1, 0, 0.967665,-0.000649706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68472,-0.00231422) , 
3, 0.425482, 1, 0, 0.842235,-0.0202385) , 
5, 0.0371787, 1, 0, 0.50165,-0.00341293)    );
  // itree = 1113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999938,0.0194229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981072,-0.00750148) , 
3, 0.118492, 1, 0, 0.991004,0.000103221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935685,0.00609103) , 
3, 0.188849, 1, 0, 0.970578,0.0132921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696982,-0.00179881) , 
16, 0.157107, 1, 0, 0.869695,0.00357894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699348,-0.00390869) , 
13, 0.8431, 1, 0, 0.835652,-0.00502734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321961,0.000978015) , 
10, 0.647128, 1, 0, 0.705101,-0.000308892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140517,-0.000674379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321046,-0.00203952) , 
6, 0.365265, 1, 0, 0.203361,-0.0167437) , 
11, 0.883611, 1, 0, 0.544597,-0.00556632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279861,-0.000365058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750103,0.00270464) , 
2, 0.0295224, 1, 0, 0.429456,0.0125917) , 
6, 0.542482, 1, 0, 0.506948,0.00037104)    );
  // itree = 1114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936135,0.00406658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496305,0.0008071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330603,-0.0021582) , 
6, 0.256979, 1, 0, 0.414581,-0.0110548) , 
7, 0.248943, 1, 0, 0.635669,0.00235662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460753,0.00176041) , 
11, 1.08018, 1, 0, 0.579075,0.0132785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884387,-0.00271648) , 
12, 0.259524, 1, 0, 0.636542,0.00725027) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951024,-0.000594518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571446,-0.00613955) , 
17, 0.43257, 1, 0, 0.762787,-0.0515857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236432,-0.000457328) , 
17, 0.711647, 1, 0, 0.388558,-0.0205766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368944,0.000610993) , 
14, 0.147698, 1, 0, 0.383439,-0.0128824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495043,-0.00304399) , 
14, 0.21229, 1, 0, 0.399297,-0.0171897) , 
14, 0.0690704, 1, 0, 0.493905,-0.00744354)    );
  // itree = 1115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972495,0.00601129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959309,-0.00698342) , 
1, 0.464674, 1, 0, 0.966078,0.00265694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654894,-0.00467242) , 
11, 0.525409, 1, 0, 0.848012,-0.0259304) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957516,-0.00245833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775244,0.00595254) , 
11, 0.560782, 1, 0, 0.863884,0.018242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687727,-0.00116741) , 
14, 0.0732528, 1, 0, 0.788166,0.00523809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558267,0.00305428) , 
11, 0.815658, 1, 0, 0.728216,0.0153022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170556,-0.000968418) , 
10, 0.616312, 1, 0, 0.422094,-0.000934971) , 
16, 0.0841771, 1, 0, 0.526034,-0.00703474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391376,0.000981491) , 
11, 1.11656, 1, 0, 0.492872,-0.000326535)    );
  // itree = 1116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763104,-0.00225566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943519,0.0032125) , 
2, 0.0361053, 1, 0, 0.877816,0.00108802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874694,0.00344877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622753,0.00423889) , 
13, 0.800334, 1, 0, 0.749785,0.0404565) , 
8, 0.0190718, 1, 0, 0.82412,0.0175992) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510991,-0.000972518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322838,0.00205859) , 
8, 0.026535, 1, 0, 0.416747,0.00898994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7452,-0.0051856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902411,6.36528e-05) , 
1, 0.353563, 1, 0, 0.827885,-0.0337577) , 
12, 0.128305, 1, 0, 0.588526,-0.00887057) , 
15, 0.105224, 1, 0, 0.690032,0.00253399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277848,-0.00118413) , 
8, 0.0422907, 1, 0, 0.585633,-0.00295903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209201,0.00134352) , 
8, 0.0599124, 1, 0, 0.509022,0.00196601)    );
  // itree = 1117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981209,0.00304187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915407,-0.00697706) , 
10, 0.268701, 1, 0, 0.958501,-0.0068555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896546,-0.000193236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979116,0.00935978) , 
1, 0.357899, 1, 0, 0.94501,0.0189336) , 
10, 0.360629, 1, 0, 0.952435,0.00474054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792251,-0.00159791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525182,-0.00323336) , 
9, 0.0345713, 1, 0, 0.645841,-0.0399338) , 
17, 0.500547, 1, 0, 0.840778,-0.0115291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183691,0.000949828) , 
17, 0.850949, 1, 0, 0.627865,-0.00328757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389259,-0.00447752) , 
11, 1.11655, 1, 0, 0.601407,-0.012115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277956,0.000400037) , 
3, 0.815893, 1, 0, 0.507445,-0.00633667)    );
  // itree = 1118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986451,-0.0200085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982854,0.00977765) , 
3, 0.139873, 1, 0, 0.98461,0.00493866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609746,-0.00334471) , 
3, 0.324256, 1, 0, 0.789063,-0.0296712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480922,0.00143439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903408,0.00126377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840482,-0.00310714) , 
15, 0.150759, 1, 0, 0.868335,-0.0123306) , 
4, 0.141214, 1, 0, 0.738944,0.00108971) , 
14, 0.0592169, 1, 0, 0.763756,-0.0141385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575734,-0.00155714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398173,0.00150998) , 
9, 0.035199, 1, 0, 0.440847,0.0153963) , 
10, 0.57367, 1, 0, 0.647936,-0.00354503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441598,0.00413954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128802,0.000728904) , 
7, 0.679697, 1, 0, 0.228768,0.0235802) , 
16, 0.274411, 1, 0, 0.51503,0.00505558)    );
  // itree = 1119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13485,-0.00216326) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940505,-0.00558048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991034,0.011321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963675,-0.00166532) , 
16, 0.0601874, 1, 0, 0.976939,0.00760801) , 
12, 0.18075, 1, 0, 0.962953,-0.00172279) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982338,0.00334635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575286,0.00473226) , 
3, 0.256037, 1, 0, 0.773687,0.0399762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257306,0.000221032) , 
16, 0.312479, 1, 0, 0.53339,0.0228747) , 
16, 0.1279, 1, 0, 0.722051,0.0120717) , 
12, 0.0514981, 1, 0, 0.577474,0.00298036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227394,0.000165098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67417,-0.00394295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798764,-0.0029166) , 
12, 0.176229, 1, 0, 0.732869,-0.0538055) , 
12, 0.0999559, 1, 0, 0.439082,-0.0209434) , 
6, 0.386608, 1, 0, 0.531044,-0.00504597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401098,0.000812209) , 
6, 0.679901, 1, 0, 0.50172,0.000160234)    );
  // itree = 1120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510262,-0.00236835) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968974,-0.00475063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776621,-0.00382323) , 
11, 0.514815, 1, 0, 0.886756,-0.0261204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931678,0.00442761) , 
14, 0.104455, 1, 0, 0.900202,-0.00836461) , 
12, 0.122588, 1, 0, 0.780834,-0.019765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729984,0.00392263) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794278,0.00291325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864005,-0.00263112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407627,-0.00288127) , 
10, 0.387168, 1, 0, 0.59166,-0.0410843) , 
7, 0.226038, 1, 0, 0.67173,-0.0114262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184311,0.000362901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622952,0.00318722) , 
2, 0.0171951, 1, 0, 0.288085,0.0160313) , 
7, 0.383186, 1, 0, 0.472179,0.00285567) , 
16, 0.103814, 1, 0, 0.500044,0.00823682) , 
7, 0.124672, 1, 0, 0.601593,-0.00189011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16713,-0.00170696) , 
8, 0.0586853, 1, 0, 0.499401,-0.00800172)    );
  // itree = 1121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222099,-0.00287949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221303,-0.000872743) , 
9, 0.0286925, 1, 0, 0.221624,-0.0207645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142286,-0.000267743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315901,0.00148766) , 
12, 0.0602896, 1, 0, 0.224856,0.0122634) , 
6, 0.280035, 1, 0, 0.223792,0.00138479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893665,-0.00188046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500324,-0.00352716) , 
11, 0.74317, 1, 0, 0.669707,-0.0536023) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971641,-0.00393226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979132,0.0067774) , 
15, 0.0578554, 1, 0, 0.975688,0.00540244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856965,-0.0041485) , 
6, 0.216172, 1, 0, 0.924961,-0.0102482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763273,0.00136513) , 
6, 0.501146, 1, 0, 0.88043,-0.000517705) , 
12, 0.148089, 1, 0, 0.811174,-0.0179645) , 
12, 0.0960868, 1, 0, 0.493431,-0.00749757)    );
  // itree = 1122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652542,-0.00393661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912085,-0.00148512) , 
2, 0.0383036, 1, 0, 0.802332,-0.0298416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781332,0.000377034) , 
14, 0.103332, 1, 0, 0.794607,-0.0173259) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568399,0.0032945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48649,-0.000180343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321618,0.00315818) , 
16, 0.274902, 1, 0, 0.387163,0.0219174) , 
16, 0.161659, 1, 0, 0.448651,0.0344016) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90893,-0.00434315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898355,0.00178381) , 
8, 0.0218619, 1, 0, 0.903996,-0.00583348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767552,0.00165436) , 
10, 0.467855, 1, 0, 0.862129,0.00398556) , 
5, 0.0239129, 1, 0, 0.632606,0.0208696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302567,0.00124387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185162,-0.00109486) , 
9, 0.0367118, 1, 0, 0.234586,-0.0024779) , 
8, 0.04204, 1, 0, 0.420857,0.00844861) , 
7, 0.0962007, 1, 0, 0.503407,0.00275583)    );
  // itree = 1123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947572,0.00172986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341295,-0.0044881) , 
16, 0.222961, 1, 0, 0.699528,-0.0177769) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997796,0.0115668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970233,-0.00873089) , 
17, 0.219136, 1, 0, 0.983935,-0.00127678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855884,0.00510372) , 
3, 0.235846, 1, 0, 0.938168,0.0158445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.333198,-0.00193093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214987,0.000195825) , 
15, 0.163899, 1, 0, 0.266969,-0.00796215) , 
16, 0.185373, 1, 0, 0.571708,0.00284659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284162,0.00171598) , 
13, 0.933125, 1, 0, 0.492254,0.00837689) , 
14, 0.0337592, 1, 0, 0.543563,0.00190277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429147,-0.00171189) , 
6, 0.493918, 1, 0, 0.524928,-0.00315741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413017,0.00105552) , 
6, 0.645906, 1, 0, 0.497984,0.00315582)    );
  // itree = 1124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193789,2.35133e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445868,-0.001488) , 
2, 0.0132933, 1, 0, 0.260403,-0.00740821) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922442,0.00133594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910709,-0.0048867) , 
16, 0.111352, 1, 0, 0.91661,-0.00780163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948217,-0.000993709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675629,0.002086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823698,0.0044805) , 
2, 0.033006, 1, 0, 0.7493,0.0584731) , 
17, 0.450255, 1, 0, 0.826653,0.0344542) , 
10, 0.363738, 1, 0, 0.871098,0.0135767) , 
12, 0.0884941, 1, 0, 0.650146,0.00598429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533054,0.00262207) , 
15, 0.373214, 1, 0, 0.638587,0.00928077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184783,-0.000638474) , 
17, 1.09348, 1, 0, 0.483949,0.0024463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856876,-0.0042342) , 
5, 0.0601755, 1, 0, 0.506028,0.000300115)    );
  // itree = 1125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868221,-0.000300795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330384,-0.00548562) , 
7, 0.338004, 1, 0, 0.648836,-0.0342163) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232204,1.79326e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913838,-0.000978454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559286,0.00309104) , 
17, 0.537129, 1, 0, 0.653185,0.0467104) , 
12, 0.0628087, 1, 0, 0.486462,0.0283272) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993836,0.0101148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817924,-0.00723678) , 
6, 0.215304, 1, 0, 0.903565,-0.0307843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901406,-0.00137994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884979,0.00426464) , 
7, 0.0905888, 1, 0, 0.893037,0.0171138) , 
10, 0.373716, 1, 0, 0.898265,-0.00667109) , 
4, 0.26701, 1, 0, 0.648689,0.0145398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192345,-0.00075049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216754,-5.00425e-05) , 
13, 0.91884, 1, 0, 0.206985,-0.00478291) , 
10, 0.705916, 1, 0, 0.480084,0.00716408) , 
14, 0.017222, 1, 0, 0.502105,0.00176435)    );
  // itree = 1126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894942,0.00357798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875058,0.00110164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723964,-0.00269468) , 
10, 0.394741, 1, 0, 0.816833,-0.00795809) , 
14, 0.0332242, 1, 0, 0.847648,0.00588228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754194,-0.00336802) , 
7, 0.28013, 1, 0, 0.830534,-0.0022757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743477,0.00264581) , 
9, 0.0491501, 1, 0, 0.811634,0.0061806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628618,0.00368148) , 
7, 0.420199, 1, 0, 0.789092,0.011727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558865,-0.00224247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783915,-0.00546933) , 
2, 0.0269831, 1, 0, 0.66944,-0.049919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217386,9.84519e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166213,-0.00098399) , 
14, 0.112739, 1, 0, 0.193615,-0.00670142) , 
17, 0.745554, 1, 0, 0.281087,-0.0146462) , 
10, 0.529785, 1, 0, 0.496555,-0.00346012)    );
  // itree = 1127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996667,0.013071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977066,-0.00469784) , 
4, 0.467264, 1, 0, 0.987087,0.00285604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885868,0.0110822) , 
7, 0.168033, 1, 0, 0.954413,0.0139818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328208,-0.0028156) , 
8, 0.0322191, 1, 0, 0.681364,-0.00569303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894706,-0.00083389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291027,0.00193963) , 
8, 0.0259463, 1, 0, 0.459259,0.0173712) , 
6, 0.233736, 1, 0, 0.582786,0.00454365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494229,-0.00412581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357008,-5.29591e-05) , 
15, 0.115507, 1, 0, 0.397869,-0.0192674) , 
6, 0.38454, 1, 0, 0.508638,-0.00500406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44885,0.00126765) , 
13, 1.27203, 1, 0, 0.499396,5.63898e-05)    );
  // itree = 1128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980712,0.0040085) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953664,0.0033982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213919,-0.00272726) , 
10, 0.469036, 1, 0, 0.58499,-0.0150437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545421,0.00202632) , 
9, 0.0185859, 1, 0, 0.571287,-0.00352311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185033,-0.00122436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803283,-0.00854569) , 
12, 0.098909, 1, 0, 0.372197,-0.0315171) , 
9, 0.0315965, 1, 0, 0.468904,-0.0179192) , 
16, 0.0722738, 1, 0, 0.569993,-0.012905) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689602,0.00154533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445391,-0.00129184) , 
9, 0.024829, 1, 0, 0.532769,-0.00534777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389082,0.00204181) , 
14, 0.0945154, 1, 0, 0.464182,0.0131966) , 
6, 0.330981, 1, 0, 0.524231,-0.00161643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352216,-0.00149518) , 
6, 0.733947, 1, 0, 0.491247,-0.00819064)    );
  // itree = 1129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966516,0.00389001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884782,-0.0034706) , 
10, 0.245155, 1, 0, 0.928253,-0.00266146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480382,0.00315739) , 
17, 0.727216, 1, 0, 0.723383,0.0259335) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519112,-0.0031993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556553,0.000800642) , 
15, 0.153049, 1, 0, 0.536404,-0.020048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52782,0.00337481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543682,0.002004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296072,-0.000493759) , 
13, 0.79357, 1, 0, 0.37188,0.000533096) , 
9, 0.0468078, 1, 0, 0.401167,0.0092798) , 
9, 0.0372653, 1, 0, 0.435753,0.00177954) , 
15, 0.0968131, 1, 0, 0.537858,0.0103539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148801,-0.00144925) , 
16, 0.382805, 1, 0, 0.467861,0.00537912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868556,-0.00380602) , 
12, 0.293078, 1, 0, 0.50295,0.00246097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537901,-0.00262608) , 
14, 0.23918, 1, 0, 0.505065,-4.78954e-06)    );
  // itree = 1130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125466,-0.00136231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560576,-0.0012408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185415,0.00087673) , 
10, 0.464671, 1, 0, 0.255168,0.00737271) , 
12, 0.0485649, 1, 0, 0.215289,-0.0001913) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978294,0.00557686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85352,-0.00380209) , 
10, 0.202135, 1, 0, 0.899406,-0.0144114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856304,0.00270869) , 
10, 0.368183, 1, 0, 0.88567,-0.000262442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588354,-0.00352947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636063,-0.00173001) , 
15, 0.183814, 1, 0, 0.614289,-0.0515821) , 
10, 0.507499, 1, 0, 0.792789,-0.0178267) , 
12, 0.0952634, 1, 0, 0.428936,-0.00671554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920187,0.00300603) , 
12, 0.242922, 1, 0, 0.472444,-0.00433693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84577,-0.00466218) , 
12, 0.353977, 1, 0, 0.491091,-0.0061558)    );
  // itree = 1131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886253,-0.00511433) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883196,0.00220561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864583,0.00612607) , 
9, 0.0194015, 1, 0, 0.873542,0.0407377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853133,0.00101949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698627,-0.00188453) , 
9, 0.0286805, 1, 0, 0.792436,-0.00446139) , 
7, 0.113717, 1, 0, 0.828196,0.0154669) , 
16, 0.0491388, 1, 0, 0.838194,0.00787027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649459,-0.00217699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508663,-0.000234234) , 
7, 0.13167, 1, 0, 0.586276,-0.0197495) , 
9, 0.0430211, 1, 0, 0.743382,-0.00252466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598032,0.00254328) , 
7, 0.305241, 1, 0, 0.726722,0.00211767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248118,-0.00201018) , 
7, 0.399163, 1, 0, 0.6265,-0.00587571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426309,0.0043551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113703,-0.000336655) , 
7, 0.667704, 1, 0, 0.208296,0.0133681) , 
16, 0.278488, 1, 0, 0.497139,7.68992e-05)    );
  // itree = 1132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987767,0.00870976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864464,-0.0044294) , 
6, 0.193058, 1, 0, 0.92801,-0.0109801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771423,0.00465911) , 
8, 0.0253144, 1, 0, 0.88082,0.00139428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56489,-0.00152387) , 
13, 1.0253, 1, 0, 0.77406,-0.00927511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973898,-0.00442915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689621,0.0032692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363027,0.000374101) , 
10, 0.575743, 1, 0, 0.505944,0.0271808) , 
3, 0.243434, 1, 0, 0.632901,0.0181936) , 
14, 0.0679021, 1, 0, 0.697475,0.00562786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128127,6.40004e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489065,-0.00198357) , 
12, 0.0772405, 1, 0, 0.23326,-0.011434) , 
8, 0.0403462, 1, 0, 0.497031,-0.00173932)    );
  // itree = 1133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980157,0.00737914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242413,-0.00145139) , 
3, 0.308999, 1, 0, 0.496584,-0.011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226621,0.0015877) , 
11, 0.837105, 1, 0, 0.373692,0.00447728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223207,-0.00110772) , 
13, 1.0228, 1, 0, 0.321298,-0.00456882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994219,0.0106664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950685,-0.00797566) , 
14, 0.0536092, 1, 0, 0.970866,-0.00580226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703843,0.00156394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804847,-0.00087554) , 
4, 0.294675, 1, 0, 0.753116,0.0104842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910239,0.00612801) , 
4, 0.442019, 1, 0, 0.798077,0.0243065) , 
11, 0.484316, 1, 0, 0.859134,0.0136674) , 
2, 0.0305468, 1, 0, 0.50258,0.00157785)    );
  // itree = 1134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952522,-0.00195599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958714,0.0085929) , 
10, 0.323866, 1, 0, 0.954744,0.00814482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476378,-0.00259516) , 
17, 0.654983, 1, 0, 0.770471,-0.0139923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627752,-0.00362989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983211,0.00843854) , 
0, 0.138714, 1, 0, 0.837127,-0.00308239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568678,0.00162266) , 
6, 0.434943, 1, 0, 0.718099,0.0128506) , 
9, 0.0258792, 1, 0, 0.744898,-0.000884797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28224,0.00254044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298443,0.000146501) , 
15, 0.185073, 1, 0, 0.288651,0.0221791) , 
10, 0.611794, 1, 0, 0.569787,0.00796734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336764,-0.000650167) , 
9, 0.057385, 1, 0, 0.510932,0.00314584)    );
  // itree = 1135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887327,0.00486655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983163,-0.00198655) , 
1, 0.372755, 1, 0, 0.937132,0.00741097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778026,-0.00360685) , 
13, 0.753603, 1, 0, 0.882762,-0.00278196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385886,0.00449801) , 
11, 0.813789, 1, 0, 0.742629,0.0128264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955607,-0.00576301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840337,0.00426184) , 
6, 0.242933, 1, 0, 0.903949,0.0119362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220789,-0.00176566) , 
16, 0.189398, 1, 0, 0.509512,-0.0086277) , 
15, 0.087687, 1, 0, 0.606853,0.000330806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377784,-0.00147966) , 
13, 1.06761, 1, 0, 0.565968,-0.0038397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485685,0.00121739) , 
6, 0.619576, 1, 0, 0.548765,0.00276213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308113,-0.00105673) , 
9, 0.0652654, 1, 0, 0.504128,-0.00122199)    );
  // itree = 1136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560139,0.00200237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548857,-0.00223193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14924,0.000596011) , 
17, 0.852297, 1, 0, 0.21303,0.00252865) , 
16, 0.119352, 1, 0, 0.268185,0.00764014) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964369,-0.00765165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840181,0.00250465) , 
13, 0.807182, 1, 0, 0.906812,0.00700606) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990024,0.00767196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870337,-0.00121007) , 
6, 0.182989, 1, 0, 0.928657,-0.000652401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628124,-0.00177708) , 
6, 0.405798, 1, 0, 0.7844,-0.0179118) , 
15, 0.0873893, 1, 0, 0.841272,-0.00633524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540357,-0.002125) , 
8, 0.0438229, 1, 0, 0.789194,-0.0129747) , 
5, 0.0185893, 1, 0, 0.501123,-0.00157653)    );
  // itree = 1137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867504,0.00262119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501978,-0.00399944) , 
13, 0.800334, 1, 0, 0.668949,-0.0283384) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57945,-0.00210119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.686179,-0.00261988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421756,0.0020613) , 
13, 0.796567, 1, 0, 0.518367,0.0153375) , 
14, 0.0391437, 1, 0, 0.539713,0.0012916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505304,-0.000873852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369218,-0.00291464) , 
6, 0.317369, 1, 0, 0.437463,-0.0314139) , 
15, 0.120119, 1, 0, 0.494471,-0.0131793) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586164,-0.000827571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235969,0.00135539) , 
7, 0.274847, 1, 0, 0.371887,0.00748553) , 
9, 0.0424288, 1, 0, 0.437476,-0.00357129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929563,0.00488134) , 
12, 0.269043, 1, 0, 0.481435,-8.60537e-05) , 
14, 0.0168796, 1, 0, 0.503984,-0.00348335)    );
  // itree = 1138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485841,0.00137905) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965539,0.00285039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95927,-0.00678544) , 
0, 0.204548, 1, 0, 0.962058,-0.00405098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845351,-0.00526687) , 
11, 0.54531, 1, 0, 0.923121,-0.016206) , 
4, 0.103238, 1, 0, 0.777846,-0.00437755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596678,0.00329808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354216,0.000716976) , 
8, 0.0193554, 1, 0, 0.457472,0.0355681) , 
13, 0.878826, 1, 0, 0.629229,0.0141527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238628,-0.00133334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174475,5.66012e-05) , 
8, 0.0589898, 1, 0, 0.200327,-0.00783663) , 
8, 0.0470072, 1, 0, 0.442334,0.0045708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979563,0.0013599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767941,-0.00314109) , 
6, 0.262086, 1, 0, 0.863387,-0.0229735) , 
5, 0.0481404, 1, 0, 0.503872,0.000545101)    );
  // itree = 1139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834347,-0.00142263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974621,0.00532428) , 
4, 0.363121, 1, 0, 0.906609,0.00141363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808275,-0.00225644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538862,-0.0044503) , 
15, 0.134014, 1, 0, 0.697907,-0.0427816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678713,-0.000113692) , 
14, 0.133892, 1, 0, 0.690486,-0.0268394) , 
10, 0.335886, 1, 0, 0.772917,-0.0160635) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555002,0.00152755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546757,0.00289755) , 
6, 0.268037, 1, 0, 0.550364,0.0328234) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379726,0.000796244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259241,-0.00332947) , 
15, 0.107629, 1, 0, 0.316578,-0.0190632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320394,0.00349243) , 
15, 0.178081, 1, 0, 0.317835,0.0018261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359315,-0.00189459) , 
6, 0.440442, 1, 0, 0.332184,-0.011606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272059,0.00136197) , 
9, 0.0510744, 1, 0, 0.305183,0.00380971) , 
15, 0.0497619, 1, 0, 0.352115,0.00936346) , 
8, 0.0227686, 1, 0, 0.506875,1.21248e-05)    );
  // itree = 1140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178689,-0.00128952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194387,0.000258581) , 
15, 0.161901, 1, 0, 0.187877,-0.00585808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820435,-0.00133664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448792,-0.0030274) , 
10, 0.427457, 1, 0, 0.593406,-0.0518526) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897207,-0.00159714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933281,0.00478074) , 
9, 0.0139564, 1, 0, 0.91821,0.0145276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896759,0.00228411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805765,-0.00522235) , 
5, 0.0336339, 1, 0, 0.837738,-0.0291886) , 
15, 0.0802167, 1, 0, 0.875015,-0.00893811) , 
4, 0.227794, 1, 0, 0.777204,-0.0238435) , 
4, 0.095617, 1, 0, 0.459049,-0.0141339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921071,0.00349972) , 
2, 0.0571006, 1, 0, 0.497028,-0.0109354)    );
  // itree = 1141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977655,0.00801369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954111,-0.00503596) , 
8, 0.0138922, 1, 0, 0.966888,0.0047801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71462,-0.0043266) , 
17, 0.491265, 1, 0, 0.893389,-0.0145222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877878,0.00413796) , 
8, 0.0283406, 1, 0, 0.889066,-0.00189499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305222,0.00142677) , 
17, 0.835195, 1, 0, 0.600578,0.0113165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371995,-0.00315523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389054,0.000765076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32999,-0.00154383) , 
14, 0.122301, 1, 0, 0.358422,-0.00680627) , 
14, 0.100201, 1, 0, 0.362102,-0.0182295) , 
14, 0.0861083, 1, 0, 0.510018,9.65899e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408333,0.00221114) , 
14, 0.151435, 1, 0, 0.496143,0.00454403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516004,-0.00252211) , 
14, 0.220682, 1, 0, 0.497622,0.0015024)    );
  // itree = 1142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294764,-0.00368203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923403,-0.00346614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938654,0.00199661) , 
9, 0.0171436, 1, 0, 0.931575,-0.00146059) , 
4, 0.215841, 1, 0, 0.67257,-0.0214611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448323,0.000606582) , 
11, 1.07808, 1, 0, 0.608859,-0.0117877) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956543,0.0021345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482984,-0.00340506) , 
8, 0.0241714, 1, 0, 0.746727,-0.0152305) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359869,0.000873589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342817,0.0037748) , 
6, 0.226926, 1, 0, 0.3497,0.0324385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521083,0.00145839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271589,-0.000348088) , 
10, 0.603359, 1, 0, 0.364436,0.00715127) , 
6, 0.373379, 1, 0, 0.358938,0.0165854) , 
13, 0.610576, 1, 0, 0.433048,0.0105051) , 
14, 0.0670523, 1, 0, 0.505711,0.00129144)    );
  // itree = 1143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929083,0.00867336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973565,-0.00507833) , 
4, 0.37568, 1, 0, 0.955167,0.00404901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448976,-0.00289006) , 
8, 0.0315514, 1, 0, 0.774894,-0.0089559) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85741,-0.000537835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823463,0.00347754) , 
14, 0.0833971, 1, 0, 0.841674,0.0170598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753182,-0.0028298) , 
7, 0.189541, 1, 0, 0.817325,0.00388488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575229,0.00465638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355483,0.00164688) , 
3, 0.591331, 1, 0, 0.408108,0.0403422) , 
17, 0.730545, 1, 0, 0.604572,0.0228392) , 
6, 0.225093, 1, 0, 0.665348,0.0114937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195551,-0.000649338) , 
17, 1.08084, 1, 0, 0.505092,0.00372332)    );
  // itree = 1144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939751,-0.00628088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726131,0.00252164) , 
6, 0.352564, 1, 0, 0.848379,0.00993976) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798121,0.00295737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934947,0.000800091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880477,-0.0029591) , 
14, 0.0939139, 1, 0, 0.907818,-0.00876356) , 
5, 0.0180526, 1, 0, 0.88174,0.000334245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411276,-0.00165646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294002,-0.000474426) , 
7, 0.354012, 1, 0, 0.367225,-0.027677) , 
17, 0.663697, 1, 0, 0.603018,-0.01484) , 
15, 0.0497619, 1, 0, 0.663979,-0.00868332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160544,0.000726796) , 
7, 0.564209, 1, 0, 0.498608,-0.0024651)    );
  // itree = 1145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349555,-0.000957292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983482,-0.00607593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938022,0.00840698) , 
16, 0.110411, 1, 0, 0.960867,0.0139744) , 
5, 0.0158106, 1, 0, 0.751946,0.00599467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846682,-0.00740984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130114,-0.000298068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650584,-0.000933508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307856,-0.00281738) , 
7, 0.315978, 1, 0, 0.447325,-0.0411613) , 
5, 0.0107909, 1, 0, 0.24515,-0.0175155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84602,0.00138284) , 
12, 0.151679, 1, 0, 0.35544,-0.0114031) , 
11, 0.499545, 1, 0, 0.403695,-0.0151747) , 
6, 0.190494, 1, 0, 0.485047,-0.0102295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956572,0.00634817) , 
2, 0.0579208, 1, 0, 0.519005,-0.00745709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41921,0.00110923) , 
11, 1.23397, 1, 0, 0.501549,-0.00187338)    );
  // itree = 1146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281809,-0.00210029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109591,3.09235e-05) , 
13, 0.7183, 1, 0, 0.156096,-0.00835727) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786035,-0.00212182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986447,0.0123026) , 
4, 0.365685, 1, 0, 0.873166,-0.0015261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829517,0.00519637) , 
9, 0.0287093, 1, 0, 0.857413,0.0119674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747758,-0.00202543) , 
9, 0.0457557, 1, 0, 0.830779,0.00410692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914986,-0.00929719) , 
12, 0.282532, 1, 0, 0.848181,-0.00405772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768539,-0.000822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684033,0.0032857) , 
15, 0.115196, 1, 0, 0.715552,0.0334777) , 
6, 0.394206, 1, 0, 0.80721,0.00753741) , 
4, 0.0607488, 1, 0, 0.520766,0.000544877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466298,0.00159539) , 
13, 1.22115, 1, 0, 0.509203,0.00806014)    );
  // itree = 1147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216328,0.000170266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182962,0.00169461) , 
14, 0.05688, 1, 0, 0.194753,0.0141997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233696,-0.00106147) , 
14, 0.138141, 1, 0, 0.207612,0.00479608) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993834,0.00963489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939063,-0.00468702) , 
17, 0.313375, 1, 0, 0.965879,-0.00304017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955984,0.00467706) , 
10, 0.386303, 1, 0, 0.962385,0.0049337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92097,-0.00705512) , 
12, 0.303368, 1, 0, 0.953197,-0.00218939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740001,-0.00536244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470698,-0.000944376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537966,-0.00152392) , 
6, 0.339979, 1, 0, 0.503197,-0.0220955) , 
8, 0.0307039, 1, 0, 0.578331,-0.0361628) , 
17, 0.49945, 1, 0, 0.798809,-0.0161813) , 
2, 0.0154911, 1, 0, 0.535253,-0.0068296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453374,0.00220115) , 
6, 0.606304, 1, 0, 0.513023,0.00758152)    );
  // itree = 1148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849904,-0.00568745) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123592,-0.000445876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295839,0.00191958) , 
12, 0.0588356, 1, 0, 0.18438,0.00781204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681457,0.000740636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422694,-0.00193142) , 
8, 0.0332055, 1, 0, 0.508421,-0.0245219) , 
5, 0.0160644, 1, 0, 0.289776,-0.00270467) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993472,0.0114779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875014,-0.00552003) , 
3, 0.253074, 1, 0, 0.950732,-0.00538342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802839,0.00360836) , 
3, 0.50929, 1, 0, 0.896397,0.021252) , 
4, 0.250082, 1, 0, 0.458767,0.00396912) , 
16, 0.049893, 1, 0, 0.482797,0.0011881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581381,0.0039745) , 
14, 0.220682, 1, 0, 0.49111,0.00557825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829751,-0.00700444) , 
12, 0.336278, 1, 0, 0.510589,0.00181301)    );
  // itree = 1149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910815,0.00345184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158914,-0.0011123) , 
7, 0.534937, 1, 0, 0.478783,-0.00231785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343125,-0.00199491) , 
6, 0.326561, 1, 0, 0.42606,-0.0136712) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994283,0.00891387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939284,-0.00440761) , 
11, 0.405207, 1, 0, 0.968354,-0.0026361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864419,0.00362602) , 
17, 0.443358, 1, 0, 0.932718,0.0122907) , 
2, 0.0351079, 1, 0, 0.599879,-0.00476441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42009,-0.00133842) , 
11, 1.20934, 1, 0, 0.564989,-0.00979635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426477,0.00177784) , 
9, 0.051396, 1, 0, 0.53598,-0.00218686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296977,-0.00142847) , 
9, 0.0689799, 1, 0, 0.498356,-0.00585271)    );
  // itree = 1150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998854,0.0180513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937728,-0.00582806) , 
3, 0.147839, 1, 0, 0.969662,-0.00556209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677042,0.00217219) , 
3, 0.301607, 1, 0, 0.87426,0.00572688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477561,-0.00238385) , 
11, 0.687149, 1, 0, 0.793129,-0.00223556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400029,0.00253273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382843,-9.19639e-05) , 
13, 0.987211, 1, 0, 0.390741,0.0152427) , 
11, 0.796076, 1, 0, 0.625919,0.00502743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956288,0.00597506) , 
12, 0.313463, 1, 0, 0.659179,0.00742429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154454,-0.00102141) , 
8, 0.0555144, 1, 0, 0.520724,0.00135504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442933,0.00130491) , 
11, 1.2673, 1, 0, 0.508544,0.00573939)    );
  // itree = 1151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242259,0.00154417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112286,0.000204966) , 
16, 0.292734, 1, 0, 0.165055,0.0118393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539884,0.000471009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334351,-0.00164625) , 
6, 0.319107, 1, 0, 0.398357,-0.0237152) , 
12, 0.0636965, 1, 0, 0.263831,-0.00321396) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874212,-0.000794573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909557,0.00277737) , 
16, 0.118249, 1, 0, 0.889884,0.0054827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7287,0.00373007) , 
10, 0.5278, 1, 0, 0.841257,0.0263596) , 
12, 0.11602, 1, 0, 0.394668,0.003487) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967438,-0.0308978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9486,0.00588348) , 
3, 0.172792, 1, 0, 0.959432,9.30292e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710845,-0.00347375) , 
13, 0.946959, 1, 0, 0.868759,-0.0212858) , 
12, 0.190874, 1, 0, 0.494167,-0.00171216)    );
  // itree = 1152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974456,-0.00392325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984518,0.00831645) , 
13, 0.613047, 1, 0, 0.978619,0.00238682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880358,0.00864471) , 
16, 0.179061, 1, 0, 0.951095,0.011248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331919,-0.000901359) , 
8, 0.0403462, 1, 0, 0.769571,0.00452001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830424,-0.0108561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231472,-0.000441726) , 
10, 0.485968, 1, 0, 0.349627,-0.0176087) , 
13, 0.762576, 1, 0, 0.560579,-0.00649272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59796,-0.000241573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397376,0.00166697) , 
16, 0.126675, 1, 0, 0.490143,0.0141396) , 
6, 0.432271, 1, 0, 0.534092,0.00126605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291053,-0.00181249) , 
9, 0.0664871, 1, 0, 0.490888,-0.0046737)    );
  // itree = 1153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992664,0.00891058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892703,-0.00563391) , 
11, 0.540099, 1, 0, 0.957601,-0.00442706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7803,0.00394412) , 
11, 0.743842, 1, 0, 0.902196,0.0158098) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897342,-0.00156065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797387,0.00262626) , 
10, 0.497547, 1, 0, 0.855548,0.00518737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344193,-0.00160063) , 
3, 0.5107, 1, 0, 0.537206,-0.0188512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304553,-0.00120434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205922,0.00116609) , 
11, 0.846431, 1, 0, 0.233371,0.00851521) , 
10, 0.661792, 1, 0, 0.382746,-0.00493904) , 
10, 0.339633, 1, 0, 0.497522,-0.000354446)    );
  // itree = 1154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8891,-0.00719303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884773,0.00305905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96243,-4.44474e-05) , 
4, 0.423571, 1, 0, 0.918123,0.00906455) , 
9, 0.0151879, 1, 0, 0.907162,-0.00499188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393345,0.00196077) , 
3, 0.540427, 1, 0, 0.639449,0.0155306) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993752,0.0112417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571922,-0.00280257) , 
3, 0.235685, 1, 0, 0.753433,-0.0185988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681075,0.00215129) , 
15, 0.306548, 1, 0, 0.730111,-0.00426021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31843,-0.00246161) , 
11, 0.843721, 1, 0, 0.54846,-0.0252426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210707,0.00069327) , 
8, 0.044014, 1, 0, 0.401435,-0.00944346) , 
15, 0.121503, 1, 0, 0.503843,0.00130193)    );
  // itree = 1155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989923,-5.79053e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92728,-0.0154911) , 
11, 0.491539, 1, 0, 0.963502,-0.0155313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771519,0.00142244) , 
6, 0.293803, 1, 0, 0.880403,0.000346407) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230068,-0.00216704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188051,0.000173158) , 
13, 0.816023, 1, 0, 0.199291,-0.00591941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698309,-0.00194002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660343,-0.00568092) , 
15, 0.102919, 1, 0, 0.679774,-0.0653584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901696,-8.20576e-05) , 
4, 0.479968, 1, 0, 0.756807,-0.0428488) , 
5, 0.0216876, 1, 0, 0.406527,-0.0196465) , 
10, 0.337085, 1, 0, 0.562451,-0.0130681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351526,0.00183328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457234,-0.00257746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487226,0.000841933) , 
15, 0.317366, 1, 0, 0.47535,-0.00612352) , 
14, 0.166476, 1, 0, 0.404372,0.0141698) , 
15, 0.194405, 1, 0, 0.506275,-0.00338863)    );
  // itree = 1156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990983,0.00362675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954417,-0.0149993) , 
11, 0.317644, 1, 0, 0.974109,-0.00937574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963593,0.0062599) , 
17, 0.328919, 1, 0, 0.969507,0.00365795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521176,-0.00214472) , 
17, 0.578462, 1, 0, 0.864743,-0.00445959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73782,-0.00494066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404673,-0.00127104) , 
10, 0.562079, 1, 0, 0.584812,-0.0378247) , 
13, 0.764596, 1, 0, 0.749841,-0.0181548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384809,4.37204e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789954,0.00177916) , 
12, 0.134521, 1, 0, 0.552167,0.0128217) , 
11, 0.898402, 1, 0, 0.701879,-0.0106388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201936,-0.00178827) , 
17, 1.05376, 1, 0, 0.56607,-0.0168342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19413,0.000138763) , 
8, 0.0626762, 1, 0, 0.495044,-0.0131957)    );
  // itree = 1157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452605,-0.0031112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527622,-0.00143798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309975,0.000914851) , 
8, 0.0320675, 1, 0, 0.389688,0.0013563) , 
9, 0.0258384, 1, 0, 0.410671,-0.0152183) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991325,0.0110886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972475,0.00143659) , 
8, 0.0174404, 1, 0, 0.981669,0.010601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877519,-0.00596662) , 
10, 0.323828, 1, 0, 0.940496,-0.00733841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801342,0.0036966) , 
6, 0.470671, 1, 0, 0.89856,0.0146741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791526,-0.00238031) , 
15, 0.164406, 1, 0, 0.877049,0.00578079) , 
2, 0.0260699, 1, 0, 0.648507,-0.00450954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225782,0.00108306) , 
10, 0.688147, 1, 0, 0.502326,0.00279505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497546,-0.00255968) , 
14, 0.222096, 1, 0, 0.501951,-0.000356716)    );
  // itree = 1158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909735,-0.00910107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915872,-0.000429757) , 
16, 0.11793, 1, 0, 0.913137,-0.0149667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851561,0.00419219) , 
14, 0.0803302, 1, 0, 0.893691,-0.00059924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683466,0.0033452) , 
13, 0.834357, 1, 0, 0.815384,0.017733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901978,-0.00389508) , 
5, 0.0540953, 1, 0, 0.835811,0.00837392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618038,-0.00271346) , 
14, 0.141275, 1, 0, 0.806538,0.00211727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805456,0.00413784) , 
14, 0.200153, 1, 0, 0.80641,0.00684354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308603,-0.00131654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131366,-0.000294436) , 
16, 0.298979, 1, 0, 0.222119,-0.0164578) , 
17, 0.862943, 1, 0, 0.488565,-0.00583202)    );
  // itree = 1159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990897,0.000488988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999676,0.0197014) , 
4, 0.429739, 1, 0, 0.995217,0.00419559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755337,-0.00581504) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711984,-0.00206091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612847,0.0013061) , 
10, 0.475838, 1, 0, 0.666469,-0.00571453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648811,-0.000457986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370395,-0.002965) , 
10, 0.504383, 1, 0, 0.495686,-0.039098) , 
7, 0.16937, 1, 0, 0.586745,-0.0212984) , 
16, 0.0526648, 1, 0, 0.610505,-0.0280963) , 
3, 0.178957, 1, 0, 0.699152,-0.0206555) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784482,0.0013835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568174,-0.000952687) , 
7, 0.338049, 1, 0, 0.670416,-0.000583359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267034,0.00320921) , 
7, 0.503366, 1, 0, 0.451793,0.0247437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131555,-0.000847056) , 
10, 0.72953, 1, 0, 0.285932,0.00540578) , 
16, 0.179061, 1, 0, 0.495677,-0.00782256)    );
  // itree = 1160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22828,-2.25078e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65513,0.00276618) , 
2, 0.0144745, 1, 0, 0.37863,0.0145628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871045,0.000336726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79321,-0.00316842) , 
16, 0.122978, 1, 0, 0.831915,-0.0163541) , 
2, 0.0238131, 1, 0, 0.538519,0.00365737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931778,0.0042666) , 
2, 0.0433751, 1, 0, 0.639597,0.00907271) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8466,0.0018337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526723,-0.00109743) , 
7, 0.142915, 1, 0, 0.674794,-0.000247501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458657,-0.00186768) , 
9, 0.0543713, 1, 0, 0.574598,-0.0151779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216122,0.000451038) , 
8, 0.0455371, 1, 0, 0.421364,-0.00562359) , 
9, 0.031288, 1, 0, 0.504207,-4.47861e-05)    );
  // itree = 1161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926783,-0.000570271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603262,0.00501087) , 
13, 0.698933, 1, 0, 0.75547,0.0194031) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819205,-0.00299902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578083,0.00492411) , 
6, 0.146403, 1, 0, 0.720313,0.0105767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373508,-0.00323724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38416,0.000873667) , 
6, 0.236515, 1, 0, 0.379141,-0.0109713) , 
6, 0.191459, 1, 0, 0.546229,-0.000418181) , 
15, 0.065542, 1, 0, 0.618407,0.00641921) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723158,-0.000304826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447997,-0.00273292) , 
16, 0.113606, 1, 0, 0.548478,-0.0325276) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753813,0.00359239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329444,-0.00017604) , 
7, 0.194803, 1, 0, 0.466465,0.0160082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309294,-0.00101008) , 
9, 0.0473344, 1, 0, 0.370018,-0.00519986) , 
15, 0.0779582, 1, 0, 0.415327,-0.0121382) , 
6, 0.287197, 1, 0, 0.493699,-0.00497662)    );
  // itree = 1162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569101,-0.0031808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30777,-0.00204279) , 
15, 0.13044, 1, 0, 0.432619,-0.03037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597349,9.39362e-05) , 
14, 0.153759, 1, 0, 0.484259,-0.0205102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944159,0.00489899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935805,-0.00320425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98039,0.00622479) , 
4, 0.408509, 1, 0, 0.961029,0.000505828) , 
2, 0.0260134, 1, 0, 0.957074,0.00689884) , 
12, 0.121111, 1, 0, 0.759885,-0.00453218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610626,0.00232014) , 
13, 0.987028, 1, 0, 0.732802,0.00257883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412215,-0.000826433) , 
11, 1.00376, 1, 0, 0.641692,-0.00308515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23171,0.000960183) , 
8, 0.0523713, 1, 0, 0.506277,0.00303465)    );
  // itree = 1163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985839,-0.00511257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992897,0.0113155) , 
13, 0.681007, 1, 0, 0.988837,0.00543042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867862,-0.00328957) , 
6, 0.240853, 1, 0, 0.948479,-0.0042377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781699,0.00364436) , 
11, 0.61164, 1, 0, 0.906952,0.00966103) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800896,0.00297926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427164,-0.000679111) , 
16, 0.268281, 1, 0, 0.653443,0.0118459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182041,-0.00163567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593877,-0.00485167) , 
2, 0.0153394, 1, 0, 0.325717,-0.0405393) , 
14, 0.0870464, 1, 0, 0.484937,-0.0150889) , 
7, 0.180281, 1, 0, 0.679022,-0.00370637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47461,-0.000526745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403559,0.00211541) , 
9, 0.0203954, 1, 0, 0.42522,0.0247913) , 
11, 0.917552, 1, 0, 0.593597,0.00588547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184887,-0.000975998) , 
17, 1.21827, 1, 0, 0.505383,0.000842436)    );
  // itree = 1164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980609,-0.00975456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999894,0.0188665) , 
2, 0.0309229, 1, 0, 0.992648,0.00116958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778108,-0.00671344) , 
3, 0.180634, 1, 0, 0.929569,-0.0121549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862896,-0.000138213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775722,0.00305602) , 
14, 0.0785655, 1, 0, 0.817582,0.0177421) , 
6, 0.215632, 1, 0, 0.877643,0.0017079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498013,-0.00419947) , 
11, 0.799397, 1, 0, 0.800489,-0.010721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536656,0.00156355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213124,0.00109858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190129,-0.000564033) , 
3, 0.767652, 1, 0, 0.199194,0.000718938) , 
7, 0.243504, 1, 0, 0.289083,0.0100051) , 
3, 0.576456, 1, 0, 0.514898,0.000853351)    );
  // itree = 1165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983926,-0.00604472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993653,0.00901962) , 
14, 0.0777024, 1, 0, 0.987714,0.00123628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975873,0.00909468) , 
11, 0.522557, 1, 0, 0.984103,0.0064478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808188,-0.00436982) , 
3, 0.305527, 1, 0, 0.941156,-0.00629357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651635,0.00200119) , 
3, 0.487023, 1, 0, 0.859486,0.00695345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621327,0.00128234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47825,-0.00332854) , 
13, 0.878826, 1, 0, 0.551669,-0.0235612) , 
10, 0.469788, 1, 0, 0.766214,-0.00229285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444359,0.0028692) , 
10, 0.630518, 1, 0, 0.72798,0.00298145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25006,-0.00114767) , 
10, 0.714604, 1, 0, 0.610978,-0.00227257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161836,-0.00163535) , 
17, 1.17246, 1, 0, 0.495754,-0.00887568)    );
  // itree = 1166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861229,-0.00271607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876799,0.00548551) , 
16, 0.0869664, 1, 0, 0.868732,0.0112005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42612,-0.00156363) , 
7, 0.295753, 1, 0, 0.67755,-0.00280716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631399,0.00406182) , 
14, 0.0380524, 1, 0, 0.666679,0.00868509) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145185,0.000434759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183702,-0.00172796) , 
0, 0.0530079, 1, 0, 0.167524,-0.0156286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866964,-0.00308054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611365,0.000824184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88547,0.00431894) , 
4, 0.255722, 1, 0, 0.724319,0.0305732) , 
10, 0.374539, 1, 0, 0.768531,0.0134199) , 
1, 0.096587, 1, 0, 0.380581,-0.00533091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830653,-0.00645935) , 
1, 0.4105, 1, 0, 0.432068,-0.011149) , 
15, 0.0746428, 1, 0, 0.503294,-0.00512757)    );
  // itree = 1167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859288,0.000688679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459125,-0.000865667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752534,-0.00261294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574808,-0.00488319) , 
7, 0.148966, 1, 0, 0.684945,-0.0584544) , 
5, 0.0181714, 1, 0, 0.593726,-0.0413626) , 
10, 0.315518, 1, 0, 0.661382,-0.029375) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250572,-0.00202614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190186,-0.00031516) , 
9, 0.0272725, 1, 0, 0.220842,-0.0169202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171439,0.000567918) , 
9, 0.04487, 1, 0, 0.198374,-0.00538951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767425,0.0030057) , 
2, 0.0255129, 1, 0, 0.259431,0.000416878) , 
7, 0.292205, 1, 0, 0.414971,-0.0111114) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989743,0.0024389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92916,-0.00565262) , 
13, 0.681733, 1, 0, 0.959798,-0.00916218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818042,0.00275772) , 
13, 0.912289, 1, 0, 0.896985,0.0138708) , 
2, 0.0419737, 1, 0, 0.503249,-0.00653605)    );
  // itree = 1168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64356,-0.00333825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621696,0.00345241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136357,0.000188117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28705,0.00154996) , 
11, 1.08884, 1, 0, 0.201823,0.015071) , 
17, 0.781079, 1, 0, 0.251341,0.0207218) , 
13, 0.583102, 1, 0, 0.300481,0.0143917) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995577,0.00970891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921366,-0.00874607) , 
17, 0.229126, 1, 0, 0.958119,-0.012037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96956,0.00443741) , 
16, 0.110728, 1, 0, 0.962395,-0.00353016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878477,0.00249216) , 
13, 0.917569, 1, 0, 0.944181,0.00286029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659908,-0.00247777) , 
17, 0.649285, 1, 0, 0.85933,-0.0127705) , 
0, 0.12672, 1, 0, 0.520369,0.00370426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343062,-0.00211883) , 
15, 0.36451, 1, 0, 0.50163,-0.000448893)    );
  // itree = 1169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758479,-0.00483339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991766,0.00799028) , 
12, 0.136769, 1, 0, 0.883775,-0.00890256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955566,-0.00354659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640562,0.00497594) , 
7, 0.113667, 1, 0, 0.80604,0.017466) , 
13, 0.648497, 1, 0, 0.845324,0.00414029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714245,-0.00557279) , 
6, 0.392676, 1, 0, 0.819794,-0.00900719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343738,0.0012828) , 
3, 0.644244, 1, 0, 0.631632,0.00362088) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748067,-0.00168963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327542,-0.00456619) , 
16, 0.113619, 1, 0, 0.48241,-0.0547234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210571,-0.00107356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823606,0.00135535) , 
1, 0.176781, 1, 0, 0.361968,-0.00903869) , 
14, 0.0796909, 1, 0, 0.397936,-0.0226814) , 
9, 0.035199, 1, 0, 0.500339,-0.0111559)    );
  // itree = 1170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990719,0.00443349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927103,-0.00939903) , 
11, 0.387476, 1, 0, 0.957054,-0.0111014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912706,0.00250448) , 
6, 0.27439, 1, 0, 0.947297,-0.00563182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396258,0.00218642) , 
3, 0.381857, 1, 0, 0.746797,0.00879204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45627,-0.00253844) , 
15, 0.323452, 1, 0, 0.703982,0.00233487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551718,-0.00296477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388223,-0.000529927) , 
9, 0.0282027, 1, 0, 0.446391,-0.0245341) , 
13, 0.925392, 1, 0, 0.606044,-0.00788085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209949,0.000825822) , 
17, 1.14184, 1, 0, 0.493774,-0.00167423)    );
  // itree = 1171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989295,0.00647242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988206,0.0160347) , 
10, 0.239432, 1, 0, 0.988752,0.00997525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963273,-0.00326492) , 
9, 0.031677, 1, 0, 0.979132,0.00366702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876716,-0.00463355) , 
6, 0.262236, 1, 0, 0.953644,-0.00408663) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701914,0.000901365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472695,0.00288593) , 
8, 0.0307006, 1, 0, 0.591785,0.032823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225805,0.000307776) , 
17, 0.968812, 1, 0, 0.370914,0.0162474) , 
3, 0.360285, 1, 0, 0.529246,0.0107225) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89536,0.0045177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258282,-0.0015251) , 
11, 0.577417, 1, 0, 0.428256,-0.0134124) , 
14, 0.154998, 1, 0, 0.509385,0.00597611)    );
  // itree = 1172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66418,-0.00231652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425271,-0.00552439) , 
9, 0.0289853, 1, 0, 0.563025,-0.0475032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186486,0.000382736) , 
16, 0.321922, 1, 0, 0.37918,-0.0220361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927976,-0.00295401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928344,0.00381801) , 
7, 0.12082, 1, 0, 0.928144,0.00261401) , 
12, 0.157614, 1, 0, 0.606254,-0.0118398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532763,-0.00117261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386958,0.00218733) , 
14, 0.081312, 1, 0, 0.444825,0.0121809) , 
9, 0.042236, 1, 0, 0.556171,-0.00438744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384344,-0.0011502) , 
6, 0.670125, 1, 0, 0.515972,-0.00954125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584578,-0.00164178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394487,0.00218936) , 
6, 0.27228, 1, 0, 0.460894,0.0202993) , 
14, 0.146237, 1, 0, 0.504061,-0.003088)    );
  // itree = 1173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379123,-0.00224734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134803,0.00111355) , 
3, 0.5107, 1, 0, 0.168053,0.0089424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397051,-0.00119404) , 
0, 0.0715461, 1, 0, 0.225565,0.000718071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723659,0.00313031) , 
4, 0.1418, 1, 0, 0.288925,0.00791969) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986804,-0.00396945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999303,0.0204037) , 
1, 0.448927, 1, 0, 0.992487,0.00313528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889374,-0.0064618) , 
3, 0.210843, 1, 0, 0.960598,-0.00881665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891298,0.0027327) , 
13, 0.885705, 1, 0, 0.944574,-0.00092085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701834,-0.000886535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669212,-0.00334536) , 
12, 0.174876, 1, 0, 0.684982,-0.0428973) , 
17, 0.623359, 1, 0, 0.862514,-0.0141901) , 
4, 0.219147, 1, 0, 0.494759,-1.4451e-05)    );
  // itree = 1174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87922,-0.00680401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965086,1.77934e-05) , 
5, 0.0419882, 1, 0, 0.917871,-0.0198004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855355,0.00273001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94438,-0.00281208) , 
0, 0.143092, 1, 0, 0.902123,0.00689191) , 
14, 0.0586492, 1, 0, 0.911122,-0.00836095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512697,-0.00295737) , 
11, 0.977292, 1, 0, 0.809557,-0.02363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223696,-0.00146736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133528,0.000185345) , 
17, 1.05521, 1, 0, 0.168329,-0.00847125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920962,-0.00409716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756673,0.00318054) , 
17, 0.450586, 1, 0, 0.818642,0.0309052) , 
4, 0.174882, 1, 0, 0.3218,0.00082142) , 
10, 0.44828, 1, 0, 0.48979,-0.00759996)    );
  // itree = 1175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972086,-2.02372e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746792,0.00532167) , 
17, 0.356489, 1, 0, 0.858849,0.0159235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244742,-0.00122983) , 
11, 0.846431, 1, 0, 0.664878,0.00560077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502178,-0.00400815) , 
9, 0.028987, 1, 0, 0.627382,-0.00430678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503651,-0.00204783) , 
6, 0.505585, 1, 0, 0.594461,-0.0151756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818787,-0.00246238) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706186,0.00237594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23532,-0.000347455) , 
11, 0.669106, 1, 0, 0.374454,0.00384733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319413,0.00152484) , 
11, 1.00049, 1, 0, 0.351184,0.0148159) , 
10, 0.393014, 1, 0, 0.428752,0.00847665) , 
9, 0.035199, 1, 0, 0.504107,-0.00227908)    );
  // itree = 1176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510641,-0.00188474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866695,0.00162626) , 
2, 0.0232025, 1, 0, 0.635215,-0.0163074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699049,0.00395552) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278198,0.00180413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125876,0.000255414) , 
3, 0.644244, 1, 0, 0.170729,0.0105458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675333,-0.00135555) , 
12, 0.101738, 1, 0, 0.248593,0.00538977) , 
8, 0.0199904, 1, 0, 0.301267,0.0103356) , 
16, 0.119352, 1, 0, 0.379222,0.00411616) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950763,0.00465031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980344,0.00229078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901497,-0.00916763) , 
10, 0.336256, 1, 0, 0.94222,-0.0173567) , 
1, 0.387975, 1, 0, 0.945147,-0.00354845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634115,-0.00325093) , 
11, 0.777264, 1, 0, 0.828645,-0.0273478) , 
5, 0.0359775, 1, 0, 0.497562,-0.0041688)    );
  // itree = 1177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998305,0.0140626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9936,0.0142023) , 
11, 0.399505, 1, 0, 0.995963,0.00882709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942375,-0.00197164) , 
6, 0.193219, 1, 0, 0.975214,0.00301053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658053,0.00335223) , 
3, 0.350844, 1, 0, 0.87759,0.014541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466206,-0.00140592) , 
11, 0.920497, 1, 0, 0.736165,-9.34828e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296502,0.00153479) , 
8, 0.0516031, 1, 0, 0.614408,0.00661726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360678,-0.00178993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577459,-0.00294681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28887,0.000577526) , 
13, 0.735625, 1, 0, 0.372361,-0.00194524) , 
14, 0.0996787, 1, 0, 0.369205,-0.00913393) , 
15, 0.136427, 1, 0, 0.496613,-0.000949608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585122,0.00224055) , 
14, 0.234683, 1, 0, 0.502376,0.00104864)    );
  // itree = 1178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813103,0.00535024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952947,0.00150549) , 
1, 0.238294, 1, 0, 0.905104,0.0235349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816319,-0.00185785) , 
9, 0.0353502, 1, 0, 0.879831,0.0121531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928721,-0.0095847) , 
1, 0.506378, 1, 0, 0.890275,0.00351788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180972,-0.00082657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30218,-0.00167306) , 
15, 0.19359, 1, 0, 0.231791,-0.0172633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773273,-0.0052764) , 
5, 0.0265699, 1, 0, 0.358801,-0.0264908) , 
10, 0.49305, 1, 0, 0.650008,-0.0100484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420244,0.00101675) , 
9, 0.0530281, 1, 0, 0.573862,-0.0015471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428694,-0.000893698) , 
13, 1.27203, 1, 0, 0.546972,-0.00516529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16715,0.00147678) , 
16, 0.408167, 1, 0, 0.498841,-0.00226023)    );
  // itree = 1179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968998,-0.00477356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942198,0.00457129) , 
17, 0.295325, 1, 0, 0.952327,0.00956383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371279,-0.000989121) , 
3, 0.401264, 1, 0, 0.591664,-0.00874484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981186,0.00089818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854812,0.00284962) , 
6, 0.265313, 1, 0, 0.916441,0.0189583) , 
5, 0.0389391, 1, 0, 0.672649,-0.0018369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382182,0.00204221) , 
8, 0.039582, 1, 0, 0.621107,0.0042706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959867,0.00973721) , 
2, 0.0601755, 1, 0, 0.646597,0.00783732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195411,-0.00118156) , 
8, 0.0531266, 1, 0, 0.504816,-0.000717881)    );
  // itree = 1180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607243,0.000769299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666489,0.00433677) , 
7, 0.140027, 1, 0, 0.632852,0.026878) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801067,-0.00356443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943226,0.00370408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928831,-0.00237169) , 
1, 0.532348, 1, 0, 0.935995,0.00579236) , 
12, 0.165255, 1, 0, 0.88859,-0.010794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902745,0.00211505) , 
16, 0.0920995, 1, 0, 0.893658,-0.00132695) , 
2, 0.0299812, 1, 0, 0.78819,0.0100789) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471122,0.00044837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3402,-0.00243051) , 
9, 0.0185829, 1, 0, 0.402301,-0.0174364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2631,0.000249864) , 
15, 0.105576, 1, 0, 0.325165,-0.00558762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210914,-0.00158982) , 
14, 0.136714, 1, 0, 0.29497,-0.0113051) , 
8, 0.0322285, 1, 0, 0.505184,-0.00219105)    );
  // itree = 1181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579292,-0.00410061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640901,0.000491854) , 
14, 0.0996578, 1, 0, 0.608142,-0.0303095) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983476,0.00659476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743802,-0.00211362) , 
11, 0.616872, 1, 0, 0.881766,-0.00679685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964678,0.00729129) , 
4, 0.45299, 1, 0, 0.915432,0.00737856) , 
5, 0.0240702, 1, 0, 0.813176,-0.00516275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58162,0.00421216) , 
10, 0.683726, 1, 0, 0.782136,0.0042249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550204,-0.00265517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329736,-0.00163378) , 
16, 0.142931, 1, 0, 0.408067,-0.0335093) , 
8, 0.0324349, 1, 0, 0.68024,-0.0060539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600646,0.00269248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275325,0.00157672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140662,-0.000302418) , 
17, 1.08355, 1, 0, 0.186556,0.00551865) , 
7, 0.411504, 1, 0, 0.254879,0.0127486) , 
8, 0.0403462, 1, 0, 0.500173,0.0019057)    );
  // itree = 1182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140235,-0.00053555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368005,0.00173985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308092,-0.000211393) , 
15, 0.217815, 1, 0, 0.342623,0.016578) , 
12, 0.057687, 1, 0, 0.243079,0.0049161) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968904,0.00201554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976516,0.00791997) , 
14, 0.0416879, 1, 0, 0.971792,0.0112814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930158,-0.00205395) , 
14, 0.0850471, 1, 0, 0.95616,0.00357271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85043,-0.0037933) , 
7, 0.252049, 1, 0, 0.936483,-0.00255956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587937,-0.00277209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738329,-0.00093437) , 
5, 0.040102, 1, 0, 0.6407,-0.0467388) , 
11, 0.802858, 1, 0, 0.823436,-0.0194447) , 
4, 0.154846, 1, 0, 0.498337,-0.0057985)    );
  // itree = 1183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350686,-0.00219106) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999301,0.0158537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917826,-0.0057819) , 
3, 0.16851, 1, 0, 0.960089,-0.00978847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78473,0.00204745) , 
11, 0.602385, 1, 0, 0.888951,0.00788171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808003,-0.00260244) , 
14, 0.107102, 1, 0, 0.864169,-0.00364464) , 
12, 0.0877067, 1, 0, 0.766138,-0.0118642) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125895,0.000679552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712456,-0.00345972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250995,-0.000411573) , 
13, 0.750792, 1, 0, 0.405576,-0.0142832) , 
12, 0.0521298, 1, 0, 0.305014,-0.00632621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352416,0.0013872) , 
6, 0.553902, 1, 0, 0.318651,0.00318873) , 
7, 0.221199, 1, 0, 0.494965,-0.00274228)    );
  // itree = 1184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991648,0.0112764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970436,-0.00530577) , 
12, 0.192639, 1, 0, 0.978846,0.000692645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249686,-0.00158141) , 
7, 0.395717, 1, 0, 0.654863,-0.00815843) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864953,-0.000950824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453195,0.0020545) , 
17, 0.691064, 1, 0, 0.591724,0.0225455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.415549,-0.00205377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391561,0.000912733) , 
9, 0.0333658, 1, 0, 0.397763,0.00279355) , 
14, 0.0618913, 1, 0, 0.479432,0.0111102) , 
6, 0.249722, 1, 0, 0.541522,0.00429054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235606,-0.000269545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599482,-0.00286309) , 
5, 0.0175039, 1, 0, 0.352932,-0.018573) , 
15, 0.26309, 1, 0, 0.497831,-0.00100622)    );
  // itree = 1185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281245,-0.00162952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350395,0.000674806) , 
15, 0.145183, 1, 0, 0.31649,-0.00739997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806247,0.00205858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680223,0.00345223) , 
8, 0.0239087, 1, 0, 0.74478,0.0411539) , 
2, 0.0157802, 1, 0, 0.477933,0.0109022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832586,-0.00375174) , 
5, 0.0244185, 1, 0, 0.540685,0.00304435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329483,-0.000175597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105904,-0.00180205) , 
3, 0.613277, 1, 0, 0.157567,-0.0206698) , 
10, 0.652043, 1, 0, 0.339643,-0.00939971) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995416,0.00880219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925307,0.00501506) , 
3, 0.2029, 1, 0, 0.965404,0.0153973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902787,-0.00593253) , 
9, 0.0351967, 1, 0, 0.945123,0.00183269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774171,0.00235045) , 
6, 0.393157, 1, 0, 0.871103,0.0194826) , 
2, 0.0335331, 1, 0, 0.501115,-0.000624499)    );
  // itree = 1186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480199,0.00341057) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991795,-0.0217752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907617,-0.0117298) , 
3, 0.160736, 1, 0, 0.949335,-0.02277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904266,0.00083497) , 
10, 0.394049, 1, 0, 0.935068,-0.0140117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969155,0.00575231) , 
12, 0.306459, 1, 0, 0.942835,-0.00655094) , 
12, 0.105248, 1, 0, 0.804734,0.0057484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161164,-0.00197835) , 
8, 0.0493319, 1, 0, 0.576685,-0.00593533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472611,-0.00309972) , 
6, 0.441904, 1, 0, 0.560264,-0.0124293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49128,0.000953671) , 
6, 0.593089, 1, 0, 0.543269,-0.00424001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345206,0.00173328) , 
9, 0.0625761, 1, 0, 0.50477,0.00225785)    );
  // itree = 1187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954391,0.00641579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933126,-0.00903717) , 
5, 0.0464733, 1, 0, 0.945508,0.00232641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20119,-0.00286128) , 
7, 0.46614, 1, 0, 0.678908,-0.0114149) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312873,0.00128924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887975,-0.00318036) , 
5, 0.0222159, 1, 0, 0.581144,-0.00108695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560512,0.00112298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361466,0.00274248) , 
6, 0.223041, 1, 0, 0.422725,0.0281669) , 
14, 0.095778, 1, 0, 0.500098,0.0138791) , 
9, 0.025106, 1, 0, 0.56724,0.00438131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366359,-0.00141413) , 
6, 0.517055, 1, 0, 0.516789,-0.00319338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423717,0.000875829) , 
11, 1.20919, 1, 0, 0.498602,0.00121091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509942,-0.00318469) , 
14, 0.215877, 1, 0, 0.499509,-0.00249394)    );
  // itree = 1188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953163,-0.0056442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882541,0.00482319) , 
7, 0.168033, 1, 0, 0.923907,3.96427e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565648,0.00464107) , 
11, 0.717208, 1, 0, 0.817213,0.0151415) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956536,-0.0167217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817297,0.00209557) , 
6, 0.227307, 1, 0, 0.878083,0.00238034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50884,-0.00336297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230774,-0.00071704) , 
16, 0.202147, 1, 0, 0.309412,-0.0230201) , 
7, 0.198885, 1, 0, 0.539876,-0.0127261) , 
9, 0.027377, 1, 0, 0.637794,-0.00288704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377124,-0.00204797) , 
11, 0.988594, 1, 0, 0.58646,-0.00940181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281021,0.000647382) , 
3, 0.792626, 1, 0, 0.493358,-0.00277383)    );
  // itree = 1189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649096,0.00269483) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999734,0.0184143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96,-0.0150529) , 
3, 0.132117, 1, 0, 0.983001,-0.00634226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932301,0.00338731) , 
3, 0.202517, 1, 0, 0.963627,0.00350295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786485,-0.00241751) , 
13, 0.925874, 1, 0, 0.918066,-0.00550065) , 
4, 0.135267, 1, 0, 0.876351,0.00186791) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584333,0.000540234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188694,-0.00151918) , 
7, 0.492098, 1, 0, 0.325569,-0.0123823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796426,-0.00553051) , 
2, 0.0263712, 1, 0, 0.439325,-0.0220738) , 
16, 0.176665, 1, 0, 0.704622,-0.00753993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144078,0.00179003) , 
17, 1.04885, 1, 0, 0.539759,0.00157583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369909,-0.00109984) , 
6, 0.64352, 1, 0, 0.497006,-0.00501287)    );
  // itree = 1190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88635,-0.000948092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887394,0.00343176) , 
16, 0.0848086, 1, 0, 0.886884,0.00938669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787141,-0.00204867) , 
9, 0.0295238, 1, 0, 0.852547,-0.00106584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836715,0.00433599) , 
10, 0.520002, 1, 0, 0.849199,0.00918207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655287,-0.00337295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56483,-0.00013721) , 
14, 0.0960848, 1, 0, 0.598474,-0.0198613) , 
9, 0.0430211, 1, 0, 0.75771,-0.00141586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700361,0.00321359) , 
7, 0.270402, 1, 0, 0.749367,0.00517849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21379,0.000914188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124154,-0.00106263) , 
9, 0.0313423, 1, 0, 0.150228,-0.00719131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638135,-0.00309466) , 
4, 0.143425, 1, 0, 0.222222,-0.0144601) , 
7, 0.353604, 1, 0, 0.491275,-0.00443664)    );
  // itree = 1191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171619,0.00195451) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926377,-0.00153074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947429,0.00447633) , 
14, 0.0466047, 1, 0, 0.937773,0.00730367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797441,-0.00610187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905861,-0.00678198) , 
5, 0.0356627, 1, 0, 0.852087,-0.039131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352212,-0.00122652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917323,0.0035859) , 
4, 0.240323, 1, 0, 0.525169,-0.00621745) , 
8, 0.0250746, 1, 0, 0.642526,-0.0180328) , 
8, 0.0148264, 1, 0, 0.72925,-0.0105906) , 
12, 0.052624, 1, 0, 0.611367,-0.00367614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375302,-0.00163757) , 
11, 1.13798, 1, 0, 0.556468,-0.0109695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770312,-0.00208677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27541,0.00135369) , 
3, 0.461157, 1, 0, 0.377425,0.0152193) , 
9, 0.0512622, 1, 0, 0.496272,-0.00216456)    );
  // itree = 1192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969936,-0.0104035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991073,-0.00442223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953708,0.00660205) , 
3, 0.17174, 1, 0, 0.97535,0.0111647) , 
10, 0.229468, 1, 0, 0.973817,0.00439992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780978,-0.00418376) , 
6, 0.328271, 1, 0, 0.929449,-0.00791466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654507,0.00156375) , 
17, 0.525745, 1, 0, 0.871818,-0.000642228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123509,-0.00139273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717958,-0.00268267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364059,-0.00357584) , 
11, 0.728453, 1, 0, 0.533759,-0.0490103) , 
5, 0.0123944, 1, 0, 0.281753,-0.0294637) , 
7, 0.285401, 1, 0, 0.594615,-0.0141821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479254,-0.00069455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278027,0.00153309) , 
7, 0.275451, 1, 0, 0.349904,0.0110823) , 
11, 0.96735, 1, 0, 0.497112,-0.00411568)    );
  // itree = 1193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984396,0.00575676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97058,-0.00651856) , 
2, 0.0463465, 1, 0, 0.977737,0.00049853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856135,-0.00326648) , 
17, 0.279145, 1, 0, 0.926595,-0.0101177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672462,-0.000653926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979011,0.0094146) , 
12, 0.140729, 1, 0, 0.838819,0.0138686) , 
16, 0.1184, 1, 0, 0.892981,-0.000932151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733082,0.0047939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63913,0.000197422) , 
11, 0.817555, 1, 0, 0.686567,0.0332226) , 
11, 0.697824, 1, 0, 0.838212,0.00813047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611794,-0.00252006) , 
11, 0.988594, 1, 0, 0.811034,0.0019725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16395,-0.00198564) , 
7, 0.549693, 1, 0, 0.641302,-0.00646285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277379,0.000788455) , 
3, 0.729572, 1, 0, 0.496877,0.00189671)    );
  // itree = 1194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747136,-0.00223411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990231,0.00288975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435032,0.00551752) , 
3, 0.227406, 1, 0, 0.69672,0.0305311) , 
15, 0.0256408, 1, 0, 0.719152,0.0122347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52364,-0.00475749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54115,0.00168329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355461,-0.00174311) , 
15, 0.182052, 1, 0, 0.44405,-0.00399139) , 
14, 0.0867376, 1, 0, 0.468247,-0.0160818) , 
15, 0.0934062, 1, 0, 0.601079,-0.00109076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694489,0.00495579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399262,0.000340153) , 
11, 0.739965, 1, 0, 0.496857,0.0214482) , 
6, 0.336111, 1, 0, 0.567367,0.00619972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568064,-0.00295782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527366,-0.00212182) , 
15, 0.315696, 1, 0, 0.547377,-0.0257048) , 
14, 0.167128, 1, 0, 0.564147,0.00106005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333791,-0.00232126) , 
6, 0.571482, 1, 0, 0.51865,-0.00805955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431614,0.00117071) , 
11, 1.2333, 1, 0, 0.503609,-0.00210879)    );
  // itree = 1195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993653,0.0067565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89591,-0.00385021) , 
3, 0.148888, 1, 0, 0.946023,-0.00840571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583029,0.00243764) , 
3, 0.379674, 1, 0, 0.824243,0.0079356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618559,-0.00431924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143454,-0.000879731) , 
3, 0.446874, 1, 0, 0.214427,-0.0186954) , 
10, 0.556916, 1, 0, 0.468973,-0.00757927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297694,-0.0016415) , 
13, 1.05809, 1, 0, 0.413789,-0.016018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913677,-0.00055418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910501,0.00491844) , 
9, 0.0309605, 1, 0, 0.912336,0.0169473) , 
2, 0.0487754, 1, 0, 0.483638,-0.0113994)    );
  // itree = 1196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416979,-0.000771466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939037,0.00602257) , 
2, 0.0299812, 1, 0, 0.6998,0.014694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681996,-0.00388023) , 
14, 0.0147858, 1, 0, 0.693624,-0.00493111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681497,0.00464987) , 
15, 0.0327868, 1, 0, 0.690594,0.00765935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881931,0.000130025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342143,-0.00342975) , 
11, 0.723277, 1, 0, 0.5384,-0.0379538) , 
15, 0.0522556, 1, 0, 0.623691,-0.0123918) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519902,0.00101417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555538,0.00596941) , 
15, 0.133135, 1, 0, 0.53846,0.0440369) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433641,-0.000288573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372891,-0.00267473) , 
15, 0.203435, 1, 0, 0.406113,-0.0200036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45181,0.00228061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469341,-0.000678909) , 
15, 0.333622, 1, 0, 0.459499,0.0154965) , 
15, 0.252255, 1, 0, 0.429428,-0.00449979) , 
15, 0.160035, 1, 0, 0.461665,0.00985064) , 
15, 0.111044, 1, 0, 0.541849,-0.00115676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297927,-0.00118538) , 
9, 0.0652654, 1, 0, 0.496412,-0.00493124)    );
  // itree = 1197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883327,-0.00392888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934722,0.000984935) , 
7, 0.126002, 1, 0, 0.908338,-0.0100855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90544,0.00557087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680394,-0.000935333) , 
10, 0.448966, 1, 0, 0.783437,0.0134482) , 
10, 0.28729, 1, 0, 0.833373,0.00403929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423194,-0.00115807) , 
8, 0.0372753, 1, 0, 0.714321,-0.00194322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340694,0.00260019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782253,-0.000378304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893333,0.00171613) , 
4, 0.333566, 1, 0, 0.838666,0.0051188) , 
4, 0.171159, 1, 0, 0.534117,0.0294596) , 
9, 0.0391101, 1, 0, 0.640951,0.0108424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174544,-0.00118575) , 
17, 1.11384, 1, 0, 0.497941,0.001357)    );
  // itree = 1198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628534,0.00281638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109158,-0.000942691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188369,0.000629032) , 
11, 1.00538, 1, 0, 0.146305,-0.00174403) , 
17, 0.794827, 1, 0, 0.219624,0.00468031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444919,-0.00113118) , 
5, 0.0182784, 1, 0, 0.257862,-0.000308519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952478,-0.00655707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983645,0.00995723) , 
12, 0.242222, 1, 0, 0.966764,0.00303662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794298,0.00402009) , 
3, 0.386166, 1, 0, 0.88991,0.0347308) , 
1, 0.180757, 1, 0, 0.448165,0.0102415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931098,0.00231993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828734,-0.00438001) , 
14, 0.0417821, 1, 0, 0.875859,-0.0173312) , 
5, 0.0481404, 1, 0, 0.510849,0.0062004)    );
  // itree = 1199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553695,-0.00142311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38944,0.00218796) , 
6, 0.208804, 1, 0, 0.439537,0.01955) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985627,-0.0125387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992367,0.0117228) , 
6, 0.114748, 1, 0, 0.989516,0.00517388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863085,-0.00394208) , 
6, 0.209007, 1, 0, 0.938778,-0.0073174) , 
5, 0.0183635, 1, 0, 0.704411,0.0052954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933113,0.00319696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135097,-0.000840383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615811,-0.00412871) , 
0, 0.0964481, 1, 0, 0.24882,-0.0281262) , 
3, 0.463638, 1, 0, 0.357759,-0.0209439) , 
13, 0.782518, 1, 0, 0.526259,-0.00818954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441533,0.00120567) , 
13, 1.17382, 1, 0, 0.506885,-0.000421546)    );
  // itree = 1200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900429,0.00515218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959673,-0.00229603) , 
4, 0.382357, 1, 0, 0.93404,0.0122006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396204,-0.0033378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317403,-0.000794125) , 
9, 0.0166328, 1, 0, 0.355251,-0.0237332) , 
16, 0.2155, 1, 0, 0.67199,-0.00406859) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931922,-0.000658851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640268,0.00200629) , 
11, 0.529334, 1, 0, 0.82982,0.00726366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489111,0.00404739) , 
11, 0.724367, 1, 0, 0.695277,0.032053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193805,0.000119198) , 
10, 0.678925, 1, 0, 0.468221,0.018324) , 
9, 0.0302976, 1, 0, 0.546138,0.00976152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28818,-0.000981213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75968,4.11681e-05) , 
1, 0.329842, 1, 0, 0.39385,-0.0167509) , 
13, 1.12047, 1, 0, 0.504318,0.00248078)    );
  // itree = 1201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979997,0.00362779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713242,-0.00715875) , 
7, 0.274847, 1, 0, 0.854061,-0.0240039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653895,-0.00283768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952255,8.58023e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350749,0.00190535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428471,0.00412889) , 
13, 0.864563, 1, 0, 0.397238,0.042278) , 
11, 0.600844, 1, 0, 0.577308,0.0286352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895634,-0.00390624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25806,0.000585875) , 
17, 0.442162, 1, 0, 0.380413,0.00230428) , 
9, 0.0339693, 1, 0, 0.457468,0.0126089) , 
14, 0.0161024, 1, 0, 0.484569,0.00756763) , 
13, 0.504663, 1, 0, 0.539303,0.00289082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38521,-0.000946694) , 
6, 0.624304, 1, 0, 0.498211,-0.00352762)    );
  // itree = 1202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803911,0.00154882) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848909,-0.000527276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707721,-0.00446203) , 
8, 0.0260259, 1, 0, 0.77847,-0.0250631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259079,0.000562189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126647,-0.000500677) , 
16, 0.324487, 1, 0, 0.20143,0.00325189) , 
17, 0.723738, 1, 0, 0.29528,-0.00135324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867604,0.000415768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631107,-0.00339155) , 
8, 0.0324259, 1, 0, 0.760308,-0.0282414) , 
5, 0.0309796, 1, 0, 0.373593,-0.00588137) , 
16, 0.0722738, 1, 0, 0.423317,-0.00331262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955142,-0.00117501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703034,-0.00361315) , 
6, 0.393098, 1, 0, 0.854077,-0.0275536) , 
5, 0.0464733, 1, 0, 0.490443,-0.00709014)    );
  // itree = 1203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969415,-0.00690272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992144,0.0137548) , 
14, 0.0252968, 1, 0, 0.980353,0.00206336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897543,0.00663276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519684,0.00322875) , 
7, 0.198394, 1, 0, 0.713274,0.0568916) , 
3, 0.301083, 1, 0, 0.855884,0.0276154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260515,-0.000222341) , 
8, 0.0459397, 1, 0, 0.662821,0.0176744) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857404,0.00654218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15621,-0.00120052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302478,0.00091528) , 
15, 0.318833, 1, 0, 0.199885,-0.00786074) , 
10, 0.483105, 1, 0, 0.295771,0.00284083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756342,-0.00511637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86369,-0.0014957) , 
5, 0.038817, 1, 0, 0.809857,-0.0388693) , 
5, 0.0286147, 1, 0, 0.433881,-0.00836465) , 
14, 0.0679021, 1, 0, 0.526159,0.00213079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33586,-0.00179299) , 
6, 0.749165, 1, 0, 0.491476,-0.00593977)    );
  // itree = 1204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970072,-0.0069529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967043,0.00620288) , 
17, 0.281511, 1, 0, 0.968839,0.00269997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89769,-0.00741474) , 
16, 0.133617, 1, 0, 0.947362,-0.00545858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810602,0.00295227) , 
11, 0.607855, 1, 0, 0.909123,0.00363837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507746,0.000407082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378707,-0.00203285) , 
13, 0.769267, 1, 0, 0.432084,-0.0166745) , 
10, 0.520002, 1, 0, 0.712921,-0.00471611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347173,0.00170253) , 
11, 0.855327, 1, 0, 0.623329,0.00255455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3978,-0.00165188) , 
11, 1.06399, 1, 0, 0.591719,-0.00212476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290983,0.000970405) , 
3, 0.815893, 1, 0, 0.506585,0.00377346)    );
  // itree = 1205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916068,0.00362949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975662,-9.56534e-05) , 
12, 0.1413, 1, 0, 0.94505,0.0103037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949724,-0.0141511) , 
0, 0.220097, 1, 0, 0.946567,-0.000882192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361754,-0.00305188) , 
10, 0.412715, 1, 0, 0.711837,-0.0153447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723587,-0.003607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384736,0.00177825) , 
13, 0.585861, 1, 0, 0.520428,0.0045028) , 
14, 0.103847, 1, 0, 0.645747,-0.00849167) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537779,0.00558448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321187,0.00148137) , 
9, 0.024143, 1, 0, 0.381308,0.031731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583009,0.000893688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290731,-0.000826089) , 
16, 0.119258, 1, 0, 0.401264,-0.00281618) , 
13, 1.03677, 1, 0, 0.394038,0.00969223) , 
13, 0.85369, 1, 0, 0.503559,0.00178025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503735,-0.00241612) , 
14, 0.220682, 1, 0, 0.503573,-0.00135635)    );
  // itree = 1206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139411,-0.00201731) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493251,-0.000688655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459152,0.00229889) , 
15, 0.174452, 1, 0, 0.47416,0.0151771) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98473,-0.00924339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992389,0.0130024) , 
17, 0.23626, 1, 0, 0.988257,0.00439083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887948,-0.00884245) , 
6, 0.178983, 1, 0, 0.956394,-0.00894581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904471,0.00369569) , 
6, 0.253564, 1, 0, 0.943605,-0.00080298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708044,-0.00280777) , 
6, 0.391888, 1, 0, 0.898657,-0.00823367) , 
5, 0.0181503, 1, 0, 0.752784,-0.000188881) , 
12, 0.0522438, 1, 0, 0.588805,-0.00696182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643161,-0.000228635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269979,0.00185109) , 
8, 0.0291523, 1, 0, 0.380605,0.0197524) , 
13, 0.954309, 1, 0, 0.530223,0.000554812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392116,-0.0012622) , 
13, 1.21681, 1, 0, 0.503048,-0.00503544)    );
  // itree = 1207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915174,-0.0107639) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962422,-0.00790118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982983,0.0102338) , 
11, 0.349573, 1, 0, 0.971489,0.00093862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725431,-0.00356936) , 
11, 0.524361, 1, 0, 0.906792,-0.00755457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84765,-0.000268802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643706,0.00213469) , 
3, 0.492538, 1, 0, 0.719053,0.0251038) , 
6, 0.349796, 1, 0, 0.829239,0.0059364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299886,-0.000652741) , 
17, 0.855548, 1, 0, 0.589941,-0.00272328) , 
10, 0.14383, 1, 0, 0.614812,-0.0054384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277952,0.00360662) , 
16, 0.378005, 1, 0, 0.57834,-0.000247524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17045,-0.00142055) , 
10, 0.815054, 1, 0, 0.497692,-0.00459137)    );
  // itree = 1208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887002,-0.00459163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985602,0.00853926) , 
0, 0.224449, 1, 0, 0.935294,-0.000420392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4829,0.00372672) , 
8, 0.0323885, 1, 0, 0.76663,0.0129908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772948,0.000414801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431897,-0.0038971) , 
6, 0.192882, 1, 0, 0.578029,-0.024191) , 
9, 0.0315965, 1, 0, 0.683403,-0.00341697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729592,0.00606023) , 
14, 0.172676, 1, 0, 0.690464,0.00311265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493236,-0.0013793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509145,-0.00200087) , 
6, 0.352771, 1, 0, 0.501552,-0.021029) , 
6, 0.307406, 1, 0, 0.64573,-0.00260407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603415,0.00249257) , 
6, 0.41258, 1, 0, 0.640642,0.00169616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473501,-0.00151653) , 
6, 0.501014, 1, 0, 0.600407,-0.00527823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29119,0.00107743) , 
3, 0.792626, 1, 0, 0.503617,0.0028454)    );
  // itree = 1209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647993,0.000356937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830902,0.00675753) , 
16, 0.123772, 1, 0, 0.74476,0.045111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139484,-0.00172896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443979,0.00272161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183256,0.000823945) , 
10, 0.617022, 1, 0, 0.238329,0.0207729) , 
15, 0.154009, 1, 0, 0.20239,0.00329738) , 
10, 0.423021, 1, 0, 0.298161,0.0106808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730438,-0.00171319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741672,-0.0053444) , 
0, 0.160487, 1, 0, 0.736676,-0.0519117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995009,0.0127549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937238,-0.00863568) , 
13, 0.657452, 1, 0, 0.970104,-0.00645022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85698,0.00350631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838006,-0.00049112) , 
5, 0.0400322, 1, 0, 0.845436,0.0154894) , 
13, 0.802282, 1, 0, 0.905196,0.00497253) , 
4, 0.309692, 1, 0, 0.851154,-0.0132694) , 
0, 0.125364, 1, 0, 0.505335,0.00170804)    );
  // itree = 1210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366048,-0.00235487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227027,0.000340073) , 
6, 0.191837, 1, 0, 0.26927,-0.00393419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291792,0.00163413) , 
6, 0.337368, 1, 0, 0.280557,0.0121311) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938904,-0.00163181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920386,-0.00919706) , 
2, 0.0309615, 1, 0, 0.929778,-0.0184924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9898,0.0105869) , 
2, 0.03869, 1, 0, 0.958863,-0.00290305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793207,-0.00343745) , 
13, 0.831332, 1, 0, 0.905709,-0.0149991) , 
1, 0.192397, 1, 0, 0.522359,0.00163742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390821,-0.00142611) , 
13, 1.14589, 1, 0, 0.488744,-0.0066395)    );
  // itree = 1211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983439,-0.0348951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972557,0.00528084) , 
3, 0.127992, 1, 0, 0.978055,0.000621059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905978,-0.00884499) , 
14, 0.120873, 1, 0, 0.951625,-0.0121649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957742,0.00623096) , 
13, 0.682031, 1, 0, 0.953322,-0.00227473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773348,-0.00336765) , 
13, 0.828186, 1, 0, 0.900366,-0.013134) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240134,-0.000817316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11576,0.000716401) , 
7, 0.659528, 1, 0, 0.176008,-0.0028449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731086,0.00366909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52246,0.000199927) , 
9, 0.0334096, 1, 0, 0.601946,0.0289808) , 
5, 0.0179887, 1, 0, 0.31386,0.00745528) , 
17, 0.621955, 1, 0, 0.503251,0.00080674)    );
  // itree = 1212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866993,0.00152615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666355,-0.00289034) , 
6, 0.235043, 1, 0, 0.755187,-0.0204955) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988503,0.00762162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914123,-0.00289766) , 
7, 0.132913, 1, 0, 0.959614,0.00278928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839571,0.00493399) , 
11, 0.583613, 1, 0, 0.92366,0.0159534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68845,-0.00174823) , 
11, 0.819067, 1, 0, 0.873229,0.0059413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376958,0.0019764) , 
17, 0.866369, 1, 0, 0.681272,0.0187954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497892,-0.00125177) , 
15, 0.202271, 1, 0, 0.647666,0.0118899) , 
15, 0.0228986, 1, 0, 0.669159,0.00541601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629246,0.00361184) , 
15, 0.291981, 1, 0, 0.665317,0.00962363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171792,-0.00251498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227587,-8.84745e-05) , 
15, 0.20358, 1, 0, 0.202792,-0.0173391) , 
10, 0.70273, 1, 0, 0.506374,0.000358128)    );
  // itree = 1213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185106,3.69675e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706723,-0.00569392) , 
4, 0.0956725, 1, 0, 0.295539,-0.0136078) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988838,0.00117274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993852,0.00960117) , 
12, 0.243469, 1, 0, 0.991341,0.00766724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914563,-0.00823759) , 
11, 0.427923, 1, 0, 0.964024,-0.00575538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951245,0.00735762) , 
8, 0.0233722, 1, 0, 0.96076,0.00467896) , 
4, 0.232353, 1, 0, 0.587287,-0.00558773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424949,-0.00364969) , 
6, 0.388288, 1, 0, 0.567275,-0.0107756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621188,0.00158365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389275,-3.73485e-05) , 
8, 0.0362242, 1, 0, 0.495441,0.0134816) , 
6, 0.471543, 1, 0, 0.543639,-0.00279401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293268,-0.00149143) , 
9, 0.0664871, 1, 0, 0.49986,-0.00705435)    );
  // itree = 1214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994589,0.0128901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984947,0.00153159) , 
9, 0.0281573, 1, 0, 0.989653,0.00482833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906311,0.00442726) , 
3, 0.27402, 1, 0, 0.961565,0.0166302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976872,-0.00256664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880998,-0.00404279) , 
6, 0.185674, 1, 0, 0.929014,-0.0145302) , 
8, 0.0171176, 1, 0, 0.949018,0.00461889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813001,0.0040647) , 
17, 0.51756, 1, 0, 0.91922,0.0151701) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514479,-0.000485541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358837,-0.00290681) , 
16, 0.135807, 1, 0, 0.428517,-0.0370947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180578,7.2074e-05) , 
16, 0.272744, 1, 0, 0.302513,-0.0177465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243036,0.00056764) , 
9, 0.0571072, 1, 0, 0.28346,-0.00872053) , 
17, 0.659898, 1, 0, 0.501818,-0.000515064)    );
  // itree = 1215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914435,0.00524087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49734,-0.000812675) , 
16, 0.158699, 1, 0, 0.703461,0.0124041) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683536,-0.00207865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460842,-0.00362594) , 
6, 0.258095, 1, 0, 0.548973,-0.0427327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601371,0.00297223) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642022,-0.00322466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895448,-0.000613115) , 
2, 0.0330965, 1, 0, 0.773141,-0.0241471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560257,0.00130265) , 
10, 0.476075, 1, 0, 0.662037,-0.000552973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15408,-0.00225686) , 
16, 0.251396, 1, 0, 0.459607,-0.0126057) , 
9, 0.0317426, 1, 0, 0.478128,-0.00684937) , 
9, 0.0260066, 1, 0, 0.496701,-0.0162565) , 
9, 0.0159502, 1, 0, 0.537724,-0.01057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353085,0.000907702) , 
9, 0.0625761, 1, 0, 0.502632,-0.00568257)    );
  // itree = 1216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640382,-0.000326563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555322,0.00243373) , 
7, 0.0877534, 1, 0, 0.591024,0.0243711) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46154,-0.00223067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29853,0.00133867) , 
9, 0.0286925, 1, 0, 0.347703,0.00588912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119492,-0.001041) , 
17, 1.07868, 1, 0, 0.222524,-0.00568098) , 
16, 0.137137, 1, 0, 0.310133,0.00146372) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940424,-0.00898968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855415,0.0024557) , 
6, 0.316788, 1, 0, 0.909131,-0.00258974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904006,-0.00877571) , 
5, 0.0490901, 1, 0, 0.907547,-0.0137375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567478,-0.00266976) , 
17, 0.720938, 1, 0, 0.804853,-0.0287995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928862,0.0043907) , 
2, 0.0609365, 1, 0, 0.823254,-0.0202824) , 
5, 0.0269831, 1, 0, 0.492284,-0.00625585)    );
  // itree = 1217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995764,0.00922086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972745,-0.0218773) , 
15, 0.126156, 1, 0, 0.98691,-0.00420081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796198,0.00345932) , 
3, 0.181565, 1, 0, 0.931788,0.00380271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24365,-0.00171235) , 
11, 0.698058, 1, 0, 0.772869,-0.00195194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704797,0.00519003) , 
13, 0.800915, 1, 0, 0.760903,0.0066836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680902,0.000498955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229018,-0.00220674) , 
7, 0.341002, 1, 0, 0.431482,-0.0165115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80819,-0.00455028) , 
5, 0.0360635, 1, 0, 0.540261,-0.0255822) , 
6, 0.2888, 1, 0, 0.653614,-0.00900594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173043,0.0012404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413864,0.000486565) , 
13, 1.24564, 1, 0, 0.274882,0.0155338) , 
3, 0.720569, 1, 0, 0.49642,0.00117938)    );
  // itree = 1218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739006,0.000442132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581036,-0.00267792) , 
6, 0.257549, 1, 0, 0.66281,-0.0171969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981245,0.00959841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950361,-0.00733112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968285,0.00147414) , 
12, 0.278724, 1, 0, 0.959208,-0.0065108) , 
12, 0.203387, 1, 0, 0.967,0.00360028) , 
12, 0.14889, 1, 0, 0.821651,-0.00633713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804406,-0.00841579) , 
13, 0.881456, 1, 0, 0.81921,-0.0159217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357684,0.00196023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264608,-0.000550526) , 
3, 0.740451, 1, 0, 0.294823,0.00241046) , 
3, 0.569465, 1, 0, 0.533797,-0.0059439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352973,0.00137879) , 
9, 0.0625761, 1, 0, 0.498959,-0.000231569)    );
  // itree = 1219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838767,0.0019549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919839,-0.00210079) , 
1, 0.394909, 1, 0, 0.877076,0.00597749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792832,-0.00346414) , 
14, 0.0299627, 1, 0, 0.850439,-0.0071977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871496,0.00446465) , 
14, 0.0565998, 1, 0, 0.856591,0.00561751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68465,-0.00409447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214164,-0.000560708) , 
16, 0.153481, 1, 0, 0.359611,-0.0240395) , 
10, 0.404973, 1, 0, 0.5772,-0.011055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600458,0.00343094) , 
15, 0.222087, 1, 0, 0.579676,-0.00562124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550341,-0.0021993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447105,0.00273845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301908,0.000284072) , 
15, 0.244253, 1, 0, 0.370156,0.02378) , 
6, 0.237965, 1, 0, 0.401415,0.0166857) , 
9, 0.0407909, 1, 0, 0.505357,0.00367882)    );
  // itree = 1220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754351,-0.00439302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643766,-0.000518142) , 
16, 0.0591968, 1, 0, 0.686845,-0.0248175) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968529,0.00662132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625298,-0.00197887) , 
13, 0.604845, 1, 0, 0.805576,-0.00461415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534622,0.00308283) , 
11, 0.848696, 1, 0, 0.677449,0.0291046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477799,-0.0023567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221266,-0.00119345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17625,0.000739947) , 
11, 0.78206, 1, 0, 0.185797,0.00496855) , 
7, 0.457976, 1, 0, 0.241634,-0.00355818) , 
7, 0.33136, 1, 0, 0.377487,0.00662357) , 
7, 0.0974016, 1, 0, 0.42585,0.00170836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960663,-0.00327052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750537,-0.00512225) , 
6, 0.307113, 1, 0, 0.878221,-0.0308621) , 
4, 0.432507, 1, 0, 0.494157,-0.00320973)    );
  // itree = 1221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99918,0.0234459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996039,0.00556494) , 
2, 0.0321361, 1, 0, 0.997311,0.00588443) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852354,-0.00986362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44495,-0.00160022) , 
10, 0.3508, 1, 0, 0.653407,-0.0411116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608699,-0.000234303) , 
9, 0.036912, 1, 0, 0.633346,-0.0240681) , 
3, 0.166289, 1, 0, 0.787632,-0.0113711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851886,0.0041344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456948,-4.22519e-05) , 
10, 0.391292, 1, 0, 0.57598,0.0129738) , 
13, 0.805554, 1, 0, 0.712594,-0.00273992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440975,-0.00198948) , 
13, 1.17382, 1, 0, 0.652087,-0.0125725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120527,0.000113665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668054,0.00184117) , 
1, 0.104765, 1, 0, 0.228327,0.00903494) , 
10, 0.688147, 1, 0, 0.496914,-0.0046602)    );
  // itree = 1222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887116,-0.00318376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897605,0.00172776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773648,0.00304293) , 
16, 0.0508187, 1, 0, 0.834887,0.0246431) , 
9, 0.023466, 1, 0, 0.85347,0.00902525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585931,-0.00167006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571856,0.00192543) , 
8, 0.0183973, 1, 0, 0.579156,0.00114473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936985,-0.00408694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79022,-0.00892299) , 
10, 0.353624, 1, 0, 0.865467,-0.0476748) , 
4, 0.282019, 1, 0, 0.719616,-0.0228055) , 
16, 0.0720009, 1, 0, 0.775825,-0.00943874) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767862,3.5428e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3348,0.00335924) , 
3, 0.466631, 1, 0, 0.511999,0.0315601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206486,-0.000559108) , 
3, 0.679949, 1, 0, 0.328601,0.0067831) , 
8, 0.0284323, 1, 0, 0.502864,0.000462192)    );
  // itree = 1223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901094,-0.00272043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992336,0.0120743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970669,-0.000647404) , 
4, 0.512095, 1, 0, 0.981543,0.00723123) , 
4, 0.366753, 1, 0, 0.948312,-0.000152678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536232,0.00599701) , 
10, 0.516303, 1, 0, 0.846276,0.0156801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626138,-0.00186774) , 
15, 0.19583, 1, 0, 0.781803,0.0058652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148778,-0.00187874) , 
16, 0.337278, 1, 0, 0.572095,-0.00372142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495415,0.00297062) , 
6, 0.345415, 1, 0, 0.558946,0.00291833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440109,-0.0020808) , 
6, 0.440405, 1, 0, 0.536914,-0.00382755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428824,0.00105348) , 
6, 0.59109, 1, 0, 0.505368,0.00401382)    );
  // itree = 1224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870498,-0.00286785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767477,0.00295886) , 
10, 0.278955, 1, 0, 0.813532,0.0131633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862451,-0.00630206) , 
12, 0.277093, 1, 0, 0.826387,-0.00180277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537026,-0.00245521) , 
8, 0.040067, 1, 0, 0.771423,-0.0101672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706004,0.00270131) , 
14, 0.0807842, 1, 0, 0.76053,-0.00181243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669329,-0.00142881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428975,-0.00303128) , 
7, 0.140801, 1, 0, 0.545771,-0.040552) , 
14, 0.100488, 1, 0, 0.700202,-0.0126947) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643748,0.000134817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564124,0.00501159) , 
9, 0.0229094, 1, 0, 0.604073,0.034204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134412,-0.000448561) , 
10, 0.600076, 1, 0, 0.26282,0.00472446) , 
16, 0.202662, 1, 0, 0.497237,-0.0046114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270191,-0.000138359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885299,0.00619527) , 
12, 0.086883, 1, 0, 0.478135,0.0162496) , 
14, 0.170843, 1, 0, 0.494355,-0.00146434)    );
  // itree = 1225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228121,-0.000237115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127248,0.00165977) , 
16, 0.264283, 1, 0, 0.165776,0.0103851) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976743,-0.001515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900492,0.00363117) , 
17, 0.264652, 1, 0, 0.938869,0.0143763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971261,0.00177976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785831,-0.00400333) , 
13, 0.689955, 1, 0, 0.885459,-0.0194291) , 
8, 0.015253, 1, 0, 0.906812,-0.00591422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927115,0.00578742) , 
14, 0.116095, 1, 0, 0.911072,0.00340786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68312,-0.00263484) , 
10, 0.629227, 1, 0, 0.879957,-0.00268993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396124,-0.00136638) , 
17, 0.84358, 1, 0, 0.708483,-0.0132365) , 
2, 0.00899437, 1, 0, 0.495683,-0.00397424)    );
  // itree = 1226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553486,-0.00073023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447718,-0.00263331) , 
7, 0.150878, 1, 0, 0.507292,-0.0295646) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192846,-0.00120472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164881,0.000591495) , 
15, 0.0972027, 1, 0, 0.172821,0.00138685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470882,0.00240919) , 
5, 0.0176925, 1, 0, 0.21088,0.00720489) , 
7, 0.274847, 1, 0, 0.288603,-0.00243654) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992137,0.0139789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969041,-0.00395041) , 
9, 0.0281573, 1, 0, 0.981963,0.00355309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87172,0.00489095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826821,0.00375077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659072,-0.00020833) , 
11, 1.00228, 1, 0, 0.735587,0.0212538) , 
16, 0.0806468, 1, 0, 0.780824,0.0355534) , 
3, 0.3088, 1, 0, 0.871207,0.0211739) , 
5, 0.0243877, 1, 0, 0.496102,0.00597251)    );
  // itree = 1227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256364,-0.00129931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118823,0.00103615) , 
7, 0.555328, 1, 0, 0.168828,-0.000727871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448601,0.00252282) , 
0, 0.0734595, 1, 0, 0.225761,0.00933909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944161,0.00180118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589187,-0.00256367) , 
13, 0.760186, 1, 0, 0.730376,-0.030939) , 
0, 0.0960642, 1, 0, 0.364784,-0.00175763) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971736,-0.00354529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983966,0.00868533) , 
10, 0.282528, 1, 0, 0.977325,0.00682027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892367,-0.00437203) , 
10, 0.45028, 1, 0, 0.948392,-0.00486705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816854,0.00319907) , 
11, 0.674727, 1, 0, 0.90187,0.0148989) , 
0, 0.174977, 1, 0, 0.503032,0.00252981)    );
  // itree = 1228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325848,-0.00205854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764456,0.00155677) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96434,-0.00511392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956739,0.00741526) , 
17, 0.361317, 1, 0, 0.960661,0.0126998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932906,-0.00430356) , 
5, 0.0507974, 1, 0, 0.949049,0.00062068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681705,-0.0026968) , 
17, 0.682488, 1, 0, 0.894334,-0.0101711) , 
4, 0.236037, 1, 0, 0.865874,-0.00246824) , 
12, 0.086508, 1, 0, 0.7619,-0.0105244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46544,0.00175974) , 
10, 0.631338, 1, 0, 0.711086,-0.0033373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753157,-0.000554342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366439,-0.0027223) , 
10, 0.587972, 1, 0, 0.543415,-0.0303797) , 
14, 0.125346, 1, 0, 0.661484,-0.0113373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15488,0.00110201) , 
7, 0.577204, 1, 0, 0.500614,-0.00286844)    );
  // itree = 1229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132767,-0.000569913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140979,-0.00171048) , 
15, 0.199048, 1, 0, 0.136718,-0.0167216) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984991,-0.0123441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993916,0.0088775) , 
13, 0.50686, 1, 0, 0.99074,0.00202911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933079,-0.0237486) , 
11, 0.500769, 1, 0, 0.975608,-0.0086623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942434,0.00487582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724157,0.00462088) , 
8, 0.0210308, 1, 0, 0.833384,0.0462599) , 
3, 0.251015, 1, 0, 0.926977,0.0101174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716639,-0.00169763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75877,-0.00282302) , 
13, 0.887353, 1, 0, 0.73797,-0.031228) , 
6, 0.408336, 1, 0, 0.877635,-0.000676137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48765,0.00165605) , 
3, 0.673998, 1, 0, 0.750933,0.0120483) , 
2, 0.00299812, 1, 0, 0.498255,0.000212829)    );
  // itree = 1230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187879,-0.00101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239632,0.00133618) , 
15, 0.174231, 1, 0, 0.211804,0.00121968) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978128,-0.0163677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98109,0.00228348) , 
13, 0.595039, 1, 0, 0.97963,-0.00403639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893127,-0.0103709) , 
11, 0.531938, 1, 0, 0.949276,-0.0186252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917585,0.00159558) , 
10, 0.379173, 1, 0, 0.939191,-0.0101739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416533,-0.003795) , 
10, 0.623807, 1, 0, 0.835168,-0.0223264) , 
5, 0.0159419, 1, 0, 0.550459,-0.0115722) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447234,0.000759257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203749,-0.000716841) , 
7, 0.354783, 1, 0, 0.324318,0.00212454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815057,0.00285712) , 
12, 0.149248, 1, 0, 0.44311,0.0127137) , 
6, 0.404494, 1, 0, 0.502391,-0.000697533)    );
  // itree = 1231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995997,0.0102481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945936,-0.00390193) , 
10, 0.286835, 1, 0, 0.971807,-0.000539221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716907,0.00514967) , 
11, 0.554382, 1, 0, 0.893553,0.0111098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226478,-0.00163186) , 
11, 0.76265, 1, 0, 0.696648,0.00177148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498864,-0.0038933) , 
14, 0.12191, 1, 0, 0.650381,-0.00704136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534036,0.00276342) , 
15, 0.327297, 1, 0, 0.635499,-0.00251608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406247,-0.00193882) , 
6, 0.40134, 1, 0, 0.573851,-0.0105599) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365614,0.0010562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255137,-0.000574773) , 
15, 0.129576, 1, 0, 0.300502,0.0016749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801859,0.00313368) , 
2, 0.0391141, 1, 0, 0.403378,0.0123414) , 
13, 0.960401, 1, 0, 0.501584,-0.000851553)    );
  // itree = 1232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945528,-0.00498206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958375,0.00414303) , 
13, 0.632742, 1, 0, 0.952296,0.000721122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928105,0.00962351) , 
16, 0.162002, 1, 0, 0.944731,0.012153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383239,-0.00129656) , 
3, 0.484589, 1, 0, 0.688047,-0.00386316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757798,0.000533082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352773,0.00206585) , 
7, 0.157676, 1, 0, 0.517392,0.0219849) , 
15, 0.259102, 1, 0, 0.642299,0.0030661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105222,-0.00125107) , 
17, 1.06715, 1, 0, 0.470154,-0.00352061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412223,0.000983928) , 
11, 1.26965, 1, 0, 0.460133,0.000870701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849036,-0.00519509) , 
12, 0.276826, 1, 0, 0.497927,-0.00329355)    );
  // itree = 1233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794856,0.00454914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954356,0.00149518) , 
12, 0.11925, 1, 0, 0.871997,0.023256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121933,-0.000327782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49961,-0.00175301) , 
12, 0.0715482, 1, 0, 0.212861,-0.00931316) , 
16, 0.194827, 1, 0, 0.39118,-0.000502118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345663,-0.00111391) , 
6, 0.446707, 1, 0, 0.379097,-0.00564089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351959,0.00156769) , 
6, 0.670125, 1, 0, 0.371927,0.00501962) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966885,-0.00506323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938178,0.00504542) , 
11, 0.467015, 1, 0, 0.953866,0.00928464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916084,-0.00705403) , 
5, 0.0520791, 1, 0, 0.943132,-0.0018295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644442,-0.0037553) , 
17, 0.635463, 1, 0, 0.862815,-0.0222776) , 
12, 0.173766, 1, 0, 0.496489,-0.00190698)    );
  // itree = 1234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476599,-0.00281521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151809,0.000255283) , 
16, 0.265989, 1, 0, 0.228461,-0.00652412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917571,0.00416782) , 
12, 0.121465, 1, 0, 0.39083,0.000931673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335422,-0.0013302) , 
6, 0.495661, 1, 0, 0.373156,-0.00833624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275321,0.00114456) , 
9, 0.0611863, 1, 0, 0.350397,-0.00175641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814037,-0.000520258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696289,-0.0057813) , 
14, 0.0804138, 1, 0, 0.762631,-0.0428404) , 
5, 0.0339845, 1, 0, 0.411766,-0.00787252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943939,-0.00426443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981318,0.00831154) , 
0, 0.185753, 1, 0, 0.964364,0.00460154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836115,0.00495175) , 
17, 0.53232, 1, 0, 0.922826,0.027925) , 
2, 0.0433751, 1, 0, 0.496343,-0.00194827)    );
  // itree = 1235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943766,0.00460716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949991,0.000268987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465312,-0.00230339) , 
11, 0.520502, 1, 0, 0.738574,-0.0134115) , 
14, 0.0504199, 1, 0, 0.805951,-0.00513747) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64765,0.00524601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344734,0.000743341) , 
9, 0.0302976, 1, 0, 0.419787,0.0265534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89508,-0.0013741) , 
5, 0.0425119, 1, 0, 0.514845,0.0195056) , 
13, 0.723283, 1, 0, 0.632576,0.00953927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160068,-0.00103471) , 
16, 0.358121, 1, 0, 0.53105,0.00476357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401386,-0.000788251) , 
13, 1.27203, 1, 0, 0.509472,0.000994309)    );
  // itree = 1236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603468,-0.00312605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523014,0.000402454) , 
14, 0.0636611, 1, 0, 0.557766,-0.0182924) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971389,0.00372745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930731,-0.00546873) , 
15, 0.0424514, 1, 0, 0.944898,-0.0100234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966615,0.00678439) , 
12, 0.313466, 1, 0, 0.950388,-0.00033973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788397,0.00239942) , 
17, 0.599964, 1, 0, 0.907212,0.010872) , 
12, 0.138413, 1, 0, 0.774018,-0.000244227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475412,-0.00200738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485719,-0.00129049) , 
15, 0.359784, 1, 0, 0.480506,-0.0299655) , 
15, 0.270633, 1, 0, 0.705262,-0.00720646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224291,0.000801302) , 
7, 0.453579, 1, 0, 0.568675,-0.00154115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138169,-0.0021532) , 
16, 0.382805, 1, 0, 0.499844,-0.00553813)    );
  // itree = 1237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129349,-0.00127364) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528056,0.000539985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511765,0.00549574) , 
15, 0.0800444, 1, 0, 0.521021,0.042108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768786,0.00290594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30621,-0.000574373) , 
10, 0.485901, 1, 0, 0.408584,0.00011469) , 
15, 0.145804, 1, 0, 0.455438,0.0176139) , 
0, 0.0550243, 1, 0, 0.340845,0.00562585) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996799,0.00844812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941389,-0.00702912) , 
3, 0.153164, 1, 0, 0.974308,-0.00622392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942267,0.00416605) , 
6, 0.254635, 1, 0, 0.964803,0.00272318) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719072,-0.00607864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734698,-0.00105321) , 
10, 0.470611, 1, 0, 0.727174,-0.0513114) , 
17, 0.492927, 1, 0, 0.878568,-0.0168858) , 
4, 0.282019, 1, 0, 0.504101,-0.00120883)    );
  // itree = 1238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269732,0.00177083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112837,-0.000213516) , 
8, 0.0487411, 1, 0, 0.177378,0.00988566) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919739,0.000952739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897999,0.00162015) , 
7, 0.108642, 1, 0, 0.908872,0.00872832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881282,-0.00228579) , 
14, 0.0426828, 1, 0, 0.895705,-0.00276506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826941,-0.00762415) , 
7, 0.291618, 1, 0, 0.880381,-0.0151203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498763,0.00208023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90247,0.00379051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796275,-0.00153253) , 
9, 0.0339433, 1, 0, 0.84781,0.0043159) , 
12, 0.11616, 1, 0, 0.736334,0.017401) , 
10, 0.386243, 1, 0, 0.813119,6.52501e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41328,-0.00143583) , 
10, 0.679265, 1, 0, 0.730731,-0.00611202) , 
12, 0.0707953, 1, 0, 0.50069,0.00053857)    );
  // itree = 1239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93708,-0.00637523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524345,-0.00323972) , 
11, 0.437942, 1, 0, 0.681,-0.0488246) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351147,-0.00111536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329272,0.00261395) , 
9, 0.0299065, 1, 0, 0.339995,0.0129377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202414,-0.00135569) , 
14, 0.0786241, 1, 0, 0.270981,-0.00462184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308535,0.00162) , 
14, 0.143212, 1, 0, 0.280777,0.00306593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941312,-0.00297303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631565,-0.00371983) , 
17, 0.585008, 1, 0, 0.787925,-0.0418812) , 
12, 0.154909, 1, 0, 0.365238,-0.00441961) , 
7, 0.0962007, 1, 0, 0.417898,-0.0118251) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988516,0.00473089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894443,0.0047837) , 
13, 0.849565, 1, 0, 0.944244,0.0275653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815127,-0.00144682) , 
7, 0.164795, 1, 0, 0.903495,0.0135057) , 
2, 0.0438925, 1, 0, 0.503711,-0.00734867)    );
  // itree = 1240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834882,-5.41026e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712968,-0.00351839) , 
15, 0.0554813, 1, 0, 0.77192,-0.0230237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93883,0.00291479) , 
2, 0.0487754, 1, 0, 0.832122,-0.00946947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788947,0.00380851) , 
7, 0.360171, 1, 0, 0.824518,-0.000567644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724381,-0.00337124) , 
15, 0.157238, 1, 0, 0.802734,-0.00955005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174932,0.000812338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881469,0.000951877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813091,0.00337735) , 
6, 0.385106, 1, 0, 0.84353,0.0352254) , 
4, 0.216428, 1, 0, 0.319759,0.0176409) , 
10, 0.485968, 1, 0, 0.522546,0.00622418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350509,-0.00205015) , 
15, 0.36451, 1, 0, 0.505083,0.00222378)    );
  // itree = 1241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994029,0.0196947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97074,-0.00728178) , 
15, 0.0800424, 1, 0, 0.983921,0.00536476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309996,-0.00266784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421686,-0.000878836) , 
14, 0.0861099, 1, 0, 0.372913,-0.0167329) , 
10, 0.467855, 1, 0, 0.695611,-0.00506223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94498,0.0047935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327011,-0.0004834) , 
8, 0.0227686, 1, 0, 0.521316,0.00272425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359116,0.00244404) , 
15, 0.170105, 1, 0, 0.453797,0.0152477) , 
6, 0.225288, 1, 0, 0.565851,0.00583622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575258,-0.00201038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396114,-0.00165648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334164,0.000785778) , 
9, 0.0407909, 1, 0, 0.356973,-0.00240898) , 
10, 0.423475, 1, 0, 0.414353,-0.0129821) , 
6, 0.441935, 1, 0, 0.501455,-0.00216275)    );
  // itree = 1242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953434,-0.00991882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852074,0.00255679) , 
17, 0.36217, 1, 0, 0.901423,-0.00222526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936638,-0.00385048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543829,-0.00513607) , 
11, 0.560133, 1, 0, 0.736796,-0.0380445) , 
9, 0.0193454, 1, 0, 0.816376,-0.0207297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827774,0.00544729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946544,0.000527007) , 
4, 0.252102, 1, 0, 0.894557,0.0286438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357682,-0.00118603) , 
16, 0.153481, 1, 0, 0.655434,0.00841321) , 
14, 0.0836827, 1, 0, 0.739484,-0.00680621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364642,-0.0031361) , 
11, 0.912549, 1, 0, 0.670194,-0.0147056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19658,0.000389217) , 
3, 0.695217, 1, 0, 0.503919,-0.00742596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446477,0.0012936) , 
11, 1.29285, 1, 0, 0.495475,-0.00192502)    );
  // itree = 1243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966838,-0.00541158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978802,0.00783256) , 
9, 0.0322791, 1, 0, 0.971466,0.000970177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92411,0.00537198) , 
6, 0.183701, 1, 0, 0.957024,0.00777181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8235,-0.00419598) , 
6, 0.26026, 1, 0, 0.926669,-0.00118138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764557,0.000239787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774202,0.00379791) , 
8, 0.0170988, 1, 0, 0.76906,0.0281268) , 
6, 0.358742, 1, 0, 0.875743,0.00828858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.330172,-0.00118861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23513,0.000131182) , 
8, 0.042791, 1, 0, 0.285936,-0.0120652) , 
17, 0.766368, 1, 0, 0.574447,-0.00210891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202683,0.00113323) , 
8, 0.0623532, 1, 0, 0.499823,0.00188999)    );
  // itree = 1244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88782,-0.00663619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673298,0.00222303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529404,0.000221346) , 
9, 0.0147205, 1, 0, 0.600597,0.00854796) , 
13, 0.629057, 1, 0, 0.712202,-0.00204549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60563,-0.00309055) , 
6, 0.327378, 1, 0, 0.680803,-0.0129756) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954874,0.00147883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635757,0.0046078) , 
8, 0.0200669, 1, 0, 0.828036,0.0215606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179745,-0.000795184) , 
11, 0.730349, 1, 0, 0.520252,0.00621934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458768,0.00232676) , 
6, 0.459657, 1, 0, 0.50294,0.0154732) , 
9, 0.0220816, 1, 0, 0.570629,0.00464653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419593,-0.00125908) , 
13, 1.23404, 1, 0, 0.541821,-0.00164176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313378,-0.00163195) , 
9, 0.0625761, 1, 0, 0.495848,-0.00699402)    );
  // itree = 1245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977306,-0.00987713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907588,0.00430632) , 
10, 0.348767, 1, 0, 0.946012,0.00137675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747056,-0.00223415) , 
6, 0.231189, 1, 0, 0.886005,-0.00461604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34941,0.00240329) , 
16, 0.281381, 1, 0, 0.731415,0.00454456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441189,0.000194409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244078,-0.00185696) , 
9, 0.0190713, 1, 0, 0.309585,-0.0158902) , 
13, 0.794916, 1, 0, 0.559288,-0.0037938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41929,-0.00357641) , 
6, 0.368458, 1, 0, 0.540655,-0.00978171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612301,0.00170385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502274,0.00127294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250537,-0.000607753) , 
15, 0.135962, 1, 0, 0.338437,0.00100499) , 
16, 0.111495, 1, 0, 0.436172,0.0130926) , 
6, 0.437013, 1, 0, 0.496342,-8.03419e-05)    );
  // itree = 1246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971532,-0.000331614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907847,-0.00506316) , 
10, 0.267205, 1, 0, 0.939729,-0.0121457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789358,0.00526136) , 
17, 0.527237, 1, 0, 0.890296,0.0129042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194982,-0.00137043) , 
7, 0.462322, 1, 0, 0.597661,-0.000210982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41805,0.00163669) , 
11, 1.0672, 1, 0, 0.539146,0.0104612) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163004,-0.00125078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732283,-0.0045533) , 
12, 0.0950711, 1, 0, 0.369086,-0.0338151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289786,0.000712835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482129,-0.00135519) , 
14, 0.207368, 1, 0, 0.353623,0.001391) , 
15, 0.245307, 1, 0, 0.36109,-0.0156102) , 
14, 0.0848776, 1, 0, 0.442397,-0.00370507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831773,-0.00488375) , 
5, 0.0519187, 1, 0, 0.466872,-0.00639117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932732,0.00490005) , 
2, 0.0588662, 1, 0, 0.496755,-0.00391832)    );
  // itree = 1247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254411,0.00273512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181732,0.00095439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208689,-1.13339e-05) , 
14, 0.11966, 1, 0, 0.19447,0.00604404) , 
9, 0.0226319, 1, 0, 0.208433,0.0120588) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929513,-0.00149045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87857,-0.00752244) , 
7, 0.105166, 1, 0, 0.906776,-0.0217028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861005,0.000927777) , 
16, 0.154348, 1, 0, 0.894725,-0.0140163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959867,0.0043553) , 
1, 0.553952, 1, 0, 0.908675,-0.00801528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832907,0.00301561) , 
9, 0.0492754, 1, 0, 0.891486,0.0012435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449531,-0.00285158) , 
16, 0.262393, 1, 0, 0.810114,-0.00757422) , 
2, 0.0154911, 1, 0, 0.541088,0.00120415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387386,-0.000986161) , 
6, 0.606304, 1, 0, 0.499089,-0.00500841)    );
  // itree = 1248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424216,0.00233501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974986,0.00450639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984621,0.000731062) , 
12, 0.167897, 1, 0, 0.979798,0.00619864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839714,-0.00442195) , 
8, 0.0228972, 1, 0, 0.923017,-0.00874457) , 
5, 0.0131112, 1, 0, 0.767538,0.00360998) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733135,-0.00399979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736179,-0.00207149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534612,0.00068843) , 
11, 0.852422, 1, 0, 0.607051,0.00249399) , 
10, 0.281984, 1, 0, 0.641094,-0.0122286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495901,-0.0041336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206024,-0.00149361) , 
7, 0.231335, 1, 0, 0.290873,-0.042361) , 
10, 0.513615, 1, 0, 0.460434,-0.0277723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182557,0.000177243) , 
10, 0.748421, 1, 0, 0.36298,-0.0170819) , 
13, 0.687761, 1, 0, 0.471024,-0.0115558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934027,0.00482451) , 
12, 0.315227, 1, 0, 0.503355,-0.00845378)    );
  // itree = 1249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962673,-0.00769472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973738,0.00465981) , 
13, 0.503994, 1, 0, 0.969114,-0.000341273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935986,0.00610615) , 
13, 0.713998, 1, 0, 0.959352,0.00882001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857375,-0.000704138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606088,-0.00474337) , 
13, 0.73127, 1, 0, 0.739631,-0.0341007) , 
11, 0.502113, 1, 0, 0.8747,-0.00771614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414619,0.00183491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842361,0.00545176) , 
5, 0.023985, 1, 0, 0.575723,0.0508353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793284,-0.0014155) , 
0, 0.187954, 1, 0, 0.638286,0.0305935) , 
11, 0.691672, 1, 0, 0.783609,0.00704455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.262594,0.000447154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178519,-0.00127089) , 
9, 0.0367118, 1, 0, 0.213351,-0.00972674) , 
17, 0.913705, 1, 0, 0.496282,-0.00140576)    );
  // itree = 1250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984213,0.00517894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611951,-0.0041121) , 
11, 0.630654, 1, 0, 0.81015,-0.0291845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80279,0.00355891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676991,0.000879493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576417,-0.0019461) , 
14, 0.118881, 1, 0, 0.622392,-0.0112188) , 
7, 0.062608, 1, 0, 0.679283,0.0049769) , 
15, 0.0930466, 1, 0, 0.726575,-0.00736801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43638,-0.00240651) , 
8, 0.0403402, 1, 0, 0.65667,-0.0178061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421644,0.00183302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112891,-0.000311843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513366,-0.00266012) , 
4, 0.083277, 1, 0, 0.17621,-0.0100861) , 
16, 0.2712, 1, 0, 0.239162,-0.000692232) , 
16, 0.198534, 1, 0, 0.4486,-0.0092772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913438,-0.00326597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914095,0.0049549) , 
8, 0.0136462, 1, 0, 0.913779,0.0135893) , 
12, 0.265482, 1, 0, 0.49773,-0.00686218)    );
  // itree = 1251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998221,0.0120062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682719,-0.0031161) , 
3, 0.212114, 1, 0, 0.799294,-0.026769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91852,0.00701798) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924544,0.00307736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678762,-0.00242383) , 
10, 0.235423, 1, 0, 0.791448,-0.0115147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29734,0.00189137) , 
10, 0.500305, 1, 0, 0.567291,0.00659775) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829001,-0.0023589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579744,0.00163525) , 
10, 0.35352, 1, 0, 0.681837,0.00809776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194998,-0.00204717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196922,-0.000734959) , 
15, 0.238633, 1, 0, 0.19591,-0.0232891) , 
10, 0.539487, 1, 0, 0.33056,-0.0145918) , 
9, 0.0227232, 1, 0, 0.398106,-0.00854584) , 
8, 0.0158796, 1, 0, 0.433881,-0.00547659) , 
8, 0.00402857, 1, 0, 0.489461,-0.00871521)    );
  // itree = 1252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982627,-0.00843874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990462,0.00842026) , 
11, 0.285027, 1, 0, 0.986963,0.000880163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950923,-0.0166775) , 
7, 0.173986, 1, 0, 0.974606,-0.00774123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715406,0.00186254) , 
3, 0.258048, 1, 0, 0.883004,0.00277469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393833,-0.00308083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352116,-0.000845809) , 
11, 0.749493, 1, 0, 0.37292,-0.0284803) , 
11, 0.660975, 1, 0, 0.705185,-0.00812104) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639578,-0.0003501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538174,0.00425124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196499,0.00121321) , 
17, 1.01033, 1, 0, 0.283331,0.0296518) , 
7, 0.243504, 1, 0, 0.367318,0.0211591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272035,-0.000123441) , 
3, 0.864683, 1, 0, 0.328452,0.0115312) , 
11, 0.822197, 1, 0, 0.497237,0.00272655)    );
  // itree = 1253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940555,-0.00408507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970223,0.0062492) , 
4, 0.500907, 1, 0, 0.95181,-0.00177248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507131,-0.00344877) , 
17, 0.585244, 1, 0, 0.78858,-0.0199427) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945917,0.00213706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856796,-0.00472348) , 
14, 0.111674, 1, 0, 0.906393,-0.0106634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212576,0.000353141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775705,0.00391925) , 
12, 0.0902459, 1, 0, 0.405299,0.0273208) , 
17, 0.543427, 1, 0, 0.604002,0.0122587) , 
9, 0.025106, 1, 0, 0.668123,0.00107216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0996331,-0.00170504) , 
17, 1.06599, 1, 0, 0.50144,-0.00634463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450182,0.00108712) , 
11, 1.29285, 1, 0, 0.493913,-0.00169695)    );
  // itree = 1254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983887,0.00404947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42744,-0.00348492) , 
3, 0.278087, 1, 0, 0.682954,-0.0211446) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974783,-0.00523646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924413,0.00667065) , 
6, 0.209289, 1, 0, 0.948184,0.0241307) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80818,-0.00437825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576971,0.00199926) , 
13, 0.585376, 1, 0, 0.706281,-0.00319592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359453,-0.00299352) , 
13, 0.806872, 1, 0, 0.560612,-0.0237848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179075,0.000727654) , 
16, 0.279544, 1, 0, 0.363537,-0.00664568) , 
16, 0.0874643, 1, 0, 0.493073,0.00017323) , 
14, 0.034444, 1, 0, 0.538667,-0.00494558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422645,0.000938852) , 
6, 0.593089, 1, 0, 0.504674,0.00230724)    );
  // itree = 1255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9991,0.0177789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906626,-0.00383408) , 
8, 0.0152603, 1, 0, 0.945709,-0.0013286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298699,-0.00267283) , 
10, 0.60746, 1, 0, 0.748633,-0.0101543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913234,-0.00322542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28748,0.00179796) , 
11, 0.552219, 1, 0, 0.46869,0.0114321) , 
6, 0.192348, 1, 0, 0.617592,-4.97039e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391768,-0.00278826) , 
6, 0.288525, 1, 0, 0.580092,-0.0057505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809558,-0.000630743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360177,0.00239869) , 
3, 0.457143, 1, 0, 0.478541,0.0245321) , 
6, 0.342208, 1, 0, 0.550307,0.00313126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247176,9.10639e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644486,-0.00211888) , 
4, 0.154846, 1, 0, 0.397612,-0.0163201) , 
6, 0.52887, 1, 0, 0.498056,-0.00352483)    );
  // itree = 1256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869222,-0.00395684) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963233,-0.00511899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963142,0.00759546) , 
13, 0.620359, 1, 0, 0.963187,0.00939905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871186,-0.00428804) , 
14, 0.0916171, 1, 0, 0.927331,-0.00367009) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884974,0.00386453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285151,-0.000920034) , 
17, 0.782226, 1, 0, 0.554462,0.0058613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413965,0.00447811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410432,0.00203069) , 
14, 0.118858, 1, 0, 0.412134,0.0470959) , 
14, 0.0748361, 1, 0, 0.486677,0.0254998) , 
11, 0.572845, 1, 0, 0.632068,0.0158754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395019,-0.000550586) , 
6, 0.683249, 1, 0, 0.571629,0.00852115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169879,-0.000753196) , 
10, 0.794016, 1, 0, 0.472078,0.00346258) , 
16, 0.049893, 1, 0, 0.50521,0.000812758)    );
  // itree = 1257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963986,-0.00867711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811393,0.00364767) , 
11, 0.557001, 1, 0, 0.888163,0.0171249) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956185,-0.00360188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571436,-0.00346831) , 
11, 0.597686, 1, 0, 0.741698,-0.0412283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721893,0.00234085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950619,0.00308815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473457,-0.00155562) , 
17, 0.433792, 1, 0, 0.675166,-0.0132324) , 
14, 0.115231, 1, 0, 0.688599,-0.000128615) , 
14, 0.0840839, 1, 0, 0.707874,-0.0150474) , 
14, 0.034444, 1, 0, 0.753296,-0.00694186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404422,-0.00210211) , 
8, 0.0414638, 1, 0, 0.676468,-0.0148407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131634,-0.000265657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774275,0.00325071) , 
4, 0.109167, 1, 0, 0.238404,0.00455049) , 
16, 0.221658, 1, 0, 0.49116,-0.0066379)    );
  // itree = 1258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877047,-0.00601059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589718,0.00193642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818391,-0.00230328) , 
5, 0.0319796, 1, 0, 0.685429,0.00961227) , 
10, 0.213154, 1, 0, 0.750125,-0.00520321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736614,-0.00485187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595016,-0.00141809) , 
8, 0.0189237, 1, 0, 0.665924,-0.0396294) , 
15, 0.144076, 1, 0, 0.722356,-0.0165569) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705033,0.00174509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468731,0.00419879) , 
7, 0.109159, 1, 0, 0.583484,0.0441008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241213,-0.00109791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124138,0.000760325) , 
16, 0.27399, 1, 0, 0.168822,-0.00220879) , 
8, 0.0337234, 1, 0, 0.259232,0.00788821) , 
10, 0.517672, 1, 0, 0.42425,-0.00082194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973353,0.00220327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836707,0.0039825) , 
13, 0.993681, 1, 0, 0.921569,0.0262156) , 
5, 0.0479699, 1, 0, 0.49846,0.00321262)    );
  // itree = 1259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99417,0.0125546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967645,-0.0106259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983781,0.00359323) , 
13, 0.551458, 1, 0, 0.97611,-0.00429175) , 
10, 0.193375, 1, 0, 0.982711,0.00063628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921388,-0.00691968) , 
10, 0.44828, 1, 0, 0.967733,-0.0058553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66102,0.00423324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867733,-0.00165379) , 
2, 0.0402769, 1, 0, 0.72889,0.0368812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133492,3.27633e-05) , 
17, 0.869748, 1, 0, 0.342283,0.0132297) , 
3, 0.278087, 1, 0, 0.548821,0.00692744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444962,-0.00198806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347211,-0.000164195) , 
14, 0.0833971, 1, 0, 0.392045,-0.021592) , 
6, 0.542482, 1, 0, 0.497038,-0.00249261)    );
  // itree = 1260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134143,-0.000672032) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96748,-0.0201572) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662659,0.00324273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85669,0.00202387) , 
4, 0.238298, 1, 0, 0.741534,0.0481972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332224,0.000556113) , 
10, 0.467855, 1, 0, 0.481567,0.0245338) , 
3, 0.214748, 1, 0, 0.561684,0.0175023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425498,-0.000899502) , 
15, 0.303565, 1, 0, 0.536273,0.0112963) , 
0, 0.0557843, 1, 0, 0.414354,0.0052054) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958864,-0.010529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970863,0.00620487) , 
10, 0.372885, 1, 0, 0.963907,-0.00240209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746252,-0.00293683) , 
11, 0.666999, 1, 0, 0.897932,-0.0147482) , 
1, 0.406431, 1, 0, 0.500729,0.00164137)    );
  // itree = 1261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934092,0.00279575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902051,-0.0129996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961776,-0.00444818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97543,0.00564097) , 
16, 0.085892, 1, 0, 0.967383,-0.00162137) , 
5, 0.0376565, 1, 0, 0.947428,-0.015577) , 
2, 0.0289666, 1, 0, 0.943214,-0.0061805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653159,-0.00531043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510275,-0.0011494) , 
3, 0.558171, 1, 0, 0.560404,-0.0446678) , 
3, 0.424862, 1, 0, 0.794611,-0.0211209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135299,0.000346713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592557,0.00270698) , 
4, 0.0753663, 1, 0, 0.238499,0.0146614) , 
7, 0.438307, 1, 0, 0.593371,-0.00817243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296744,0.00185149) , 
3, 0.802529, 1, 0, 0.505563,0.00458692)    );
  // itree = 1262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163641,0.001142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336617,0.00403178) , 
12, 0.0530965, 1, 0, 0.216988,0.0249294) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998784,0.0139987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938849,-0.0103288) , 
6, 0.137981, 1, 0, 0.967979,-0.0100922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969777,0.0062902) , 
17, 0.331063, 1, 0, 0.968705,0.00157418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5242,-0.00243316) , 
17, 0.582228, 1, 0, 0.881105,-0.00657724) , 
5, 0.0130067, 1, 0, 0.623435,0.005647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272551,-0.00161464) , 
13, 0.99304, 1, 0, 0.552899,-0.00030379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352145,-0.000398161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678062,-0.00566357) , 
5, 0.0359775, 1, 0, 0.435914,-0.0299948) , 
6, 0.439922, 1, 0, 0.518685,-0.00898729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39064,0.000687109) , 
6, 0.747891, 1, 0, 0.495849,-0.0045867)    );
  // itree = 1263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899283,-0.0110455) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984186,0.00100196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914272,0.00610579) , 
3, 0.257809, 1, 0, 0.953245,0.0228264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783725,-0.00149188) , 
9, 0.0444784, 1, 0, 0.885404,0.00660799) , 
9, 0.015644, 1, 0, 0.888327,-0.00392571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404109,-0.00161326) , 
3, 0.657706, 1, 0, 0.719039,-0.0160756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639097,0.00379641) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181975,-0.000507463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652926,-0.00427086) , 
5, 0.0157738, 1, 0, 0.346962,-0.0235805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112953,3.91341e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454353,0.00187205) , 
2, 0.00743666, 1, 0, 0.212542,0.00995336) , 
9, 0.0290982, 1, 0, 0.257666,-0.00130379) , 
16, 0.1958, 1, 0, 0.308747,0.00629667) , 
16, 0.159136, 1, 0, 0.497424,-0.00399145)    );
  // itree = 1264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963536,-0.00181131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947808,0.00639117) , 
13, 0.57531, 1, 0, 0.955557,0.0161938) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342772,-0.00297386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916511,-0.0102028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786468,0.000516292) , 
17, 0.397643, 1, 0, 0.854141,-0.0162817) , 
12, 0.0935475, 1, 0, 0.657196,-0.0339413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503436,0.0025821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1238,-0.000576329) , 
17, 0.873187, 1, 0, 0.18384,-0.000532624) , 
16, 0.180144, 1, 0, 0.344618,-0.0118801) , 
10, 0.320697, 1, 0, 0.473971,-0.00593606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393782,0.000717168) , 
13, 1.17382, 1, 0, 0.454544,-0.000777953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850129,-0.0045925) , 
12, 0.280661, 1, 0, 0.492434,-0.00439016)    );
  // itree = 1265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608682,-0.00177626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229567,-0.000411882) , 
7, 0.395717, 1, 0, 0.34139,-0.0123915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279642,0.00148409) , 
15, 0.111551, 1, 0, 0.317573,0.00160952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182713,-0.00080585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626507,-0.00418152) , 
4, 0.0954203, 1, 0, 0.254797,-0.0214974) , 
14, 0.100419, 1, 0, 0.286568,-0.00980284) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956888,0.0061627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85655,-0.00187232) , 
8, 0.0180364, 1, 0, 0.906008,0.00702752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818421,-0.00366156) , 
14, 0.0323764, 1, 0, 0.874593,-0.00883555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778071,0.00350313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903928,-0.00334056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876911,0.00327399) , 
10, 0.476589, 1, 0, 0.890993,0.00727687) , 
12, 0.144867, 1, 0, 0.845299,0.0269988) , 
15, 0.0825616, 1, 0, 0.859431,0.00971149) , 
5, 0.0240702, 1, 0, 0.499739,-0.00254126)    );
  // itree = 1266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879839,0.00462599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446535,-0.00135166) , 
6, 0.259343, 1, 0, 0.558201,-0.0160251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3507,0.00200641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188184,-2.57428e-05) , 
8, 0.0486242, 1, 0, 0.237246,0.00934824) , 
8, 0.0333595, 1, 0, 0.334143,0.00168793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894747,0.00393247) , 
12, 0.149914, 1, 0, 0.399633,0.00580786) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965495,0.0034926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92454,-0.00311239) , 
14, 0.0369161, 1, 0, 0.942168,-0.00364898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687201,-0.00265297) , 
17, 0.591513, 1, 0, 0.871224,-0.0167613) , 
12, 0.191143, 1, 0, 0.500451,0.000982939)    );
  // itree = 1267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291926,-0.00125652) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998869,0.013258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949661,-0.00849353) , 
17, 0.268304, 1, 0, 0.97552,-0.00353975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946935,0.00930181) , 
6, 0.188443, 1, 0, 0.966679,0.00824338) , 
2, 0.0114772, 1, 0, 0.800464,0.00252395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470973,-0.00373853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279045,-0.00066556) , 
13, 0.872913, 1, 0, 0.353383,-0.017456) , 
13, 0.765668, 1, 0, 0.632082,-0.00500102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57191,0.000290891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405136,0.0038955) , 
15, 0.116154, 1, 0, 0.47569,0.0296122) , 
6, 0.28267, 1, 0, 0.590951,0.00410222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661007,1.54667e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258003,-0.00153735) , 
16, 0.115235, 1, 0, 0.394962,-0.0168594) , 
6, 0.379377, 1, 0, 0.510564,-0.00449547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408999,0.000624688) , 
11, 1.2673, 1, 0, 0.494088,-0.00145631)    );
  // itree = 1268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406381,0.00206949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890892,-0.00752237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961329,-0.00071569) , 
12, 0.164463, 1, 0, 0.935682,-0.0138163) , 
12, 0.102756, 1, 0, 0.738429,-0.000262633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512811,-0.00279523) , 
9, 0.0457557, 1, 0, 0.67407,-0.0079585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41985,-0.00200482) , 
6, 0.393345, 1, 0, 0.597329,-0.015534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407582,0.00146612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262821,-0.000722425) , 
14, 0.0590605, 1, 0, 0.308993,-0.00114552) , 
11, 0.917552, 1, 0, 0.463379,-0.00884964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934167,0.00557085) , 
12, 0.327557, 1, 0, 0.491169,-0.00616637)    );
  // itree = 1269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965939,0.00349368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801313,-0.000312703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554204,-0.00297197) , 
13, 0.784901, 1, 0, 0.659505,-0.0185697) , 
10, 0.174918, 1, 0, 0.746582,-0.0102975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664347,0.00462089) , 
15, 0.0550484, 1, 0, 0.718028,0.00647177) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891273,-0.000237752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270918,0.00171953) , 
11, 0.631565, 1, 0, 0.533153,0.0124076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409541,-0.00130387) , 
9, 0.0480418, 1, 0, 0.478374,0.000271559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311993,-0.00172877) , 
6, 0.454852, 1, 0, 0.417431,-0.0109855) , 
15, 0.0968131, 1, 0, 0.539505,-0.00389605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575461,0.00250319) , 
14, 0.189944, 1, 0, 0.543687,-0.000208777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404757,0.000996059) , 
11, 1.14873, 1, 0, 0.511937,0.0047134)    );
  // itree = 1270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734801,0.00373884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968382,-0.011093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972777,0.00684062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973241,-0.00869441) , 
4, 0.474819, 1, 0, 0.973011,0.00503574) , 
13, 0.548742, 1, 0, 0.971342,-0.00189637) , 
12, 0.113705, 1, 0, 0.914493,0.00579032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224865,-0.00262177) , 
10, 0.574753, 1, 0, 0.724384,-0.00439249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605035,0.00310386) , 
15, 0.291738, 1, 0, 0.703966,0.00189756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401274,-0.00191547) , 
6, 0.418619, 1, 0, 0.641877,-0.00475541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148252,0.000527306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781681,0.00410548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840043,0.000744699) , 
0, 0.229034, 1, 0, 0.805833,0.0430503) , 
0, 0.105264, 1, 0, 0.37344,0.0198631) , 
13, 0.853205, 1, 0, 0.518297,0.00657821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394615,-0.00124324) , 
11, 1.2333, 1, 0, 0.496975,0.000487697)    );
  // itree = 1271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132033,-0.00123089) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976326,0.00442116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800861,-0.00109824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614711,-0.00329613) , 
6, 0.31629, 1, 0, 0.717596,-0.0271402) , 
10, 0.2639, 1, 0, 0.803082,-0.0149485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963439,0.00511424) , 
12, 0.26269, 1, 0, 0.841961,-0.00668705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575213,0.00276305) , 
11, 0.9618, 1, 0, 0.794949,0.0033108) , 
2, 0.00914539, 1, 0, 0.55084,-0.00375934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413265,-0.001175) , 
11, 1.25776, 1, 0, 0.528041,-0.00762664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332494,0.000799356) , 
9, 0.0627503, 1, 0, 0.489636,-0.00344354)    );
  // itree = 1272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948683,-0.00285712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93768,0.000896965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792927,0.00334918) , 
10, 0.369787, 1, 0, 0.855955,0.0224493) , 
13, 0.587158, 1, 0, 0.89507,0.00996743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932183,-0.00842157) , 
5, 0.0557968, 1, 0, 0.903094,0.00198477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748656,0.0016407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746269,0.0060745) , 
16, 0.117351, 1, 0, 0.747495,0.0500442) , 
11, 0.721942, 1, 0, 0.857196,0.016161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168906,-0.000443089) , 
17, 0.838306, 1, 0, 0.531569,0.005467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464896,0.00163802) , 
11, 1.26965, 1, 0, 0.52011,0.0108659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43493,-0.00246136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425912,-0.000117173) , 
15, 0.349839, 1, 0, 0.430705,-0.0186834) , 
14, 0.172676, 1, 0, 0.506728,0.00644317)    );
  // itree = 1273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128052,-0.00108005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291928,-0.00285396) , 
4, 0.0390648, 1, 0, 0.168117,-0.0252855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21428,-2.5766e-06) , 
14, 0.117156, 1, 0, 0.187495,-0.0146877) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655535,0.00163743) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920255,0.0010599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872016,-0.00401537) , 
14, 0.0282504, 1, 0, 0.901603,-0.00735369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906541,0.000146319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880498,0.0040085) , 
10, 0.40893, 1, 0, 0.893127,0.0232102) , 
14, 0.0533642, 1, 0, 0.897655,0.00688072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735897,-0.00239676) , 
7, 0.309404, 1, 0, 0.868126,-0.00054196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745824,-0.00338303) , 
15, 0.247479, 1, 0, 0.851413,-0.00689019) , 
12, 0.11935, 1, 0, 0.81048,0.000544506) , 
12, 0.0877067, 1, 0, 0.489325,-0.00730785)    );
  // itree = 1274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398776,-0.00140276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165176,0.00128193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132449,-0.000447294) , 
9, 0.038764, 1, 0, 0.147215,0.0043355) , 
8, 0.0303581, 1, 0, 0.190641,-0.000429553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606909,-0.002503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370252,-0.00126724) , 
7, 0.284792, 1, 0, 0.485323,-0.0353895) , 
5, 0.0151995, 1, 0, 0.272406,-0.0101298) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984502,0.00564294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95263,-0.0115366) , 
9, 0.0185278, 1, 0, 0.967503,-0.00885409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84832,-0.0115837) , 
17, 0.417443, 1, 0, 0.930484,-0.0261351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95081,0.00225247) , 
14, 0.0843991, 1, 0, 0.936862,-0.015155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72106,0.00198411) , 
3, 0.483548, 1, 0, 0.852511,0.00657929) , 
2, 0.0202223, 1, 0, 0.490608,-0.00384482)    );
  // itree = 1275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40871,-0.00249075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970835,0.00593225) , 
2, 0.0207526, 1, 0, 0.758646,-0.00208819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725549,0.00380756) , 
14, 0.0336287, 1, 0, 0.748075,0.00706489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56811,0.00262068) , 
13, 1.06711, 1, 0, 0.6927,0.0200285) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734536,-0.00243113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198303,0.000465037) , 
3, 0.461157, 1, 0, 0.299807,0.00213059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936597,-0.00123466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677064,-0.00291725) , 
6, 0.268701, 1, 0, 0.772053,-0.0361943) , 
5, 0.03054, 1, 0, 0.422792,-0.00785024) , 
15, 0.0779582, 1, 0, 0.504408,0.000579795)    );
  // itree = 1276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942505,0.00019565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428159,-0.00341303) , 
7, 0.271354, 1, 0, 0.694203,-0.0175407) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841955,-0.00525587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967471,0.00149622) , 
2, 0.0338844, 1, 0, 0.914829,-0.011625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523825,0.00231281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184574,0.000403534) , 
10, 0.607881, 1, 0, 0.292057,0.0167369) , 
3, 0.407122, 1, 0, 0.477359,0.00829798) , 
14, 0.0286736, 1, 0, 0.526865,0.00239901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410053,-0.00137741) , 
13, 1.27203, 1, 0, 0.505428,-0.00386249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402855,0.00233424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540461,-0.000715173) , 
14, 0.236359, 1, 0, 0.442017,0.0217139) , 
14, 0.146237, 1, 0, 0.49101,0.00195272)    );
  // itree = 1277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954205,0.00329046) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975952,0.00129105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957182,0.00447909) , 
10, 0.249052, 1, 0, 0.966586,0.00967747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933579,-0.0180242) , 
4, 0.423641, 1, 0, 0.954825,-0.0064275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833132,-0.00643682) , 
10, 0.45367, 1, 0, 0.923686,-0.0179031) , 
16, 0.0481086, 1, 0, 0.931106,-0.0102546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655021,0.00417669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621653,0.000632497) , 
13, 0.800194, 1, 0, 0.636231,0.0303445) , 
17, 0.523616, 1, 0, 0.812479,0.00607831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20729,-0.00122772) , 
17, 0.953752, 1, 0, 0.655389,-0.000605665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281611,-0.00138505) , 
3, 0.792626, 1, 0, 0.546842,-0.00899341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194436,0.0025821) , 
16, 0.409282, 1, 0, 0.502402,-0.00396671)    );
  // itree = 1278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957323,-0.000780942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93595,0.00286938) , 
9, 0.0340797, 1, 0, 0.947631,0.00621967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514901,-0.00180539) , 
17, 0.498729, 1, 0, 0.78479,-0.0106135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784401,0.00355562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623606,0.000449769) , 
7, 0.176798, 1, 0, 0.70245,0.0243031) , 
16, 0.0908912, 1, 0, 0.759887,-5.31924e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722326,-0.00184844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570662,0.00142692) , 
14, 0.0586089, 1, 0, 0.663397,-0.00444677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37795,-0.00382544) , 
14, 0.0996357, 1, 0, 0.538336,-0.0335145) , 
16, 0.118862, 1, 0, 0.669725,-0.0136705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772851,0.00524954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139749,-7.6843e-06) , 
10, 0.526465, 1, 0, 0.244347,0.00879805) , 
16, 0.224518, 1, 0, 0.493711,-0.00437338)    );
  // itree = 1279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759149,0.00132213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604068,-0.00370005) , 
6, 0.264707, 1, 0, 0.684052,-0.0244295) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982196,0.00462748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928478,-0.00561555) , 
10, 0.383224, 1, 0, 0.955084,-0.0065772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94167,0.00742879) , 
8, 0.015771, 1, 0, 0.95003,0.00724362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169883,0.000200562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712466,-0.00425297) , 
5, 0.0152142, 1, 0, 0.350431,-0.0133506) , 
8, 0.0259463, 1, 0, 0.614842,-0.00426896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373126,0.00187842) , 
13, 0.970954, 1, 0, 0.569475,0.001226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356376,-0.00165926) , 
6, 0.494457, 1, 0, 0.50984,-0.00743546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388177,0.000807538) , 
11, 1.15441, 1, 0, 0.480575,-0.0014908) , 
14, 0.017222, 1, 0, 0.507113,-0.00448244)    );
  // itree = 1280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901992,0.00300246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966617,-0.00563459) , 
2, 0.0396118, 1, 0, 0.93325,0.00479031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584955,-0.00253346) , 
13, 0.899379, 1, 0, 0.782051,-0.0175737) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955872,0.00741937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401363,-0.000690381) , 
16, 0.247133, 1, 0, 0.70498,0.00937852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526906,-0.00140616) , 
6, 0.438852, 1, 0, 0.637129,-0.00496347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539755,-0.000636741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389114,0.00161488) , 
6, 0.284293, 1, 0, 0.432932,0.0197435) , 
15, 0.100624, 1, 0, 0.523684,0.00876295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160454,-0.00114819) , 
10, 0.769449, 1, 0, 0.411349,0.00052208) , 
16, 0.0874643, 1, 0, 0.49767,-0.00369165)    );
  // itree = 1281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801369,0.00451577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96342,-0.00765526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923157,0.00335767) , 
6, 0.252231, 1, 0, 0.947019,0.00184115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845656,-0.00385692) , 
15, 0.198148, 1, 0, 0.916616,-0.00878552) , 
2, 0.0172752, 1, 0, 0.891677,0.00325811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201967,-0.0015156) , 
17, 0.674582, 1, 0, 0.606951,-0.00780368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201735,0.000334563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735889,0.00215332) , 
4, 0.16589, 1, 0, 0.316736,0.0137797) , 
11, 0.859915, 1, 0, 0.449244,0.00392508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976708,0.000589872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761769,-0.00556864) , 
13, 0.911527, 1, 0, 0.887792,-0.027378) , 
4, 0.470032, 1, 0, 0.504027,1.47228e-05)    );
  // itree = 1282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880551,0.00278577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78985,-0.000598909) , 
14, 0.104455, 1, 0, 0.846217,0.011037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713507,-0.00220333) , 
8, 0.0127919, 1, 0, 0.800491,-0.00246665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771855,0.00210548) , 
7, 0.103305, 1, 0, 0.792561,0.00489559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635342,-0.00220153) , 
7, 0.175619, 1, 0, 0.755563,-0.00399504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720446,0.00477689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243515,-0.00188418) , 
7, 0.462972, 1, 0, 0.517896,0.0196709) , 
16, 0.189398, 1, 0, 0.692077,0.00232667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162032,-0.000500821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665494,-0.00379524) , 
4, 0.191234, 1, 0, 0.225146,-0.0155597) , 
8, 0.0422911, 1, 0, 0.499653,-0.00504438)    );
  // itree = 1283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923632,-0.0107469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792666,-0.00167974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569228,0.00406101) , 
13, 0.810307, 1, 0, 0.73151,0.00276558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538955,0.00423289) , 
15, 0.153673, 1, 0, 0.688583,0.0112454) , 
13, 0.457267, 1, 0, 0.726783,0.00577336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398815,-0.00193311) , 
13, 0.971708, 1, 0, 0.667334,-2.19119e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522058,0.00185198) , 
6, 0.453789, 1, 0, 0.639241,0.00513626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775827,-0.0043078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283158,-0.000664355) , 
16, 0.0892864, 1, 0, 0.405263,-0.0193035) , 
15, 0.223929, 1, 0, 0.568422,-0.00226097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364476,0.00200102) , 
11, 1.07808, 1, 0, 0.532757,0.00383454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348107,-0.00135005) , 
6, 0.74664, 1, 0, 0.498998,-0.00261369)    );
  // itree = 1284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48538,-0.00252093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501724,0.000928938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229911,-0.0022544) , 
7, 0.378963, 1, 0, 0.3678,-0.00731019) , 
7, 0.163096, 1, 0, 0.412821,-0.0231466) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910868,0.0055676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83467,0.000438311) , 
14, 0.0850471, 1, 0, 0.87195,0.027193) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955037,0.00531239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916045,-0.00104938) , 
12, 0.225604, 1, 0, 0.930822,0.00576624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864846,-0.00391135) , 
16, 0.10232, 1, 0, 0.908899,-0.00592908) , 
4, 0.356334, 1, 0, 0.894719,0.00678273) , 
12, 0.121111, 1, 0, 0.683333,-0.00634586) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112597,0.000370998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245783,0.000519448) , 
12, 0.0587683, 1, 0, 0.167048,0.00670395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726711,0.00255713) , 
0, 0.103254, 1, 0, 0.256032,0.012992) , 
8, 0.0402857, 1, 0, 0.504713,0.00173776)    );
  // itree = 1285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998164,0.0145567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956877,-0.017126) , 
17, 0.222893, 1, 0, 0.977757,-0.00758657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991206,0.0107022) , 
16, 0.1279, 1, 0, 0.982705,-0.000902919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646698,-0.00344094) , 
3, 0.249655, 1, 0, 0.850093,-0.0166491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715997,0.00325555) , 
15, 0.297749, 1, 0, 0.828973,-0.00846951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682915,0.00368468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47489,-0.00148404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377953,0.0043277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13689,0.000589951) , 
3, 0.594003, 1, 0, 0.182151,0.0176223) , 
7, 0.436546, 1, 0, 0.229237,0.0108522) , 
7, 0.274847, 1, 0, 0.322958,0.0212227) , 
11, 0.704741, 1, 0, 0.529897,0.00907986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390388,-0.000939894) , 
13, 1.28053, 1, 0, 0.506633,0.00396322)    );
  // itree = 1286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984242,0.00117443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985067,0.0139167) , 
17, 0.302858, 1, 0, 0.984537,0.00994888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947904,-0.00412552) , 
16, 0.158998, 1, 0, 0.97424,0.0044849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914174,-0.00480964) , 
9, 0.0492754, 1, 0, 0.96227,-0.000927312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616369,-0.00249474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455515,-0.0004416) , 
8, 0.0230255, 1, 0, 0.538501,-0.0267794) , 
3, 0.367991, 1, 0, 0.76061,-0.0132296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.305086,0.00124088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163923,-0.00046855) , 
8, 0.055426, 1, 0, 0.230859,0.00698524) , 
17, 0.908878, 1, 0, 0.490903,-0.00293779)    );
  // itree = 1287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47841,-0.000577956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759464,-0.00357373) , 
5, 0.0117684, 1, 0, 0.617637,-0.0233246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898747,0.00464432) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988669,0.000995075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984011,0.0092803) , 
13, 0.68938, 1, 0, 0.986681,0.0104164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865026,-0.00499147) , 
17, 0.434946, 1, 0, 0.95625,-0.000712748) , 
4, 0.24023, 1, 0, 0.94381,0.00815974) , 
2, 0.0183041, 1, 0, 0.852954,-0.00061022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696314,0.00192884) , 
13, 1.02988, 1, 0, 0.821943,0.00631601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253795,-0.00137458) , 
17, 0.924297, 1, 0, 0.612185,-0.0058612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218224,0.000929442) , 
10, 0.741082, 1, 0, 0.50036,-0.000208655)    );
  // itree = 1288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771935,-0.00100486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521068,0.000812666) , 
10, 0.353842, 1, 0, 0.63782,0.00319396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488227,-0.00257045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548686,-0.000801629) , 
16, 0.152708, 1, 0, 0.517157,-0.0318986) , 
7, 0.194721, 1, 0, 0.580871,-0.0133686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449519,0.00141455) , 
7, 0.367815, 1, 0, 0.553704,-0.0055716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644653,0.00251788) , 
14, 0.187927, 1, 0, 0.569322,0.00143986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908665,0.00606239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909602,0.000846921) , 
5, 0.0394526, 1, 0, 0.909163,0.0334336) , 
12, 0.163654, 1, 0, 0.652539,0.00927421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967718,0.00283986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722793,-0.00426799) , 
17, 0.448136, 1, 0, 0.882595,-0.0182016) , 
12, 0.225578, 1, 0, 0.709152,0.00251294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247066,-0.00311631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128672,-0.000452061) , 
3, 0.598388, 1, 0, 0.15607,-0.0163596) , 
7, 0.481004, 1, 0, 0.492517,-0.00487918)    );
  // itree = 1289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978211,-0.00249506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918541,0.00461146) , 
11, 0.435792, 1, 0, 0.95087,0.0128038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812479,0.00116648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499324,-0.00189779) , 
6, 0.218545, 1, 0, 0.647076,-0.00969735) , 
16, 0.121885, 1, 0, 0.803535,0.00189111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285235,-0.00257595) , 
10, 0.677943, 1, 0, 0.704291,-0.00536518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293951,0.00170821) , 
11, 0.918338, 1, 0, 0.61244,0.00124314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364592,-0.00106075) , 
11, 1.08901, 1, 0, 0.543823,-0.00504103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363255,0.00102438) , 
9, 0.0585854, 1, 0, 0.502672,9.36707e-06)    );
  // itree = 1290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983323,-0.000673283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985151,0.0101187) , 
15, 0.157838, 1, 0, 0.98416,0.0120632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911867,-0.00655922) , 
13, 0.637814, 1, 0, 0.961634,-0.000726632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949246,0.00653401) , 
13, 0.774493, 1, 0, 0.959183,0.00621935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702075,-0.00287574) , 
17, 0.5442, 1, 0, 0.910988,-0.0019501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684956,-0.00299561) , 
13, 0.963447, 1, 0, 0.868175,-0.0105216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105028,-0.000578644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504042,0.00245249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293185,-7.47125e-05) , 
14, 0.0549878, 1, 0, 0.353315,0.0102041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446748,0.00159189) , 
6, 0.689629, 1, 0, 0.395843,0.0223093) , 
12, 0.0576521, 1, 0, 0.272471,0.00968654) , 
17, 0.711647, 1, 0, 0.50287,0.00187069)    );
  // itree = 1291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741845,0.000725594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57271,0.00305506) , 
10, 0.465583, 1, 0, 0.654185,0.0294164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180321,0.00111717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485238,-0.000514946) , 
5, 0.0153423, 1, 0, 0.265817,0.00828718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167778,-0.00165296) , 
14, 0.0987393, 1, 0, 0.217702,-0.00862085) , 
8, 0.0265633, 1, 0, 0.30877,-0.0006847) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928083,0.00302566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966294,0.00266417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904444,-0.00733349) , 
8, 0.0138764, 1, 0, 0.934172,-0.0132841) , 
2, 0.0444384, 1, 0, 0.931324,0.000897773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797513,-0.00412899) , 
15, 0.19583, 1, 0, 0.905026,-0.00811178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624796,-0.00234071) , 
11, 0.9767, 1, 0, 0.825776,-0.0206232) , 
5, 0.0269831, 1, 0, 0.492553,-0.00777233)    );
  // itree = 1292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993384,0.00754388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958836,-0.0141944) , 
8, 0.0188788, 1, 0, 0.978356,-0.00534548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767683,-0.00781917) , 
3, 0.252448, 1, 0, 0.913395,-0.0292848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26632,-0.00116167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958729,0.00903034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918491,-0.00111238) , 
12, 0.235053, 1, 0, 0.937971,0.0266645) , 
4, 0.206536, 1, 0, 0.553342,0.00100546) , 
10, 0.388564, 1, 0, 0.710406,-0.0122079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133363,0.00062809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577144,0.000512039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631547,0.00387857) , 
11, 0.972, 1, 0, 0.608742,0.0446149) , 
5, 0.00258458, 1, 0, 0.29935,0.0212652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399189,-0.00044287) , 
13, 1.22718, 1, 0, 0.334304,0.0102447) , 
11, 0.822725, 1, 0, 0.504782,6.74499e-05)    );
  // itree = 1293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13445,-0.000852332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30573,0.00159414) , 
12, 0.0579201, 1, 0, 0.196967,0.00182136) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995945,0.00681306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948073,-0.0117878) , 
6, 0.13508, 1, 0, 0.970635,-0.0117255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962139,0.00564886) , 
11, 0.477443, 1, 0, 0.967577,-0.00106645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617788,-0.00406526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732983,-0.00241733) , 
6, 0.379035, 1, 0, 0.676754,-0.049734) , 
3, 0.350955, 1, 0, 0.868196,-0.0176972) , 
12, 0.086883, 1, 0, 0.545432,-0.00831159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339101,-0.00158653) , 
6, 0.576687, 1, 0, 0.501124,-0.0130721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427636,0.000360589) , 
11, 1.28864, 1, 0, 0.48994,-0.00981672)    );
  // itree = 1294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120142,-0.00131864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965787,0.00255127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562416,-0.00283505) , 
17, 0.558815, 1, 0, 0.771928,-0.0202521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8223,0.00591927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934862,0.00201045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73906,-0.00180026) , 
10, 0.267793, 1, 0, 0.823134,-0.0101104) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570367,0.00393581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798505,0.000382514) , 
5, 0.0333238, 1, 0, 0.683845,0.0392029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239423,-0.000295468) , 
16, 0.17318, 1, 0, 0.432107,0.0140093) , 
10, 0.411129, 1, 0, 0.565597,0.00577526) , 
14, 0.0298433, 1, 0, 0.602567,0.0129549) , 
9, 0.0140787, 1, 0, 0.633072,0.00697369) , 
12, 0.0530965, 1, 0, 0.530501,0.00223802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42092,-0.00356503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32366,-0.00062938) , 
15, 0.236962, 1, 0, 0.353957,-0.0221819) , 
14, 0.137632, 1, 0, 0.493785,-0.00284065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649491,0.00334356) , 
14, 0.250692, 1, 0, 0.502114,-0.000482167)    );
  // itree = 1295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185057,-0.00153468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579196,-0.00317313) , 
5, 0.012269, 1, 0, 0.326655,-0.0296073) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976701,-0.00430567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890732,0.00290126) , 
6, 0.273361, 1, 0, 0.941931,0.0079455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787459,-0.00315941) , 
10, 0.409708, 1, 0, 0.899336,-0.00403603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909568,0.00523303) , 
14, 0.07385, 1, 0, 0.902158,0.00817202) , 
2, 0.0180526, 1, 0, 0.714848,-0.0041241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496576,-0.00408173) , 
15, 0.20929, 1, 0, 0.686247,-0.0102454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193049,0.00113685) , 
8, 0.0557947, 1, 0, 0.554342,-0.0032231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277801,0.0024299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67251,-0.000584648) , 
5, 0.0152382, 1, 0, 0.41094,0.0207892) , 
15, 0.27369, 1, 0, 0.527604,0.00125409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409754,0.00141309) , 
6, 0.733947, 1, 0, 0.505933,0.0069159)    );
  // itree = 1296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987502,0.00533153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504071,-0.00341634) , 
10, 0.323979, 1, 0, 0.709124,-0.0135694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575339,0.00326193) , 
6, 0.228122, 1, 0, 0.670265,-0.00233133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418419,-0.00276229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756843,-0.00145096) , 
2, 0.0364119, 1, 0, 0.545008,-0.043075) , 
6, 0.323183, 1, 0, 0.616193,-0.0199201) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732158,-0.004247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587357,0.0014689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541297,-0.00137983) , 
15, 0.205724, 1, 0, 0.568406,0.00183254) , 
15, 0.096157, 1, 0, 0.615003,-0.00659015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533586,0.0016043) , 
9, 0.0507268, 1, 0, 0.589343,0.00212931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345791,0.00126507) , 
11, 0.933798, 1, 0, 0.489587,0.0104979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299425,-0.00118603) , 
9, 0.0676649, 1, 0, 0.439064,0.00195142) , 
9, 0.0244745, 1, 0, 0.496225,-0.00510678)    );
  // itree = 1297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810022,0.00496918) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950393,0.0028111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902337,-0.00513671) , 
15, 0.0600517, 1, 0, 0.925909,-0.00784515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930423,0.00147239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767526,0.0025242) , 
11, 0.46482, 1, 0, 0.851361,0.0205031) , 
15, 0.134343, 1, 0, 0.889934,0.00583496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234003,0.000380896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11786,-0.000718848) , 
3, 0.641045, 1, 0, 0.150372,-0.00574059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623203,-0.00247652) , 
12, 0.110797, 1, 0, 0.219078,-0.0124276) , 
17, 0.669798, 1, 0, 0.474594,-0.00547175) , 
9, 0.0122373, 1, 0, 0.50856,-0.0017268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449703,0.00150025) , 
11, 1.31961, 1, 0, 0.500232,0.00343068)    );
  // itree = 1298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972584,0.00815325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984293,0.0046036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932584,-0.012173) , 
7, 0.14171, 1, 0, 0.961912,-0.00885889) , 
12, 0.1501, 1, 0, 0.965757,0.000946547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573695,-0.00245629) , 
3, 0.396313, 1, 0, 0.812272,-0.0190324) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126715,-0.000196908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405908,0.00259355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779906,0.00025592) , 
12, 0.131885, 1, 0, 0.560784,0.0340276) , 
4, 0.0744209, 1, 0, 0.254587,0.00806399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87433,0.000981076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637619,-0.00239115) , 
8, 0.0174952, 1, 0, 0.745116,-0.0226614) , 
2, 0.0340804, 1, 0, 0.34306,0.00252227) , 
10, 0.42355, 1, 0, 0.488982,-0.00418112)    );
  // itree = 1299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779703,0.000656731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796489,0.00465128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778609,0.00252781) , 
15, 0.152239, 1, 0, 0.787492,0.0451542) , 
15, 0.0800424, 1, 0, 0.783752,0.027331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954044,0.00286241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87552,-0.0048511) , 
7, 0.0998725, 1, 0, 0.913294,-0.0105365) , 
12, 0.175413, 1, 0, 0.838408,0.0113542) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634253,0.000162611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486876,-0.00317977) , 
10, 0.500417, 1, 0, 0.549409,-0.0311455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497052,0.00322565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132439,-0.000986858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653291,0.00112947) , 
12, 0.0826836, 1, 0, 0.305902,-0.00295438) , 
9, 0.019555, 1, 0, 0.332752,0.00378979) , 
10, 0.55886, 1, 0, 0.383578,-0.00440575) , 
10, 0.452409, 1, 0, 0.564226,0.00185377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144556,-0.00223876) , 
16, 0.383701, 1, 0, 0.496249,-0.00301203)    );
  // itree = 1300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373247,0.00156195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769736,0.00553709) , 
12, 0.05896, 1, 0, 0.579529,0.0451585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167481,0.000422515) , 
3, 0.603051, 1, 0, 0.294766,0.0187477) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873092,-0.00533048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924289,0.00412412) , 
9, 0.0108896, 1, 0, 0.905566,0.00448253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825271,-0.00422436) , 
15, 0.0867831, 1, 0, 0.878326,-0.0101729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904847,-0.000809799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768532,0.00193581) , 
6, 0.334727, 1, 0, 0.827035,0.0175866) , 
9, 0.037029, 1, 0, 0.859829,-0.000162229) , 
4, 0.150349, 1, 0, 0.576656,0.00931423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190632,-0.000397777) , 
17, 1.19607, 1, 0, 0.478577,0.00517498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870554,-0.00363857) , 
12, 0.33274, 1, 0, 0.500866,0.0033345)    );
  // itree = 1301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203991,-0.00148635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708432,0.0036783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972483,0.000438189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918656,0.00523036) , 
6, 0.267289, 1, 0, 0.952174,0.0159255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979933,0.00217159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819733,-0.00335571) , 
11, 0.520648, 1, 0, 0.899885,-0.0159084) , 
9, 0.0230182, 1, 0, 0.928178,0.00131635) , 
1, 0.19737, 1, 0, 0.891323,0.0100281) , 
2, 0.0140046, 1, 0, 0.711093,0.00190353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735362,-0.00188585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420638,0.00233468) , 
6, 0.21087, 1, 0, 0.496241,0.0258131) , 
15, 0.194896, 1, 0, 0.635144,0.0103554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247373,-0.00065965) , 
3, 0.756598, 1, 0, 0.493305,0.00199288)    );
  // itree = 1302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97191,0.00641869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988558,0.00469916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85214,-0.00468389) , 
11, 0.523401, 1, 0, 0.926306,-0.0142377) , 
14, 0.0205141, 1, 0, 0.943449,-0.00240917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514069,-0.00188969) , 
17, 0.697661, 1, 0, 0.80591,-0.0149422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789796,0.0021238) , 
9, 0.0396528, 1, 0, 0.803228,-0.00833941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747269,-0.00324753) , 
15, 0.174398, 1, 0, 0.793354,-0.0135584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62077,0.00314643) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445829,-0.00246102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131569,-0.000277304) , 
17, 0.820722, 1, 0, 0.172021,-0.00893679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739775,-0.000959759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790397,0.0040165) , 
15, 0.174779, 1, 0, 0.762138,0.0209023) , 
5, 0.0202223, 1, 0, 0.289322,-0.00300554) , 
10, 0.518338, 1, 0, 0.318359,0.00162066) , 
10, 0.473744, 1, 0, 0.496412,-0.00406925)    );
  // itree = 1303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997808,0.0124209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975305,-0.000137937) , 
11, 0.326002, 1, 0, 0.98724,0.00589902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896168,-0.0108429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721584,-1.57665e-05) , 
15, 0.0513962, 1, 0, 0.805437,-0.0160715) , 
11, 0.437529, 1, 0, 0.898037,-0.00488105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880356,0.00040328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739385,0.00425813) , 
8, 0.0189703, 1, 0, 0.806211,0.0257446) , 
6, 0.286386, 1, 0, 0.867134,0.00542552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604686,-0.00354708) , 
15, 0.262168, 1, 0, 0.81431,-0.00421117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241083,0.0013522) , 
3, 0.570105, 1, 0, 0.554866,0.00703501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359368,-0.000653854) , 
11, 1.11584, 1, 0, 0.504138,0.00158412)    );
  // itree = 1304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735592,0.00414951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587193,-0.00536379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250236,0.00104678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918229,-0.00652648) , 
12, 0.109205, 1, 0, 0.591726,-0.00574548) , 
9, 0.0197519, 1, 0, 0.590287,-0.016849) , 
15, 0.0229567, 1, 0, 0.626557,-0.00779013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582485,0.00251947) , 
15, 0.23417, 1, 0, 0.618028,-0.00211325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.429504,-0.00183602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430957,-0.00295821) , 
6, 0.298003, 1, 0, 0.430281,-0.0286064) , 
6, 0.261688, 1, 0, 0.569389,-0.00897676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591287,-0.00148742) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511979,0.00179668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867688,0.00594329) , 
2, 0.0383036, 1, 0, 0.617951,0.0494448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27008,-4.83243e-05) , 
17, 1.01108, 1, 0, 0.41624,0.0202258) , 
11, 0.720721, 1, 0, 0.444254,0.0136216) , 
6, 0.34221, 1, 0, 0.504492,0.00274303)    );
  // itree = 1305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886208,0.00139174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707083,-0.00782305) , 
14, 0.0189786, 1, 0, 0.783131,-0.0258484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55169,-0.00122847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509842,0.00239563) , 
14, 0.0260943, 1, 0, 0.530652,0.00915554) , 
13, 0.814101, 1, 0, 0.643496,-0.00648928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614813,0.00382683) , 
15, 0.121008, 1, 0, 0.638258,0.00155995) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852342,-0.0043761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55004,0.00136239) , 
6, 0.211202, 1, 0, 0.710074,-0.000650638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252093,-0.00236434) , 
13, 0.70599, 1, 0, 0.467047,-0.0165148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404292,0.000437014) , 
6, 0.37149, 1, 0, 0.442961,-0.00750151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322323,-0.00156495) , 
6, 0.65331, 1, 0, 0.405218,-0.0161477) , 
9, 0.031288, 1, 0, 0.492458,-0.00951874)    );
  // itree = 1306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887042,-0.00200405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538224,0.00684868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197815,0.00149239) , 
8, 0.0425993, 1, 0, 0.284787,0.0327014) , 
8, 0.0278974, 1, 0, 0.41904,0.0235605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866524,-0.00700039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944477,-0.00386675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974442,0.00759926) , 
15, 0.0557326, 1, 0, 0.957931,0.00247536) , 
2, 0.0321823, 1, 0, 0.927856,-0.0123267) , 
12, 0.159289, 1, 0, 0.608129,0.0102239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406047,-0.00134085) , 
9, 0.0500836, 1, 0, 0.554413,0.00307862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453911,-0.00147944) , 
6, 0.477019, 1, 0, 0.531269,-0.00352138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415015,0.00107596) , 
6, 0.71553, 1, 0, 0.508847,0.00182085)    );
  // itree = 1307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657907,-0.000287567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891646,-0.00755062) , 
5, 0.0235338, 1, 0, 0.774267,-0.0217177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970339,0.00041742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975254,0.00768279) , 
9, 0.0351967, 1, 0, 0.972131,0.0118902) , 
12, 0.159289, 1, 0, 0.889974,-0.00206447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600873,0.0018875) , 
13, 1.04549, 1, 0, 0.805701,0.00944663) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123713,-0.00113773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668678,0.00148695) , 
5, 0.0123342, 1, 0, 0.315317,-0.00268385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215826,-0.00185429) , 
6, 0.363078, 1, 0, 0.272236,-0.0145794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287336,0.000496288) , 
11, 1.06861, 1, 0, 0.277804,-0.00560785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793349,-0.00451654) , 
4, 0.32438, 1, 0, 0.335745,-0.0104302) , 
8, 0.0203088, 1, 0, 0.501318,-0.00342727)    );
  // itree = 1308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874119,-0.000243452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583577,0.00390019) , 
13, 0.701159, 1, 0, 0.712429,0.0213817) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574478,0.00103056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465518,-0.00327282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367661,-0.00119305) , 
14, 0.0737137, 1, 0, 0.406523,-0.0208586) , 
9, 0.0301751, 1, 0, 0.460777,-0.0113358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425426,0.00196664) , 
14, 0.128814, 1, 0, 0.450285,-0.00152949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322298,-0.00169379) , 
6, 0.449824, 1, 0, 0.399933,-0.013423) , 
14, 0.0284394, 1, 0, 0.449773,-0.00787203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871311,-0.00696779) , 
0, 0.275643, 1, 0, 0.49712,-0.0118206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453335,0.00110208) , 
11, 1.3067, 1, 0, 0.490877,-0.00648972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618266,0.0036512) , 
14, 0.241746, 1, 0, 0.497978,-0.00360333)    );
  // itree = 1309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300699,-0.00248202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298546,-0.00039932) , 
15, 0.123739, 1, 0, 0.29925,-0.0164161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137453,0.000644617) , 
8, 0.0523713, 1, 0, 0.217415,-0.00362365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944069,-0.00294824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563121,0.00300803) , 
3, 0.371535, 1, 0, 0.706758,0.0354231) , 
5, 0.0169305, 1, 0, 0.380014,0.0093508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901443,-0.00374644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973728,0.00579843) , 
12, 0.169982, 1, 0, 0.945743,0.00299048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656277,-0.00290391) , 
6, 0.423399, 1, 0, 0.833506,-0.0205674) , 
5, 0.0359775, 1, 0, 0.498041,0.00156421)    );
  // itree = 1310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957054,0.000959237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845315,-0.00490068) , 
10, 0.184342, 1, 0, 0.908584,-0.0147593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669607,0.0028045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888524,-0.00274421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93815,0.00377728) , 
9, 0.0296624, 1, 0, 0.910912,0.00102389) , 
4, 0.223718, 1, 0, 0.83469,0.0163824) , 
10, 0.254098, 1, 0, 0.867904,0.00238493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514806,-0.00272168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363755,-0.00593168) , 
14, 0.0390579, 1, 0, 0.442323,-0.058554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206909,-0.00115757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853529,0.00228902) , 
0, 0.138714, 1, 0, 0.3623,-0.00895059) , 
15, 0.104905, 1, 0, 0.382677,-0.0215813) , 
10, 0.431968, 1, 0, 0.588401,-0.0114202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207436,0.00050279) , 
17, 1.16751, 1, 0, 0.492463,-0.00636318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625343,0.00273825) , 
14, 0.259014, 1, 0, 0.499148,-0.00429901)    );
  // itree = 1311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893898,0.00464091) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941304,-0.00293242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.0153136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940896,-0.00172972) , 
15, 0.0566856, 1, 0, 0.967529,0.0133488) , 
4, 0.429728, 1, 0, 0.955537,0.00220812) , 
12, 0.123892, 1, 0, 0.943363,0.00842745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562522,-0.00373288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472723,-0.00116235) , 
13, 0.969602, 1, 0, 0.4957,-0.0360999) , 
17, 0.538555, 1, 0, 0.745141,-0.0112889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491553,0.00191847) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228698,0.000835694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106385,0.000544827) , 
10, 0.692796, 1, 0, 0.145537,0.00852176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63973,-0.00196523) , 
4, 0.116146, 1, 0, 0.220236,0.00202723) , 
16, 0.207241, 1, 0, 0.273251,0.00870901) , 
7, 0.309404, 1, 0, 0.501822,-0.000977446)    );
  // itree = 1312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974915,-0.00321809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793324,0.00281986) , 
6, 0.303837, 1, 0, 0.894285,0.0152609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909291,-0.00438825) , 
12, 0.231607, 1, 0, 0.898089,0.00568299) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998578,0.0174931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886974,-0.000646124) , 
3, 0.160754, 1, 0, 0.943238,0.000952541) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196715,-0.00196634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569078,0.00081095) , 
5, 0.0173738, 1, 0, 0.307772,-0.0190605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712635,-0.00383812) , 
5, 0.0340804, 1, 0, 0.418124,-0.030518) , 
11, 0.484316, 1, 0, 0.540157,-0.0232045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187528,-0.000299553) , 
17, 1.04885, 1, 0, 0.384335,-0.0151516) , 
10, 0.329427, 1, 0, 0.493499,-0.0107246)    );
  // itree = 1313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904143,-0.00294213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88432,0.00458787) , 
15, 0.0272377, 1, 0, 0.892528,0.0133548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980805,0.00921423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446915,-0.00304815) , 
3, 0.344882, 1, 0, 0.668213,-0.0283707) , 
14, 0.0683371, 1, 0, 0.762797,-0.0107769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145376,0.00108912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484221,-0.000288379) , 
12, 0.0803493, 1, 0, 0.232938,0.00993691) , 
17, 0.834179, 1, 0, 0.433241,0.00210646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916794,-0.000585776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767868,-0.00612564) , 
10, 0.470611, 1, 0, 0.856019,-0.0323322) , 
12, 0.227664, 1, 0, 0.501293,-0.00343693)    );
  // itree = 1314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999241,0.0216704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868632,-0.0053659) , 
3, 0.206433, 1, 0, 0.943463,-0.0113446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949333,0.00432324) , 
9, 0.0351967, 1, 0, 0.945529,-0.000544975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646038,-0.00324283) , 
17, 0.502303, 1, 0, 0.851821,-0.0149197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882253,0.00533417) , 
14, 0.168066, 1, 0, 0.856859,-0.00572286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65582,0.00217199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572658,0.00261785) , 
8, 0.0373123, 1, 0, 0.61425,0.0279308) , 
8, 0.0320765, 1, 0, 0.801218,0.00199534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327681,-0.00195639) , 
8, 0.0442142, 1, 0, 0.696121,-0.00539535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136586,0.000767783) , 
17, 1.06747, 1, 0, 0.538396,-0.00099288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34792,-0.00108731) , 
6, 0.713896, 1, 0, 0.499588,-0.00597638)    );
  // itree = 1315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999404,0.0167063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960206,-0.0141297) , 
6, 0.134937, 1, 0, 0.979608,-0.00803639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974444,0.0109343) , 
17, 0.332428, 1, 0, 0.97789,0.00113667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657223,-0.00392028) , 
8, 0.0336131, 1, 0, 0.894594,-0.00682221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727018,0.0023133) , 
6, 0.32779, 1, 0, 0.858519,0.000463876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250344,-0.00172848) , 
10, 0.620431, 1, 0, 0.694047,-0.0062239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401437,-0.002683) , 
13, 0.769977, 1, 0, 0.627249,-0.0124846) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724147,-0.00244258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350817,0.00160415) , 
11, 0.702894, 1, 0, 0.438502,0.0113278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415174,-0.00105532) , 
11, 1.14532, 1, 0, 0.429072,-0.00299822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316567,0.00192936) , 
14, 0.112739, 1, 0, 0.3907,0.00967146) , 
13, 0.85369, 1, 0, 0.498814,-0.000454863)    );
  // itree = 1316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383635,0.000135694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247349,0.0037141) , 
16, 0.143425, 1, 0, 0.289275,0.038165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108569,-0.000352146) , 
16, 0.332487, 1, 0, 0.211941,0.0201514) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861459,0.0027415) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963646,-0.0061801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919474,0.00465265) , 
17, 0.308739, 1, 0, 0.945789,0.00808803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888848,-0.00430919) , 
8, 0.0175389, 1, 0, 0.922009,-0.00606661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623841,-0.00540938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43499,-0.00119072) , 
17, 0.860127, 1, 0, 0.486952,-0.0462075) , 
17, 0.656118, 1, 0, 0.724442,-0.0242952) , 
9, 0.00702145, 1, 0, 0.744853,-0.0169551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651743,0.00178708) , 
15, 0.295067, 1, 0, 0.734309,-0.0117262) , 
2, 0.0154911, 1, 0, 0.502379,0.00242741)    );
  // itree = 1317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505896,-0.00232104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227462,-0.00176921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192427,-9.8822e-05) , 
11, 0.917872, 1, 0, 0.205927,-0.0102101) , 
8, 0.0303581, 1, 0, 0.262939,-0.016021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88743,-0.00155058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80077,0.00355188) , 
6, 0.352564, 1, 0, 0.844198,0.025446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839058,-0.00536494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958827,0.0084464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912884,-0.00130686) , 
4, 0.568367, 1, 0, 0.935319,0.0161722) , 
1, 0.476467, 1, 0, 0.892527,-0.0117992) , 
4, 0.36912, 1, 0, 0.872306,0.0037843) , 
12, 0.121465, 1, 0, 0.521852,-0.00760599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680496,0.00301923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247154,0.000761941) , 
8, 0.0201428, 1, 0, 0.394733,0.022429) , 
15, 0.272854, 1, 0, 0.495042,-0.00127169)    );
  // itree = 1318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751974,0.00354083) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.888429,-0.00224147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783121,-0.0043711) , 
16, 0.0411593, 1, 0, 0.834958,-0.0298086) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145666,-0.000420704) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978473,-0.00126254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925046,0.00390924) , 
11, 0.403306, 1, 0, 0.943833,0.0168041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851801,-0.00445061) , 
7, 0.260109, 1, 0, 0.919928,0.00450449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539632,0.00282854) , 
17, 0.758729, 1, 0, 0.802107,0.0209919) , 
1, 0.0715461, 1, 0, 0.455288,0.00684425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363279,-0.000897151) , 
13, 1.1639, 1, 0, 0.432944,0.00047726) , 
16, 0.0583095, 1, 0, 0.479045,-0.0029958) , 
9, 0.00782201, 1, 0, 0.502853,0.000175728)    );
  // itree = 1319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998888,0.0183044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901824,-0.00684025) , 
3, 0.158695, 1, 0, 0.951979,-0.0122442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703676,0.00189281) , 
6, 0.351574, 1, 0, 0.85046,0.00609105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938542,0.000592208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567459,-0.00251334) , 
11, 0.572004, 1, 0, 0.707299,-0.0250523) , 
8, 0.0163876, 1, 0, 0.786382,-0.00784847) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319419,-0.000533779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219086,0.00110568) , 
15, 0.174167, 1, 0, 0.26816,0.00502027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839392,0.0042715) , 
5, 0.0261314, 1, 0, 0.395801,0.01564) , 
8, 0.0298489, 1, 0, 0.597396,0.00351659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174345,-0.00102728) , 
17, 1.16913, 1, 0, 0.489652,-0.00174709)    );
  // itree = 1320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956088,-0.014308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98282,-0.00720788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965279,0.0049753) , 
6, 0.164579, 1, 0, 0.974731,0.00532235) , 
15, 0.0354769, 1, 0, 0.969275,-0.00261011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614347,-0.00317185) , 
17, 0.442668, 1, 0, 0.876873,-0.0100409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649542,0.001954) , 
6, 0.322847, 1, 0, 0.818456,-0.00102346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268428,-0.00104477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364044,-0.00311446) , 
6, 0.326618, 1, 0, 0.326794,-0.0351884) , 
11, 0.715474, 1, 0, 0.66827,-0.0114597) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286868,0.000940239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797318,0.00495586) , 
2, 0.0340804, 1, 0, 0.414431,0.034486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275931,5.5214e-05) , 
9, 0.0367118, 1, 0, 0.337891,0.0160003) , 
11, 0.86843, 1, 0, 0.505218,0.0020926)    );
  // itree = 1321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450009,0.000810436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253411,-0.00314444) , 
14, 0.0419345, 1, 0, 0.361291,-0.013078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289833,0.000402148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253847,0.0016182) , 
6, 0.254919, 1, 0, 0.266292,0.0173193) , 
15, 0.112583, 1, 0, 0.309738,0.00341747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355712,-0.00181486) , 
14, 0.15278, 1, 0, 0.321404,-0.0033676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270345,-0.00138322) , 
6, 0.59109, 1, 0, 0.305005,-0.0118031) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835885,-0.00257571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971106,-0.00735114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975657,0.00247051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867266,0.00339007) , 
13, 0.772224, 1, 0, 0.915657,0.0245933) , 
17, 0.247516, 1, 0, 0.933927,0.01302) , 
5, 0.0303045, 1, 0, 0.905805,0.00211687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827164,0.00378033) , 
10, 0.570936, 1, 0, 0.887475,0.0142041) , 
12, 0.141591, 1, 0, 0.491232,-0.00348809)    );
  // itree = 1322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599389,-0.00228893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948459,-0.0117087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889617,0.00313839) , 
17, 0.264578, 1, 0, 0.921977,0.000117491) , 
4, 0.298618, 1, 0, 0.803888,-0.0141565) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507868,0.00133598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287988,0.000583548) , 
14, 0.0638303, 1, 0, 0.356305,0.0139074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386538,0.00356403) , 
14, 0.147993, 1, 0, 0.365227,0.0267937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112929,0.000128738) , 
7, 0.645269, 1, 0, 0.237149,0.0140184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702945,-0.00321056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477541,-0.00113391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784388,0.000822597) , 
2, 0.0255054, 1, 0, 0.63447,-0.00441329) , 
16, 0.127612, 1, 0, 0.656805,-0.0187596) , 
2, 0.0182565, 1, 0, 0.355851,0.00474697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893048,0.000837547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881521,0.00604395) , 
15, 0.0704473, 1, 0, 0.887456,0.0369218) , 
2, 0.038797, 1, 0, 0.426288,0.0090101) , 
16, 0.0795681, 1, 0, 0.50438,0.00421893)    );
  // itree = 1323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511753,-0.00263627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957077,0.00337454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84283,-0.00105551) , 
10, 0.328567, 1, 0, 0.89018,-0.000700434) , 
5, 0.0274362, 1, 0, 0.787869,-0.0134529) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914122,-0.00255138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671967,0.0051473) , 
6, 0.340252, 1, 0, 0.809415,0.0304257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224689,-0.000406177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180537,0.00169923) , 
13, 0.875463, 1, 0, 0.199764,0.0122236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7745,0.000393953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506245,-0.00186337) , 
11, 1.00433, 1, 0, 0.645702,-0.0190182) , 
2, 0.018292, 1, 0, 0.335292,0.0027287) , 
8, 0.026588, 1, 0, 0.426222,0.00804061) , 
7, 0.0962007, 1, 0, 0.506332,0.00327954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621795,0.00413966) , 
14, 0.250692, 1, 0, 0.512514,0.00585434)    );
  // itree = 1324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930686,0.00230669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743693,-0.00476026) , 
6, 0.250056, 1, 0, 0.853051,-0.0154665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940259,-0.00225082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76055,0.000984036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655742,0.00425838) , 
8, 0.0194602, 1, 0, 0.711152,0.0358388) , 
11, 0.445082, 1, 0, 0.801649,0.0185932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267618,-0.000435356) , 
16, 0.196404, 1, 0, 0.602161,0.00940348) , 
9, 0.025106, 1, 0, 0.685851,0.0011075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278582,0.00509669) , 
16, 0.357753, 1, 0, 0.634743,0.00729785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163482,-0.00157732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737766,0.00149625) , 
2, 0.0273532, 1, 0, 0.277441,-0.0145234) , 
11, 0.945815, 1, 0, 0.521071,0.000355618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464806,0.00185165) , 
11, 1.30371, 1, 0, 0.512853,0.00646503)    );
  // itree = 1325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411567,-0.004639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973146,0.00756003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969411,-0.00613819) , 
1, 0.390023, 1, 0, 0.970904,0.00295766) , 
5, 0.0182094, 1, 0, 0.822394,-0.0104121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748529,0.00595739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84768,0.00220978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366982,-0.00110835) , 
10, 0.581562, 1, 0, 0.574014,-0.00217544) , 
15, 0.210541, 1, 0, 0.632915,0.0124817) , 
15, 0.130265, 1, 0, 0.72819,0.000970122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249993,-0.00173939) , 
11, 0.843236, 1, 0, 0.641389,-0.00382453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678442,0.00256936) , 
13, 0.919997, 1, 0, 0.647724,0.00294349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496318,0.00367777) , 
11, 1.02361, 1, 0, 0.626745,0.0105483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247849,-0.000811142) , 
3, 0.76605, 1, 0, 0.494274,0.00132407)    );
  // itree = 1326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462862,-0.00341111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454295,-0.00110848) , 
15, 0.175375, 1, 0, 0.457725,-0.0401658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314705,0.000139222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192856,-0.00161476) , 
14, 0.0908817, 1, 0, 0.241472,-0.0149464) , 
16, 0.154451, 1, 0, 0.3242,-0.0245942) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818669,0.00328561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681072,0.000646942) , 
7, 0.236684, 1, 0, 0.751382,0.0298344) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994642,0.0073453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944902,-0.013806) , 
11, 0.382596, 1, 0, 0.970512,-0.0104947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935885,0.00293736) , 
13, 0.768854, 1, 0, 0.95896,-0.0013518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769721,-0.00152276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73829,-0.00317175) , 
16, 0.10526, 1, 0, 0.754661,-0.0356404) , 
11, 0.648546, 1, 0, 0.877792,-0.0149747) , 
4, 0.282019, 1, 0, 0.843195,-0.002711) , 
2, 0.0209869, 1, 0, 0.562845,-0.0145318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178098,0.000877415) , 
16, 0.358056, 1, 0, 0.485082,-0.00942517)    );
  // itree = 1327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158166,-0.000893175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991329,0.00390257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835929,0.00428951) , 
3, 0.191033, 1, 0, 0.930284,0.0199765) , 
1, 0.118473, 1, 0, 0.487803,0.0021956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196568,-0.00046461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561912,-0.0027506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804466,0.000255934) , 
4, 0.305745, 1, 0, 0.640096,-0.0421169) , 
12, 0.0950946, 1, 0, 0.36203,-0.0209552) , 
6, 0.319107, 1, 0, 0.41495,-0.0112144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965674,-0.00461999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849591,0.00402593) , 
17, 0.394342, 1, 0, 0.91264,0.0196433) , 
2, 0.0487754, 1, 0, 0.487188,-0.00673553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603462,0.00309468) , 
14, 0.229801, 1, 0, 0.49498,-0.00360704)    );
  // itree = 1328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967406,-0.0189104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971305,0.00983871) , 
15, 0.0547309, 1, 0, 0.969389,-0.00181715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85515,-0.00705782) , 
6, 0.228281, 1, 0, 0.929344,-0.0157386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622776,0.00113362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854125,-0.00154398) , 
4, 0.464538, 1, 0, 0.702796,0.00954094) , 
13, 0.79331, 1, 0, 0.811879,-0.00263123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449562,0.00255936) , 
8, 0.0453332, 1, 0, 0.715132,0.0104875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176882,-0.00167334) , 
16, 0.332541, 1, 0, 0.574777,0.00218418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736977,0.00137957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145811,-0.000708531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629266,-0.00190583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358841,-0.00322077) , 
16, 0.138361, 1, 0, 0.461422,-0.0552847) , 
12, 0.0695064, 1, 0, 0.282972,-0.0294215) , 
7, 0.0870007, 1, 0, 0.36475,-0.0209049) , 
15, 0.186093, 1, 0, 0.495186,-0.00656552)    );
  // itree = 1329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883451,-0.000597078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795984,0.00331071) , 
16, 0.0509274, 1, 0, 0.829531,0.021911) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373021,0.0039892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927073,-0.000306612) , 
12, 0.118695, 1, 0, 0.63129,0.0235835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421047,-0.00181449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371689,0.00095769) , 
15, 0.112312, 1, 0, 0.393411,-0.00232457) , 
14, 0.0455462, 1, 0, 0.497323,0.00899281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308154,-0.00179607) , 
15, 0.19359, 1, 0, 0.443613,-0.000221445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445958,0.00275577) , 
6, 0.395888, 1, 0, 0.444032,0.00673432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394429,-0.000810244) , 
6, 0.544531, 1, 0, 0.430053,-3.88339e-05) , 
7, 0.0962007, 1, 0, 0.50447,0.00405011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929273,0.00440032) , 
2, 0.055768, 1, 0, 0.54993,0.00683616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309668,-0.0013956) , 
9, 0.0664871, 1, 0, 0.506941,0.00140106)    );
  // itree = 1330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140968,-8.00024e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291375,0.00182932) , 
0, 0.0614028, 1, 0, 0.176602,0.00624579) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66668,-0.00153822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967056,-0.00680386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834033,0.00226631) , 
13, 0.726433, 1, 0, 0.896423,0.0117866) , 
12, 0.118478, 1, 0, 0.839749,0.00259694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724297,-0.00321797) , 
15, 0.146078, 1, 0, 0.812199,-0.0093656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608964,5.99916e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861835,0.00455833) , 
2, 0.0270855, 1, 0, 0.731227,0.0277022) , 
15, 0.212861, 1, 0, 0.789079,0.00121832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426522,-0.00304005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35104,-0.00117896) , 
16, 0.284164, 1, 0, 0.386621,-0.0435159) , 
7, 0.397805, 1, 0, 0.68392,-0.0104704) , 
2, 0.0134688, 1, 0, 0.458562,-0.00304485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884371,-0.00568432) , 
4, 0.503628, 1, 0, 0.499301,-0.00587365)    );
  // itree = 1331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460287,-0.00259218) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942818,0.00170411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901774,-0.00465024) , 
15, 0.0466736, 1, 0, 0.923331,-0.00779153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914002,0.00401848) , 
9, 0.0365672, 1, 0, 0.920272,0.00662523) , 
0, 0.125442, 1, 0, 0.81445,-0.00673629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806719,0.00370653) , 
14, 0.15278, 1, 0, 0.812832,0.002407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809041,0.000330665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463231,-0.00321366) , 
9, 0.0367506, 1, 0, 0.637568,-0.0274272) , 
8, 0.0189723, 1, 0, 0.741529,-0.00973048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468058,0.00140157) , 
8, 0.0387038, 1, 0, 0.685357,-0.00281305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208697,-0.00203604) , 
16, 0.327489, 1, 0, 0.605631,-0.00651805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218629,0.00115933) , 
8, 0.0563999, 1, 0, 0.501248,0.000154267)    );
  // itree = 1332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196659,-0.00202505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0969134,-0.000962401) , 
16, 0.288004, 1, 0, 0.138824,-0.0205609) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957516,-0.0127698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989646,-0.00104487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982649,0.00933006) , 
6, 0.164418, 1, 0, 0.986048,0.0106917) , 
9, 0.021118, 1, 0, 0.972983,-0.0033262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752314,-0.00389601) , 
3, 0.330793, 1, 0, 0.91566,-0.0164345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793958,-0.00405603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532135,0.0020614) , 
11, 0.702343, 1, 0, 0.645777,0.0055771) , 
7, 0.269865, 1, 0, 0.82978,-0.00943019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621163,0.00153033) , 
13, 1.02873, 1, 0, 0.784513,-0.00128757) , 
4, 0.0626134, 1, 0, 0.511397,-0.00943986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423712,0.00103666) , 
11, 1.2016, 1, 0, 0.49464,-0.0032454)    );
  // itree = 1333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985059,0.00552079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96271,-0.0150304) , 
9, 0.0142631, 1, 0, 0.973816,-0.0060702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620823,0.00393241) , 
3, 0.269985, 1, 0, 0.844683,0.0106337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186577,0.000236088) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744828,-0.00387514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944578,0.000664679) , 
5, 0.0348689, 1, 0, 0.833157,-0.0225586) , 
4, 0.0715372, 1, 0, 0.539847,-0.0108854) , 
9, 0.023466, 1, 0, 0.639288,-0.00386567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217093,-0.00201645) , 
11, 0.963523, 1, 0, 0.564589,-0.00847694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797263,0.00299645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39679,-0.00024875) , 
17, 0.66856, 1, 0, 0.498505,0.00588753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284723,0.00195976) , 
8, 0.0420052, 1, 0, 0.399196,0.0191949) , 
13, 0.960401, 1, 0, 0.496849,0.00285667)    );
  // itree = 1334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964334,-0.00858156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968308,0.00569109) , 
17, 0.313933, 1, 0, 0.966081,-0.00238927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875389,-0.00554793) , 
15, 0.145455, 1, 0, 0.940022,-0.0111462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789958,0.00224971) , 
11, 0.636102, 1, 0, 0.89523,-0.00145531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408271,-0.0013769) , 
3, 0.540427, 1, 0, 0.682888,-0.0136569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306571,0.00241512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192709,0.000310098) , 
11, 0.88436, 1, 0, 0.230354,0.0138198) , 
10, 0.628875, 1, 0, 0.491953,-0.0020638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504466,-0.00310671) , 
14, 0.217575, 1, 0, 0.492961,-0.00534644)    );
  // itree = 1335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802137,-0.00235956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697272,0.00295694) , 
9, 0.030309, 1, 0, 0.749911,0.00541668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685561,-0.00324393) , 
14, 0.127797, 1, 0, 0.728431,-0.00613197) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656841,0.00115071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492911,0.00298229) , 
14, 0.0609775, 1, 0, 0.557282,0.0346976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301775,0.000126477) , 
3, 0.741981, 1, 0, 0.418102,0.0172719) , 
13, 0.741152, 1, 0, 0.535434,0.00842313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977861,-0.00239396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751782,-0.0034297) , 
3, 0.365539, 1, 0, 0.872898,-0.0247758) , 
5, 0.0500893, 1, 0, 0.590554,0.00300054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165293,-0.00131637) , 
10, 0.806628, 1, 0, 0.501801,-0.00184372)    );
  // itree = 1336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981525,-0.0103374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968734,0.00781262) , 
3, 0.196692, 1, 0, 0.976724,0.00661445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903646,-0.00870225) , 
10, 0.41339, 1, 0, 0.957239,-0.00423538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802456,0.00200122) , 
3, 0.401256, 1, 0, 0.922996,0.00240125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671326,-0.00241412) , 
16, 0.194331, 1, 0, 0.856672,-0.0038108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79228,0.00359284) , 
15, 0.289699, 1, 0, 0.848124,0.00126915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351013,-0.00118836) , 
3, 0.620136, 1, 0, 0.657419,-0.00891298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241807,0.00108323) , 
10, 0.752977, 1, 0, 0.572906,-0.00371378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20083,0.00114608) , 
8, 0.0609264, 1, 0, 0.497401,0.00068731)    );
  // itree = 1337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766322,0.00401346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67498,-0.0054834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692107,-0.00100317) , 
9, 0.0302198, 1, 0, 0.684882,-0.0162775) , 
9, 0.0175536, 1, 0, 0.718958,-0.00174403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177734,-0.00285198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824356,-0.00495631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848465,0.00133174) , 
9, 0.0187889, 1, 0, 0.838495,-0.00981114) , 
12, 0.102035, 1, 0, 0.483323,-0.0283343) , 
6, 0.233527, 1, 0, 0.579384,-0.0174943) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6336,-0.00222577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210222,0.000493945) , 
10, 0.572259, 1, 0, 0.309656,-0.00158388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942611,0.00674668) , 
4, 0.265344, 1, 0, 0.406271,0.0067679) , 
15, 0.182139, 1, 0, 0.511286,-0.00795017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414154,0.00114487) , 
11, 1.19856, 1, 0, 0.491848,-0.0013296)    );
  // itree = 1338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973564,0.00567112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973186,-0.00554648) , 
12, 0.18865, 1, 0, 0.973352,0.000734545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964738,0.00813197) , 
6, 0.195882, 1, 0, 0.971239,0.00702162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843182,-0.00681711) , 
6, 0.256154, 1, 0, 0.945979,-0.00425303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878482,0.00303285) , 
6, 0.334975, 1, 0, 0.930025,0.00336472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52483,-0.00187857) , 
3, 0.52817, 1, 0, 0.823965,-0.00725273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339079,0.0023586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162622,0.00129411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300202,-0.000114737) , 
11, 1.08041, 1, 0, 0.223207,0.00941115) , 
15, 0.0995238, 1, 0, 0.259204,0.0192781) , 
17, 0.834179, 1, 0, 0.511941,0.00740527)    );
  // itree = 1339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988249,0.00339071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641523,-0.00642523) , 
8, 0.0220722, 1, 0, 0.838679,-0.0157959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823273,0.000164449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445887,0.0027007) , 
8, 0.0337234, 1, 0, 0.620486,0.0192006) , 
6, 0.21087, 1, 0, 0.730452,0.00156281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258574,-0.00208269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957547,0.00455567) , 
4, 0.419516, 1, 0, 0.382054,-0.0225584) , 
13, 0.738272, 1, 0, 0.549688,-0.0109523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605106,0.0033473) , 
14, 0.206664, 1, 0, 0.555498,-0.0059144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572994,0.00225726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374111,0.000302109) , 
14, 0.0392797, 1, 0, 0.417966,0.0137519) , 
13, 1.01763, 1, 0, 0.506107,0.0011482)    );
  // itree = 1340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823859,-0.00284108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892148,0.000843571) , 
7, 0.217174, 1, 0, 0.855637,-0.0103324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532009,-0.00246846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451947,-0.00383343) , 
14, 0.0562774, 1, 0, 0.492071,-0.0605342) , 
10, 0.324343, 1, 0, 0.686778,-0.0336488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942692,0.00558732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923683,-0.00206038) , 
5, 0.0374632, 1, 0, 0.932044,0.00781056) , 
12, 0.205043, 1, 0, 0.771604,-0.0193098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706062,0.00246114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174714,2.71555e-05) , 
16, 0.157626, 1, 0, 0.289057,0.00875778) , 
10, 0.533621, 1, 0, 0.560579,-0.00703547) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608144,-0.000651934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23374,0.00124216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838846,0.00420448) , 
12, 0.115304, 1, 0, 0.387241,0.0308321) , 
6, 0.218507, 1, 0, 0.436699,0.0228591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371615,-0.00110492) , 
15, 0.382189, 1, 0, 0.42388,0.0149241) , 
14, 0.102506, 1, 0, 0.504738,0.00193501)    );
  // itree = 1341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916501,-0.00575651) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700062,0.00238695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551439,-0.00193673) , 
15, 0.0349061, 1, 0, 0.635816,0.000808489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585795,0.00572896) , 
9, 0.0247514, 1, 0, 0.623745,0.01151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494439,-0.0027119) , 
9, 0.0350645, 1, 0, 0.587799,0.00154333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364409,0.00237553) , 
15, 0.178028, 1, 0, 0.523773,0.00896719) , 
13, 0.460215, 1, 0, 0.584776,0.00506905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482062,0.00341832) , 
6, 0.373271, 1, 0, 0.567467,0.0113414) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537448,-0.00234244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212635,-9.02838e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71297,0.00113647) , 
5, 0.0206088, 1, 0, 0.35129,0.00536725) , 
10, 0.43967, 1, 0, 0.403405,-0.0108514) , 
6, 0.47593, 1, 0, 0.503383,0.00267274)    );
  // itree = 1342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896822,0.000925705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76074,-0.00338453) , 
10, 0.331151, 1, 0, 0.830341,-0.01669) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664751,0.00320817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193977,-0.000147903) , 
7, 0.473744, 1, 0, 0.328527,0.0134333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813961,-0.00282761) , 
12, 0.141223, 1, 0, 0.432846,0.00388147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952649,0.00924687) , 
4, 0.400187, 1, 0, 0.528092,0.0131741) , 
16, 0.0946829, 1, 0, 0.616662,0.00442279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973988,0.00524725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390487,0.00238419) , 
3, 0.305683, 1, 0, 0.539514,0.0307275) , 
15, 0.122763, 1, 0, 0.591419,0.0130298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568098,0.0013155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151088,-9.11566e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561604,-0.00166456) , 
2, 0.0135761, 1, 0, 0.327067,-0.0141064) , 
15, 0.153734, 1, 0, 0.374249,-0.0079827) , 
9, 0.042236, 1, 0, 0.502981,0.00447294)    );
  // itree = 1343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138665,-0.000720199) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980525,0.00542422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931267,-0.0124293) , 
16, 0.0519543, 1, 0, 0.951847,-0.0140133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983862,-0.00136422) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605945,0.00359271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619486,0.00260538) , 
6, 0.248157, 1, 0, 0.612744,0.0454151) , 
3, 0.199477, 1, 0, 0.758806,0.0271064) , 
8, 0.0173064, 1, 0, 0.840575,0.00968883) , 
5, 0.00263712, 1, 0, 0.567917,0.00262425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258026,-0.000682533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755564,-0.00475351) , 
12, 0.117867, 1, 0, 0.432905,-0.0291186) , 
6, 0.383897, 1, 0, 0.529754,-0.00634832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418552,0.000853173) , 
6, 0.611911, 1, 0, 0.499031,0.000484841)    );
  // itree = 1344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464025,0.000548736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231638,-0.00156884) , 
8, 0.0277572, 1, 0, 0.29557,-0.0187784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138432,0.000468211) , 
16, 0.28316, 1, 0, 0.216437,-0.00636664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720835,0.00136433) , 
12, 0.102166, 1, 0, 0.295353,-0.00186128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777326,-0.00454263) , 
4, 0.236899, 1, 0, 0.333686,-0.00616639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934653,0.00344831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920295,-0.00249409) , 
1, 0.451892, 1, 0, 0.92597,0.00216256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917258,0.00315809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846809,0.00460654) , 
10, 0.476732, 1, 0, 0.890414,0.0409042) , 
8, 0.0170577, 1, 0, 0.909551,0.0200525) , 
4, 0.294679, 1, 0, 0.500434,0.00142557)    );
  // itree = 1345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9716,-0.00891204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983977,0.0032177) , 
4, 0.468157, 1, 0, 0.977642,-0.00370033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688602,0.00176994) , 
3, 0.318171, 1, 0, 0.82747,0.014404) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631214,-0.00198737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512442,-0.00422368) , 
14, 0.0822828, 1, 0, 0.573628,-0.0530059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859108,0.000298607) , 
2, 0.0364119, 1, 0, 0.695019,-0.0292534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62041,0.00195973) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443865,-0.00133566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216767,-0.00265319) , 
9, 0.019971, 1, 0, 0.287912,-0.0319843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184652,0.00100452) , 
16, 0.36658, 1, 0, 0.239226,-0.0110574) , 
16, 0.229429, 1, 0, 0.317728,-0.00317474) , 
16, 0.166977, 1, 0, 0.441776,-0.011749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2871,0.000351826) , 
9, 0.0599308, 1, 0, 0.40845,-0.0079253) , 
7, 0.0916155, 1, 0, 0.499265,-0.00308581)    );
  // itree = 1346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999326,0.0154541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961658,-0.00422573) , 
3, 0.148021, 1, 0, 0.983797,-0.000678971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997334,0.0178991) , 
16, 0.119142, 1, 0, 0.98792,0.00406747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875419,-0.00324251) , 
3, 0.251668, 1, 0, 0.960285,-0.00283003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647204,1.11746e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702852,0.0050419) , 
13, 0.558198, 1, 0, 0.675417,0.0326274) , 
17, 0.508375, 1, 0, 0.873188,0.00801099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168391,-0.000614609) , 
3, 0.513986, 1, 0, 0.58654,0.00110536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359077,-0.00162963) , 
13, 1.01677, 1, 0, 0.529982,-0.00562183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409236,0.000946863) , 
6, 0.650554, 1, 0, 0.500087,0.000942482)    );
  // itree = 1347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394495,0.00224609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917586,-0.0045604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997385,0.0177747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95934,-0.00456411) , 
12, 0.255292, 1, 0, 0.980249,0.00631939) , 
4, 0.287766, 1, 0, 0.963954,-0.000547088) , 
1, 0.143092, 1, 0, 0.773371,0.00768596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580682,-0.00401797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376491,0.000984838) , 
11, 0.711926, 1, 0, 0.466591,-0.0169582) , 
6, 0.320675, 1, 0, 0.671141,-0.00052633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428981,-0.00284713) , 
13, 0.946642, 1, 0, 0.619372,-0.0100203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58275,0.00345201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181629,0.000435906) , 
16, 0.211958, 1, 0, 0.295572,0.022638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416529,-0.000300078) , 
13, 1.27203, 1, 0, 0.341698,0.0113259) , 
11, 0.939654, 1, 0, 0.503039,-0.00107719)    );
  // itree = 1348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83714,0.00133797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555282,-0.00263295) , 
13, 0.746979, 1, 0, 0.666124,-0.020256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984376,0.00376422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801245,0.00495012) , 
11, 0.62839, 1, 0, 0.912953,0.0309691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592919,-0.00291673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255112,0.00275886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768887,-0.000451737) , 
5, 0.0247858, 1, 0, 0.429327,0.0247532) , 
6, 0.185873, 1, 0, 0.466007,0.0139969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591885,-0.00173245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127193,-0.000556588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530913,0.000885044) , 
2, 0.0157218, 1, 0, 0.25826,0.000583903) , 
10, 0.551168, 1, 0, 0.346037,-0.00713862) , 
9, 0.0374831, 1, 0, 0.393282,0.0011847) , 
10, 0.317606, 1, 0, 0.476402,0.00594864) , 
9, 0.0143463, 1, 0, 0.502683,0.00231865)    );
  // itree = 1349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557987,-0.00605075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591831,-0.00110269) , 
14, 0.00677138, 1, 0, 0.576783,-0.0289285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546121,0.00374267) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911233,0.00245084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501246,-0.00247458) , 
13, 0.531534, 1, 0, 0.656613,-0.0179871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220087,0.000669407) , 
11, 0.70534, 1, 0, 0.373529,-0.000123981) , 
9, 0.0202428, 1, 0, 0.403165,0.00598609) , 
14, 0.0345352, 1, 0, 0.436615,-0.000740632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345588,-0.000874474) , 
6, 0.622299, 1, 0, 0.410137,-0.00621781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968725,0.00699032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879588,-0.0029169) , 
7, 0.0862395, 1, 0, 0.921107,0.00285304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893332,0.00473464) , 
10, 0.47641, 1, 0, 0.911093,0.0190213) , 
12, 0.210496, 1, 0, 0.498443,-0.00176878)    );
  // itree = 1350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993317,0.00594515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979358,-0.0317332) , 
4, 0.43196, 1, 0, 0.987518,-0.0041873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430519,-0.00278794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338565,-0.00393272) , 
9, 0.0206301, 1, 0, 0.376327,-0.0376382) , 
3, 0.175739, 1, 0, 0.660004,-0.0221124) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919976,0.00113316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322783,0.00315549) , 
7, 0.303014, 1, 0, 0.56228,0.0258124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374899,-0.000134083) , 
14, 0.126428, 1, 0, 0.497616,0.0162992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317274,-0.00137659) , 
13, 1.00859, 1, 0, 0.44576,0.00554118) , 
6, 0.226923, 1, 0, 0.54208,-0.00689137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437064,-0.0024209) , 
6, 0.482212, 1, 0, 0.521414,-0.0139652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403563,0.000709034) , 
6, 0.683139, 1, 0, 0.495613,-0.00745151)    );
  // itree = 1351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886445,-0.00446431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700414,0.00309924) , 
13, 0.60003, 1, 0, 0.800287,0.00512642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652751,3.19037e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282844,-0.00234028) , 
16, 0.114746, 1, 0, 0.414071,-0.02535) , 
13, 0.784667, 1, 0, 0.575959,-0.0125754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938009,0.00431009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894446,-0.000808482) , 
12, 0.280058, 1, 0, 0.914546,0.00907414) , 
12, 0.212386, 1, 0, 0.676122,-0.00617092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78329,-0.0015568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340763,0.00260469) , 
11, 0.625434, 1, 0, 0.489784,0.0251617) , 
15, 0.218473, 1, 0, 0.620623,0.00316118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179753,-0.00138766) , 
17, 1.16913, 1, 0, 0.508315,-0.00384663)    );
  // itree = 1352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338359,-0.00129216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122854,0.000651549) , 
10, 0.553181, 1, 0, 0.163039,0.00237379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333588,0.00189642) , 
12, 0.067842, 1, 0, 0.206909,0.0109409) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987891,0.00308418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997597,0.0142234) , 
9, 0.0281573, 1, 0, 0.992944,0.00927302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937535,-0.0143379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969865,0.00328038) , 
8, 0.0193599, 1, 0, 0.954507,-0.0115936) , 
16, 0.0905303, 1, 0, 0.973633,-0.00121027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82873,-0.00564811) , 
3, 0.311015, 1, 0, 0.945203,-0.0109838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80891,0.00182151) , 
3, 0.438758, 1, 0, 0.912628,-0.00188678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549322,-0.00184663) , 
17, 0.78511, 1, 0, 0.809757,-0.0142577) , 
4, 0.108127, 1, 0, 0.498031,-0.00122779)    );
  // itree = 1353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903444,-0.00320364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769882,0.000910549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644461,0.00503898) , 
8, 0.0333558, 1, 0, 0.708448,0.0378138) , 
11, 0.464612, 1, 0, 0.766659,0.0217088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124864,-0.000786608) , 
17, 0.864143, 1, 0, 0.369543,0.00148613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369807,0.00122497) , 
6, 0.564894, 1, 0, 0.369636,0.0102623) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977132,0.00691382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967413,-0.0049399) , 
4, 0.4225, 1, 0, 0.971444,0.00225413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812365,-0.000612039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725353,-0.00454178) , 
9, 0.0225167, 1, 0, 0.767941,-0.0389376) , 
13, 0.885195, 1, 0, 0.885255,-0.0151917) , 
4, 0.309692, 1, 0, 0.502673,0.0036948)    );
  // itree = 1354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998592,0.0145225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990263,-0.00793868) , 
4, 0.37568, 1, 0, 0.993758,0.00147339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920687,0.00476354) , 
3, 0.186801, 1, 0, 0.968401,0.0111666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70733,-0.00384668) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267979,0.000743314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151061,-0.00168153) , 
15, 0.174167, 1, 0, 0.212617,-0.00671164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771497,-0.00359535) , 
5, 0.0226779, 1, 0, 0.336737,-0.0138557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364997,0.000703265) , 
6, 0.523754, 1, 0, 0.344819,-0.00633598) , 
8, 0.014097, 1, 0, 0.381784,-0.011084) , 
11, 0.500884, 1, 0, 0.513933,-0.00607156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441117,0.00104905) , 
11, 1.27733, 1, 0, 0.502797,-0.00143632)    );
  // itree = 1355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794947,0.00320797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574915,-0.0021203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253748,-0.00223117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240221,0.000817734) , 
6, 0.195271, 1, 0, 0.242848,0.00514518) , 
7, 0.309665, 1, 0, 0.302833,-0.00228516) , 
8, 0.0189738, 1, 0, 0.38186,0.00407159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316332,0.00213013) , 
15, 0.205821, 1, 0, 0.367131,0.0106064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300158,-0.00110799) , 
15, 0.291608, 1, 0, 0.351097,0.00363791) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989291,0.00123585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882604,-0.00648046) , 
3, 0.196664, 1, 0, 0.945648,-0.0140925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955134,0.00352163) , 
15, 0.106062, 1, 0, 0.949181,-0.00353248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671404,-0.00244091) , 
3, 0.493012, 1, 0, 0.857621,-0.0187665) , 
12, 0.157872, 1, 0, 0.497674,-0.00284544)    );
  // itree = 1356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135036,-0.00167467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324696,0.000666839) , 
12, 0.050336, 1, 0, 0.232822,-0.00453743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934215,-0.000566831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733264,-0.00528682) , 
8, 0.0261682, 1, 0, 0.847514,-0.0311321) , 
4, 0.111631, 1, 0, 0.419485,-0.0126134) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952987,-0.0049398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994543,0.0102498) , 
4, 0.392693, 1, 0, 0.97521,-0.000447402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947606,0.00674534) , 
13, 0.750828, 1, 0, 0.966067,0.0112586) , 
5, 0.0346603, 1, 0, 0.575161,-0.0058142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706331,0.00323365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234479,0.000748347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689913,-0.00107069) , 
4, 0.232269, 1, 0, 0.339669,0.00583784) , 
8, 0.0175637, 1, 0, 0.406859,0.0146484) , 
13, 0.969602, 1, 0, 0.50497,0.00271984)    );
  // itree = 1357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879313,-0.0027305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548802,0.00384795) , 
10, 0.297313, 1, 0, 0.708128,0.0146878) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887642,0.00438896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949999,-0.00255461) , 
1, 0.286735, 1, 0, 0.922257,0.0105784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903447,-0.001133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451682,-0.00335818) , 
11, 0.780052, 1, 0, 0.674038,-0.0415206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366778,-0.00274253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137355,-0.0014571) , 
16, 0.233727, 1, 0, 0.188332,-0.025221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272692,0.000442834) , 
11, 1.04179, 1, 0, 0.219587,-0.0129656) , 
7, 0.261002, 1, 0, 0.381704,-0.023152) , 
10, 0.299055, 1, 0, 0.472488,-0.0174871) , 
15, 0.0228712, 1, 0, 0.511684,-0.0121352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511155,-0.000151305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317523,0.00113597) , 
6, 0.280035, 1, 0, 0.369957,0.014363) , 
15, 0.291608, 1, 0, 0.485279,-0.00719847)    );
  // itree = 1358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941484,-0.00512641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866946,0.00431572) , 
6, 0.205911, 1, 0, 0.908341,0.00710875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44202,-0.00536728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281049,-0.000294461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669429,-0.00276671) , 
12, 0.132294, 1, 0, 0.397718,-0.020034) , 
11, 0.890642, 1, 0, 0.408448,-0.0318551) , 
11, 0.733699, 1, 0, 0.616049,-0.0156737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925563,0.00355081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740146,-0.00437577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300825,-0.000327932) , 
16, 0.135721, 1, 0, 0.483539,-0.0233798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205261,0.000374011) , 
10, 0.687307, 1, 0, 0.32438,-0.00689931) , 
10, 0.437767, 1, 0, 0.45717,-0.00126179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362182,0.0014541) , 
13, 1.05809, 1, 0, 0.427687,0.00815351) , 
14, 0.0679021, 1, 0, 0.502796,-0.0013475)    );
  // itree = 1359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754062,-0.00162091) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36456,0.00247611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890484,0.000587648) , 
4, 0.215138, 1, 0, 0.590932,0.0224501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424839,-0.00144252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836648,0.00335114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250589,-0.00116094) , 
7, 0.231887, 1, 0, 0.403565,-0.0040369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272059,0.0014947) , 
11, 0.930586, 1, 0, 0.339052,0.0111653) , 
14, 0.0738721, 1, 0, 0.357343,0.00407131) , 
15, 0.0749747, 1, 0, 0.429391,0.00974005) , 
7, 0.0459085, 1, 0, 0.462018,0.0068965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86451,-0.00279213) , 
5, 0.0548723, 1, 0, 0.505583,0.00365757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372692,-0.00288249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560221,-0.000646098) , 
14, 0.256847, 1, 0, 0.452249,-0.0286986) , 
14, 0.188019, 1, 0, 0.49899,-0.000342141)    );
  // itree = 1360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930104,-0.00344701) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949741,0.00435361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77374,-0.0020395) , 
13, 0.730014, 1, 0, 0.875551,-0.000224541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712257,0.00271261) , 
13, 0.979759, 1, 0, 0.831385,0.0115632) , 
10, 0.28889, 1, 0, 0.8636,0.00334018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229905,-0.00359759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833803,-0.00104482) , 
2, 0.0235183, 1, 0, 0.38994,-0.0350705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261834,0.00121258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199298,-0.00185417) , 
14, 0.132269, 1, 0, 0.228665,-0.00692531) , 
14, 0.083275, 1, 0, 0.300018,-0.0193777) , 
7, 0.231312, 1, 0, 0.53582,-0.00987257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243923,-6.59053e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741023,0.00240691) , 
1, 0.199157, 1, 0, 0.378501,0.0124666) , 
11, 1.10569, 1, 0, 0.494606,-0.00402024)    );
  // itree = 1361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77703,-0.00490725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98229,0.00490107) , 
12, 0.131176, 1, 0, 0.903274,-0.00996671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225533,0.00222489) , 
10, 0.526187, 1, 0, 0.641185,0.00499409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439952,-0.00250095) , 
9, 0.042236, 1, 0, 0.57838,-0.00525491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582945,0.0032419) , 
6, 0.392936, 1, 0, 0.579098,0.00185402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407545,-0.0019867) , 
6, 0.501014, 1, 0, 0.531022,-0.00908251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259363,0.000587462) , 
3, 0.809644, 1, 0, 0.438244,-0.002165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500918,0.00212138) , 
14, 0.189442, 1, 0, 0.445623,0.00142175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821987,-0.00637917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897878,0.000595635) , 
12, 0.324826, 1, 0, 0.857679,-0.0287835) , 
12, 0.247784, 1, 0, 0.499145,-0.00250163)    );
  // itree = 1362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481368,-0.00214249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165637,0.00150375) , 
13, 0.599994, 1, 0, 0.207208,0.0152422) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993174,0.000864862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990379,0.00973249) , 
6, 0.150941, 1, 0, 0.991917,0.00663055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930682,-0.00664646) , 
11, 0.489141, 1, 0, 0.972323,-0.0020945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73149,0.00217789) , 
3, 0.310251, 1, 0, 0.912635,0.00606027) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669071,0.000843679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804647,-0.00221102) , 
5, 0.0457269, 1, 0, 0.723425,-0.0013616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452286,-0.00166619) , 
8, 0.0257753, 1, 0, 0.573651,-0.0214504) , 
13, 0.85369, 1, 0, 0.734364,-0.00840755) , 
2, 0.0152423, 1, 0, 0.50107,0.00205869)    );
  // itree = 1363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967655,-0.00174092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972289,0.00657987) , 
11, 0.414416, 1, 0, 0.969605,0.00617403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958224,-0.00929122) , 
1, 0.529098, 1, 0, 0.966697,0.000317926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649411,-0.00162587) , 
17, 0.478831, 1, 0, 0.890727,-0.00589445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719316,0.00183784) , 
13, 0.945374, 1, 0, 0.852789,0.00146185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417665,-0.00183783) , 
11, 1.05853, 1, 0, 0.741231,-0.0100249) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160449,-0.000701454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192602,0.0013604) , 
6, 0.353254, 1, 0, 0.174833,0.00441333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52795,0.00286925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740758,0.00216826) , 
5, 0.0292635, 1, 0, 0.63469,0.0412276) , 
5, 0.0181055, 1, 0, 0.27156,0.0121569) , 
7, 0.309404, 1, 0, 0.50351,0.00120226)    );
  // itree = 1364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745973,0.00334642) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984783,0.00589032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937524,-0.00706661) , 
8, 0.00864459, 1, 0, 0.961438,-0.00468991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732596,0.00206451) , 
6, 0.353589, 1, 0, 0.870825,0.010114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812802,-0.00064411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28658,-0.00228609) , 
13, 0.668925, 1, 0, 0.504845,-0.0223167) , 
7, 0.194084, 1, 0, 0.727324,-0.00260209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381622,-0.00168482) , 
11, 1.05397, 1, 0, 0.640899,-0.0113075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279332,-0.000669545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209398,0.00101212) , 
14, 0.0721996, 1, 0, 0.231839,0.00739028) , 
8, 0.0446794, 1, 0, 0.469726,-0.00348335) , 
9, 0.00815817, 1, 0, 0.494265,-0.000357636)    );
  // itree = 1365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981813,-0.00626047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978798,0.00841701) , 
10, 0.347726, 1, 0, 0.980456,0.00269168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880901,0.00449228) , 
11, 0.515681, 1, 0, 0.9548,0.00809933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768499,-0.00458552) , 
6, 0.284865, 1, 0, 0.908415,-0.00550155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731698,0.00516958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640257,-0.00125406) , 
11, 0.917648, 1, 0, 0.683719,0.0178841) , 
11, 0.730054, 1, 0, 0.838878,0.00173561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653214,0.00294342) , 
9, 0.0563147, 1, 0, 0.801029,0.0105307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283502,0.00068638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180687,-0.000909236) , 
15, 0.136145, 1, 0, 0.224089,-0.00397657) , 
17, 0.893613, 1, 0, 0.501271,0.00299325)    );
  // itree = 1366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28531,-0.00135138) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972844,-0.000155278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955896,0.00640208) , 
16, 0.10232, 1, 0, 0.964611,0.0100614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753238,-0.00208433) , 
6, 0.336941, 1, 0, 0.884726,-0.00540546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970843,-0.000124323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834041,0.00448645) , 
11, 0.542807, 1, 0, 0.90018,0.0323226) , 
9, 0.02681, 1, 0, 0.890747,0.00929472) , 
12, 0.0865915, 1, 0, 0.756732,0.00228552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246417,-0.00154778) , 
8, 0.0444793, 1, 0, 0.57042,-0.00694862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229989,0.0005085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833402,0.00418107) , 
2, 0.0232785, 1, 0, 0.372666,0.0199681) , 
9, 0.0488357, 1, 0, 0.504327,0.00204744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340425,-0.00301882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633,0.000103244) , 
14, 0.249136, 1, 0, 0.435462,-0.0310361) , 
14, 0.168066, 1, 0, 0.492665,-0.00355504)    );
  // itree = 1367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976919,0.0041605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735231,0.00282775) , 
11, 0.662514, 1, 0, 0.88628,0.0232214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674318,-0.00123106) , 
7, 0.253391, 1, 0, 0.8258,0.0117007) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362093,-0.00269825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911198,0.00108299) , 
4, 0.174053, 1, 0, 0.569596,-0.0253925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351171,0.000553936) , 
11, 0.868932, 1, 0, 0.466329,-0.00773899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975859,0.00227923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672157,-0.00408925) , 
13, 0.828447, 1, 0, 0.805991,-0.0407278) , 
5, 0.0380336, 1, 0, 0.550332,-0.0158976) , 
9, 0.0203954, 1, 0, 0.632287,-0.00768678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260768,0.00184971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165288,5.1218e-06) , 
16, 0.381462, 1, 0, 0.214225,0.0132791) , 
16, 0.278488, 1, 0, 0.499567,-0.00103084)    );
  // itree = 1368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288889,-0.00154165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187626,0.000443157) , 
6, 0.19892, 1, 0, 0.214787,-4.63018e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248578,0.0013429) , 
6, 0.405798, 1, 0, 0.231213,0.0122564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57544,-0.00267703) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776834,0.000892847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775541,-0.00494103) , 
4, 0.252717, 1, 0, 0.776255,-0.0203276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920808,0.00489984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938261,0.00155794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849612,-0.00404198) , 
7, 0.104945, 1, 0, 0.89329,-0.0122804) , 
4, 0.378828, 1, 0, 0.902775,0.00607882) , 
4, 0.309108, 1, 0, 0.847859,-0.00538293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938711,0.00678192) , 
12, 0.292138, 1, 0, 0.861611,0.00291436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885545,-0.00509974) , 
4, 0.582627, 1, 0, 0.864775,-0.0014175) , 
4, 0.184071, 1, 0, 0.827941,-0.00868334) , 
4, 0.135267, 1, 0, 0.497981,0.0028953)    );
  // itree = 1369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97319,-0.0112624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960373,0.00614006) , 
6, 0.145849, 1, 0, 0.966407,0.00642709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883887,-0.000818869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49078,-0.00398484) , 
15, 0.150115, 1, 0, 0.717714,-0.0308781) , 
11, 0.480102, 1, 0, 0.845305,-0.0117388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684039,0.00280811) , 
11, 0.720161, 1, 0, 0.814238,-0.00219437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553462,-0.00224486) , 
11, 0.895828, 1, 0, 0.763502,-0.0101724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303723,0.0013505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195013,2.00373e-05) , 
15, 0.121426, 1, 0, 0.23577,0.00908303) , 
17, 0.89901, 1, 0, 0.49701,-0.0004489)    );
  // itree = 1370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990662,0.00643491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953273,-0.0148219) , 
10, 0.19826, 1, 0, 0.972318,-0.00922567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816913,0.00901424) , 
10, 0.361125, 1, 0, 0.919535,0.00944943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767837,-0.0050004) , 
14, 0.138141, 1, 0, 0.883252,0.000108045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671426,-0.00467647) , 
6, 0.257932, 1, 0, 0.835492,-0.00974899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673169,0.00134337) , 
6, 0.365407, 1, 0, 0.801939,-0.00410378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830076,-0.00722341) , 
13, 0.870881, 1, 0, 0.805759,-0.0112718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513904,0.00198261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130831,-8.35132e-05) , 
16, 0.213539, 1, 0, 0.25035,0.0115792) , 
3, 0.555651, 1, 0, 0.523245,0.000351594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388749,-0.00104457) , 
11, 1.2673, 1, 0, 0.501238,-0.00378288)    );
  // itree = 1371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403973,0.00195967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119764,0.000113824) , 
10, 0.583085, 1, 0, 0.185074,0.00871068) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994791,0.000142413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998373,0.017797) , 
6, 0.11078, 1, 0, 0.99698,0.00430453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902901,-0.00514045) , 
3, 0.172643, 1, 0, 0.957241,-0.00809351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857121,0.00227336) , 
6, 0.353329, 1, 0, 0.931188,0.000650975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625685,-0.00250428) , 
17, 0.772124, 1, 0, 0.886431,-0.00622315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545072,-0.00119893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463406,-0.00240881) , 
15, 0.194405, 1, 0, 0.498187,-0.0379434) , 
10, 0.60746, 1, 0, 0.782894,-0.0146822) , 
12, 0.0701653, 1, 0, 0.55466,-0.00575137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295797,0.00105544) , 
3, 0.875486, 1, 0, 0.497916,9.7963e-05)    );
  // itree = 1372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970577,0.00336945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952383,-0.00590516) , 
9, 0.0184635, 1, 0, 0.960617,-0.00446695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87884,-0.00739545) , 
10, 0.272461, 1, 0, 0.931216,-0.0180213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937923,0.00323639) , 
10, 0.37556, 1, 0, 0.933087,-0.00896467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700028,0.0026612) , 
17, 0.617699, 1, 0, 0.870683,0.00416683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22939,-0.00391522) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108689,-0.00104241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616284,0.00172978) , 
2, 0.0142054, 1, 0, 0.252943,-0.0018861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282266,-0.00171382) , 
6, 0.391937, 1, 0, 0.263912,-0.0115811) , 
15, 0.060713, 1, 0, 0.258155,-0.0186389) , 
10, 0.517672, 1, 0, 0.516011,-0.00903836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387604,0.000532409) , 
6, 0.713896, 1, 0, 0.489284,-0.00465389)    );
  // itree = 1373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340091,-0.00139527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279439,0.00148857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0948749,-0.000504803) , 
10, 0.646547, 1, 0, 0.139142,0.000674358) , 
7, 0.389606, 1, 0, 0.194878,-0.00747738) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974332,-0.0207903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996225,0.00964492) , 
9, 0.0175983, 1, 0, 0.98796,-0.00273222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86262,0.00407052) , 
3, 0.195185, 1, 0, 0.944734,0.00945523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889942,0.000300392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685621,-0.00307149) , 
8, 0.0187573, 1, 0, 0.781457,-0.0212539) , 
6, 0.287637, 1, 0, 0.88745,-0.00131874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689323,0.00128916) , 
6, 0.52392, 1, 0, 0.822328,0.00812914) , 
12, 0.0884941, 1, 0, 0.494928,-1.42701e-05)    );
  // itree = 1374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981052,0.00517587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872415,-0.00411653) , 
6, 0.201056, 1, 0, 0.939173,-0.00656896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8864,0.00444086) , 
15, 0.126978, 1, 0, 0.920536,0.00477802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837679,-0.0034078) , 
13, 0.854252, 1, 0, 0.90139,-0.00376248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421606,0.00126277) , 
3, 0.612484, 1, 0, 0.719908,0.00741723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174378,-0.000581708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607174,-0.00372419) , 
2, 0.0261314, 1, 0, 0.240221,-0.0188279) , 
8, 0.0407727, 1, 0, 0.519529,-0.00354615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32141,-0.00216513) , 
15, 0.323803, 1, 0, 0.491335,-0.0081721)    );
  // itree = 1375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603341,-0.00178141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936808,-0.00469833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956628,-0.000431384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941735,0.00468448) , 
10, 0.368052, 1, 0, 0.948401,0.0150717) , 
9, 0.0264715, 1, 0, 0.943153,0.00106021) , 
12, 0.122789, 1, 0, 0.843966,-0.0077112) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27497,0.000491895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64725,-0.00127006) , 
5, 0.0128977, 1, 0, 0.436564,-0.00340281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926495,0.0069646) , 
2, 0.0212224, 1, 0, 0.622914,0.0157782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47479,0.00296767) , 
11, 0.965763, 1, 0, 0.580627,0.0263578) , 
7, 0.202164, 1, 0, 0.71784,0.00860615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121101,-0.000747342) , 
7, 0.606526, 1, 0, 0.518235,0.00229541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392827,-0.0014541) , 
13, 1.27608, 1, 0, 0.497367,-0.0037608)    );
  // itree = 1376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660408,-0.00564751) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964913,0.00279821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919089,-0.00741196) , 
7, 0.100298, 1, 0, 0.942475,-0.00940552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944798,0.00635106) , 
10, 0.383093, 1, 0, 0.943267,0.00668208) , 
2, 0.0263309, 1, 0, 0.877722,-0.00952784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709429,0.00399808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336444,0.000805721) , 
8, 0.0468659, 1, 0, 0.482159,0.0217631) , 
8, 0.0334287, 1, 0, 0.720679,0.00289505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292278,-0.00117012) , 
3, 0.756598, 1, 0, 0.570237,-0.00626436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848274,0.00543327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204477,0.000439514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75343,0.003557) , 
5, 0.0192408, 1, 0, 0.335793,0.0187057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33755,-0.00162421) , 
14, 0.169737, 1, 0, 0.33643,0.00232848) , 
8, 0.0148264, 1, 0, 0.41792,0.00990449) , 
14, 0.100578, 1, 0, 0.505655,0.000591199)    );
  // itree = 1377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232039,-0.000522873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22878,0.00190205) , 
6, 0.256193, 1, 0, 0.229864,0.0186802) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912103,0.000876093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856967,-0.00354809) , 
10, 0.344196, 1, 0, 0.887565,-0.00918613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888883,0.00308871) , 
9, 0.0299511, 1, 0, 0.888082,0.00508676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729526,-0.00232216) , 
9, 0.0492754, 1, 0, 0.845603,-0.00526055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832583,0.00330405) , 
7, 0.2168, 1, 0, 0.842727,0.00391852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55673,-0.00246604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467731,-0.00178358) , 
16, 0.274507, 1, 0, 0.512649,-0.0367377) , 
7, 0.356673, 1, 0, 0.773535,-0.00460394) , 
12, 0.0707953, 1, 0, 0.598456,0.00289429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187828,-0.000885707) , 
17, 1.19877, 1, 0, 0.505281,-0.00130447)    );
  // itree = 1378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745657,0.00411413) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412352,0.00300643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155532,0.00051902) , 
11, 0.761653, 1, 0, 0.214252,0.0148808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564373,-0.00315227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923648,0.00179696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825951,-0.00299818) , 
16, 0.111313, 1, 0, 0.883471,-0.00631556) , 
12, 0.141734, 1, 0, 0.766227,-0.0247774) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907972,0.00391211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705798,-0.0027972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659664,-0.000326826) , 
16, 0.107618, 1, 0, 0.682572,-0.0241142) , 
8, 0.0149101, 1, 0, 0.770648,-0.00320517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519048,0.0022428) , 
16, 0.174929, 1, 0, 0.695427,0.00972241) , 
14, 0.0656997, 1, 0, 0.724709,-0.00454632) , 
5, 0.0154911, 1, 0, 0.486822,0.00450724) , 
9, 0.0113616, 1, 0, 0.511942,0.00767604)    );
  // itree = 1379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99905,0.0170814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967043,-0.0110293) , 
6, 0.155051, 1, 0, 0.98627,-0.00236002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955241,0.00615752) , 
3, 0.208984, 1, 0, 0.975363,0.00858294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62141,-0.00192828) , 
3, 0.394794, 1, 0, 0.843374,-0.00748203) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517011,0.00208785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914036,-0.00252581) , 
5, 0.0265651, 1, 0, 0.658064,0.0136491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516448,0.00262882) , 
13, 0.881456, 1, 0, 0.600751,0.0270846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129338,-0.000467848) , 
7, 0.624878, 1, 0, 0.376444,0.0110952) , 
8, 0.0224822, 1, 0, 0.560038,0.00379075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252718,-0.00130945) , 
3, 0.875486, 1, 0, 0.492166,-0.00299243)    );
  // itree = 1380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965254,0.00459452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820752,-0.00441598) , 
6, 0.137395, 1, 0, 0.902651,-0.00461997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750708,0.00540272) , 
6, 0.200211, 1, 0, 0.848985,0.0105143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528261,-0.00161107) , 
6, 0.319104, 1, 0, 0.776018,0.00314808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502014,-0.00295141) , 
13, 0.666472, 1, 0, 0.699557,-0.00647128) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664273,0.00481291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428053,-0.00203271) , 
15, 0.0527732, 1, 0, 0.530306,0.00117621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30846,0.00239962) , 
15, 0.141664, 1, 0, 0.412599,0.0194217) , 
13, 0.755344, 1, 0, 0.568079,0.00539233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459486,-7.42172e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300236,-0.00155235) , 
9, 0.0378803, 1, 0, 0.379136,-0.0163544) , 
13, 1.01376, 1, 0, 0.497458,-0.00273586)    );
  // itree = 1381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599524,-0.00269866) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999064,0.0211066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989288,-0.00488046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955771,-0.0163888) , 
7, 0.112575, 1, 0, 0.973526,-0.0121746) , 
14, 0.0287235, 1, 0, 0.981744,-0.00493669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929365,0.00505692) , 
3, 0.231121, 1, 0, 0.968669,0.00486502) , 
12, 0.0912229, 1, 0, 0.88208,-0.00394569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865653,-0.00724117) , 
13, 0.785162, 1, 0, 0.87908,-0.0111932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398857,-0.000920327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496128,0.00215059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221004,0.000823806) , 
8, 0.0352554, 1, 0, 0.305353,0.0224805) , 
14, 0.0472577, 1, 0, 0.325864,0.0139613) , 
3, 0.46837, 1, 0, 0.512394,0.00547982)    );
  // itree = 1382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502834,-0.00251934) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941647,0.00303732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844012,-0.00432989) , 
8, 0.0153231, 1, 0, 0.901642,-0.00636608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794591,0.00162133) , 
8, 0.0289444, 1, 0, 0.875305,0.00105562) , 
5, 0.027079, 1, 0, 0.770445,-0.0130342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691073,0.00154309) , 
15, 0.178769, 1, 0, 0.754457,-0.00551316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573226,-0.00268203) , 
15, 0.26053, 1, 0, 0.717262,-0.0130812) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210857,0.000949172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779447,-0.00292013) , 
12, 0.098909, 1, 0, 0.411331,-0.00327062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355198,0.00377081) , 
14, 0.0753337, 1, 0, 0.391365,0.0157919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205439,-0.000626336) , 
15, 0.202377, 1, 0, 0.321824,0.0062064) , 
16, 0.149679, 1, 0, 0.495408,-0.00226023)    );
  // itree = 1383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163958,0.00147389) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870089,-0.00257095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463645,0.00163733) , 
13, 0.790911, 1, 0, 0.632164,0.0129241) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619833,-0.00133695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703652,0.00330918) , 
7, 0.104354, 1, 0, 0.652157,0.00365865) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393139,-0.00322509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248992,-0.0012774) , 
11, 0.857769, 1, 0, 0.295258,-0.0342847) , 
8, 0.0277572, 1, 0, 0.417776,-0.0212594) , 
9, 0.0302976, 1, 0, 0.483094,-0.0108446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841612,-0.00848837) , 
4, 0.46975, 1, 0, 0.511201,-0.0146953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957192,-0.00536394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857313,0.00400862) , 
6, 0.296235, 1, 0, 0.90895,0.0193475) , 
2, 0.0464733, 1, 0, 0.587561,-0.00815976) , 
12, 0.0525379, 1, 0, 0.499978,-0.00273776)    );
  // itree = 1384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787648,0.00600647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278077,0.000212237) , 
11, 0.663844, 1, 0, 0.478352,0.0185018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962018,0.00465254) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980985,-0.00754005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979789,0.00802152) , 
17, 0.203721, 1, 0, 0.980384,0.00422217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932657,-0.0091725) , 
16, 0.101035, 1, 0, 0.962197,-0.00652918) , 
4, 0.282394, 1, 0, 0.962154,-0.00116866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722135,-0.00376249) , 
3, 0.419592, 1, 0, 0.91709,-0.0113583) , 
2, 0.0182908, 1, 0, 0.765008,-0.00100772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529078,-0.00327919) , 
6, 0.52098, 1, 0, 0.725012,-0.0106981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393329,0.00161365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158181,-0.000178318) , 
10, 0.69896, 1, 0, 0.272561,0.0146476) , 
3, 0.648512, 1, 0, 0.504263,0.00166794)    );
  // itree = 1385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298997,-0.00192614) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984217,-0.00267664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911556,-0.00659893) , 
6, 0.192371, 1, 0, 0.953509,-0.0130201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950734,0.00317562) , 
9, 0.038618, 1, 0, 0.952678,-0.00472936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824362,-0.00486409) , 
17, 0.50505, 1, 0, 0.925472,-0.0131395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758557,0.00420156) , 
17, 0.677833, 1, 0, 0.894943,0.00126486) , 
12, 0.0707953, 1, 0, 0.739747,-0.00668221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893825,-0.0164336) , 
5, 0.0576089, 1, 0, 0.757507,-0.0125168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176015,0.00029085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68096,0.00168276) , 
2, 0.0210614, 1, 0, 0.285073,0.0120395) , 
3, 0.612484, 1, 0, 0.504898,0.000613325)    );
  // itree = 1386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948464,0.000673047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929864,-0.00802307) , 
16, 0.0976705, 1, 0, 0.940396,-0.00836456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532087,-0.00378017) , 
17, 0.560586, 1, 0, 0.78548,-0.0298894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335985,-6.73712e-05) , 
8, 0.0393231, 1, 0, 0.635805,-0.0202807) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733597,0.000110564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866819,0.00368802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639211,0.00324168) , 
16, 0.0977491, 1, 0, 0.739969,0.042917) , 
14, 0.0657265, 1, 0, 0.737657,0.0278111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637847,-0.00107613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387702,0.000530161) , 
7, 0.153588, 1, 0, 0.489439,-0.000682176) , 
9, 0.049669, 1, 0, 0.599017,0.0118964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150926,-0.00115064) , 
16, 0.262393, 1, 0, 0.436778,0.00209129) , 
9, 0.0285536, 1, 0, 0.505528,-0.00563671)    );
  // itree = 1387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937553,0.00214168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521575,-0.00139311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375383,-0.00297617) , 
16, 0.0909615, 1, 0, 0.455996,-0.0399938) , 
13, 0.605191, 1, 0, 0.605491,-0.024925) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975889,0.00240079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864199,0.00318156) , 
17, 0.34692, 1, 0, 0.931254,0.018633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859581,-0.00121427) , 
8, 0.0170621, 1, 0, 0.907298,0.00855906) , 
2, 0.0335331, 1, 0, 0.770196,-0.00665173) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707584,-9.53093e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48616,0.00260745) , 
16, 0.160133, 1, 0, 0.584312,0.0198605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382284,-0.00123615) , 
15, 0.166565, 1, 0, 0.533185,0.00982106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337375,0.00253061) , 
9, 0.0488357, 1, 0, 0.447885,0.0250124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120218,-0.00064134) , 
16, 0.344487, 1, 0, 0.3484,0.0149699) , 
8, 0.0241714, 1, 0, 0.506,0.00689116)    );
  // itree = 1388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670241,-0.00517116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653943,-0.00105078) , 
7, 0.047649, 1, 0, 0.662608,-0.0459172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936742,0.00301195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898409,-0.00284922) , 
14, 0.0638874, 1, 0, 0.918726,-0.000474384) , 
12, 0.192955, 1, 0, 0.776498,-0.0257097) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437929,-0.0020465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302493,-0.00220552) , 
16, 0.183928, 1, 0, 0.363132,-0.0346088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121178,3.49412e-07) , 
7, 0.530338, 1, 0, 0.198545,-0.0110634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979137,0.000494311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896796,-0.00803111) , 
11, 0.508852, 1, 0, 0.939906,-0.0168631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752771,0.00274389) , 
3, 0.340881, 1, 0, 0.861917,0.00898608) , 
12, 0.101738, 1, 0, 0.419233,-0.00439342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373203,0.000932162) , 
11, 1.10629, 1, 0, 0.406047,0.00227599) , 
16, 0.0886631, 1, 0, 0.49356,-0.00433519)    );
  // itree = 1389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971559,-0.00429302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965807,0.00805906) , 
11, 0.409414, 1, 0, 0.968965,0.00733843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826932,-0.003144) , 
16, 0.179061, 1, 0, 0.924549,-0.00110665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629828,0.00339516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404668,0.00105382) , 
3, 0.477872, 1, 0, 0.481211,0.0284995) , 
3, 0.36004, 1, 0, 0.697776,0.0140372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123553,-0.00145905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313449,-4.0201e-05) , 
13, 1.09035, 1, 0, 0.219699,-0.0109315) , 
3, 0.633196, 1, 0, 0.427388,-8.44358e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941746,0.00233136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78639,-0.00506359) , 
8, 0.0165264, 1, 0, 0.861296,-0.0249566) , 
2, 0.0451316, 1, 0, 0.498207,-0.00414383)    );
  // itree = 1390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951071,-0.00976825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804442,0.00179131) , 
17, 0.435258, 1, 0, 0.871377,0.00238166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825928,-0.00616088) , 
15, 0.0815018, 1, 0, 0.855306,-0.015821) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334581,-0.00161404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935979,0.00242713) , 
2, 0.0207432, 1, 0, 0.653668,-0.00398938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73233,0.000869747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59366,0.00391374) , 
16, 0.0875095, 1, 0, 0.644472,0.0481465) , 
6, 0.294576, 1, 0, 0.648492,0.0253557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201708,0.000373267) , 
17, 0.993533, 1, 0, 0.403071,0.0148133) , 
10, 0.34858, 1, 0, 0.522529,0.00672122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360902,-0.00205367) , 
15, 0.378182, 1, 0, 0.507817,0.00308936)    );
  // itree = 1391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62591,-0.00499895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971226,-0.01224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96419,0.00474926) , 
17, 0.2758, 1, 0, 0.967514,0.000386796) , 
12, 0.140331, 1, 0, 0.848286,-0.0149769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385613,0.00214191) , 
11, 0.822835, 1, 0, 0.710226,-0.00210242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451807,-0.00240917) , 
13, 1.06711, 1, 0, 0.630787,-0.0168639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860614,-0.00142907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728353,0.00431633) , 
10, 0.358759, 1, 0, 0.798382,0.0244482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339294,0.00169244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251409,-0.00187742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292499,0.000107051) , 
13, 0.908983, 1, 0, 0.277185,-0.00996268) , 
6, 0.249722, 1, 0, 0.290625,-0.00375702) , 
10, 0.488809, 1, 0, 0.434727,0.00424764) , 
9, 0.027377, 1, 0, 0.501179,-0.00290792)    );
  // itree = 1392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998389,0.0134144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987709,0.00964898) , 
6, 0.126375, 1, 0, 0.992987,0.0118421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900524,-0.00540749) , 
17, 0.280638, 1, 0, 0.948767,-0.00775325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653267,0.00142029) , 
11, 0.719593, 1, 0, 0.84219,0.00502875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769346,0.00244786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172531,-0.00090945) , 
3, 0.477868, 1, 0, 0.285551,-0.0078253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725237,-0.00482316) , 
5, 0.0339708, 1, 0, 0.347423,-0.0158411) , 
7, 0.243504, 1, 0, 0.576821,-0.00616484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231566,8.86202e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857187,0.00336581) , 
4, 0.186657, 1, 0, 0.380376,0.0113868) , 
9, 0.0508431, 1, 0, 0.511478,-0.000326675)    );
  // itree = 1393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363384,-0.00347901) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963428,-0.00458941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991201,0.00808182) , 
4, 0.448812, 1, 0, 0.976558,0.00035147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87851,-0.000550095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850595,-0.0111197) , 
1, 0.374483, 1, 0, 0.865011,-0.033745) , 
11, 0.43823, 1, 0, 0.92045,-0.016799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913901,0.00591708) , 
16, 0.204641, 1, 0, 0.919361,-0.00860425) , 
4, 0.0719469, 1, 0, 0.826566,-0.016175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53224,0.00129694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111157,0.000659711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376323,-0.00112568) , 
4, 0.0500234, 1, 0, 0.200849,-0.00317244) , 
16, 0.139772, 1, 0, 0.294446,0.00570791) , 
3, 0.529276, 1, 0, 0.505201,-0.00295916)    );
  // itree = 1394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895404,-2.80991e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74147,-0.00593664) , 
14, 0.0861099, 1, 0, 0.823212,-0.0298039) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955603,-0.0142116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947638,0.00544404) , 
6, 0.14066, 1, 0, 0.951079,0.00237017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172611,-0.00322527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222242,-0.00108236) , 
14, 0.080512, 1, 0, 0.200976,-0.0249794) , 
10, 0.485968, 1, 0, 0.517735,-0.01343) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339414,-0.000957695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166727,0.00104285) , 
10, 0.647952, 1, 0, 0.24033,0.00108163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810431,0.000158624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754531,0.00280035) , 
6, 0.518614, 1, 0, 0.777126,0.0337623) , 
2, 0.0224073, 1, 0, 0.397527,0.0106519) , 
6, 0.282859, 1, 0, 0.440861,0.00197072) , 
7, 0.0459085, 1, 0, 0.493606,-0.00241258)    );
  // itree = 1395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976179,0.00222545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843631,-0.00577466) , 
13, 0.57108, 1, 0, 0.909983,-0.0162317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991599,0.00998492) , 
2, 0.0466934, 1, 0, 0.941743,-0.00427029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700321,-0.00135639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189971,0.00117571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816646,0.00363196) , 
12, 0.0842663, 1, 0, 0.438972,0.0283584) , 
9, 0.0161212, 1, 0, 0.487405,0.0209072) , 
11, 0.552676, 1, 0, 0.666776,0.0109672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446161,-0.00139578) , 
15, 0.348333, 1, 0, 0.639571,0.00710416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593069,0.000562884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108028,-0.00133331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542284,-0.00197723) , 
0, 0.0865447, 1, 0, 0.230811,-0.027798) , 
10, 0.466995, 1, 0, 0.315659,-0.0183822) , 
11, 0.939654, 1, 0, 0.500713,-0.00382159)    );
  // itree = 1396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582318,-3.46697e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860453,-0.00465122) , 
4, 0.283288, 1, 0, 0.689221,-0.0147462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488479,-0.00447264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484225,-0.000377933) , 
7, 0.268846, 1, 0, 0.486544,-0.0499192) , 
7, 0.172026, 1, 0, 0.613372,-0.0279093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947161,0.0043398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827705,-0.0011071) , 
10, 0.433335, 1, 0, 0.901751,0.00815497) , 
2, 0.0402769, 1, 0, 0.710281,-0.0157899) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761173,0.00337081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222299,-0.00101373) , 
13, 0.61777, 1, 0, 0.384726,-0.00427281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246457,0.00148886) , 
11, 0.916511, 1, 0, 0.314248,0.00995155) , 
16, 0.157626, 1, 0, 0.497962,-0.00198953)    );
  // itree = 1397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968681,-0.00869528) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939425,0.000318059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952889,0.0067459) , 
9, 0.0195601, 1, 0, 0.946296,0.00995408) , 
10, 0.228374, 1, 0, 0.954302,0.0022718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899248,0.00570452) , 
6, 0.274639, 1, 0, 0.939987,0.0119233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.809347,-0.00283978) , 
9, 0.0433742, 1, 0, 0.909985,0.00448189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578074,0.00314932) , 
10, 0.647128, 1, 0, 0.859665,0.00995256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453632,-0.00210703) , 
11, 0.815753, 1, 0, 0.797181,0.00355906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600219,0.00166985) , 
6, 0.500259, 1, 0, 0.743385,0.0117764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253551,0.000261175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148078,-0.00164001) , 
15, 0.145804, 1, 0, 0.196436,-0.0124926) , 
17, 0.965807, 1, 0, 0.49382,0.000702768)    );
  // itree = 1398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982197,0.00600433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900996,-0.0135441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90998,0.000930501) , 
13, 0.712646, 1, 0, 0.905179,-0.0241467) , 
13, 0.549239, 1, 0, 0.932882,-0.0128684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818807,0.00275567) , 
10, 0.380223, 1, 0, 0.901019,-0.00378478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354796,-0.00363199) , 
10, 0.554039, 1, 0, 0.786557,-0.0128669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242962,0.000676411) , 
8, 0.0444022, 1, 0, 0.587138,-0.00483891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575957,0.00203485) , 
14, 0.17222, 1, 0, 0.585157,-8.09157e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762104,-0.00773063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394079,-8.67048e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248482,-0.00121751) , 
15, 0.128895, 1, 0, 0.313234,-0.0140899) , 
3, 0.62713, 1, 0, 0.370304,-0.0237303) , 
13, 0.965929, 1, 0, 0.493799,-0.0100951)    );
  // itree = 1399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296529,-0.00320307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844056,0.00355965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856561,-0.00311102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928562,0.00292596) , 
2, 0.0532953, 1, 0, 0.886815,-0.00818859) , 
2, 0.0341056, 1, 0, 0.873963,0.00492985) , 
2, 0.0168055, 1, 0, 0.750055,-0.00615304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309499,0.00173635) , 
8, 0.0495589, 1, 0, 0.61459,0.00425083) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796411,0.000198142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650124,-0.00256809) , 
10, 0.467594, 1, 0, 0.728387,-0.0166805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583217,0.00260389) , 
7, 0.189228, 1, 0, 0.681435,0.00405529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185532,-0.0021289) , 
16, 0.180144, 1, 0, 0.403307,-0.0155378) , 
15, 0.122937, 1, 0, 0.514958,-0.00508072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380948,0.00131184) , 
15, 0.298571, 1, 0, 0.492083,-0.00058695)    );
  // itree = 1400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976606,0.0039438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976623,-0.00436445) , 
0, 0.21579, 1, 0, 0.976613,0.00221137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958361,-0.00839095) , 
7, 0.167142, 1, 0, 0.971276,-0.00299346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850841,-0.00499502) , 
13, 0.788116, 1, 0, 0.938629,-0.0127975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722493,-0.000881748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810389,0.00458427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409344,0.000534828) , 
17, 0.665011, 1, 0, 0.539816,0.0264899) , 
9, 0.019555, 1, 0, 0.588948,0.0167181) , 
17, 0.454495, 1, 0, 0.740713,0.00390803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.282938,-0.00212822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140768,-0.00038523) , 
10, 0.646547, 1, 0, 0.189031,-0.019423) , 
17, 0.965807, 1, 0, 0.489468,-0.00671728)    );
  // itree = 1401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891795,-0.00445257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973141,-0.00730311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949023,0.00343883) , 
6, 0.213471, 1, 0, 0.963488,0.000978202) , 
12, 0.15435, 1, 0, 0.940424,-0.00703762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852308,0.00302462) , 
16, 0.121694, 1, 0, 0.919882,-0.000340522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62846,0.00341502) , 
6, 0.494903, 1, 0, 0.843687,0.0157104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484323,-0.00222247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490412,-0.00150613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133908,0.000652727) , 
3, 0.572942, 1, 0, 0.236525,0.000818734) , 
16, 0.233395, 1, 0, 0.28414,-0.00535509) , 
16, 0.177326, 1, 0, 0.533524,0.00403359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390124,-0.000910404) , 
13, 1.1639, 1, 0, 0.499642,-0.00147715)    );
  // itree = 1402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.19266,-0.000490282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281282,0.000865972) , 
12, 0.0513598, 1, 0, 0.238117,0.00441898) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977782,-0.00548549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998877,0.0194743) , 
2, 0.0407914, 1, 0, 0.988253,-0.00048709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994886,0.018909) , 
17, 0.318875, 1, 0, 0.990768,0.00461202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829854,-0.00579701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805056,-0.00046324) , 
13, 0.863461, 1, 0, 0.816748,-0.0276281) , 
3, 0.231352, 1, 0, 0.906397,-0.0110192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512444,-0.0025234) , 
17, 0.707114, 1, 0, 0.790409,-0.023929) , 
12, 0.0707953, 1, 0, 0.632969,-0.015848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197105,0.000245814) , 
17, 1.09289, 1, 0, 0.489604,-0.00929494)    );
  // itree = 1403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985905,0.00650433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925991,-0.0122154) , 
16, 0.108001, 1, 0, 0.962532,-0.00710818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6909,0.00155818) , 
6, 0.381941, 1, 0, 0.869917,0.00492324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596103,-0.00337576) , 
10, 0.500967, 1, 0, 0.799387,-0.00931244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676594,0.00275469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67433,-0.00128524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201448,0.00096394) , 
10, 0.506843, 1, 0, 0.310487,0.00714191) , 
16, 0.116087, 1, 0, 0.353411,0.0114584) , 
8, 0.0301021, 1, 0, 0.53392,0.0030514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907891,0.00122961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193069,-0.00231495) , 
17, 0.58623, 1, 0, 0.402728,-0.0261356) , 
14, 0.138141, 1, 0, 0.500861,-0.00430335)    );
  // itree = 1404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957342,0.0026245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575615,0.00520472) , 
17, 0.644919, 1, 0, 0.805508,0.0361527) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318597,-0.00137953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133207,0.0009545) , 
7, 0.41998, 1, 0, 0.193689,-0.000219242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526954,0.00350169) , 
12, 0.0734772, 1, 0, 0.263962,0.013338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952585,0.00642836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943829,-0.00514754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818352,0.00261862) , 
13, 0.773101, 1, 0, 0.891681,0.00750439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629277,-0.00213862) , 
10, 0.5278, 1, 0, 0.81336,-0.00703174) , 
16, 0.0631328, 1, 0, 0.848397,0.00401933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723176,-0.00405873) , 
15, 0.262271, 1, 0, 0.82702,-0.00662006) , 
12, 0.0960868, 1, 0, 0.537559,0.00364012) , 
15, 0.0372186, 1, 0, 0.586928,0.00963051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16343,-0.00142528) , 
17, 1.21827, 1, 0, 0.495354,0.0022819)    );
  // itree = 1405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976985,-0.00179279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817005,-0.00490688) , 
6, 0.224607, 1, 0, 0.903539,-0.0219898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932302,0.00308215) , 
8, 0.0197464, 1, 0, 0.912285,-0.0111647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987484,0.0097271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965373,0.00106875) , 
4, 0.469036, 1, 0, 0.975722,0.0121097) , 
2, 0.0433887, 1, 0, 0.936431,-0.00230569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678802,-0.00266976) , 
17, 0.572091, 1, 0, 0.888046,-0.00898371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584207,0.00518969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136923,-0.000425638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273036,0.000753985) , 
11, 1.03325, 1, 0, 0.192671,0.00180867) , 
17, 0.859202, 1, 0, 0.247979,0.0134535) , 
17, 0.711647, 1, 0, 0.526734,0.0036819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404101,-0.0011271) , 
13, 1.24464, 1, 0, 0.504349,-0.00165396)    );
  // itree = 1406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988029,0.00229455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524786,-0.00132435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4676,-0.00276068) , 
9, 0.00936613, 1, 0, 0.496839,-0.0309163) , 
3, 0.214748, 1, 0, 0.653151,-0.0206478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611049,0.00164418) , 
15, 0.0514243, 1, 0, 0.639829,-0.0080955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554861,-0.00339307) , 
9, 0.0191072, 1, 0, 0.616665,-0.0172855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970006,-0.00787036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182214,0.00120782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824102,0.00397848) , 
4, 0.120802, 1, 0, 0.37605,0.0301659) , 
3, 0.240327, 1, 0, 0.496357,0.0219841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314995,-0.000768671) , 
11, 1.07387, 1, 0, 0.440029,0.0101931) , 
9, 0.0295296, 1, 0, 0.503427,0.000330475)    );
  // itree = 1407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990649,0.0119079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946406,-0.00328066) , 
14, 0.037418, 1, 0, 0.967084,0.00341878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757851,0.00409452) , 
11, 0.780834, 1, 0, 0.909871,0.0209439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160562,-0.00143236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173003,0.0011174) , 
9, 0.031288, 1, 0, 0.16987,0.00713387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41393,-0.00213976) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877048,-0.000194784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850633,0.00349118) , 
16, 0.0929006, 1, 0, 0.863457,0.0217023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825641,-0.00198585) , 
14, 0.0835641, 1, 0, 0.847071,0.00248448) , 
4, 0.252296, 1, 0, 0.632441,-0.023027) , 
2, 0.0152423, 1, 0, 0.390981,-0.00728314) , 
10, 0.337085, 1, 0, 0.503467,-0.00116402)    );
  // itree = 1408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464582,-0.00297824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581337,-0.000618122) , 
14, 0.155408, 1, 0, 0.502312,-0.0370005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969772,0.00583853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920927,0.00191305) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970297,0.00395732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937106,-0.00735476) , 
1, 0.418386, 1, 0, 0.953298,-0.00567499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760765,-0.00309553) , 
3, 0.447316, 1, 0, 0.892645,-0.0179913) , 
5, 0.033611, 1, 0, 0.901205,-0.00916418) , 
16, 0.0450236, 1, 0, 0.913236,-0.00384048) , 
1, 0.199157, 1, 0, 0.767348,-0.0156131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172051,0.000716665) , 
7, 0.574886, 1, 0, 0.59573,-0.00821076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27347,0.00057663) , 
3, 0.787309, 1, 0, 0.492025,-0.00204175)    );
  // itree = 1409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475872,-0.00193824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945507,0.00315658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862205,-0.00244173) , 
8, 0.0136527, 1, 0, 0.901694,-0.00356031) , 
0, 0.125442, 1, 0, 0.793976,-0.0127715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833813,0.00274012) , 
14, 0.130466, 1, 0, 0.80281,-0.0042949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829713,-0.00316632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618155,0.000963103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527814,0.00469629) , 
15, 0.100818, 1, 0, 0.568775,0.0500659) , 
6, 0.207132, 1, 0, 0.63912,0.0333433) , 
7, 0.204422, 1, 0, 0.734733,0.0113584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313674,-0.00218169) , 
10, 0.653879, 1, 0, 0.682505,0.00541929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296475,0.00211293) , 
10, 0.741082, 1, 0, 0.604345,0.010946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182852,-0.000439413) , 
8, 0.0593058, 1, 0, 0.509432,0.00692194)    );
  // itree = 1410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15329,-0.00103887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508626,-0.00357157) , 
5, 0.00846959, 1, 0, 0.266813,-0.0310149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387549,0.00078797) , 
14, 0.155408, 1, 0, 0.296474,-0.0205381) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980776,0.00378857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813684,0.00303178) , 
17, 0.302212, 1, 0, 0.901954,0.02426) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942642,-0.0030767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604824,-0.0030158) , 
17, 0.507697, 1, 0, 0.755609,-0.0390923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714141,0.00317002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834754,-0.000447136) , 
5, 0.031038, 1, 0, 0.78586,0.0158474) , 
16, 0.124896, 1, 0, 0.771911,-0.00948613) , 
16, 0.0767403, 1, 0, 0.819403,0.00283813) , 
2, 0.0179887, 1, 0, 0.602179,-0.00687232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224605,0.00110248) , 
8, 0.0563999, 1, 0, 0.502309,-0.00035657)    );
  // itree = 1411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973083,0.00516028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97315,-0.00240682) , 
12, 0.190318, 1, 0, 0.973124,0.00218702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862366,-0.00712557) , 
11, 0.43643, 1, 0, 0.930177,-0.0158511) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152149,0.000598975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478151,-0.00186744) , 
5, 0.013925, 1, 0, 0.232179,-0.00178283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95683,0.00926918) , 
4, 0.211383, 1, 0, 0.395736,0.00859265) , 
8, 0.0203088, 1, 0, 0.618462,-0.00159417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659209,-0.0001008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282664,-0.00326336) , 
16, 0.131958, 1, 0, 0.448445,-0.0329131) , 
6, 0.442071, 1, 0, 0.563601,-0.0117002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298432,0.000648882) , 
3, 0.842544, 1, 0, 0.496993,-0.00547951)    );
  // itree = 1412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780139,-0.00292839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942388,0.00421508) , 
2, 0.0291164, 1, 0, 0.869181,-4.61955e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310029,0.0025868) , 
17, 0.839502, 1, 0, 0.585138,0.0222719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52331,0.00166322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359928,-0.000681659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298776,-0.002039) , 
14, 0.100199, 1, 0, 0.330237,-0.0218546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38279,0.00028615) , 
14, 0.150676, 1, 0, 0.347047,-0.0134919) , 
14, 0.0553322, 1, 0, 0.371516,-0.00845123) , 
9, 0.031288, 1, 0, 0.445988,0.00225937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965286,-0.00128664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659866,-0.00659914) , 
17, 0.455191, 1, 0, 0.838748,-0.0488697) , 
5, 0.0497362, 1, 0, 0.499011,-0.00464315)    );
  // itree = 1413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750815,0.00442949) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70709,-0.00382225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586055,-0.000357719) , 
14, 0.0403857, 1, 0, 0.647465,-0.0126609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514122,-0.00504612) , 
6, 0.260921, 1, 0, 0.603501,-0.0260243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634082,0.00125915) , 
9, 0.0330053, 1, 0, 0.612174,-0.0163422) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992265,0.0089876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305977,-0.00233451) , 
11, 0.398978, 1, 0, 0.580794,-0.0116819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420576,0.00291228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330107,0.000693343) , 
9, 0.0397879, 1, 0, 0.361487,0.0181596) , 
6, 0.234834, 1, 0, 0.456315,0.00525624) , 
15, 0.115831, 1, 0, 0.521946,-0.00383869) , 
9, 0.0107597, 1, 0, 0.552549,0.000150988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444457,-0.0024024) , 
6, 0.443593, 1, 0, 0.53581,-0.00558063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494109,0.0015248) , 
6, 0.565596, 1, 0, 0.529757,-0.000742539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346053,-0.00100884) , 
6, 0.739652, 1, 0, 0.495035,-0.00495987)    );
  // itree = 1414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948399,-0.00146011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387993,-0.00329545) , 
17, 0.605383, 1, 0, 0.6166,-0.0330255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635917,0.00284612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455898,-0.00221795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498564,0.000690318) , 
14, 0.0603463, 1, 0, 0.478069,-0.0104579) , 
14, 0.0368472, 1, 0, 0.522744,0.00128389) , 
9, 0.0161835, 1, 0, 0.550306,-0.00879154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318725,-0.00206624) , 
15, 0.144905, 1, 0, 0.484667,-0.0161543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352368,0.00189742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671545,-0.00297516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244726,0.000192755) , 
8, 0.0222397, 1, 0, 0.397719,-0.0111737) , 
14, 0.145539, 1, 0, 0.382495,0.00201662) , 
14, 0.116757, 1, 0, 0.448156,-0.00966092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924493,0.00388651) , 
12, 0.28826, 1, 0, 0.490395,-0.00638419)    );
  // itree = 1415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201111,-0.000369987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602864,-0.00371725) , 
12, 0.0789923, 1, 0, 0.339618,-0.0257333) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928877,0.00571294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902516,-0.00161696) , 
1, 0.391307, 1, 0, 0.915631,0.0151892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911704,0.000370266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867614,-0.00486051) , 
9, 0.0172543, 1, 0, 0.88989,-0.0162844) , 
12, 0.225525, 1, 0, 0.902891,-0.000388163) , 
4, 0.251814, 1, 0, 0.59391,-0.0142911) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144075,-0.000600121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842497,-0.000637641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537355,0.00189494) , 
10, 0.407966, 1, 0, 0.61696,0.0275574) , 
4, 0.0639354, 1, 0, 0.349972,0.00716591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842872,-0.00339649) , 
1, 0.361513, 1, 0, 0.414289,0.00198832) , 
9, 0.035199, 1, 0, 0.495303,-0.00535419)    );
  // itree = 1416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111887,-0.000962992) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974426,-0.00432869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969872,0.00681368) , 
17, 0.283589, 1, 0, 0.972202,0.00801229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909426,-0.00699189) , 
7, 0.253673, 1, 0, 0.955295,-0.00164696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587733,0.00262562) , 
10, 0.506843, 1, 0, 0.84507,0.0110259) , 
4, 0.062671, 1, 0, 0.571495,0.0026365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477201,0.00539644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595221,-0.000576309) , 
14, 0.207522, 1, 0, 0.534828,0.0261063) , 
14, 0.151917, 1, 0, 0.564513,0.00710541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602185,0.000783126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479151,-0.0019828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282407,-0.000755647) , 
10, 0.558876, 1, 0, 0.353501,-0.0249188) , 
15, 0.0849765, 1, 0, 0.416086,-0.0148363) , 
6, 0.437013, 1, 0, 0.502293,-0.00209254)    );
  // itree = 1417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96866,-0.0127203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98162,0.00612664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976285,-0.00216225) , 
0, 0.197149, 1, 0, 0.978986,0.00296906) , 
9, 0.0179328, 1, 0, 0.97548,-0.00299945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597306,0.00374466) , 
11, 0.51368, 1, 0, 0.834384,0.00845349) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852671,-0.00202461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741334,-0.00493261) , 
11, 0.638288, 1, 0, 0.802018,-0.0395157) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610627,-0.00119641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528172,0.00209711) , 
10, 0.369574, 1, 0, 0.566022,0.0142075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287137,-0.00103349) , 
10, 0.52358, 1, 0, 0.425924,-0.00284104) , 
17, 0.610785, 1, 0, 0.521518,-0.0121629) , 
6, 0.27196, 1, 0, 0.635403,-0.00465844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224143,0.00116689) , 
10, 0.721719, 1, 0, 0.507541,0.0021088)    );
  // itree = 1418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766232,-0.00145021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327993,-0.00344526) , 
16, 0.180123, 1, 0, 0.532029,-0.0311143) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948154,-0.000265723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934953,-0.00761047) , 
8, 0.00806542, 1, 0, 0.941693,-0.0110435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950926,0.00804966) , 
8, 0.0186975, 1, 0, 0.945063,0.00455268) , 
2, 0.0193664, 1, 0, 0.776857,-0.00997252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278318,-0.0016615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122101,0.00101974) , 
10, 0.634419, 1, 0, 0.161976,0.00295702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491057,0.00272816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801978,0.000127366) , 
12, 0.137282, 1, 0, 0.624314,0.0318527) , 
5, 0.0176201, 1, 0, 0.288495,0.0108643) , 
11, 0.706224, 1, 0, 0.477263,0.00281021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362215,-0.000764925) , 
11, 1.2006, 1, 0, 0.453575,-0.00130283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912606,0.00348621) , 
2, 0.0548723, 1, 0, 0.49771,0.00136499)    );
  // itree = 1419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990888,-0.00970798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999743,0.0243131) , 
17, 0.247365, 1, 0, 0.995238,0.00172374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912667,-0.00598041) , 
3, 0.158443, 1, 0, 0.96035,-0.0104578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94672,0.00747659) , 
13, 0.801279, 1, 0, 0.957149,0.00355735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620998,-0.00265203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815183,0.000418254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338774,-0.00265121) , 
17, 0.683691, 1, 0, 0.518615,-0.026154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452041,0.000267858) , 
13, 0.965929, 1, 0, 0.492499,-0.0139517) , 
8, 0.0179087, 1, 0, 0.525674,-0.0224817) , 
17, 0.467246, 1, 0, 0.707744,-0.011494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350494,0.00130997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140252,-0.000423506) , 
10, 0.658855, 1, 0, 0.213996,0.00546548) , 
17, 0.992903, 1, 0, 0.500123,-0.0043625)    );
  // itree = 1420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802841,-0.00420915) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9189,-0.000734874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735909,0.00372604) , 
13, 0.862323, 1, 0, 0.840398,0.0215729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775761,-0.000333845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66126,-0.00333725) , 
15, 0.154405, 1, 0, 0.717894,-0.0234764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664672,0.0022133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546266,-0.000999866) , 
15, 0.337232, 1, 0, 0.605473,0.00729323) , 
15, 0.231664, 1, 0, 0.665017,-0.00900389) , 
14, 0.0675108, 1, 0, 0.731023,0.00250405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398492,-0.00198936) , 
8, 0.0348493, 1, 0, 0.666652,-0.00446343) , 
9, 0.0109848, 1, 0, 0.684453,-0.00867952) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270833,0.00238091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215626,-0.00103019) , 
6, 0.252008, 1, 0, 0.234744,-0.000662731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300637,0.00217533) , 
13, 1.01763, 1, 0, 0.259818,0.0144829) , 
8, 0.039496, 1, 0, 0.502905,0.00122336)    );
  // itree = 1421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137319,-0.000900618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45832,-0.000543983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301678,0.00127397) , 
6, 0.27999, 1, 0, 0.343728,0.015761) , 
12, 0.0519048, 1, 0, 0.266481,0.00554641) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628841,0.000550272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508236,-0.0011991) , 
15, 0.115586, 1, 0, 0.556928,-0.0111673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777829,-0.00696305) , 
4, 0.258413, 1, 0, 0.62149,-0.0302479) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993972,0.0140234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961852,-0.00484286) , 
15, 0.0550273, 1, 0, 0.976184,0.000823103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924907,0.00461021) , 
6, 0.259184, 1, 0, 0.957645,0.0123587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69939,-0.00111303) , 
17, 0.660043, 1, 0, 0.891419,0.00359898) , 
12, 0.142262, 1, 0, 0.784186,-0.00984723) , 
5, 0.0185893, 1, 0, 0.495373,-0.00125957)    );
  // itree = 1422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974411,-0.0105365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990173,0.00895929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959292,0.00878667) , 
17, 0.253574, 1, 0, 0.975137,0.0248224) , 
13, 0.608644, 1, 0, 0.974818,0.00919003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569139,-0.0029108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297425,-0.00240987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135433,-0.00103113) , 
16, 0.295961, 1, 0, 0.192778,-0.025291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774427,0.00134423) , 
12, 0.103273, 1, 0, 0.349516,-0.0129998) , 
16, 0.11329, 1, 0, 0.391386,-0.0217955) , 
17, 0.47898, 1, 0, 0.569407,-0.012341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253258,0.00135013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768029,-0.00161247) , 
12, 0.124549, 1, 0, 0.381732,0.0106564) , 
9, 0.0469321, 1, 0, 0.498266,-0.00362348)    );
  // itree = 1423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291745,-0.00241096) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964109,-0.00111636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914464,0.0040831) , 
6, 0.268697, 1, 0, 0.941248,0.0143462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938382,-0.00252429) , 
4, 0.449697, 1, 0, 0.939884,0.00356061) , 
1, 0.210306, 1, 0, 0.676731,-0.0105807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413422,0.000735966) , 
11, 1.02781, 1, 0, 0.584647,-0.00179671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446298,-0.0028016) , 
14, 0.10468, 1, 0, 0.564894,-0.00679612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318834,0.000813947) , 
15, 0.202732, 1, 0, 0.502154,-0.00174323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716675,-0.00362259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269102,-0.000834273) , 
8, 0.0203088, 1, 0, 0.451358,-0.0243529) , 
14, 0.17222, 1, 0, 0.49474,-0.00504321)    );
  // itree = 1424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992111,0.00316644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677422,-0.00336289) , 
3, 0.226446, 1, 0, 0.803995,-0.0296294) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899984,0.00179454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673726,-0.00278777) , 
10, 0.26861, 1, 0, 0.813,-0.00884987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.323859,0.00092408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358527,0.00238708) , 
14, 0.0332433, 1, 0, 0.342224,0.0261287) , 
10, 0.415129, 1, 0, 0.573079,0.00897622) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638502,-0.00147143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251275,0.00176792) , 
10, 0.509003, 1, 0, 0.356589,0.0144665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753519,-0.00206663) , 
2, 0.031038, 1, 0, 0.456576,0.00346378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143274,-0.00186414) , 
8, 0.0555992, 1, 0, 0.337199,-0.00915353) , 
14, 0.0605517, 1, 0, 0.416985,-0.00302114) , 
16, 0.0748395, 1, 0, 0.485513,-0.00773264)    );
  // itree = 1425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922075,0.00219478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22221,-0.00201097) , 
10, 0.501898, 1, 0, 0.552001,-0.00990287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481427,0.00136483) , 
9, 0.037185, 1, 0, 0.523627,-0.000614357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408991,-0.00200569) , 
6, 0.411334, 1, 0, 0.49082,-0.0096849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358572,0.00110294) , 
11, 1.05711, 1, 0, 0.444754,0.00130553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33556,0.00168558) , 
9, 0.0611863, 1, 0, 0.419138,0.00785531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978365,-0.000601007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778679,-0.00481502) , 
11, 0.470405, 1, 0, 0.873311,-0.0299458) , 
4, 0.406987, 1, 0, 0.49912,0.00119835)    );
  // itree = 1426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993741,0.00622509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997826,0.0140172) , 
9, 0.0322791, 1, 0, 0.995788,0.00784454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973286,-0.00637065) , 
0, 0.25344, 1, 0, 0.988171,0.00236865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92483,-0.00839052) , 
11, 0.519111, 1, 0, 0.972377,-0.0041797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768497,0.0036639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220128,0.000772085) , 
16, 0.172295, 1, 0, 0.384976,0.0213665) , 
3, 0.257866, 1, 0, 0.612265,0.0114817) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735844,0.000481578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533444,-0.00292694) , 
8, 0.0152261, 1, 0, 0.614155,-0.0284734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281295,0.000398558) , 
17, 0.883249, 1, 0, 0.381913,-0.0033251) , 
13, 0.915864, 1, 0, 0.502882,0.00445063)    );
  // itree = 1427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63681,-0.00314439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445113,-0.00111187) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838257,-0.000650984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9406,0.00358149) , 
5, 0.0411719, 1, 0, 0.890804,0.00576861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940201,0.00683344) , 
16, 0.136786, 1, 0, 0.905571,0.0162198) , 
12, 0.0992603, 1, 0, 0.78161,0.00585889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343337,0.00268198) , 
10, 0.529344, 1, 0, 0.595296,0.020206) , 
14, 0.0118502, 1, 0, 0.603591,0.00957754) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913958,-0.00363109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487983,0.00195682) , 
16, 0.111841, 1, 0, 0.653919,0.00736889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162751,-0.000641715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648599,-0.00289484) , 
12, 0.111066, 1, 0, 0.288189,-0.02291) , 
13, 0.740665, 1, 0, 0.406304,-0.0131312) , 
14, 0.086338, 1, 0, 0.505167,-0.00175154)    );
  // itree = 1428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985906,-0.00344576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818914,0.00265275) , 
6, 0.221492, 1, 0, 0.895269,0.015468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748084,-0.00143324) , 
10, 0.398558, 1, 0, 0.830758,0.00156998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735812,-0.0054665) , 
7, 0.114285, 1, 0, 0.808953,-0.0133589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39329,-9.68795e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838788,0.00452103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865247,0.00177588) , 
12, 0.163165, 1, 0, 0.85244,0.0384777) , 
12, 0.0937997, 1, 0, 0.679467,0.0232214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560894,-0.000879894) , 
16, 0.208742, 1, 0, 0.641711,0.01211) , 
7, 0.171429, 1, 0, 0.728785,-0.00115028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361336,-0.00396162) , 
16, 0.306004, 1, 0, 0.686129,-0.00724701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121023,-0.000448226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529649,0.00258617) , 
5, 0.0154911, 1, 0, 0.248676,0.0117584) , 
10, 0.635213, 1, 0, 0.500457,0.000819657)    );
  // itree = 1429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946779,-0.00120706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903541,0.00820542) , 
7, 0.175213, 1, 0, 0.925923,0.0133693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827664,-0.00677938) , 
9, 0.0185829, 1, 0, 0.879946,-0.0108324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814362,0.00414702) , 
15, 0.110673, 1, 0, 0.86661,-0.00121794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21925,-0.00288477) , 
10, 0.57367, 1, 0, 0.642025,-0.0143059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287084,0.00230147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638888,-0.00385202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902033,0.00150262) , 
2, 0.0322863, 1, 0, 0.772492,-0.0179583) , 
2, 0.0162562, 1, 0, 0.518193,0.00653971) , 
14, 0.104455, 1, 0, 0.595053,-0.00639871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247506,-0.00201289) , 
11, 1.04336, 1, 0, 0.529218,-0.0111379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394956,0.000590445) , 
6, 0.645906, 1, 0, 0.494791,-0.00495438)    );
  // itree = 1430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994978,0.010653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740649,-0.00431454) , 
3, 0.26028, 1, 0, 0.881841,-0.0193725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882508,-0.00232122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918455,0.00231084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310452,0.00351154) , 
16, 0.190659, 1, 0, 0.546252,0.030405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425954,-0.00218755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439719,0.0012075) , 
6, 0.472923, 1, 0, 0.435277,0.00411095) , 
6, 0.359512, 1, 0, 0.491362,0.0173996) , 
13, 0.502823, 1, 0, 0.560789,0.0127776) , 
16, 0.0709587, 1, 0, 0.628361,0.00601094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153644,-0.00145534) , 
10, 0.788997, 1, 0, 0.519776,-0.000255309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38006,-0.00140119) , 
13, 1.22115, 1, 0, 0.491846,-0.00641852)    );
  // itree = 1431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81208,0.00358724) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914874,-0.00590779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979865,-0.00788147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958752,0.00382726) , 
6, 0.169843, 1, 0, 0.970402,0.0027016) , 
0, 0.15451, 1, 0, 0.955274,-0.00439207) , 
5, 0.0185989, 1, 0, 0.925133,0.00200964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572798,-0.00278476) , 
11, 0.586513, 1, 0, 0.835883,-0.00704614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149917,0.000607207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669644,0.000844856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598102,0.00263365) , 
13, 0.983127, 1, 0, 0.626054,0.0356825) , 
5, 0.0154911, 1, 0, 0.329006,0.0185229) , 
11, 0.695632, 1, 0, 0.52725,0.00852264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391737,-0.000789925) , 
11, 1.31403, 1, 0, 0.50758,0.00454664)    );
  // itree = 1432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9662,0.00161306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859601,-0.0043891) , 
13, 0.712752, 1, 0, 0.926971,-0.00908436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963289,0.00695904) , 
15, 0.128068, 1, 0, 0.936122,0.000588821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668533,0.00224152) , 
11, 0.831048, 1, 0, 0.855702,0.0135217) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69167,-0.00466474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449325,-0.000159067) , 
8, 0.0275068, 1, 0, 0.586996,-0.0359488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774075,0.00423855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.161357,-0.00163928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125823,-0.0008662) , 
8, 0.0548417, 1, 0, 0.14207,-0.0201442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751161,0.00154675) , 
4, 0.225105, 1, 0, 0.215512,-0.0141292) , 
11, 0.625513, 1, 0, 0.281062,-0.00761935) , 
10, 0.535211, 1, 0, 0.345746,-0.0136091) , 
10, 0.404973, 1, 0, 0.496744,-0.00557561)    );
  // itree = 1433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986198,-0.0150708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92943,0.00413491) , 
3, 0.141059, 1, 0, 0.957538,0.00930486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514812,-0.00337158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398867,-0.000969635) , 
11, 0.703729, 1, 0, 0.452417,-0.0315815) , 
17, 0.474464, 1, 0, 0.693672,-0.0120534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268644,0.00115639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220479,0.00190476) , 
16, 0.381703, 1, 0, 0.243834,0.017767) , 
16, 0.281381, 1, 0, 0.497039,0.000981647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222798,-0.00142671) , 
13, 0.963264, 1, 0, 0.419376,-0.00566107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336904,0.000705976) , 
6, 0.611911, 1, 0, 0.395617,0.000271548) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959222,-0.00597829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974931,0.00505649) , 
8, 0.0102335, 1, 0, 0.968376,0.000137338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669333,-0.0024701) , 
3, 0.425574, 1, 0, 0.834649,-0.0215632) , 
5, 0.0371787, 1, 0, 0.50124,-0.00498149)    );
  // itree = 1434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99037,0.00726151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967977,-0.00851018) , 
10, 0.245354, 1, 0, 0.979287,-0.00199971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471036,-0.00389309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5356,-0.000633883) , 
13, 0.843851, 1, 0, 0.505578,-0.0239633) , 
3, 0.244771, 1, 0, 0.721561,-0.0139492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436616,0.000662126) , 
11, 1.03345, 1, 0, 0.636674,-0.00596579) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68013,0.000631969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447791,0.0028004) , 
13, 0.814416, 1, 0, 0.548037,0.0283237) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2307,0.000753991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57836,-0.00213473) , 
2, 0.0192962, 1, 0, 0.301868,0.00104965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913,0.00457111) , 
4, 0.309692, 1, 0, 0.391259,0.00667326) , 
9, 0.0382673, 1, 0, 0.439302,0.0133078) , 
9, 0.0256311, 1, 0, 0.502338,0.00715222)    );
  // itree = 1435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977566,-0.0079681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985141,0.00659151) , 
17, 0.189159, 1, 0, 0.981328,0.00101416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937804,-0.00953085) , 
7, 0.186915, 1, 0, 0.968693,-0.00592183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931579,0.00571827) , 
6, 0.240853, 1, 0, 0.957169,0.00722906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574955,0.00161424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130245,-0.000807942) , 
10, 0.529785, 1, 0, 0.211931,-0.00508556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.762165,-0.00451986) , 
4, 0.191987, 1, 0, 0.299464,-0.0131907) , 
17, 0.508319, 1, 0, 0.521132,-0.00630858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43005,0.00075779) , 
13, 1.17382, 1, 0, 0.500881,-0.00136958)    );
  // itree = 1436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974162,0.00504612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568454,-0.00200357) , 
11, 0.495836, 1, 0, 0.754142,-0.0140667) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166885,0.000740802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234155,-0.000740979) , 
12, 0.056743, 1, 0, 0.199253,-0.00110305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939028,-0.0020979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640665,0.00306457) , 
3, 0.389363, 1, 0, 0.771532,0.0344681) , 
12, 0.0826836, 1, 0, 0.451925,0.0146022) , 
16, 0.0795681, 1, 0, 0.506548,0.00942058) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965103,0.000422456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983868,0.00667488) , 
8, 0.00357474, 1, 0, 0.974554,0.00514433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743009,-0.00223787) , 
17, 0.454992, 1, 0, 0.874764,-0.0129155) , 
5, 0.0426785, 1, 0, 0.589053,0.00441582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166477,-0.00106646) , 
8, 0.0609264, 1, 0, 0.502103,1.93051e-05)    );
  // itree = 1437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993857,0.00360334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989272,0.0119905) , 
11, 0.483414, 1, 0, 0.991677,0.00806238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947496,-0.00770248) , 
10, 0.315518, 1, 0, 0.975752,-0.000395317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334235,0.00187107) , 
3, 0.297169, 1, 0, 0.699296,0.00969689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466101,-0.00337294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528413,-0.000165144) , 
15, 0.305482, 1, 0, 0.496268,-0.0186037) , 
15, 0.213941, 1, 0, 0.645709,0.00222718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280436,0.00208063) , 
13, 0.964656, 1, 0, 0.572016,0.00733944) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204613,-0.000488154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719952,0.00155096) , 
12, 0.102035, 1, 0, 0.333049,0.000658194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71523,-0.00236503) , 
5, 0.0371787, 1, 0, 0.413677,-0.00803649) , 
6, 0.37332, 1, 0, 0.495574,-8.36778e-05)    );
  // itree = 1438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991886,0.00155172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942353,-0.0250421) , 
17, 0.362998, 1, 0, 0.97457,-0.0115667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475886,2.5378e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386416,0.00284651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369067,0.00302593) , 
15, 0.136123, 1, 0, 0.377638,0.0340013) , 
14, 0.0483072, 1, 0, 0.417376,0.020352) , 
3, 0.214536, 1, 0, 0.631086,0.00810963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63425,-0.00134978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32302,-0.00160032) , 
6, 0.227754, 1, 0, 0.43372,-0.0175972) , 
9, 0.0430388, 1, 0, 0.570207,0.000180171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589903,0.000444606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46692,-0.000806739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202263,-0.00223777) , 
7, 0.369517, 1, 0, 0.307694,-0.0313083) , 
8, 0.0299763, 1, 0, 0.412079,-0.0166172) , 
6, 0.41484, 1, 0, 0.49863,-0.00742315)    );
  // itree = 1439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946375,-0.00724302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973696,0.00378507) , 
4, 0.446539, 1, 0, 0.962932,-0.00306314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790335,0.00325999) , 
17, 0.442146, 1, 0, 0.911676,0.00679082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407373,-0.00289517) , 
16, 0.245386, 1, 0, 0.800523,-0.00113448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22382,0.000430524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772695,0.00313308) , 
12, 0.109861, 1, 0, 0.414148,0.0249096) , 
11, 0.823829, 1, 0, 0.598726,0.0124679) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769417,-0.00305615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788114,0.00149251) , 
8, 0.00939556, 1, 0, 0.779128,-0.00644478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57908,-0.00544822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341609,-0.000618841) , 
7, 0.303518, 1, 0, 0.432679,-0.0408717) , 
7, 0.174895, 1, 0, 0.594296,-0.0248117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224495,0.00026608) , 
10, 0.6811, 1, 0, 0.407659,-0.0102263) , 
14, 0.0833982, 1, 0, 0.503086,0.00110814)    );
  // itree = 1440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77248,0.00367082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68729,-0.000756225) , 
9, 0.0154193, 1, 0, 0.725608,0.00601106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649307,0.00370339) , 
6, 0.280937, 1, 0, 0.69996,0.0163144) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557566,-0.00104136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390133,-0.00305971) , 
6, 0.270489, 1, 0, 0.46941,-0.0266538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513989,0.00144532) , 
14, 0.0958176, 1, 0, 0.487556,-0.0105617) , 
15, 0.0838583, 1, 0, 0.602794,0.00401975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540184,0.00173994) , 
6, 0.530659, 1, 0, 0.584065,0.0135696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702453,0.00116502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457194,-0.00466967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187342,-0.000400618) , 
3, 0.49663, 1, 0, 0.241697,-0.0199142) , 
7, 0.146102, 1, 0, 0.363841,-0.0105613) , 
15, 0.194405, 1, 0, 0.502915,0.00467772)    );
  // itree = 1441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373201,-0.001324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201032,0.000331253) , 
16, 0.252003, 1, 0, 0.297945,-0.0129558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700641,-0.00375213) , 
4, 0.15563, 1, 0, 0.381448,-0.0223951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907873,-0.00391766) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987752,0.00533227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840986,-0.00255072) , 
11, 0.541505, 1, 0, 0.912728,-0.00913542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866481,0.00270569) , 
10, 0.407861, 1, 0, 0.897085,0.00371241) , 
8, 0.00310547, 1, 0, 0.900508,-0.0042412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831858,0.00347856) , 
10, 0.611794, 1, 0, 0.8893,0.00443057) , 
12, 0.123892, 1, 0, 0.636196,-0.00893885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229659,0.00079622) , 
8, 0.0528029, 1, 0, 0.505542,-0.0019852)    );
  // itree = 1442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563401,-0.00375007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577264,-0.00113533) , 
15, 0.204702, 1, 0, 0.569978,-0.0427347) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967996,0.000140359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967523,-0.0120936) , 
4, 0.466626, 1, 0, 0.967759,-0.00731596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859812,0.0017436) , 
13, 0.848707, 1, 0, 0.920678,0.00483129) , 
12, 0.156169, 1, 0, 0.77,-0.0156053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813528,0.00428451) , 
7, 0.16433, 1, 0, 0.778621,-0.00487922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358572,-0.000684504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660605,-0.00519713) , 
12, 0.137684, 1, 0, 0.441532,-0.0356548) , 
8, 0.0346128, 1, 0, 0.657342,-0.0159518) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451475,-0.00213845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258999,0.000672673) , 
16, 0.307102, 1, 0, 0.314508,-0.00217728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190612,0.00179925) , 
15, 0.136427, 1, 0, 0.245541,0.0126733) , 
16, 0.233238, 1, 0, 0.496642,-0.00478124)    );
  // itree = 1443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991638,0.00927273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940705,-0.00757224) , 
13, 0.608999, 1, 0, 0.963784,-0.00537443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992057,0.0135486) , 
7, 0.121118, 1, 0, 0.975363,0.0046866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914749,0.00481077) , 
13, 0.839435, 1, 0, 0.962891,0.0117344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731578,-0.00329848) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489895,0.000723575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182046,-0.00123146) , 
3, 0.559434, 1, 0, 0.236835,-0.0162375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713217,0.00147373) , 
2, 0.0293715, 1, 0, 0.340971,-0.00621388) , 
17, 0.633007, 1, 0, 0.400128,-0.0115418) , 
17, 0.47898, 1, 0, 0.577768,-0.0041945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193586,0.00103078) , 
8, 0.0626762, 1, 0, 0.504092,-0.000379937)    );
  // itree = 1444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973412,0.000942664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843599,-0.0047193) , 
17, 0.475404, 1, 0, 0.919633,-0.0150484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78794,-0.00103328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833761,8.51335e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521624,0.00425115) , 
8, 0.0257572, 1, 0, 0.65635,0.0366123) , 
6, 0.234259, 1, 0, 0.706333,0.0208676) , 
10, 0.281382, 1, 0, 0.796736,0.00564516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17475,-0.00253489) , 
10, 0.652346, 1, 0, 0.601902,-0.00743212) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202952,0.000504203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660618,0.00369039) , 
2, 0.0165203, 1, 0, 0.32075,0.0193237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849553,-0.00203615) , 
0, 0.150311, 1, 0, 0.41389,0.0125789) , 
15, 0.174231, 1, 0, 0.528787,0.000349869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40862,0.00161405) , 
6, 0.746759, 1, 0, 0.507027,0.0068251)    );
  // itree = 1445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856761,0.00470854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979998,0.00721833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902929,-0.00389732) , 
8, 0.0160563, 1, 0, 0.936808,-0.0041569) , 
4, 0.257516, 1, 0, 0.904418,0.0171982) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.323167,0.00139948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324342,-0.00166853) , 
14, 0.0707484, 1, 0, 0.323898,-0.00786726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793013,0.0026747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222321,0.00032094) , 
7, 0.19959, 1, 0, 0.41783,0.0136851) , 
15, 0.240594, 1, 0, 0.364699,0.00149431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238749,-0.00128363) , 
11, 0.969039, 1, 0, 0.305094,-0.0107545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949408,-0.00303756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84453,0.0040657) , 
13, 0.957143, 1, 0, 0.900266,0.0221151) , 
4, 0.396465, 1, 0, 0.390308,-0.00604841) , 
10, 0.329427, 1, 0, 0.503414,-0.000934104)    );
  // itree = 1446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735284,0.00290862) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386135,-0.0011977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751848,0.00376163) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989264,-0.000683407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959898,0.00606185) , 
6, 0.174121, 1, 0, 0.973328,0.0132081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727161,-0.00102927) , 
13, 0.961798, 1, 0, 0.893342,0.00292787) , 
12, 0.114669, 1, 0, 0.869258,0.0127363) , 
12, 0.0842663, 1, 0, 0.771448,0.00531788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593673,-0.000401064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261732,-0.0024905) , 
13, 0.661457, 1, 0, 0.361071,-0.0331467) , 
7, 0.327896, 1, 0, 0.637816,-0.00720746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427637,-0.00118399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168053,0.00139836) , 
17, 0.933454, 1, 0, 0.230495,0.0107004) , 
10, 0.688455, 1, 0, 0.481274,-0.00032508) , 
9, 0.00782201, 1, 0, 0.504231,0.00231157)    );
  // itree = 1447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884591,-0.0067034) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939438,0.00277856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525885,0.00360558) , 
17, 0.722219, 1, 0, 0.720059,0.0401452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883701,-0.00289256) , 
1, 0.35773, 1, 0, 0.783781,0.0172646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211496,-0.00116914) , 
10, 0.586445, 1, 0, 0.576652,0.00474069) , 
16, 0.0624531, 1, 0, 0.623292,-0.00138411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458246,-0.00442056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319363,0.000239712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839781,-0.00237301) , 
12, 0.144181, 1, 0, 0.470462,-0.00383779) , 
9, 0.0359868, 1, 0, 0.466779,-0.0206814) , 
9, 0.0319013, 1, 0, 0.558047,-0.00942852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18253,-0.000288284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683771,0.00221951) , 
2, 0.0173522, 1, 0, 0.372488,0.0109287) , 
9, 0.0508431, 1, 0, 0.49776,-0.00281466)    );
  // itree = 1448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979639,3.6957e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711787,-0.00416137) , 
17, 0.197387, 1, 0, 0.832415,-0.0302002) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836974,-0.00117327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802388,0.00184351) , 
15, 0.0795073, 1, 0, 0.819555,0.00484874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682226,0.00367727) , 
10, 0.49841, 1, 0, 0.773091,0.0229248) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940419,-0.00399838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32989,0.00328563) , 
3, 0.379843, 1, 0, 0.588913,0.0207155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33557,-0.00316349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283377,-0.000328657) , 
15, 0.183981, 1, 0, 0.308609,-0.0226581) , 
15, 0.108638, 1, 0, 0.437177,-0.00276382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284317,0.00232627) , 
15, 0.291608, 1, 0, 0.405459,0.00500449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310673,-0.000907879) , 
13, 1.06851, 1, 0, 0.376218,-0.00211877) , 
7, 0.144301, 1, 0, 0.455619,0.0028916) , 
16, 0.0583095, 1, 0, 0.500816,-0.0010778)    );
  // itree = 1449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899395,-0.0015406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929598,0.004574) , 
14, 0.0245769, 1, 0, 0.912214,0.00533652) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233156,-0.00081581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282874,-0.000268201) , 
14, 0.0319414, 1, 0, 0.260455,-0.00765445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75515,-0.0040082) , 
5, 0.0309822, 1, 0, 0.464448,-0.0266121) , 
10, 0.296616, 1, 0, 0.625899,-0.0150924) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.382359,0.00155143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129996,0.000380883) , 
7, 0.513995, 1, 0, 0.239852,0.0160065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383674,-0.00139058) , 
14, 0.206617, 1, 0, 0.263589,0.00981672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871332,0.00504727) , 
4, 0.200459, 1, 0, 0.327151,0.0155521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941625,0.00264195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81053,-0.00322013) , 
8, 0.0130841, 1, 0, 0.865963,-0.0151259) , 
4, 0.283987, 1, 0, 0.432744,0.00953999) , 
14, 0.0626731, 1, 0, 0.505784,0.000225461)    );
  // itree = 1450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805628,0.00194456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607858,-0.00298492) , 
6, 0.264423, 1, 0, 0.703988,-0.0203764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665705,0.00196855) , 
15, 0.0253246, 1, 0, 0.690224,-0.00535531) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544287,-0.00526266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518591,-0.0013563) , 
14, 0.0543968, 1, 0, 0.531868,-0.0451542) , 
15, 0.049679, 1, 0, 0.626794,-0.0212969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818944,0.00352334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817026,2.81368e-05) , 
15, 0.155218, 1, 0, 0.81793,0.0184842) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416803,-0.00274347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656131,0.00182466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353822,-0.00098711) , 
10, 0.60326, 1, 0, 0.440237,-0.00478497) , 
15, 0.192415, 1, 0, 0.43278,-0.0174638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17633,0.000442838) , 
8, 0.0524586, 1, 0, 0.323812,-0.0070983) , 
10, 0.4429, 1, 0, 0.421996,-0.00201495) , 
15, 0.0974478, 1, 0, 0.498941,-0.00925941)    );
  // itree = 1451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990737,-0.00904841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972848,0.00693905) , 
3, 0.109365, 1, 0, 0.981835,0.00537866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986943,0.00384298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726935,-0.00722744) , 
17, 0.229522, 1, 0, 0.8551,-0.0236689) , 
13, 0.580638, 1, 0, 0.914967,-0.00994739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706203,0.000443221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664312,0.00365924) , 
13, 0.871002, 1, 0, 0.688111,0.0244907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478559,-0.000880581) , 
11, 0.923522, 1, 0, 0.617155,0.01072) , 
6, 0.284215, 1, 0, 0.76617,0.000378759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426283,0.0023984) , 
8, 0.0435689, 1, 0, 0.690972,0.00894924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437213,-0.0007673) , 
13, 1.23404, 1, 0, 0.632397,0.00272421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102258,-0.00133875) , 
7, 0.681811, 1, 0, 0.495929,-0.00261001)    );
  // itree = 1452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297768,-0.000514127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166924,0.00155604) , 
6, 0.18818, 1, 0, 0.207892,0.0109549) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985693,0.000465817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977432,0.000131114) , 
16, 0.0772322, 1, 0, 0.981556,0.000328516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988705,0.00864012) , 
9, 0.0351967, 1, 0, 0.984194,0.00619087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511812,-0.00395682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867213,-0.00115449) , 
5, 0.027497, 1, 0, 0.69124,-0.0296086) , 
11, 0.496839, 1, 0, 0.865285,-0.00834002) , 
5, 0.0144833, 1, 0, 0.594325,-0.000387185) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795575,-8.41725e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469066,0.00192728) , 
7, 0.227261, 1, 0, 0.626517,0.0137376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520299,0.00389086) , 
14, 0.0633479, 1, 0, 0.575629,0.0351214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339916,0.000690646) , 
15, 0.216506, 1, 0, 0.488593,0.026476) , 
6, 0.33098, 1, 0, 0.548577,0.0112359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337735,-0.00118627) , 
6, 0.733947, 1, 0, 0.507468,0.00373133)    );
  // itree = 1453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446624,-0.00167365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452085,0.00223532) , 
14, 0.0518028, 1, 0, 0.449232,0.00196042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691254,0.000228018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163884,-0.00312561) , 
13, 0.634622, 1, 0, 0.320289,-0.0313106) , 
9, 0.0313023, 1, 0, 0.367885,-0.0190295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352131,0.000112767) , 
6, 0.510572, 1, 0, 0.36166,-0.0105836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847093,-0.00631836) , 
4, 0.384155, 1, 0, 0.401455,-0.0136808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960368,0.00440959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85231,-0.00379885) , 
10, 0.470262, 1, 0, 0.918252,-0.00215958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903095,0.00549339) , 
7, 0.164275, 1, 0, 0.913241,0.0154117) , 
12, 0.20782, 1, 0, 0.500058,-0.00807571)    );
  // itree = 1454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993365,0.0135446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718864,-0.0061864) , 
11, 0.542223, 1, 0, 0.861941,-0.0136186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947795,-9.52172e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475122,0.00321851) , 
11, 0.493343, 1, 0, 0.723815,0.0197775) , 
15, 0.116695, 1, 0, 0.784662,0.00506593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806816,0.00114517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213777,-0.00233313) , 
10, 0.56646, 1, 0, 0.48138,-0.0147945) , 
13, 0.669552, 1, 0, 0.644436,-0.00411678) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786199,-0.00143525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767773,0.00203883) , 
10, 0.470988, 1, 0, 0.777242,0.0050936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432742,0.00467227) , 
16, 0.139139, 1, 0, 0.611553,0.0388306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27822,0.000330453) , 
3, 0.765649, 1, 0, 0.402484,0.0184483) , 
13, 0.85369, 1, 0, 0.510059,0.00841557)    );
  // itree = 1455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990941,0.00722486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817763,-0.0030144) , 
3, 0.285805, 1, 0, 0.925218,-0.00841203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902914,0.00599185) , 
8, 0.0220596, 1, 0, 0.918667,0.00364634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528532,-0.00290064) , 
16, 0.210148, 1, 0, 0.816673,-0.00496304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292651,0.00253685) , 
10, 0.631037, 1, 0, 0.698678,0.00332351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283179,-0.000413279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784502,-0.0033605) , 
12, 0.109867, 1, 0, 0.436548,-0.016113) , 
15, 0.199048, 1, 0, 0.606152,-0.00353715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187795,0.000235318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535344,0.00298018) , 
6, 0.487809, 1, 0, 0.334397,0.0245228) , 
11, 0.978863, 1, 0, 0.536205,0.00368517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336242,-0.00124759) , 
6, 0.747891, 1, 0, 0.498837,-0.00242384)    );
  // itree = 1456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424722,-0.00217008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462622,-0.001399) , 
14, 0.103606, 1, 0, 0.444823,-0.0324242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979235,0.00113303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780135,-0.00324823) , 
11, 0.542576, 1, 0, 0.889672,-0.0172958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966204,-0.00185462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833691,0.00239852) , 
11, 0.446828, 1, 0, 0.899396,0.0146768) , 
14, 0.0874082, 1, 0, 0.893211,-0.00565945) , 
12, 0.106193, 1, 0, 0.768375,-0.013111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66513,-0.00175841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740833,0.00377586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195359,0.00139001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279469,-2.18714e-05) , 
11, 1.08752, 1, 0, 0.22609,0.0125749) , 
10, 0.42355, 1, 0, 0.293804,0.019015) , 
11, 0.656862, 1, 0, 0.342788,0.0140947) , 
8, 0.0287244, 1, 0, 0.509529,0.0034358)    );
  // itree = 1457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921912,-0.00279836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9686,0.00638581) , 
4, 0.486887, 1, 0, 0.940617,-0.00227381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917223,0.0029058) , 
9, 0.0387163, 1, 0, 0.932611,0.00514167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540048,0.002353) , 
6, 0.560069, 1, 0, 0.789821,0.0222137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968015,0.00668212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352179,-0.00111896) , 
3, 0.355664, 1, 0, 0.553271,-0.00774988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191909,0.000694848) , 
17, 1.02148, 1, 0, 0.356117,0.00249656) , 
16, 0.119352, 1, 0, 0.508676,0.00943221)    );
  // itree = 1458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205601,-0.000137775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821618,0.00122004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759513,0.00411816) , 
15, 0.0742582, 1, 0, 0.794055,0.0368271) , 
12, 0.0888728, 1, 0, 0.415816,0.0117869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157615,0.000561965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881676,0.00486871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294192,-0.00185098) , 
13, 0.700611, 1, 0, 0.443338,-0.0211956) , 
12, 0.0605914, 1, 0, 0.31043,-0.00779776) , 
14, 0.0861099, 1, 0, 0.355448,0.000568248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810723,-0.0062734) , 
12, 0.206027, 1, 0, 0.38526,-0.00340966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911809,0.00358971) , 
12, 0.26269, 1, 0, 0.438734,-0.000182612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987103,0.00827428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684331,-0.00533705) , 
13, 0.907605, 1, 0, 0.845324,-0.0346094) , 
5, 0.0511492, 1, 0, 0.487554,-0.00431635)    );
  // itree = 1459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963348,-0.0002438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669217,-0.00294649) , 
6, 0.293803, 1, 0, 0.824173,-0.0243174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382859,0.001157) , 
10, 0.439489, 1, 0, 0.664629,-0.00968877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577965,0.00276984) , 
15, 0.0514243, 1, 0, 0.634717,0.00467709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662093,0.00479143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3554,-0.000308499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938625,-0.00771333) , 
1, 0.280147, 1, 0, 0.566812,-0.0105259) , 
9, 0.0322617, 1, 0, 0.594149,0.00146468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483928,-0.00314691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637874,0.000763364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221945,-0.00178909) , 
7, 0.245761, 1, 0, 0.369259,-0.0150178) , 
9, 0.0347873, 1, 0, 0.399489,-0.0246341) , 
6, 0.280937, 1, 0, 0.473353,-0.0147309) , 
9, 0.019631, 1, 0, 0.529888,-0.00793117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34056,0.000598474) , 
9, 0.0625761, 1, 0, 0.495244,-0.0046059)    );
  // itree = 1460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984336,0.0120783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861197,-0.00576039) , 
6, 0.190803, 1, 0, 0.92635,-0.0128735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724284,0.00233244) , 
13, 0.969856, 1, 0, 0.865552,0.00247133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706949,-0.00380664) , 
15, 0.116346, 1, 0, 0.817854,-0.0112801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822943,0.00299618) , 
14, 0.155408, 1, 0, 0.818754,-0.00416461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769182,0.00316968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482704,0.0027994) , 
7, 0.28874, 1, 0, 0.630923,0.0386809) , 
8, 0.0289647, 1, 0, 0.77348,0.00616264) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610542,-0.001203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414648,-0.00341161) , 
7, 0.349233, 1, 0, 0.497631,-0.0482016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147904,0.000137508) , 
7, 0.567226, 1, 0, 0.27468,-0.0162235) , 
8, 0.0378771, 1, 0, 0.535857,-0.00450188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348799,0.00125001) , 
9, 0.0625761, 1, 0, 0.500929,0.000249274)    );
  // itree = 1461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991319,-0.0142369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995487,0.0123636) , 
16, 0.10232, 1, 0, 0.993465,0.00124987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78972,-0.0052284) , 
3, 0.16562, 1, 0, 0.929131,-0.00868613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352504,0.00211196) , 
10, 0.590221, 1, 0, 0.798979,-0.00160402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298856,-0.00263469) , 
13, 0.813414, 1, 0, 0.654898,-0.0100083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444203,0.00347011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451986,0.00264377) , 
6, 0.269109, 1, 0, 0.448225,0.0315884) , 
6, 0.24057, 1, 0, 0.601804,0.000677932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51743,-0.000994746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322344,-0.00194869) , 
15, 0.113455, 1, 0, 0.39722,-0.0211559) , 
6, 0.306728, 1, 0, 0.549545,-0.00489924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370223,0.00236362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789404,-0.000253465) , 
5, 0.0330965, 1, 0, 0.496331,0.0252733) , 
6, 0.422795, 1, 0, 0.536285,0.00261917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370563,-0.000998043) , 
6, 0.653414, 1, 0, 0.495689,-0.00345023)    );
  // itree = 1462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580297,-0.00512719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12658,-0.00098136) , 
11, 0.729318, 1, 0, 0.274195,-0.0240874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946006,-0.00408783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96588,0.00549899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951895,-0.0042371) , 
2, 0.0478258, 1, 0, 0.960247,0.00617162) , 
9, 0.0140787, 1, 0, 0.956587,0.00177152) , 
4, 0.215138, 1, 0, 0.580011,-0.0124986) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643597,-0.00107285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75253,0.00347751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454879,0.00118895) , 
10, 0.47433, 1, 0, 0.58911,0.0384578) , 
11, 0.691437, 1, 0, 0.602991,0.0250923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243385,-0.000518856) , 
17, 1.04252, 1, 0, 0.431734,0.00837902) , 
6, 0.319107, 1, 0, 0.497631,-0.000899354)    );
  // itree = 1463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768269,0.00101625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570987,-0.00438387) , 
6, 0.264423, 1, 0, 0.673662,-0.0301626) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965547,-0.00212012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89459,0.00413007) , 
13, 0.733099, 1, 0, 0.936623,0.0119961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791047,-0.00330633) , 
16, 0.114721, 1, 0, 0.874788,-0.00416607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596506,0.00222039) , 
11, 0.887309, 1, 0, 0.785622,0.0122957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128,0.000592702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823589,0.000773335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360981,-0.00240325) , 
3, 0.537468, 1, 0, 0.479829,-0.0395941) , 
2, 0.0131015, 1, 0, 0.267055,-0.0109588) , 
10, 0.529344, 1, 0, 0.467954,-0.0019497) , 
14, 0.0169755, 1, 0, 0.492494,-0.00531528)    );
  // itree = 1464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975785,-0.00507745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972332,0.0041697) , 
17, 0.295667, 1, 0, 0.973846,0.00259725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804228,0.000710612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638172,0.00383569) , 
6, 0.204648, 1, 0, 0.723378,0.0202518) , 
10, 0.346668, 1, 0, 0.843659,0.0117736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578699,-0.0025833) , 
6, 0.38657, 1, 0, 0.772453,-0.0020642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463965,0.00200168) , 
11, 0.985043, 1, 0, 0.727023,0.00274284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169897,-0.00130361) , 
8, 0.0513497, 1, 0, 0.535426,-0.00466816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344027,-0.00142024) , 
6, 0.679901, 1, 0, 0.492194,-0.010786)    );
  // itree = 1465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964342,0.00833637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993342,0.0163135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957837,-0.00619859) , 
9, 0.026447, 1, 0, 0.975357,-0.00116282) , 
2, 0.0317601, 1, 0, 0.971691,0.00597935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941933,-0.00880711) , 
12, 0.275838, 1, 0, 0.964001,-0.00118568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583765,-0.00368478) , 
8, 0.0359813, 1, 0, 0.883048,-0.00881026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774883,0.00268844) , 
6, 0.325206, 1, 0, 0.865622,-0.0033486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686554,-0.00250397) , 
6, 0.425271, 1, 0, 0.837239,-0.00809537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466397,0.00197617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128676,0.000463553) , 
16, 0.293821, 1, 0, 0.280532,0.0200613) , 
3, 0.547704, 1, 0, 0.541937,0.00684022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350534,-0.000994972) , 
6, 0.747891, 1, 0, 0.50672,0.00136279)    );
  // itree = 1466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932365,-0.00163857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467539,0.00344915) , 
17, 0.675647, 1, 0, 0.723729,0.021331) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959579,-0.00290417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81089,0.00355231) , 
11, 0.455081, 1, 0, 0.898057,0.0141265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334551,-0.000488029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817576,-0.00597176) , 
4, 0.15937, 1, 0, 0.58872,-0.0328618) , 
7, 0.112111, 1, 0, 0.733987,-0.0107957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240644,0.00103264) , 
16, 0.236279, 1, 0, 0.556712,-0.00222606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434164,-0.00231188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222282,-0.000464223) , 
17, 1.04873, 1, 0, 0.29059,-0.0211144) , 
11, 0.96735, 1, 0, 0.448594,-0.00989991) , 
9, 0.0163163, 1, 0, 0.494201,-0.00472298)    );
  // itree = 1467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183146,-0.00100548) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916465,-0.00436031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984324,-9.40757e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955887,0.00219825) , 
11, 0.361516, 1, 0, 0.970163,0.00346339) , 
12, 0.198216, 1, 0, 0.944476,-0.00741171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842083,0.00312563) , 
11, 0.658558, 1, 0, 0.920893,0.00358628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560084,-0.00116805) , 
11, 0.987853, 1, 0, 0.829196,-0.00449725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957049,0.00201141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669608,0.00269343) , 
17, 0.637857, 1, 0, 0.808272,0.0295953) , 
16, 0.157204, 1, 0, 0.824086,0.00382899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588327,0.0028471) , 
10, 0.699808, 1, 0, 0.787998,0.0121256) , 
4, 0.0626134, 1, 0, 0.612141,0.00366628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.086056,-0.001822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319612,-0.0035278) , 
12, 0.0695064, 1, 0, 0.149439,-0.0316559) , 
16, 0.320702, 1, 0, 0.494166,-0.00533981)    );
  // itree = 1468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950486,-0.000800829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860789,0.0038065) , 
6, 0.210276, 1, 0, 0.901311,0.0172358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960978,0.00248297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625895,-0.00539819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478702,-0.00141505) , 
11, 0.784395, 1, 0, 0.542535,-0.043163) , 
11, 0.536625, 1, 0, 0.711963,-0.0229831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606264,0.00217455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612629,-0.000882567) , 
15, 0.299003, 1, 0, 0.60942,0.00856932) , 
15, 0.213688, 1, 0, 0.6815,-0.0136097) , 
15, 0.0368177, 1, 0, 0.734881,-0.00611895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122696,0.00103628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517318,0.00264103) , 
2, 0.0128963, 1, 0, 0.224378,0.0185842) , 
16, 0.29462, 1, 0, 0.573634,0.00168375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39553,-0.00106479) , 
11, 1.23868, 1, 0, 0.543199,-0.00273907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342031,0.000916865) , 
9, 0.0611863, 1, 0, 0.501407,0.00108013)    );
  // itree = 1469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986762,0.0016475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.778683,-0.00244318) , 
3, 0.261652, 1, 0, 0.906384,-0.0106752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979239,0.00406294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718622,0.00302069) , 
3, 0.266037, 1, 0, 0.824314,0.032261) , 
10, 0.282315, 1, 0, 0.867622,0.00960384) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543012,-0.00301045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884261,-0.00107711) , 
12, 0.172956, 1, 0, 0.716752,-0.030233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703981,0.00190542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218522,-0.00062121) , 
17, 0.761427, 1, 0, 0.312733,-0.00355333) , 
16, 0.0841771, 1, 0, 0.403052,-0.00951756) , 
10, 0.423475, 1, 0, 0.576086,-0.00239556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205235,0.00139771) , 
8, 0.0609264, 1, 0, 0.499603,0.0025329)    );
  // itree = 1470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994191,0.0122547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714308,-0.000210626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822926,-0.00441878) , 
4, 0.403468, 1, 0, 0.760577,-0.0198263) , 
17, 0.270094, 1, 0, 0.831768,-0.0100238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438343,-0.0036192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856117,-0.00370723) , 
0, 0.143273, 1, 0, 0.641918,-0.0470695) , 
14, 0.0893818, 1, 0, 0.767189,-0.0226251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79731,0.00247316) , 
14, 0.189944, 1, 0, 0.771494,-0.0158619) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641894,0.000217972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403974,0.00426526) , 
7, 0.306531, 1, 0, 0.534109,0.0259958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591842,0.00140078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198903,-0.00103463) , 
7, 0.393509, 1, 0, 0.337452,-0.000453974) , 
8, 0.0389172, 1, 0, 0.429277,0.0118962) , 
8, 0.0286528, 1, 0, 0.608013,-0.00260155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171258,-0.00144141) , 
8, 0.0562056, 1, 0, 0.487093,-0.00823358)    );
  // itree = 1471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339095,0.00148144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938644,-0.0033894) , 
12, 0.110354, 1, 0, 0.61219,0.00458127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440022,0.00167346) , 
13, 1.01642, 1, 0, 0.542448,0.0154283) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48195,-0.00149599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941009,0.00237963) , 
4, 0.182556, 1, 0, 0.669084,-0.00703555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258992,0.00148414) , 
11, 0.708822, 1, 0, 0.435461,0.00988793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239909,-0.000904037) , 
11, 0.976407, 1, 0, 0.35591,-0.00125994) , 
15, 0.124405, 1, 0, 0.428715,0.00525336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92172,-0.00035631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775717,-0.0038025) , 
8, 0.0180833, 1, 0, 0.864403,-0.0201064) , 
12, 0.225138, 1, 0, 0.500668,0.00106527)    );
  // itree = 1472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980694,-0.0007411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831096,0.00255496) , 
3, 0.2966, 1, 0, 0.920929,0.0115245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842864,-0.00488616) , 
8, 0.0130712, 1, 0, 0.899202,-0.000568071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895293,0.00395165) , 
8, 0.0166658, 1, 0, 0.898303,0.00670774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900806,0.00422152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597956,-0.00444922) , 
6, 0.26067, 1, 0, 0.730175,-0.0269715) , 
8, 0.0188879, 1, 0, 0.844135,-0.00414319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598247,0.00115231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51681,0.0032702) , 
8, 0.0389006, 1, 0, 0.557763,0.0294455) , 
8, 0.0344031, 1, 0, 0.781505,0.00320276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241216,-0.000982455) , 
8, 0.0487411, 1, 0, 0.636914,-0.00155562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237863,-0.00127687) , 
3, 0.756598, 1, 0, 0.494255,-0.00969338)    );
  // itree = 1473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584006,0.00324074) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948628,-0.0100105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964051,0.00137941) , 
12, 0.236927, 1, 0, 0.956025,-0.010056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828,0.00139338) , 
17, 0.383778, 1, 0, 0.905393,0.00133361) , 
4, 0.149899, 1, 0, 0.838847,0.0116618) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483348,-0.00299953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81578,-0.000198576) , 
2, 0.033611, 1, 0, 0.636982,-0.0319375) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589168,0.00230072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481845,0.000481427) , 
16, 0.146387, 1, 0, 0.521324,0.0219382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28856,-0.000917319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196389,0.00099448) , 
16, 0.283709, 1, 0, 0.226086,0.00409036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156816,-0.00193083) , 
11, 0.982844, 1, 0, 0.195082,-0.0113711) , 
16, 0.212507, 1, 0, 0.280127,-0.00268797) , 
7, 0.262836, 1, 0, 0.364959,-0.00964117) , 
8, 0.0189738, 1, 0, 0.509395,-0.00314825)    );
  // itree = 1474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965073,-0.00517413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98075,0.00769639) , 
10, 0.254898, 1, 0, 0.973656,0.00570158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905672,-0.00540423) , 
10, 0.433335, 1, 0, 0.949367,-0.00584175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614606,0.00149619) , 
6, 0.443138, 1, 0, 0.817075,0.00814476) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905083,-0.00376575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777957,0.00277463) , 
8, 0.0311424, 1, 0, 0.835921,0.00412391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31881,-0.00227924) , 
3, 0.52659, 1, 0, 0.541295,-0.0251621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175199,5.70323e-05) , 
10, 0.679265, 1, 0, 0.367955,-0.0128392) , 
7, 0.144301, 1, 0, 0.496485,-0.00683394)    );
  // itree = 1475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965468,-0.00748355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945881,0.000375749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98362,0.00930746) , 
5, 0.0371979, 1, 0, 0.964365,0.00945776) , 
10, 0.286835, 1, 0, 0.964817,0.000569346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828416,0.00409982) , 
6, 0.345796, 1, 0, 0.928768,0.0131679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587674,-0.00349462) , 
7, 0.277164, 1, 0, 0.845499,0.000491605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555694,-0.00305444) , 
11, 0.844323, 1, 0, 0.786382,-0.0102209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152007,0.000668661) , 
7, 0.565505, 1, 0, 0.529891,-0.00236236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414022,0.000937168) , 
6, 0.65331, 1, 0, 0.501704,0.00319258)    );
  // itree = 1476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893746,-0.00137184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608677,-0.00281086) , 
17, 0.481796, 1, 0, 0.757363,-0.0245116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141046,0.000112367) , 
17, 0.744677, 1, 0, 0.286037,-0.0046061) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990179,0.00839396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918283,-0.00988792) , 
10, 0.199395, 1, 0, 0.956048,-0.00959035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971438,-0.00301632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902492,0.00349323) , 
3, 0.260762, 1, 0, 0.940841,0.0104226) , 
10, 0.308156, 1, 0, 0.9482,0.00073835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768218,0.00328857) , 
17, 0.600536, 1, 0, 0.911265,0.0112819) , 
2, 0.021916, 1, 0, 0.527333,0.00152562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385213,-0.00100125) , 
6, 0.6222, 1, 0, 0.490114,-0.00457821)    );
  // itree = 1477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775942,-0.00131325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987556,-0.00599163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943165,0.00551733) , 
3, 0.196605, 1, 0, 0.965458,0.0132546) , 
5, 0.0271179, 1, 0, 0.902508,0.00496681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930492,-0.00665361) , 
12, 0.265482, 1, 0, 0.90894,-0.00119925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496888,0.00386903) , 
8, 0.0437284, 1, 0, 0.836642,0.00794892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129995,8.77223e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462909,-0.00302254) , 
2, 0.0158786, 1, 0, 0.215872,-0.0134976) , 
10, 0.617097, 1, 0, 0.554853,-0.00178641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430791,0.00156956) , 
6, 0.565066, 1, 0, 0.530578,0.0041564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394161,-0.00101681) , 
13, 1.23404, 1, 0, 0.504433,-0.0010237)    );
  // itree = 1478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154294,3.29711e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.252065,0.001704) , 
12, 0.0507844, 1, 0, 0.209872,0.013446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737926,-0.00315499) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98726,-0.0119814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971941,0.00733918) , 
3, 0.1703, 1, 0, 0.981195,0.00432424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829871,-0.00401061) , 
3, 0.341809, 1, 0, 0.94239,-0.00684668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902698,0.00367875) , 
8, 0.0284166, 1, 0, 0.933864,0.000776146) , 
4, 0.243356, 1, 0, 0.884521,-0.00963062) , 
4, 0.10792, 1, 0, 0.547252,0.0019058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457887,-0.00177487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316893,1.38677e-05) , 
10, 0.566514, 1, 0, 0.386985,-0.0202888) , 
6, 0.543921, 1, 0, 0.494279,-0.0054301)    );
  // itree = 1479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981162,0.00468065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934254,-0.0066703) , 
15, 0.12354, 1, 0, 0.963889,-0.00300008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894232,0.00336446) , 
17, 0.408006, 1, 0, 0.946078,0.00475812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425216,-0.00209549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725358,0.000204754) , 
2, 0.0330965, 1, 0, 0.532855,-0.0300427) , 
17, 0.562387, 1, 0, 0.772108,-0.00989321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678297,0.00219871) , 
16, 0.204641, 1, 0, 0.752745,-0.00308427) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605809,0.00466914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383023,0.000390996) , 
15, 0.223929, 1, 0, 0.476864,0.0360526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127602,0.000171058) , 
16, 0.270216, 1, 0, 0.288536,0.0178749) , 
10, 0.564733, 1, 0, 0.505213,0.00809185)    );
  // itree = 1480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138704,-0.000363727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220078,0.00111125) , 
12, 0.0525379, 1, 0, 0.178297,0.00642669) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988798,0.00532878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910202,-0.0113295) , 
17, 0.214917, 1, 0, 0.955532,-0.0141735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882524,0.00200906) , 
17, 0.313167, 1, 0, 0.925388,-0.0011332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840209,-0.00398628) , 
16, 0.150319, 1, 0, 0.905931,-0.0068517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659417,0.00241358) , 
11, 0.938561, 1, 0, 0.854203,0.00502195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543444,-0.000397745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455609,-0.00254291) , 
6, 0.401792, 1, 0, 0.493947,-0.036819) , 
8, 0.0346128, 1, 0, 0.719033,-0.010677) , 
5, 0.0121939, 1, 0, 0.498611,-0.00370494)    );
  // itree = 1481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925883,-0.00672003) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137524,0.000336432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165852,-0.000795621) , 
14, 0.120873, 1, 0, 0.149526,-0.00217974) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980171,-0.00583748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993661,0.00914683) , 
15, 0.142422, 1, 0, 0.98649,0.00358462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856439,0.0034713) , 
17, 0.341544, 1, 0, 0.940219,0.0109002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57526,-0.00227397) , 
13, 0.813414, 1, 0, 0.835536,-0.00112682) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52076,0.00230163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746518,-0.000550011) , 
0, 0.130948, 1, 0, 0.607378,0.0283605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86382,0.00526024) , 
12, 0.213803, 1, 0, 0.663297,0.0381277) , 
6, 0.341569, 1, 0, 0.741369,0.0203344) , 
1, 0.0646248, 1, 0, 0.481262,0.0104397) , 
10, 0.158593, 1, 0, 0.50948,0.00827091)    );
  // itree = 1482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906683,0.00160181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736893,-0.00509135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764108,-0.000376073) , 
14, 0.0474997, 1, 0, 0.753372,-0.0277793) , 
10, 0.262364, 1, 0, 0.814193,-0.013024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834745,0.0057991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714093,-0.000575199) , 
14, 0.101278, 1, 0, 0.771716,0.0297987) , 
10, 0.461403, 1, 0, 0.799967,0.00131765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523588,-0.00194752) , 
9, 0.0547541, 1, 0, 0.724568,-0.00877745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135414,0.000384082) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602062,0.00227011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787878,-0.00111801) , 
5, 0.0314768, 1, 0, 0.678505,0.0141952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583153,0.00402685) , 
14, 0.0971542, 1, 0, 0.646516,0.0324393) , 
4, 0.0696875, 1, 0, 0.318032,0.0148459) , 
16, 0.159136, 1, 0, 0.507523,0.00383483)    );
  // itree = 1483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845735,0.00295459) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472153,-0.00218398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220962,0.00109038) , 
16, 0.284072, 1, 0, 0.319105,-0.00668399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891183,0.00317141) , 
12, 0.133168, 1, 0, 0.460118,0.00154731) , 
16, 0.0951879, 1, 0, 0.543406,0.00771789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446705,0.00244502) , 
9, 0.0399446, 1, 0, 0.515589,0.0162462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816666,-0.00613903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903863,-0.000598933) , 
4, 0.495374, 1, 0, 0.862855,-0.0297101) , 
12, 0.22639, 1, 0, 0.59101,0.00626519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831905,0.000908047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216392,-0.00209892) , 
3, 0.492287, 1, 0, 0.365941,-0.0268486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491441,0.00231915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434557,0.000335994) , 
15, 0.262488, 1, 0, 0.460821,0.0149634) , 
14, 0.15131, 1, 0, 0.397403,-0.0129837) , 
14, 0.0889541, 1, 0, 0.507794,-0.00200842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336499,-0.00236772) , 
15, 0.378182, 1, 0, 0.492165,-0.00544429)    );
  // itree = 1484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86508,-0.00251167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958513,-0.000874734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596641,0.00180691) , 
6, 0.378587, 1, 0, 0.750018,0.0197619) , 
16, 0.0520258, 1, 0, 0.778665,0.0104701) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581431,-0.00154501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491748,-0.00405071) , 
16, 0.126967, 1, 0, 0.541705,-0.0520026) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535619,0.0014522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286653,-0.00125493) , 
6, 0.247973, 1, 0, 0.404461,-0.00377307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141854,-0.00285944) , 
16, 0.383405, 1, 0, 0.304545,-0.0156074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295891,0.000564127) , 
6, 0.418976, 1, 0, 0.301556,-0.00692756) , 
16, 0.158724, 1, 0, 0.351861,-0.0163696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291749,0.00108322) , 
14, 0.151904, 1, 0, 0.340071,-0.00989589) , 
7, 0.176888, 1, 0, 0.463805,-0.00415036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933624,0.00571514) , 
2, 0.0569643, 1, 0, 0.499106,-0.00103333)    );
  // itree = 1485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915576,0.00583363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99074,-0.00640611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571138,-0.00698093) , 
3, 0.154286, 1, 0, 0.770911,-0.0303874) , 
14, 0.022874, 1, 0, 0.819343,-0.0163527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668821,0.00198601) , 
15, 0.166688, 1, 0, 0.767116,-0.00563398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400725,-0.00216913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228464,-0.00228533) , 
6, 0.189595, 1, 0, 0.288722,-0.0268673) , 
13, 0.786156, 1, 0, 0.590452,-0.0134751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453274,0.00267966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804707,0.00220412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248174,-0.000134618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750745,-0.00413379) , 
1, 0.217404, 1, 0, 0.367506,-0.0149102) , 
8, 0.0175637, 1, 0, 0.466679,-0.00496451) , 
6, 0.353614, 1, 0, 0.463232,0.0042657) , 
6, 0.293023, 1, 0, 0.52819,-0.00479266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354811,-0.00128264) , 
6, 0.679284, 1, 0, 0.488332,-0.0103406)    );
  // itree = 1486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969526,0.00578823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932355,0.00168054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932619,-0.00401699) , 
8, 0.008879, 1, 0, 0.932488,-0.00344274) , 
9, 0.0175983, 1, 0, 0.946748,0.0050825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511434,-0.00189059) , 
17, 0.56017, 1, 0, 0.798578,-0.00984761) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891606,-0.000444027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625758,0.00286626) , 
11, 0.72716, 1, 0, 0.739007,0.0307584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540943,0.00217919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171605,-0.000916537) , 
3, 0.608375, 1, 0, 0.256131,-0.00506966) , 
7, 0.344546, 1, 0, 0.401573,0.00572171) , 
8, 0.0196884, 1, 0, 0.542693,0.000187421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491495,-0.00379418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876702,-0.000820836) , 
12, 0.125786, 1, 0, 0.673361,-0.0382912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221339,-0.000388976) , 
7, 0.229542, 1, 0, 0.390932,-0.0181961) , 
14, 0.125346, 1, 0, 0.496806,-0.00537112)    );
  // itree = 1487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998503,0.0178383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86079,-0.00219529) , 
3, 0.235107, 1, 0, 0.944237,-0.00294536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483986,-0.00394306) , 
17, 0.464713, 1, 0, 0.802654,-0.0263635) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539417,3.86522e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322755,0.0022049) , 
11, 0.69063, 1, 0, 0.391737,0.0227788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103377,-0.000697614) , 
10, 0.692796, 1, 0, 0.217172,0.00327014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939812,-0.0145301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89323,0.00111188) , 
6, 0.186688, 1, 0, 0.912615,-0.00800079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607527,-0.00312891) , 
17, 0.725836, 1, 0, 0.839451,-0.0217103) , 
4, 0.156677, 1, 0, 0.432114,-0.00535836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402472,0.00137201) , 
6, 0.688967, 1, 0, 0.425536,0.0025954) , 
8, 0.0148264, 1, 0, 0.498327,-0.00299419)    );
  // itree = 1488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49212,-0.00201018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337475,-0.000800694) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290082,0.00288824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251743,0.00025304) , 
15, 0.131718, 1, 0, 0.271007,0.0233855) , 
15, 0.0387179, 1, 0, 0.287262,0.0148464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172755,-0.000951603) , 
9, 0.0430388, 1, 0, 0.231411,0.000364754) , 
16, 0.110829, 1, 0, 0.277727,-0.00659562) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999438,0.0175509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981903,-0.0118302) , 
6, 0.133538, 1, 0, 0.991356,-0.000860037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979517,0.0104688) , 
3, 0.173103, 1, 0, 0.987797,0.00671029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764431,-0.00363729) , 
3, 0.291386, 1, 0, 0.931292,-0.00626991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746942,-0.000281312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787209,0.00316089) , 
14, 0.0534751, 1, 0, 0.770474,0.031582) , 
6, 0.400645, 1, 0, 0.867819,0.00866969) , 
12, 0.120679, 1, 0, 0.500606,-0.000829898)    );
  // itree = 1489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259797,-0.00205699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126251,6.12952e-05) , 
8, 0.0352554, 1, 0, 0.153008,-0.00619808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692269,0.00106862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483679,0.00469389) , 
16, 0.193454, 1, 0, 0.590813,0.046079) , 
5, 0.0107592, 1, 0, 0.261835,0.00679672) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993873,0.0145485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980905,-0.0126075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872517,-0.00719176) , 
3, 0.184784, 1, 0, 0.939701,-0.0213631) , 
14, 0.020891, 1, 0, 0.953862,-0.0119946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898344,0.00264048) , 
6, 0.309387, 1, 0, 0.938022,-0.00249045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549111,-0.00138572) , 
3, 0.517709, 1, 0, 0.771574,-0.0148191) , 
5, 0.0182908, 1, 0, 0.503098,-0.00343416)    );
  // itree = 1490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267967,-0.00186203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891537,0.00497484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933204,-0.00750948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962803,0.00127334) , 
4, 0.499663, 1, 0, 0.946869,-0.0108863) , 
1, 0.324361, 1, 0, 0.930509,0.00255594) , 
2, 0.0182908, 1, 0, 0.67602,-0.00672824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72847,-0.000591294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463066,0.00182203) , 
6, 0.21888, 1, 0, 0.579095,0.0109878) , 
14, 0.116241, 1, 0, 0.64608,-0.00125574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44707,0.00116049) , 
6, 0.429358, 1, 0, 0.587974,0.00464094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177298,-7.26702e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512788,-0.0017784) , 
5, 0.0176786, 1, 0, 0.320306,-0.0186121) , 
11, 1.00026, 1, 0, 0.494155,-0.00350937)    );
  // itree = 1491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943843,5.96556e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803664,0.00386234) , 
13, 0.862323, 1, 0, 0.887353,0.0212244) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984819,0.00269265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954428,-0.00997689) , 
7, 0.18155, 1, 0, 0.969496,-0.00735331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692678,-0.00298448) , 
3, 0.303138, 1, 0, 0.859394,-0.0246636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812004,0.00221851) , 
10, 0.377023, 1, 0, 0.848515,-0.0137115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649055,-0.00229283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459142,-0.00337495) , 
14, 0.112717, 1, 0, 0.536584,-0.0521408) , 
10, 0.468982, 1, 0, 0.726877,-0.028697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529721,0.00331317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188356,-0.00123898) , 
7, 0.522294, 1, 0, 0.285471,0.000805664) , 
7, 0.402613, 1, 0, 0.575796,-0.0185991) , 
16, 0.0631328, 1, 0, 0.63335,-0.0112425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204791,0.000855057) , 
17, 1.09879, 1, 0, 0.497756,-0.00322225)    );
  // itree = 1492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912376,-0.00840918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683569,-0.00155051) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96885,-0.00266597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959115,0.00400211) , 
17, 0.306919, 1, 0, 0.965083,0.00262652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923485,0.00628686) , 
11, 0.58426, 1, 0, 0.953036,0.016274) , 
5, 0.0166619, 1, 0, 0.899151,0.00931659) , 
9, 0.0147648, 1, 0, 0.90208,0.000836619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377911,-0.00209934) , 
3, 0.535259, 1, 0, 0.69752,-0.0155455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321566,0.00144945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134082,-0.000495335) , 
10, 0.705916, 1, 0, 0.219284,0.00879837) , 
17, 0.982583, 1, 0, 0.493979,-0.00518458)    );
  // itree = 1493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632922,0.00026714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330363,0.00245092) , 
8, 0.0269472, 1, 0, 0.459458,0.0208667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153371,-0.000296883) , 
8, 0.0458154, 1, 0, 0.272981,0.00556252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689964,0.00279358) , 
2, 0.0182305, 1, 0, 0.350589,0.0123647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2343,-0.000621742) , 
9, 0.0586651, 1, 0, 0.317259,0.00583395) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988761,0.00663591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933847,-0.00740521) , 
16, 0.102406, 1, 0, 0.96093,-0.0074485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96563,0.00356203) , 
9, 0.0323672, 1, 0, 0.962541,-0.00135174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783635,-0.00330827) , 
13, 0.895629, 1, 0, 0.917512,-0.0108736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873706,0.00311983) , 
15, 0.196626, 1, 0, 0.908616,-0.002581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61605,-0.00177985) , 
13, 1.15344, 1, 0, 0.828412,-0.0132767) , 
5, 0.0270476, 1, 0, 0.500952,-0.00103382)    );
  // itree = 1494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300319,0.000802618) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991296,0.00618037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952424,-0.00488452) , 
10, 0.294678, 1, 0, 0.969443,-0.0044945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916079,0.0019531) , 
16, 0.126184, 1, 0, 0.949145,0.000845309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764968,-0.00388213) , 
6, 0.335199, 1, 0, 0.89615,-0.0138318) , 
4, 0.0930261, 1, 0, 0.689144,-0.00506807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314774,-0.00273791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754488,-0.00063185) , 
12, 0.175075, 1, 0, 0.462132,-0.0419136) , 
13, 1.01677, 1, 0, 0.622783,-0.0158389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207633,0.000581579) , 
17, 1.1183, 1, 0, 0.497252,-0.00809126)    );
  // itree = 1495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982559,-0.00971076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992738,0.00826059) , 
15, 0.122762, 1, 0, 0.987748,-0.000652303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99843,0.0195873) , 
13, 0.614474, 1, 0, 0.991484,0.00304848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743119,-0.00345602) , 
3, 0.224579, 1, 0, 0.900599,-0.0115807) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737515,0.00247174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460838,-0.00309689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394294,0.00146069) , 
15, 0.0332062, 1, 0, 0.423988,-0.0053803) , 
16, 0.161155, 1, 0, 0.557688,0.0140866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401441,-0.00157918) , 
15, 0.105864, 1, 0, 0.506005,0.00103191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336321,0.00189924) , 
15, 0.174167, 1, 0, 0.431641,0.014902) , 
11, 0.604141, 1, 0, 0.587778,0.00608471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173092,-0.00132707) , 
17, 1.21827, 1, 0, 0.498751,-0.000239348)    );
  // itree = 1496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993959,0.00737993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918171,0.00373377) , 
3, 0.197882, 1, 0, 0.956368,0.0146759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952354,-0.00641607) , 
1, 0.502295, 1, 0, 0.955151,0.00606172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906052,-0.00525086) , 
16, 0.158998, 1, 0, 0.940583,-0.00161482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898269,0.00228624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471839,0.00340995) , 
11, 0.570201, 1, 0, 0.681603,0.033321) , 
10, 0.460286, 1, 0, 0.859341,0.00934457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41251,-0.00232397) , 
10, 0.670706, 1, 0, 0.784276,0.00152726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521948,0.00332064) , 
11, 0.938137, 1, 0, 0.752425,0.00704836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176715,-0.00054608) , 
3, 0.631178, 1, 0, 0.520594,0.000768773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454052,0.00134709) , 
13, 1.22718, 1, 0, 0.507681,0.00635207)    );
  // itree = 1497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820542,0.00289562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2004,-0.00213023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234587,0.000880288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194002,-0.000842382) , 
9, 0.0543713, 1, 0, 0.214296,-0.000362397) , 
9, 0.027377, 1, 0, 0.211157,-0.00809821) , 
10, 0.292861, 1, 0, 0.26472,-0.00456215) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970107,-0.000788119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978335,0.0100501) , 
7, 0.178687, 1, 0, 0.974203,0.0157435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971075,-0.00731224) , 
4, 0.417708, 1, 0, 0.972973,0.00573337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866947,-0.00314139) , 
13, 0.786498, 1, 0, 0.943663,-0.00246563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752374,0.00149426) , 
13, 1.06602, 1, 0, 0.895299,0.00539396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733399,0.00317938) , 
10, 0.662795, 1, 0, 0.869684,0.0142129) , 
12, 0.115304, 1, 0, 0.506371,0.00293748)    );
  // itree = 1498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229878,0.00273927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781411,-0.00368684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98477,0.00932787) , 
12, 0.167164, 1, 0, 0.905488,-0.000929534) , 
12, 0.0701653, 1, 0, 0.684425,0.00996982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680846,-0.00503383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659148,0.000117673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363086,-0.00210031) , 
16, 0.16024, 1, 0, 0.477592,-0.0204414) , 
16, 0.0898967, 1, 0, 0.530646,-0.0348933) , 
6, 0.293803, 1, 0, 0.613623,-0.0106857) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803806,0.00455833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418419,-0.00313694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334067,-0.00112547) , 
14, 0.0932633, 1, 0, 0.367317,-0.0214715) , 
6, 0.175968, 1, 0, 0.48417,-0.0109493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455833,0.00196768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322977,0.000281462) , 
14, 0.105571, 1, 0, 0.384652,0.0194719) , 
6, 0.373945, 1, 0, 0.424712,0.00722615) , 
9, 0.0340848, 1, 0, 0.504769,-0.00036453)    );
  // itree = 1499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968138,0.000655698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742889,0.00212831) , 
13, 0.87287, 1, 0, 0.86166,0.0174533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595783,-0.00391228) , 
16, 0.196967, 1, 0, 0.79274,0.00208772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331001,0.00203064) , 
8, 0.0404587, 1, 0, 0.64211,0.0110857) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379555,-0.00353581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748375,0.000958368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215599,-0.00125711) , 
16, 0.125001, 1, 0, 0.344872,-0.0101761) , 
9, 0.034178, 1, 0, 0.351762,-0.0164261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222172,0.000948221) , 
11, 0.941343, 1, 0, 0.292185,-0.00134508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969867,0.00364047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628651,-0.00344734) , 
3, 0.410973, 1, 0, 0.789604,-0.0337609) , 
5, 0.0305468, 1, 0, 0.427954,-0.0101929) , 
9, 0.0215194, 1, 0, 0.492492,-0.00378034)    );
  // itree = 1500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886749,0.00253397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303047,-0.00206849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160253,-0.00151509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192181,0.000337172) , 
11, 0.91985, 1, 0, 0.179341,-0.00528784) , 
8, 0.0324941, 1, 0, 0.202247,-0.0120567) , 
17, 0.609983, 1, 0, 0.305819,-0.00748966) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914435,-0.000662293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645866,-0.00594626) , 
10, 0.324342, 1, 0, 0.773682,-0.054941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788324,0.000327135) , 
14, 0.0938161, 1, 0, 0.778866,-0.0339167) , 
5, 0.0264363, 1, 0, 0.426355,-0.0142235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916355,-0.000153121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895947,0.00398475) , 
16, 0.0874643, 1, 0, 0.907465,0.0150627) , 
2, 0.0464733, 1, 0, 0.501534,-0.00964722)    );
  // itree = 1501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941788,-0.0108883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967541,0.00311761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639397,0.00415813) , 
3, 0.360609, 1, 0, 0.841555,0.023555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152849,-0.000945094) , 
16, 0.266526, 1, 0, 0.509392,0.00607206) , 
10, 0.238366, 1, 0, 0.626344,-0.00236387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461961,-0.00166074) , 
6, 0.495661, 1, 0, 0.565781,-0.0141524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391686,-0.000887335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148825,0.00062719) , 
16, 0.221523, 1, 0, 0.245916,-0.00145013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92069,0.00170523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858644,0.00500716) , 
10, 0.541466, 1, 0, 0.891303,0.0388687) , 
4, 0.180211, 1, 0, 0.417452,0.0092661) , 
14, 0.100578, 1, 0, 0.504396,-0.00446076)    );
  // itree = 1502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818561,-0.00307547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746565,0.00174248) , 
15, 0.204702, 1, 0, 0.783013,-0.00363773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562119,-0.00352257) , 
7, 0.181372, 1, 0, 0.697642,-0.0217394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446415,0.000888704) , 
16, 0.203914, 1, 0, 0.614272,-0.0107671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981656,-0.00544953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989582,0.00499177) , 
15, 0.0557326, 1, 0, 0.985661,-6.46254e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887225,0.00317265) , 
3, 0.253856, 1, 0, 0.939526,0.0145012) , 
2, 0.0361008, 1, 0, 0.746664,-0.000481847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15492,0.00154775) , 
7, 0.578281, 1, 0, 0.576113,0.00535069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271242,-0.00124398) , 
11, 1.01389, 1, 0, 0.504632,-0.000839714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439966,0.00128057) , 
11, 1.29285, 1, 0, 0.494706,0.00386066)    );
  // itree = 1503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527318,0.00228495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476026,0.00121171) , 
15, 0.242892, 1, 0, 0.50192,0.0199257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995549,0.00321903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911218,-0.01275) , 
3, 0.119355, 1, 0, 0.952764,-0.0214361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96141,0.00313454) , 
13, 0.592658, 1, 0, 0.9558,-0.0103389) , 
4, 0.16393, 1, 0, 0.759537,0.0027479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622618,-0.00490277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370649,-0.000946921) , 
9, 0.0196991, 1, 0, 0.448417,-0.0204471) , 
13, 0.697086, 1, 0, 0.637005,-0.00638726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379815,0.00198586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317877,-0.000854208) , 
13, 1.01245, 1, 0, 0.352078,0.00761519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448172,0.00279766) , 
6, 0.551588, 1, 0, 0.386228,0.0227636) , 
13, 0.846466, 1, 0, 0.523388,0.00681983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399651,-0.000829798) , 
13, 1.26971, 1, 0, 0.502637,0.00248965)    );
  // itree = 1504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996128,0.0102827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908634,-0.00532108) , 
3, 0.186842, 1, 0, 0.961535,-0.00731918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957644,0.00374043) , 
9, 0.0358657, 1, 0, 0.960039,0.00126431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7724,-0.00706051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824859,0.00216476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58088,-0.00215108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482038,-0.000404311) , 
7, 0.378597, 1, 0, 0.544082,-0.0270999) , 
17, 0.615369, 1, 0, 0.622023,-0.0131184) , 
17, 0.518019, 1, 0, 0.658925,-0.0271378) , 
17, 0.416176, 1, 0, 0.798118,-0.0140087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139295,9.27592e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585101,0.00179242) , 
12, 0.086883, 1, 0, 0.24198,0.0108114) , 
17, 0.849065, 1, 0, 0.494227,-0.000446236)    );
  // itree = 1505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38992,0.00308033) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930463,-0.00026428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706266,-0.0034034) , 
8, 0.0318953, 1, 0, 0.836329,-0.0179079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99446,0.00757305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97045,-0.00357377) , 
15, 0.0728621, 1, 0, 0.982599,-0.00115256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971933,0.0106625) , 
11, 0.455189, 1, 0, 0.978873,0.0111176) , 
4, 0.336836, 1, 0, 0.916785,-0.00152504) , 
5, 0.0129704, 1, 0, 0.816964,0.00698086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349668,-0.00299955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149706,-3.18579e-05) , 
11, 0.794513, 1, 0, 0.211476,-0.00989988) , 
16, 0.270003, 1, 0, 0.585896,0.000538772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318377,-0.00248547) , 
13, 1.01556, 1, 0, 0.531349,-0.00702211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500151,-0.000229649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390569,0.00152146) , 
3, 0.768125, 1, 0, 0.431986,0.019828) , 
6, 0.55998, 1, 0, 0.500686,0.00126371)    );
  // itree = 1506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246498,0.00053802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223383,-0.00155394) , 
6, 0.252273, 1, 0, 0.232861,-0.0134087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610596,-0.00563033) , 
12, 0.091489, 1, 0, 0.309723,-0.0300214) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938061,-0.00887937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989767,0.0112623) , 
7, 0.0838964, 1, 0, 0.96395,-0.00642973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862704,0.00359707) , 
17, 0.479733, 1, 0, 0.92891,0.0107772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792893,-0.00246107) , 
10, 0.445471, 1, 0, 0.884788,-0.00228814) , 
12, 0.122789, 1, 0, 0.586403,-0.0166781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13353,-0.00090352) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893302,-0.00624882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781848,0.000207318) , 
8, 0.0156709, 1, 0, 0.83654,-0.0162858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540028,0.00231669) , 
11, 0.705319, 1, 0, 0.661985,0.0228343) , 
2, 0.00268386, 1, 0, 0.4038,0.00521428) , 
9, 0.0367118, 1, 0, 0.492193,-0.00538328)    );
  // itree = 1507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995066,0.000590015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92407,-0.00611943) , 
3, 0.16901, 1, 0, 0.961012,-0.0111162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577134,-0.00252642) , 
3, 0.374852, 1, 0, 0.788079,-0.0279824) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964081,-0.00671442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948339,-0.00822225) , 
9, 0.0179807, 1, 0, 0.956287,-0.0135861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655023,0.00195553) , 
3, 0.267457, 1, 0, 0.837124,0.000367695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157876,-0.0022524) , 
3, 0.545657, 1, 0, 0.496172,-0.0158792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433854,0.00223677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291924,0.000249622) , 
6, 0.271082, 1, 0, 0.339863,0.010181) , 
9, 0.0398722, 1, 0, 0.438492,-0.00626265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417868,0.0013478) , 
6, 0.564168, 1, 0, 0.431809,0.00469062) , 
16, 0.0795681, 1, 0, 0.502162,-0.00176136)    );
  // itree = 1508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976075,-0.00138523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449544,-0.003371) , 
7, 0.286067, 1, 0, 0.66463,-0.0204807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527626,0.00141848) , 
6, 0.289946, 1, 0, 0.616612,-0.00671145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485621,-0.0035008) , 
13, 0.760545, 1, 0, 0.567241,-0.0255317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972724,-0.007182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890009,0.00137156) , 
3, 0.218304, 1, 0, 0.934586,0.000396647) , 
12, 0.192955, 1, 0, 0.69963,-0.0161872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650426,0.00190875) , 
14, 0.172676, 1, 0, 0.69215,-0.0106955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107415,-0.000740014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51164,0.0016379) , 
1, 0.0715461, 1, 0, 0.266867,0.00904307) , 
3, 0.684541, 1, 0, 0.504362,-0.00197978)    );
  // itree = 1509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24289,0.000722189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137075,-0.00135648) , 
6, 0.253197, 1, 0, 0.16951,-0.0114303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525053,0.00135915) , 
2, 0.0149549, 1, 0, 0.246807,-0.00436041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231208,0.00161737) , 
11, 1.0587, 1, 0, 0.241139,0.00799529) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992345,0.00666866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936776,-0.00984619) , 
10, 0.323055, 1, 0, 0.963816,-0.0114988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927887,0.00222765) , 
6, 0.246339, 1, 0, 0.954506,-0.0052405) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682209,-0.00377528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744712,0.000291241) , 
16, 0.0925972, 1, 0, 0.715616,-0.029152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655956,-0.00452476) , 
16, 0.174929, 1, 0, 0.699519,-0.0416814) , 
11, 0.601237, 1, 0, 0.822065,-0.0241681) , 
4, 0.154902, 1, 0, 0.498785,-0.00626946)    );
  // itree = 1510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968828,-0.00115237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943776,0.00503737) , 
13, 0.662356, 1, 0, 0.959693,0.00759146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931335,-0.00600072) , 
0, 0.25344, 1, 0, 0.950278,-0.00212052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419344,-0.00342045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756511,-0.00161844) , 
12, 0.118695, 1, 0, 0.576834,-0.0474665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50633,-0.000669941) , 
9, 0.0286367, 1, 0, 0.537901,-0.0286529) , 
17, 0.507396, 1, 0, 0.727672,-0.016443) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242461,0.00109821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130234,-0.000828352) , 
10, 0.714667, 1, 0, 0.166693,-0.00213288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753803,0.00237982) , 
5, 0.023985, 1, 0, 0.260504,0.00482851) , 
10, 0.578489, 1, 0, 0.495473,-0.00587029)    );
  // itree = 1511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476623,0.000237563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475098,0.00279049) , 
7, 0.159075, 1, 0, 0.475961,0.0276825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277564,-0.00334788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21414,0.000480027) , 
11, 0.78206, 1, 0, 0.237306,-0.0117867) , 
16, 0.15827, 1, 0, 0.323995,0.0025501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674073,-0.00423034) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991194,0.0017374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975869,0.00712659) , 
13, 0.70727, 1, 0, 0.983878,0.0100307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782634,-0.0026983) , 
11, 0.611978, 1, 0, 0.91427,-0.00565608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.870313,0.00259014) , 
8, 0.0286565, 1, 0, 0.902066,0.00319396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85964,-0.00364611) , 
14, 0.0873087, 1, 0, 0.88975,-0.00674433) , 
4, 0.222358, 1, 0, 0.848717,-0.0191968) , 
12, 0.105248, 1, 0, 0.602838,-0.00900643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207717,0.000796701) , 
10, 0.752977, 1, 0, 0.496758,-0.00340778)    );
  // itree = 1512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961653,0.0030216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936135,-0.00772976) , 
0, 0.191258, 1, 0, 0.950321,-0.00564192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834487,-0.00542732) , 
10, 0.31156, 1, 0, 0.920999,-0.0147492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865045,0.00622362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622049,-0.0026834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200425,0.000755318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894628,0.00462292) , 
0, 0.138714, 1, 0, 0.347732,0.018181) , 
10, 0.541936, 1, 0, 0.392879,0.00986958) , 
10, 0.467897, 1, 0, 0.455231,0.0149961) , 
10, 0.387555, 1, 0, 0.623453,0.00425293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253276,-0.00209437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406237,0.000243531) , 
11, 1.2163, 1, 0, 0.32801,-0.0149903) , 
11, 0.96735, 1, 0, 0.507755,-0.00328289)    );
  // itree = 1513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975081,-0.00826993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988215,0.00962317) , 
17, 0.2484, 1, 0, 0.979755,-0.00247979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507186,-0.00617935) , 
17, 0.408676, 1, 0, 0.854488,-0.0187116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258467,0.000870419) , 
16, 0.306961, 1, 0, 0.67789,-0.0103274) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518115,0.00241836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183246,-0.000204889) , 
3, 0.603051, 1, 0, 0.26378,0.00574738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950289,0.0038718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832292,-0.0017204) , 
17, 0.423942, 1, 0, 0.889932,-0.000454267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750076,0.00324781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687164,0.0013703) , 
16, 0.144753, 1, 0, 0.723777,0.0482299) , 
17, 0.626135, 1, 0, 0.80307,0.0249968) , 
2, 0.0209869, 1, 0, 0.438295,0.0119765) , 
6, 0.223375, 1, 0, 0.505816,0.00569105)    );
  // itree = 1514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99912,0.0185387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928494,-0.00288919) , 
3, 0.163974, 1, 0, 0.966237,-0.00209905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821001,-0.00374006) , 
6, 0.317792, 1, 0, 0.921567,-0.0119373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940524,-0.000591245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795895,0.00284779) , 
6, 0.303075, 1, 0, 0.880575,0.0138545) , 
14, 0.0840331, 1, 0, 0.904313,-0.00108114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792255,0.00359402) , 
16, 0.211026, 1, 0, 0.884305,0.00464009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409499,-0.0010373) , 
3, 0.598896, 1, 0, 0.745681,-0.0028689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296062,0.00159618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170806,-9.65108e-06) , 
8, 0.0569214, 1, 0, 0.23341,0.0144729) , 
17, 0.937968, 1, 0, 0.506832,0.0052168)    );
  // itree = 1515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275966,-0.00182974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12342,4.57846e-05) , 
8, 0.0402857, 1, 0, 0.169707,-0.00800732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699251,0.0026198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866507,-0.00232521) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990156,0.00700719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9655,-0.0107907) , 
4, 0.438593, 1, 0, 0.976418,-0.00478059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89724,0.00236495) , 
3, 0.237151, 1, 0, 0.948117,0.00361147) , 
12, 0.167701, 1, 0, 0.919994,-0.00338175) , 
12, 0.107535, 1, 0, 0.87242,0.00507485) , 
4, 0.0768864, 1, 0, 0.548432,-0.00095673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383837,0.00125164) , 
13, 1.05611, 1, 0, 0.524369,0.00231614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371696,-0.00111049) , 
13, 1.19697, 1, 0, 0.491549,-0.00332398)    );
  // itree = 1516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990137,0.0116375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635893,-0.00327494) , 
3, 0.25482, 1, 0, 0.825501,-0.0132297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857444,0.000107632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406445,0.000631219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929662,0.00620232) , 
5, 0.0212559, 1, 0, 0.662551,0.0272818) , 
6, 0.187292, 1, 0, 0.728273,0.018188) , 
9, 0.0165621, 1, 0, 0.755115,0.00951451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508279,0.00260253) , 
11, 1.04423, 1, 0, 0.693767,0.0197195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199079,-0.00101569) , 
8, 0.0557947, 1, 0, 0.563838,0.0102904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313924,-0.00140954) , 
9, 0.0563147, 1, 0, 0.496027,0.00109645)    );
  // itree = 1517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211012,0.00218315) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979272,0.00253403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909195,0.00399936) , 
13, 0.668139, 1, 0, 0.945035,0.0101989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836085,-0.00761804) , 
9, 0.024053, 1, 0, 0.91162,-0.00728515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906752,0.00484441) , 
9, 0.0371745, 1, 0, 0.910402,0.000752478) , 
5, 0.0118055, 1, 0, 0.71134,0.00790815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265456,-0.00169754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493716,-0.000344624) , 
6, 0.35455, 1, 0, 0.365298,-0.0142976) , 
13, 0.91884, 1, 0, 0.59889,0.00069218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496181,0.00106834) , 
6, 0.565066, 1, 0, 0.570971,0.00656078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173632,-0.000378496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692617,-0.00246046) , 
0, 0.091881, 1, 0, 0.348921,-0.0171007) , 
15, 0.204885, 1, 0, 0.510094,7.37402e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401998,0.00209652) , 
15, 0.373214, 1, 0, 0.500313,0.0029807)    );
  // itree = 1518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993732,0.0102229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992827,0.00130188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914219,-0.00870392) , 
3, 0.151696, 1, 0, 0.959779,-0.0122166) , 
10, 0.258151, 1, 0, 0.973921,-0.00421416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523909,0.00150876) , 
3, 0.297566, 1, 0, 0.815588,0.0038919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247046,3.58714e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127186,-0.00182239) , 
15, 0.0777969, 1, 0, 0.164065,-0.0170773) , 
11, 0.785972, 1, 0, 0.559101,-0.00436312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59745,-0.00151652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499375,-0.00538249) , 
11, 0.908741, 1, 0, 0.560351,-0.0492125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324528,-0.000525533) , 
3, 0.665264, 1, 0, 0.400716,-0.0232988) , 
6, 0.40443, 1, 0, 0.484826,-0.013243)    );
  // itree = 1519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834538,0.00323465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755723,-0.0022541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720093,0.00112798) , 
14, 0.0227979, 1, 0, 0.73816,-0.00519718) , 
16, 0.116072, 1, 0, 0.777549,0.0107869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911575,-0.00673495) , 
4, 0.508868, 1, 0, 0.806398,0.00316304) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402405,-0.00406841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835478,-0.00240856) , 
2, 0.0280091, 1, 0, 0.625557,-0.0520653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826146,-0.00316842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626675,0.000642299) , 
10, 0.411574, 1, 0, 0.711059,-0.00547478) , 
14, 0.100085, 1, 0, 0.669078,-0.0283502) , 
14, 0.0581357, 1, 0, 0.736968,-0.0127703) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345239,-0.00222594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259778,0.00142158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206657,-0.000440449) , 
13, 0.86485, 1, 0, 0.231335,0.00556219) , 
13, 0.66389, 1, 0, 0.252518,-0.00102955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336072,0.00181205) , 
13, 1.05809, 1, 0, 0.281489,0.0102271) , 
10, 0.564733, 1, 0, 0.503082,-0.000961258)    );
  // itree = 1520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999508,0.0214551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93003,-0.0107484) , 
3, 0.142426, 1, 0, 0.969831,-0.00924276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782117,0.00313584) , 
10, 0.373215, 1, 0, 0.896271,0.00199155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262826,-0.00167571) , 
11, 0.73356, 1, 0, 0.76483,-0.00286805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460753,-0.00295581) , 
6, 0.371447, 1, 0, 0.702488,-0.0115512) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197965,0.000577399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789102,0.00489479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583125,0.00127482) , 
11, 0.898402, 1, 0, 0.665741,0.0441431) , 
5, 0.0188283, 1, 0, 0.339913,0.0199031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748281,-0.0021903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854526,0.000151343) , 
12, 0.180765, 1, 0, 0.80174,-0.0163964) , 
5, 0.0457269, 1, 0, 0.41404,0.0140767) , 
13, 0.762576, 1, 0, 0.515334,0.00507697)    );
  // itree = 1521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927724,0.00418925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.818342,-0.00222101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384427,-0.00413207) , 
7, 0.322825, 1, 0, 0.573589,-0.0405487) , 
8, 0.016627, 1, 0, 0.67501,-0.0220293) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991056,-0.00565626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962223,0.00623297) , 
3, 0.163217, 1, 0, 0.9766,0.0145944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83116,-0.00496435) , 
17, 0.386583, 1, 0, 0.928493,-0.00434151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753231,0.00200905) , 
17, 0.532866, 1, 0, 0.881476,0.00482577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346853,-0.0017675) , 
17, 0.734545, 1, 0, 0.697112,-0.0083186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223602,0.000782415) , 
17, 0.985855, 1, 0, 0.476145,0.00161104) , 
15, 0.0343207, 1, 0, 0.517988,-0.0033631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446098,-0.00332726) , 
14, 0.191817, 1, 0, 0.513935,-0.00596533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415165,0.00170918) , 
15, 0.350086, 1, 0, 0.502816,-0.00242054)    );
  // itree = 1522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980892,-0.000762495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894561,-0.00512559) , 
6, 0.1982, 1, 0, 0.939698,-0.0140148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964601,0.00194903) , 
1, 0.451892, 1, 0, 0.951765,-0.00473742) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879589,0.00326135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719943,0.00427841) , 
14, 0.0827342, 1, 0, 0.812792,0.0448751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186522,0.00103887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631475,-0.00135619) , 
5, 0.0196064, 1, 0, 0.275152,0.00672605) , 
17, 0.750521, 1, 0, 0.418007,0.0168625) , 
17, 0.457487, 1, 0, 0.573692,0.0105623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541152,-0.00189759) , 
14, 0.222096, 1, 0, 0.570884,0.00746264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250997,-0.0010304) , 
3, 0.875486, 1, 0, 0.499771,0.00121225)    );
  // itree = 1523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208824,-0.00265992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690601,3.06283e-05) , 
12, 0.0597494, 1, 0, 0.371725,-0.0249952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165911,-0.000177313) , 
13, 0.756958, 1, 0, 0.221937,-0.00896113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976179,0.00352123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631724,-0.00309154) , 
3, 0.295126, 1, 0, 0.775568,-0.0333863) , 
12, 0.121902, 1, 0, 0.334979,-0.0139484) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987395,0.00374942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858437,-0.00636492) , 
11, 0.430016, 1, 0, 0.930223,-0.0187616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919335,0.00311779) , 
8, 0.0179087, 1, 0, 0.925562,-0.00294975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702422,0.00132926) , 
13, 1.12047, 1, 0, 0.858368,0.00643179) , 
2, 0.0330582, 1, 0, 0.497236,-0.00763027)    );
  // itree = 1524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985684,-0.00234799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626149,0.00298013) , 
17, 0.360345, 1, 0, 0.812463,0.00898034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648337,-0.00256658) , 
6, 0.24478, 1, 0, 0.749034,-0.00350332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552586,0.00234071) , 
13, 0.965929, 1, 0, 0.672247,0.013849) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96828,0.00600426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567767,-0.000797444) , 
11, 0.520999, 1, 0, 0.750655,-0.000434202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495953,-0.00283962) , 
8, 0.027464, 1, 0, 0.661012,-0.0196508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638448,0.0022768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140624,-0.00189398) , 
11, 0.669559, 1, 0, 0.246968,-0.0163508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274959,0.00137203) , 
6, 0.412001, 1, 0, 0.25851,0.000265805) , 
16, 0.149679, 1, 0, 0.423064,-0.00787665) , 
15, 0.077011, 1, 0, 0.497131,-0.00141899)    );
  // itree = 1525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349976,0.00208057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211751,-0.00104039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42235,0.000337576) , 
14, 0.180472, 1, 0, 0.281512,-0.010156) , 
15, 0.155594, 1, 0, 0.307282,0.00413305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145004,-0.000804182) , 
3, 0.780419, 1, 0, 0.23349,-0.00390497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655471,-0.00210637) , 
12, 0.111824, 1, 0, 0.278928,-0.0076093) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988636,0.00807316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955783,-0.00827779) , 
12, 0.190413, 1, 0, 0.970795,-0.00530643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984538,0.0106475) , 
10, 0.352627, 1, 0, 0.975186,0.00304959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862692,-0.00340295) , 
13, 0.841071, 1, 0, 0.947659,-0.00422987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878517,0.00284613) , 
10, 0.544986, 1, 0, 0.933963,0.00202057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767087,0.0028177) , 
13, 1.15169, 1, 0, 0.895798,0.0142818) , 
4, 0.219348, 1, 0, 0.499231,0.000208663)    );
  // itree = 1526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83085,-0.00424422) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677578,0.000310034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765836,0.00281027) , 
14, 0.126871, 1, 0, 0.720889,0.0181244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554116,-0.00222566) , 
8, 0.01871, 1, 0, 0.670415,0.0030089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.836068,-0.0036547) , 
5, 0.0393085, 1, 0, 0.709796,-0.0060227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949839,0.00419592) , 
1, 0.451892, 1, 0, 0.774666,0.000446455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558535,0.00273673) , 
8, 0.0298198, 1, 0, 0.745854,0.00547817) , 
15, 0.0178028, 1, 0, 0.758437,-1.26885e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511852,-0.00281982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418497,0.00041981) , 
14, 0.0359219, 1, 0, 0.457986,-0.0129095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244955,-0.00288945) , 
14, 0.083275, 1, 0, 0.345333,-0.0318582) , 
8, 0.0345647, 1, 0, 0.600955,-0.0121457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205511,0.000519499) , 
8, 0.0568647, 1, 0, 0.500277,-0.00698633)    );
  // itree = 1527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405798,0.00184996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135949,7.16002e-05) , 
3, 0.60099, 1, 0, 0.196435,0.00694891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560852,-0.00213262) , 
4, 0.0953916, 1, 0, 0.246546,0.000171053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853927,0.00640761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878308,0.00358889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849713,-0.00399478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883774,0.000773185) , 
9, 0.0210643, 1, 0, 0.869144,-0.0105517) , 
5, 0.0194518, 1, 0, 0.871432,0.00114226) , 
12, 0.136157, 1, 0, 0.867855,0.0187244) , 
4, 0.167773, 1, 0, 0.432737,0.00573104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975687,0.0026733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687008,-0.00358175) , 
3, 0.446213, 1, 0, 0.858095,-0.0244552) , 
2, 0.0450794, 1, 0, 0.50268,0.000767397)    );
  // itree = 1528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99989,0.0225636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985085,-0.00798084) , 
3, 0.106099, 1, 0, 0.993104,0.00178068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520917,-0.00396203) , 
3, 0.174557, 1, 0, 0.836164,-0.0103161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67406,0.00252844) , 
6, 0.221056, 1, 0, 0.796222,-0.00314955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531847,-0.00309316) , 
6, 0.304709, 1, 0, 0.738022,-0.0110473) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513256,0.00117325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272809,-0.000967098) , 
6, 0.173272, 1, 0, 0.344965,-0.00499308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869909,0.00468163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227286,0.000977612) , 
17, 0.651885, 1, 0, 0.42542,0.0254646) , 
6, 0.294569, 1, 0, 0.386714,0.0108117) , 
13, 0.739804, 1, 0, 0.542924,0.00109205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454234,-0.00151706) , 
6, 0.518057, 1, 0, 0.525528,-0.0045907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402591,0.00136948) , 
6, 0.733947, 1, 0, 0.50243,0.00192825)    );
  // itree = 1529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992012,0.00758326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91742,-0.00726807) , 
11, 0.438697, 1, 0, 0.957299,-0.00869012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939519,0.00555972) , 
14, 0.120554, 1, 0, 0.951242,0.00331658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498839,-0.00417754) , 
7, 0.345097, 1, 0, 0.851872,-0.00740268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356382,0.00183718) , 
11, 0.742996, 1, 0, 0.711611,0.00145265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439887,-0.00134035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35477,-0.00269668) , 
13, 0.81555, 1, 0, 0.391518,-0.0263584) , 
13, 0.76929, 1, 0, 0.626929,-0.00590486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52314,0.00400264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299554,0.000629548) , 
9, 0.0223717, 1, 0, 0.357151,0.018147) , 
13, 0.871864, 1, 0, 0.547058,0.00121598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423045,0.00262793) , 
13, 1.05871, 1, 0, 0.527664,0.00754863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390083,-0.000844932) , 
13, 1.22718, 1, 0, 0.500112,0.00224136)    );
  // itree = 1530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989654,0.00508993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928858,-0.00674644) , 
11, 0.504475, 1, 0, 0.96133,-0.00788443) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979941,0.00110828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765822,0.00436253) , 
11, 0.408802, 1, 0, 0.866755,0.0209196) , 
10, 0.27856, 1, 0, 0.909644,0.00785712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682427,-0.00171371) , 
15, 0.240321, 1, 0, 0.85527,0.00147646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421378,0.00250001) , 
11, 0.691963, 1, 0, 0.757075,0.00837421) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235721,0.000668891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167853,-0.00090127) , 
15, 0.145804, 1, 0, 0.19605,-0.00435982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715116,0.000252115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56823,-0.00346112) , 
7, 0.229542, 1, 0, 0.644265,-0.0313998) , 
2, 0.0196064, 1, 0, 0.313304,-0.0114335) , 
11, 0.801766, 1, 0, 0.499773,-0.00311049)    );
  // itree = 1531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866274,0.00365534) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982632,-0.00764627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981458,0.0103504) , 
6, 0.147113, 1, 0, 0.981954,0.00952083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915944,-0.00514222) , 
9, 0.0424243, 1, 0, 0.961315,-0.000630899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440015,-0.000992596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716764,-0.00526381) , 
1, 0.406431, 1, 0, 0.488157,-0.0321306) , 
3, 0.364786, 1, 0, 0.664605,-0.0203839) , 
9, 0.00815817, 1, 0, 0.686008,-0.0144281) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861902,0.00371475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147975,-0.0006788) , 
10, 0.485968, 1, 0, 0.309873,-0.00146183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221703,0.00237323) , 
9, 0.039689, 1, 0, 0.268387,0.0148451) , 
16, 0.204083, 1, 0, 0.502094,-0.00153655)    );
  // itree = 1532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66732,-0.00316994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9508,0.00370732) , 
12, 0.159582, 1, 0, 0.804423,-0.0125721) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985947,0.002658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554985,0.00383783) , 
3, 0.240345, 1, 0, 0.78103,0.0212019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270028,-0.000692336) , 
11, 0.731453, 1, 0, 0.549433,0.00757681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393228,0.0035929) , 
15, 0.251667, 1, 0, 0.512802,0.0164431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150811,-0.00147247) , 
11, 0.955336, 1, 0, 0.396474,0.00459285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470141,0.00082287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332269,0.00264322) , 
7, 0.30422, 1, 0, 0.393816,0.0348643) , 
6, 0.506824, 1, 0, 0.395457,0.0161822) , 
8, 0.016247, 1, 0, 0.468312,0.0110598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839319,-0.00513487) , 
12, 0.280661, 1, 0, 0.504693,0.00551998)    );
  // itree = 1533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951869,-0.00121674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564947,0.00439192) , 
8, 0.0267245, 1, 0, 0.763715,0.0170468) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4546,-0.00172756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987243,0.00914955) , 
2, 0.0324606, 1, 0, 0.643733,-0.00459665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350701,-0.00245864) , 
6, 0.246981, 1, 0, 0.520557,-0.015489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401951,0.000840103) , 
6, 0.370479, 1, 0, 0.491841,-0.00881408) , 
15, 0.0804944, 1, 0, 0.592415,0.000752536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318342,-0.00206054) , 
13, 1.06392, 1, 0, 0.542495,-0.00501975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564232,0.00166891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356746,0.00035586) , 
8, 0.0357588, 1, 0, 0.454978,0.0205794) , 
6, 0.555778, 1, 0, 0.515398,0.0029063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334792,-0.00237092) , 
15, 0.373214, 1, 0, 0.499672,-0.000650601)    );
  // itree = 1534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960345,0.00215268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203114,-0.00241954) , 
11, 0.612274, 1, 0, 0.578455,-0.012691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381646,0.000333081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306046,0.00226553) , 
14, 0.0767659, 1, 0, 0.334808,0.0184012) , 
6, 0.195859, 1, 0, 0.442625,0.00464248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522849,-0.00203779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244015,-0.000503463) , 
10, 0.498293, 1, 0, 0.322006,-0.0183537) , 
6, 0.312152, 1, 0, 0.36982,-0.00923799) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966915,0.00261516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876495,-0.00432164) , 
8, 0.0174952, 1, 0, 0.9278,-0.00734984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768725,0.00332096) , 
6, 0.5036, 1, 0, 0.878685,0.0144648) , 
2, 0.0365815, 1, 0, 0.49701,-0.00331349)    );
  // itree = 1535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287546,0.00115436) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873786,0.000636328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523998,-0.00224362) , 
10, 0.343901, 1, 0, 0.666444,-0.0254333) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957221,0.00448555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872409,-0.00408022) , 
16, 0.0604934, 1, 0, 0.921224,-0.00195414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927236,0.00547697) , 
16, 0.083385, 1, 0, 0.923651,0.0156406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89142,-0.00282774) , 
16, 0.146643, 1, 0, 0.917174,0.00918519) , 
4, 0.269263, 1, 0, 0.813159,-0.0051763) , 
2, 0.0119925, 1, 0, 0.692622,0.000264532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276687,-0.00246209) , 
10, 0.649613, 1, 0, 0.613672,-0.00753527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204529,0.000678775) , 
10, 0.752977, 1, 0, 0.501126,-0.00266323)    );
  // itree = 1536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877121,-0.00157672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484951,0.00354595) , 
8, 0.0353054, 1, 0, 0.689842,0.0147532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617899,0.00138871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227858,-0.00139816) , 
8, 0.0295327, 1, 0, 0.313267,-0.0135101) , 
13, 0.790563, 1, 0, 0.436674,-0.00424792) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381849,0.00178008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477132,0.00149113) , 
15, 0.315968, 1, 0, 0.422831,0.0224041) , 
15, 0.225494, 1, 0, 0.433832,0.00122319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31725,0.00178314) , 
9, 0.0586651, 1, 0, 0.404187,0.00854405) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995173,0.00827112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929234,-0.00727091) , 
6, 0.143038, 1, 0, 0.960608,-0.0097883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739273,-0.00266944) , 
3, 0.328559, 1, 0, 0.860691,-0.024742) , 
12, 0.190501, 1, 0, 0.503741,0.00128506)    );
  // itree = 1537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995318,0.00979978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795538,-0.00559095) , 
11, 0.427859, 1, 0, 0.915068,-0.00805182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312252,0.00223329) , 
16, 0.281381, 1, 0, 0.704524,0.00325268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563318,-0.00458684) , 
9, 0.0380711, 1, 0, 0.674126,-0.00489685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49296,0.00202554) , 
6, 0.229195, 1, 0, 0.641444,-0.000498181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898191,-0.000752214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186141,-0.00236062) , 
17, 0.637863, 1, 0, 0.430604,-0.0251861) , 
6, 0.265661, 1, 0, 0.565459,-0.00939553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379471,0.000293783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835321,0.00330823) , 
4, 0.293016, 1, 0, 0.503583,0.0172742) , 
6, 0.423399, 1, 0, 0.543444,9.35081e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310338,-0.00120653) , 
9, 0.0571072, 1, 0, 0.483822,-0.00521305)    );
  // itree = 1538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904053,-0.00336025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977643,-0.00305023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950213,0.0055861) , 
13, 0.727283, 1, 0, 0.963753,0.0126222) , 
12, 0.194687, 1, 0, 0.935819,-0.000997674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539502,-0.0021655) , 
11, 0.908306, 1, 0, 0.813275,-0.0158769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515532,2.46057e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927699,0.00494026) , 
4, 0.295041, 1, 0, 0.648775,0.0125066) , 
9, 0.0391101, 1, 0, 0.747395,-0.00450971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170985,0.000632972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747057,0.00383797) , 
12, 0.0847818, 1, 0, 0.319077,0.0209071) , 
7, 0.336381, 1, 0, 0.589433,0.00486391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158793,-0.00109006) , 
8, 0.0627691, 1, 0, 0.505284,0.000473825)    );
  // itree = 1539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375381,0.00145034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112413,-0.000973206) , 
3, 0.599846, 1, 0, 0.173368,-0.00627763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637584,0.00153008) , 
4, 0.0881149, 1, 0, 0.245715,-0.000953688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8132,-0.00345211) , 
4, 0.195396, 1, 0, 0.300639,-0.00438488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906199,0.00146387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825464,0.00498934) , 
8, 0.0196262, 1, 0, 0.866892,0.0388732) , 
5, 0.0254857, 1, 0, 0.380187,0.00169206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882454,-0.00268877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971144,0.00826194) , 
2, 0.0532201, 1, 0, 0.922937,0.00397069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889662,-0.0018941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656019,-0.00290074) , 
6, 0.393157, 1, 0, 0.750563,-0.0397082) , 
10, 0.376489, 1, 0, 0.837187,-0.017758) , 
5, 0.0361053, 1, 0, 0.497515,-0.00330145)    );
  // itree = 1540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953957,0.00139386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911066,-0.00576161) , 
15, 0.0351895, 1, 0, 0.934729,-0.00835705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955788,0.00529378) , 
9, 0.0305454, 1, 0, 0.941073,0.00114754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84764,-0.00452757) , 
9, 0.0458188, 1, 0, 0.921399,-0.00637743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866529,0.00202701) , 
10, 0.491421, 1, 0, 0.912799,-0.00270037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650785,-0.00418392) , 
10, 0.61129, 1, 0, 0.87413,-0.0107129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562388,0.00400123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293154,-0.000400893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199704,0.00112478) , 
8, 0.0523713, 1, 0, 0.241572,0.00643067) , 
17, 0.859163, 1, 0, 0.283024,0.0144475) , 
17, 0.711647, 1, 0, 0.508726,0.0048405)    );
  // itree = 1541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841446,-0.00234058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845159,0.00258025) , 
16, 0.0674146, 1, 0, 0.842951,-0.000437434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748615,0.00281619) , 
10, 0.518596, 1, 0, 0.81381,0.0105669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817899,0.00219063) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441348,0.00110934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265363,-0.00190883) , 
16, 0.143653, 1, 0, 0.343358,-0.0103881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887988,-0.00477251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642812,-0.00400103) , 
11, 0.721317, 1, 0, 0.765162,-0.0543279) , 
12, 0.124713, 1, 0, 0.500571,-0.0267652) , 
15, 0.0497619, 1, 0, 0.572642,-0.0152671) , 
7, 0.107447, 1, 0, 0.667647,-0.00509024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708552,0.00604269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209727,-0.000640041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150404,0.000905153) , 
9, 0.026394, 1, 0, 0.167807,0.0059649) , 
7, 0.446377, 1, 0, 0.23647,0.0126241) , 
16, 0.228252, 1, 0, 0.492973,0.00208599)    );
  // itree = 1542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461515,-0.00211675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397629,-0.0027431) , 
14, 0.0162515, 1, 0, 0.431667,-0.0329354) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.246256,0.00388915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653509,0.000441346) , 
2, 0.011681, 1, 0, 0.439214,0.0315664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532457,-0.00180456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20909,0.000759606) , 
10, 0.55715, 1, 0, 0.28673,0.0014433) , 
9, 0.0374234, 1, 0, 0.339092,0.0117874) , 
14, 0.0345352, 1, 0, 0.353805,0.00467968) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940666,-0.000749531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659079,-0.00283481) , 
6, 0.291119, 1, 0, 0.773686,-0.034137) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975258,-0.00781094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873274,0.00292576) , 
11, 0.488306, 1, 0, 0.925721,0.0110551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827445,-0.00243591) , 
16, 0.107626, 1, 0, 0.892431,-0.00112893) , 
2, 0.0472557, 1, 0, 0.832043,-0.0179152) , 
2, 0.0330965, 1, 0, 0.503823,-0.00240811)    );
  // itree = 1543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738456,0.00343784) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832309,-0.00068618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763531,0.00408632) , 
16, 0.0528152, 1, 0, 0.788043,0.0318216) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789377,0.00263215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911468,-0.00207211) , 
4, 0.237442, 1, 0, 0.84785,0.0119543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2294,-0.00196795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27744,-0.000764964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120842,0.000311886) , 
16, 0.250795, 1, 0, 0.183403,-0.00404724) , 
13, 0.732355, 1, 0, 0.192424,-0.00933672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705142,-0.00311038) , 
12, 0.14819, 1, 0, 0.254891,-0.0144653) , 
10, 0.390406, 1, 0, 0.36392,-0.00960744) , 
7, 0.0962007, 1, 0, 0.436931,-0.0024756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872698,-0.00601089) , 
4, 0.504591, 1, 0, 0.474308,-0.00543015) , 
9, 0.00391101, 1, 0, 0.496997,-0.00222669)    );
  // itree = 1544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791734,-0.00428875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991962,0.00716555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958591,-0.0108255) , 
8, 0.0105974, 1, 0, 0.972771,-0.00748853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946021,0.0039458) , 
11, 0.509387, 1, 0, 0.964365,0.000195893) , 
5, 0.0173302, 1, 0, 0.931223,-0.00618716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260462,0.00140174) , 
3, 0.405219, 1, 0, 0.632206,0.00604528) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697721,-0.0037027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28152,0.000188559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240798,-0.000991612) , 
3, 0.867066, 1, 0, 0.259865,-0.00887916) , 
3, 0.661704, 1, 0, 0.317684,-0.0145187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815022,0.0018156) , 
12, 0.24453, 1, 0, 0.371419,-0.0100319) , 
13, 0.889383, 1, 0, 0.501593,-0.00200688)    );
  // itree = 1545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254827,-0.00118302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211745,0.000175346) , 
14, 0.0523261, 1, 0, 0.226879,-0.00466626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254299,0.00101341) , 
15, 0.222614, 1, 0, 0.237693,0.00346322) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992354,0.000969679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997034,0.0174445) , 
6, 0.170205, 1, 0, 0.994032,0.00588518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852661,-0.00401405) , 
3, 0.223454, 1, 0, 0.939824,-0.00953713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842,0.00216099) , 
11, 0.675841, 1, 0, 0.922105,-0.00313389) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687133,-0.000696299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590088,-0.00330651) , 
9, 0.0223717, 1, 0, 0.627513,-0.0518008) , 
11, 0.8613, 1, 0, 0.822091,-0.0196564) , 
4, 0.154846, 1, 0, 0.496644,-0.00678123)    );
  // itree = 1546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954344,-0.00536355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983927,0.00810881) , 
15, 0.0292702, 1, 0, 0.971502,0.0033072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827767,-0.00650642) , 
17, 0.418576, 1, 0, 0.925169,-0.0153414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618544,0.00151776) , 
17, 0.627887, 1, 0, 0.835991,-0.00394818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497034,-0.00236308) , 
8, 0.0422453, 1, 0, 0.7783,-0.00889064) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98072,0.00734964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510871,0.00304083) , 
3, 0.341203, 1, 0, 0.688953,0.0349344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49294,0.000513829) , 
9, 0.0481434, 1, 0, 0.578049,0.0197266) , 
15, 0.124405, 1, 0, 0.674605,0.00592802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181045,-0.0011402) , 
17, 1.06747, 1, 0, 0.49617,-0.00318893)    );
  // itree = 1547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951094,-0.00889015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994779,0.00821665) , 
4, 0.421664, 1, 0, 0.973131,-0.00545578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934833,0.000165191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900084,0.00498405) , 
14, 0.056159, 1, 0, 0.919333,0.018699) , 
11, 0.404036, 1, 0, 0.940698,0.0091065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756181,0.00396377) , 
17, 0.631028, 1, 0, 0.913443,0.0159946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591855,-0.00260329) , 
10, 0.6357, 1, 0, 0.867295,0.00808683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219137,-0.00154039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115621,-0.000756364) , 
16, 0.296218, 1, 0, 0.159416,-0.017222) , 
17, 0.784945, 1, 0, 0.530962,-0.00393808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392204,0.00117298) , 
11, 1.1339, 1, 0, 0.498597,0.00264981)    );
  // itree = 1548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287616,0.00159824) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791357,-0.00285764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945802,0.0053783) , 
2, 0.0389756, 1, 0, 0.86951,-0.000915605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883156,0.00339231) , 
9, 0.0186331, 1, 0, 0.874869,0.0110832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955944,0.00160502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592449,-0.0026995) , 
17, 0.454737, 1, 0, 0.739148,-0.0296394) , 
9, 0.0351967, 1, 0, 0.823511,-0.00432658) , 
5, 0.0119925, 1, 0, 0.712583,0.00221646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704049,-0.00409203) , 
14, 0.155405, 1, 0, 0.711479,-0.0039366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644349,0.003685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176459,0.000642051) , 
16, 0.144548, 1, 0, 0.258047,0.0186954) , 
10, 0.624649, 1, 0, 0.506064,0.00631625)    );
  // itree = 1549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973848,-0.00661189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904522,0.000445504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793783,0.00298138) , 
10, 0.205509, 1, 0, 0.851422,0.0200828) , 
11, 0.512874, 1, 0, 0.901408,0.00831603) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389576,0.00161974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170631,-0.000755053) , 
6, 0.319107, 1, 0, 0.216205,-0.00620683) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400232,-0.00371475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504569,-0.000772497) , 
15, 0.231709, 1, 0, 0.444816,-0.0587792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839224,-0.000874793) , 
12, 0.179527, 1, 0, 0.58138,-0.0417099) , 
2, 0.0153088, 1, 0, 0.384495,-0.0225683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827359,-0.00146647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810233,0.00211888) , 
9, 0.0372126, 1, 0, 0.819921,0.00447647) , 
2, 0.0371787, 1, 0, 0.491162,-0.0159431) , 
10, 0.317606, 1, 0, 0.596756,-0.00969897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14174,0.00156217) , 
7, 0.721505, 1, 0, 0.496173,-0.00293626)    );
  // itree = 1550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97974,0.0103156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976225,-0.000188386) , 
1, 0.4344, 1, 0, 0.978001,0.0145263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515536,-0.00334186) , 
16, 0.198002, 1, 0, 0.803647,-0.00340384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68918,0.00364901) , 
13, 0.895866, 1, 0, 0.771543,0.00973579) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862465,-0.00781908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939467,-0.00163433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705717,0.00296079) , 
11, 0.408386, 1, 0, 0.809572,0.0171435) , 
9, 0.0341779, 1, 0, 0.823191,0.00380538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549915,-0.00358955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.259894,-0.00141552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231771,-0.000451313) , 
9, 0.0411994, 1, 0, 0.241818,-0.0118516) , 
8, 0.0284323, 1, 0, 0.308813,-0.0227818) , 
11, 0.671871, 1, 0, 0.503527,-0.0127174) , 
9, 0.0215194, 1, 0, 0.584996,-0.00589233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293325,0.00103452) , 
3, 0.828655, 1, 0, 0.509922,0.000752534)    );
  // itree = 1551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977827,0.0099415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970138,-0.000556266) , 
0, 0.177101, 1, 0, 0.973678,0.0139687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730074,-0.00372642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960819,0.00316295) , 
2, 0.0358599, 1, 0, 0.845851,-0.0135854) , 
10, 0.341225, 1, 0, 0.912932,0.000874493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640168,0.00229551) , 
13, 0.995708, 1, 0, 0.819877,0.0155019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721698,0.000146048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489554,-0.00275172) , 
8, 0.0365862, 1, 0, 0.581631,-0.0317237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416304,0.0017327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127432,-0.000483456) , 
10, 0.599262, 1, 0, 0.185903,0.000204498) , 
7, 0.432728, 1, 0, 0.327412,-0.0112127) , 
8, 0.0259463, 1, 0, 0.514288,-0.00107527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345898,-0.00261125) , 
15, 0.371405, 1, 0, 0.497268,-0.00530797)    );
  // itree = 1552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809059,0.00465076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981529,0.00296637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902199,-0.00805902) , 
10, 0.328449, 1, 0, 0.947855,-0.0123475) , 
5, 0.0318839, 1, 0, 0.894652,0.00312238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728276,-0.00090017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612155,-0.00431439) , 
14, 0.120806, 1, 0, 0.677469,-0.0259225) , 
9, 0.036912, 1, 0, 0.802691,-0.00917609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153396,0.000229565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.792084,0.0042058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460455,0.000414034) , 
16, 0.188482, 1, 0, 0.653241,0.0420125) , 
2, 0.0166619, 1, 0, 0.318517,0.0160151) , 
11, 0.725453, 1, 0, 0.525322,0.00525515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38582,-0.00090313) , 
11, 1.2333, 1, 0, 0.500146,0.000631484)    );
  // itree = 1553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126718,-0.00114888) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905658,0.00224816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533869,-0.00397318) , 
6, 0.229969, 1, 0, 0.723264,-0.0199366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951299,0.00469774) , 
5, 0.0318202, 1, 0, 0.823021,-0.00221559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390701,0.00244645) , 
11, 0.823704, 1, 0, 0.637541,0.0151509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506225,-0.00107814) , 
15, 0.242892, 1, 0, 0.605738,0.0077066) , 
12, 0.0530965, 1, 0, 0.456453,0.00105916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974558,-0.011147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769695,-0.00567203) , 
3, 0.326329, 1, 0, 0.895618,-0.0319338) , 
5, 0.0450794, 1, 0, 0.535396,-0.00487152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428335,0.00143583) , 
6, 0.65331, 1, 0, 0.510065,0.00351687)    );
  // itree = 1554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935221,0.00540861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957956,-0.00759408) , 
5, 0.0457269, 1, 0, 0.944137,0.00515172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883455,-0.00923563) , 
9, 0.0319929, 1, 0, 0.927061,-0.0074844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649952,0.00151624) , 
6, 0.42495, 1, 0, 0.823506,0.00654177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261428,0.00124176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328274,-0.00123994) , 
15, 0.126156, 1, 0, 0.291843,0.00175937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30793,-0.00164016) , 
6, 0.261514, 1, 0, 0.301357,-0.0151112) , 
10, 0.517672, 1, 0, 0.578504,-0.00361823) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212834,-0.000625609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887333,0.00347723) , 
0, 0.110065, 1, 0, 0.426515,0.00318832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362707,0.00169668) , 
6, 0.542482, 1, 0, 0.396279,0.0179603) , 
9, 0.0466253, 1, 0, 0.51195,0.0042629)    );
  // itree = 1555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487196,0.0033207) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963053,-0.00370568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969669,0.00512864) , 
15, 0.0493697, 1, 0, 0.966483,0.00347737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873895,-0.00229886) , 
9, 0.0387163, 1, 0, 0.938003,-0.00255377) , 
5, 0.0157456, 1, 0, 0.835338,0.00668706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51333,-0.00179817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19238,-0.000409274) , 
16, 0.229709, 1, 0, 0.302768,-0.0132287) , 
11, 0.727396, 1, 0, 0.644933,-0.000433242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290722,0.00246181) , 
11, 0.976245, 1, 0, 0.580154,0.00646261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432747,-0.00217946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341441,1.78856e-05) , 
15, 0.0873893, 1, 0, 0.373126,-0.01412) , 
13, 1.00519, 1, 0, 0.501461,-0.001361)    );
  // itree = 1556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989708,0.00767098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898231,-0.00666859) , 
13, 0.740298, 1, 0, 0.941743,-0.0137779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625752,-0.000766002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500849,0.00338549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320398,0.000800195) , 
14, 0.0430664, 1, 0, 0.404636,0.0220515) , 
6, 0.1933, 1, 0, 0.48012,0.0129007) , 
7, 0.164596, 1, 0, 0.641914,0.00355013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231377,-0.00274708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937028,0.00234303) , 
4, 0.244715, 1, 0, 0.439796,-0.0216284) , 
15, 0.137283, 1, 0, 0.569322,-0.00549293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46539,0.00179707) , 
15, 0.291738, 1, 0, 0.553008,-0.00126164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423534,-0.00277687) , 
6, 0.48741, 1, 0, 0.534943,-0.00731652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430461,0.000985218) , 
6, 0.606304, 1, 0, 0.505045,0.000806816)    );
  // itree = 1557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990022,0.00467464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934909,-0.00707083) , 
13, 0.58063, 1, 0, 0.960804,-0.0102769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924514,0.00429568) , 
11, 0.5964, 1, 0, 0.951994,-0.000865358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829649,-0.00423309) , 
10, 0.472464, 1, 0, 0.922574,-0.00896752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651074,0.00358457) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.323361,0.00339824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320346,0.000548433) , 
6, 0.302186, 1, 0, 0.321593,0.023702) , 
7, 0.359306, 1, 0, 0.428104,0.0364477) , 
17, 0.625227, 1, 0, 0.710973,0.0104672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186731,-0.000857962) , 
10, 0.708759, 1, 0, 0.533789,0.00265224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400038,-0.00139482) , 
13, 1.23404, 1, 0, 0.508898,-0.00368704)    );
  // itree = 1558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993392,-0.00527543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963906,0.00623578) , 
3, 0.152837, 1, 0, 0.979641,0.00738976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852855,-0.00349847) , 
11, 0.530026, 1, 0, 0.937998,-0.00290926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705459,0.0023973) , 
10, 0.481873, 1, 0, 0.886275,0.00294374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744366,-0.00376925) , 
14, 0.138141, 1, 0, 0.849392,-0.00581022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751986,0.00365299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291533,0.000589523) , 
7, 0.332286, 1, 0, 0.465351,0.0241649) , 
11, 0.701633, 1, 0, 0.732834,0.0032874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454605,-0.00206816) , 
11, 0.941289, 1, 0, 0.697485,-0.00152215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562679,0.00190737) , 
13, 1.16928, 1, 0, 0.675878,0.00478873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182297,-0.0011346) , 
17, 1.06747, 1, 0, 0.501003,-0.00381222)    );
  // itree = 1559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381999,-0.000410039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508185,0.0029283) , 
14, 0.0932429, 1, 0, 0.436351,0.0176962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129068,-0.000782015) , 
10, 0.585721, 1, 0, 0.224742,-0.00258718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645886,-0.00319926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699879,-0.000931676) , 
14, 0.0992264, 1, 0, 0.669198,-0.0405209) , 
4, 0.138242, 1, 0, 0.309409,-0.00981342) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995618,0.011648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954009,-0.00424757) , 
13, 0.57676, 1, 0, 0.970644,-0.00232849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85857,0.00458617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.867443,0.00261318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77627,-0.000579279) , 
9, 0.0253313, 1, 0, 0.818959,0.00790713) , 
5, 0.0370276, 1, 0, 0.831236,0.0256295) , 
13, 0.803711, 1, 0, 0.900915,0.0116556) , 
4, 0.251814, 1, 0, 0.50282,-0.00279344)    );
  // itree = 1560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79425,0.00377319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926168,-0.00841253) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996359,0.00600957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891304,-0.00712003) , 
3, 0.160522, 1, 0, 0.949676,-0.0157527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895331,0.00233826) , 
13, 0.750454, 1, 0, 0.931535,-0.0033712) , 
9, 0.0175983, 1, 0, 0.929833,-0.010571) , 
0, 0.0961713, 1, 0, 0.909374,-0.0030283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198959,-0.00175429) , 
17, 0.679368, 1, 0, 0.691544,-0.0104621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308035,0.00135963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163695,-0.000888349) , 
9, 0.0244803, 1, 0, 0.210808,-0.00211946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29269,0.000945788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740231,0.00300468) , 
2, 0.0256243, 1, 0, 0.440337,0.0343115) , 
6, 0.534586, 1, 0, 0.332018,0.0171192) , 
11, 0.846431, 1, 0, 0.506293,0.00374956)    );
  // itree = 1561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978173,0.0124849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813258,-0.00471812) , 
6, 0.147619, 1, 0, 0.880347,-0.0101961) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887986,0.00487233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603361,-0.00239614) , 
6, 0.257086, 1, 0, 0.791678,0.00096445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539766,0.00288404) , 
13, 0.711375, 1, 0, 0.71169,0.0116664) , 
15, 0.077011, 1, 0, 0.772807,0.00374401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237515,-0.0022188) , 
11, 0.805286, 1, 0, 0.599745,-0.00761164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177628,-8.20763e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727073,0.00293375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564777,-0.000242103) , 
11, 1.14142, 1, 0, 0.647008,0.0201069) , 
5, 0.0179887, 1, 0, 0.398999,0.00875938) , 
13, 0.907046, 1, 0, 0.502968,0.00028064)    );
  // itree = 1562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852931,-0.000162981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684627,0.00297157) , 
10, 0.259528, 1, 0, 0.764658,0.0265786) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.159451,0.00162789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267464,-0.000227047) , 
14, 0.132799, 1, 0, 0.195517,0.0126219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227406,-0.000712107) , 
6, 0.371745, 1, 0, 0.213063,-0.00188214) , 
10, 0.401113, 1, 0, 0.309981,0.00311853) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985544,0.00446979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941133,-0.00565248) , 
9, 0.0327206, 1, 0, 0.96597,-0.00484469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922491,0.00312195) , 
13, 0.799493, 1, 0, 0.954569,0.00215734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581069,-0.004191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748797,-0.00124732) , 
2, 0.0309822, 1, 0, 0.688139,-0.045523) , 
11, 0.681143, 1, 0, 0.844512,-0.0175385) , 
12, 0.134521, 1, 0, 0.501319,-0.00427574)    );
  // itree = 1563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982775,0.00336323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897597,-0.00722919) , 
13, 0.623215, 1, 0, 0.946202,-0.0122621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941483,0.00655141) , 
10, 0.277557, 1, 0, 0.944378,0.00396553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75482,0.00146426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166524,-0.00200375) , 
16, 0.151553, 1, 0, 0.321976,-0.0166671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81651,-0.0057411) , 
2, 0.0346668, 1, 0, 0.430238,-0.0247421) , 
10, 0.404446, 1, 0, 0.634869,-0.0133163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208751,-0.000146223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783548,0.00316992) , 
1, 0.209529, 1, 0, 0.332581,0.0104122) , 
11, 0.907694, 1, 0, 0.49665,-0.00246656)    );
  // itree = 1564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944359,-0.0115609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975877,-0.00197377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.883394,0.0101145) , 
17, 0.360185, 1, 0, 0.929436,0.0197503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707453,-0.000829576) , 
13, 0.688844, 1, 0, 0.854179,0.0111133) , 
6, 0.140321, 1, 0, 0.888521,0.00106111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242279,0.00309167) , 
10, 0.636997, 1, 0, 0.660778,0.0140699) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209444,-0.00158317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836537,-0.000791919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755269,0.00307809) , 
13, 0.853129, 1, 0, 0.795864,0.0172316) , 
2, 0.0182852, 1, 0, 0.406825,-0.0111254) , 
6, 0.31115, 1, 0, 0.546106,0.00269304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333348,-0.00217028) , 
13, 1.06462, 1, 0, 0.512613,-0.00357405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430472,0.00099033) , 
13, 1.23404, 1, 0, 0.49742,0.00106749)    );
  // itree = 1565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.415007,-0.00179964) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904798,-0.00297466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954112,0.00693077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7966,0.000512764) , 
10, 0.378569, 1, 0, 0.874981,0.0219445) , 
16, 0.0578152, 1, 0, 0.884744,0.0090486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.878959,-0.00407952) , 
12, 0.25815, 1, 0, 0.882784,-0.00364228) , 
12, 0.104488, 1, 0, 0.757412,-0.0127426) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.891941,0.00432549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550989,-0.00254083) , 
16, 0.194097, 1, 0, 0.709791,-0.00169554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427865,0.00260569) , 
13, 0.683486, 1, 0, 0.622523,0.0103606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251685,-0.00164989) , 
13, 0.81065, 1, 0, 0.465431,-0.00486314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361612,0.00136986) , 
11, 0.990915, 1, 0, 0.428215,0.00613926) , 
16, 0.109208, 1, 0, 0.550225,-0.000858868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138918,-0.00201852) , 
16, 0.39784, 1, 0, 0.492874,-0.00402579)    );
  // itree = 1566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520339,-0.00146073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570545,0.00294971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32522,-0.000245942) , 
16, 0.237572, 1, 0, 0.443983,0.0212875) , 
16, 0.109154, 1, 0, 0.473121,0.0033773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202466,-0.00152193) , 
8, 0.0379089, 1, 0, 0.350572,-0.00899277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156191,0.000822424) , 
8, 0.0568647, 1, 0, 0.277817,-0.00118306) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896108,-0.00521293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907857,0.00183815) , 
15, 0.119009, 1, 0, 0.901236,-0.010475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513829,-0.00247522) , 
17, 0.736041, 1, 0, 0.756937,-0.0289905) , 
2, 0.0197518, 1, 0, 0.405166,-0.0085742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945862,-0.00488728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961567,0.00241039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848805,0.00426799) , 
6, 0.290329, 1, 0, 0.898072,0.035956) , 
10, 0.264672, 1, 0, 0.91253,0.0207797) , 
2, 0.0419737, 1, 0, 0.493439,-0.0034671)    );
  // itree = 1567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771751,-0.00273239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965298,0.00664807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9618,0.00445875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950464,-0.00474163) , 
5, 0.0353055, 1, 0, 0.954515,-0.00251633) , 
12, 0.154278, 1, 0, 0.957132,0.00328332) , 
4, 0.172994, 1, 0, 0.922055,-0.00264517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4102,0.00249217) , 
17, 0.77534, 1, 0, 0.813964,0.00626102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259234,-0.00187991) , 
10, 0.688238, 1, 0, 0.700407,-0.000659518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57058,0.00208194) , 
13, 1.14506, 1, 0, 0.675025,0.00729604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175883,-0.0015949) , 
17, 1.12997, 1, 0, 0.534813,-0.00246935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361226,0.00236097) , 
9, 0.0597741, 1, 0, 0.499613,0.0059278)    );
  // itree = 1568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970384,-0.00125493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,0.00237823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99309,0.0124024) , 
6, 0.143622, 1, 0, 0.993755,0.00779078) , 
2, 0.0363005, 1, 0, 0.983492,0.00348386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694715,0.00301647) , 
3, 0.286993, 1, 0, 0.905381,0.0123408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565995,-0.00286964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121525,-1.75454e-05) , 
7, 0.635695, 1, 0, 0.219569,-0.00640393) , 
16, 0.240913, 1, 0, 0.571877,0.00322541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397677,-0.00267778) , 
6, 0.366243, 1, 0, 0.550662,-0.0016405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666947,-0.000722149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310851,0.00304618) , 
7, 0.303805, 1, 0, 0.491414,0.0160098) , 
6, 0.424535, 1, 0, 0.532905,0.00364942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335437,-0.00128342) , 
6, 0.74664, 1, 0, 0.496556,-0.00247674)    );
  // itree = 1569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285354,-0.00225695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350912,0.00103994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0843947,-0.00107321) , 
10, 0.585609, 1, 0, 0.131613,-0.00793602) , 
16, 0.161107, 1, 0, 0.162021,-0.0156564) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909201,0.000287788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612397,-0.00336552) , 
10, 0.299631, 1, 0, 0.751508,-0.0311065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93354,0.00159265) , 
4, 0.432507, 1, 0, 0.822811,-0.0161221) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93135,-0.00116859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735246,0.00307489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536084,0.00123913) , 
7, 0.244107, 1, 0, 0.632689,0.0411979) , 
11, 0.579578, 1, 0, 0.740329,0.0243601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676752,-0.00249003) , 
14, 0.148248, 1, 0, 0.726524,0.0112197) , 
9, 0.0281573, 1, 0, 0.767467,-0.000406503) , 
12, 0.0768694, 1, 0, 0.493949,-0.00729582)    );
  // itree = 1570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998884,0.0149711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948331,-0.00603061) , 
3, 0.149208, 1, 0, 0.977821,-0.00462519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984043,0.0118597) , 
17, 0.363638, 1, 0, 0.979531,0.00196042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591402,0.00451934) , 
3, 0.304413, 1, 0, 0.882853,0.0169938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290417,-0.00192718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255861,0.000560142) , 
16, 0.359865, 1, 0, 0.272646,-0.00808412) , 
16, 0.267762, 1, 0, 0.686675,0.00893136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33832,-0.00140988) , 
13, 0.893081, 1, 0, 0.596324,0.0019356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455587,-0.00192419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350469,-0.000937508) , 
11, 0.875506, 1, 0, 0.40212,-0.0232019) , 
6, 0.441106, 1, 0, 0.537954,-0.00561973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391087,0.00104698) , 
11, 1.1181, 1, 0, 0.501603,0.00114547)    );
  // itree = 1571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994905,0.011933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986482,-0.000583468) , 
5, 0.0434499, 1, 0, 0.990702,0.00608467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929321,-0.0062743) , 
17, 0.290435, 1, 0, 0.965255,-0.00477668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879961,0.00282539) , 
6, 0.26843, 1, 0, 0.93824,0.00427185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414253,-0.00405741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460798,-0.00179549) , 
6, 0.421438, 1, 0, 0.438527,-0.0440212) , 
17, 0.592493, 1, 0, 0.785919,-0.0104487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143873,0.000583248) , 
7, 0.595501, 1, 0, 0.54643,-0.00371172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407316,0.00161) , 
6, 0.622299, 1, 0, 0.522705,0.00201104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382752,-0.00153631) , 
13, 1.28053, 1, 0, 0.498794,-0.0043576)    );
  // itree = 1572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653931,-0.000322792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944001,0.00591103) , 
12, 0.147552, 1, 0, 0.781731,0.0124906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585955,-0.00177582) , 
16, 0.198002, 1, 0, 0.723775,0.00243363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899868,-0.00106234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454486,-0.00207377) , 
11, 0.582321, 1, 0, 0.63183,-0.0280651) , 
15, 0.150993, 1, 0, 0.691125,-0.00839671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127127,6.55058e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69889,0.00354982) , 
4, 0.112681, 1, 0, 0.216563,0.0119509) , 
10, 0.584819, 1, 0, 0.439175,0.00240606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953797,-0.00123964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701345,-0.00365273) , 
13, 0.944367, 1, 0, 0.858037,-0.0265172) , 
12, 0.228037, 1, 0, 0.506242,-0.00222502)    );
  // itree = 1573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962467,0.00632075) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945446,-0.0119434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905841,-0.000639216) , 
14, 0.0376278, 1, 0, 0.924387,-0.0128917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636108,-0.00463717) , 
11, 0.677945, 1, 0, 0.830453,-0.029009) , 
9, 0.0114291, 1, 0, 0.863939,-0.0164964) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944564,-0.00382679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80948,0.00434715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44316,0.00106232) , 
7, 0.2398, 1, 0, 0.621307,0.0359866) , 
11, 0.470509, 1, 0, 0.747369,0.0172984) , 
14, 0.0762525, 1, 0, 0.813392,-0.00184249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533908,-0.002902) , 
15, 0.353541, 1, 0, 0.780619,-0.00684051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532554,-0.00246136) , 
11, 0.958296, 1, 0, 0.738437,-0.0139306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269157,0.0023562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204586,-2.57246e-06) , 
17, 1.19967, 1, 0, 0.236717,0.01864) , 
17, 0.948955, 1, 0, 0.504667,0.0012452)    );
  // itree = 1574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885613,0.00396585) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98045,0.00626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935658,-0.00898544) , 
16, 0.0950864, 1, 0, 0.964231,-0.00069805) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684306,-0.00237298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519776,-0.00603439) , 
14, 0.0425086, 1, 0, 0.603917,-0.0757756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534511,-0.00128858) , 
14, 0.0750272, 1, 0, 0.569259,-0.0498862) , 
17, 0.451117, 1, 0, 0.737498,-0.0289344) , 
9, 0.00897225, 1, 0, 0.759487,-0.020211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178479,0.000661118) , 
7, 0.530664, 1, 0, 0.555327,-0.00991828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427249,-0.000463901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362708,0.00144866) , 
6, 0.41484, 1, 0, 0.387579,0.0150426) , 
9, 0.0508431, 1, 0, 0.498897,-0.00152154)    );
  // itree = 1575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214637,0.000620325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613145,-0.00473164) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982323,-0.00653633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997991,0.0184786) , 
1, 0.444506, 1, 0, 0.990636,0.000547353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935179,-0.0186922) , 
6, 0.181475, 1, 0, 0.972963,-0.0111733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906852,0.00365907) , 
3, 0.24553, 1, 0, 0.954411,-0.000232836) , 
4, 0.18784, 1, 0, 0.880646,-0.0126261) , 
0, 0.0715461, 1, 0, 0.674117,-0.00642585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720423,-0.00115456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247354,-0.00294618) , 
7, 0.18425, 1, 0, 0.429862,-0.0345041) , 
6, 0.38565, 1, 0, 0.594232,-0.015609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671359,0.00164625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284793,-0.000993028) , 
17, 0.957047, 1, 0, 0.380205,-0.00768832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294433,0.00145503) , 
15, 0.154009, 1, 0, 0.340097,0.00846188) , 
11, 0.964518, 1, 0, 0.491999,-0.00592586)    );
  // itree = 1576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820124,-0.00788449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540458,-0.000766055) , 
8, 0.0250305, 1, 0, 0.678914,-0.0339508) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551007,-0.000729169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409957,2.23197e-05) , 
14, 0.0515741, 1, 0, 0.471057,-0.00420588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280289,-0.00272583) , 
14, 0.0858144, 1, 0, 0.376772,-0.0241556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487921,0.000822336) , 
14, 0.154114, 1, 0, 0.409671,-0.0133798) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967778,0.00562257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953141,-0.00187711) , 
2, 0.0429205, 1, 0, 0.960785,0.00792404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901883,-0.00633908) , 
14, 0.108138, 1, 0, 0.942983,-0.0048869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822544,0.00361976) , 
17, 0.557452, 1, 0, 0.906107,0.0130682) , 
12, 0.134521, 1, 0, 0.624854,-0.00191578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209794,0.000948393) , 
17, 1.09348, 1, 0, 0.481076,0.00419151) , 
9, 0.0122373, 1, 0, 0.503181,-7.03792e-05)    );
  // itree = 1577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923796,0.00675279) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591914,0.000144291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476507,-0.00211908) , 
14, 0.101696, 1, 0, 0.544997,-0.0148111) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995014,0.00866609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963977,0.00754357) , 
3, 0.185942, 1, 0, 0.981205,0.0190465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884594,-0.00273118) , 
10, 0.465507, 1, 0, 0.951671,0.00700171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795164,0.00275517) , 
11, 0.831876, 1, 0, 0.910685,0.0177597) , 
12, 0.138546, 1, 0, 0.767663,0.00502118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585256,0.00222237) , 
15, 0.300396, 1, 0, 0.731451,0.0109814) , 
9, 0.00815817, 1, 0, 0.75171,0.0146525) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511189,-0.000373553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279883,0.00173246) , 
14, 0.0693959, 1, 0, 0.372058,0.0131175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243667,-0.00158897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146268,-0.00066056) , 
17, 1.1037, 1, 0, 0.180353,-0.0155748) , 
8, 0.0473923, 1, 0, 0.232505,-0.00776914) , 
7, 0.353604, 1, 0, 0.502731,0.00390047)    );
  // itree = 1578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870816,-0.00124354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679679,0.00228439) , 
10, 0.257094, 1, 0, 0.787875,0.01241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990534,0.00208744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840851,-0.00410285) , 
3, 0.18545, 1, 0, 0.912768,-0.0178682) , 
4, 0.363713, 1, 0, 0.846014,-0.0016849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290952,-0.00041128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705886,-0.00552058) , 
5, 0.0329793, 1, 0, 0.442164,-0.0346033) , 
10, 0.422979, 1, 0, 0.692892,-0.0141661) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804014,0.00044265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563717,0.00279392) , 
6, 0.266319, 1, 0, 0.643003,0.0335121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.380076,-0.00181043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82203,0.00137106) , 
2, 0.0175039, 1, 0, 0.584985,-0.00860025) , 
15, 0.226425, 1, 0, 0.617591,0.0150671) , 
14, 0.0798733, 1, 0, 0.660617,-0.00163633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292512,0.00254861) , 
10, 0.69591, 1, 0, 0.595524,0.00545124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161447,-0.00132414) , 
10, 0.806628, 1, 0, 0.504894,0.000114232)    );
  // itree = 1579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999454,0.0179752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928835,-0.0117554) , 
3, 0.123805, 1, 0, 0.963562,-0.0126918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920478,0.00465678) , 
6, 0.204091, 1, 0, 0.945245,0.00195311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522227,-0.00172358) , 
6, 0.433703, 1, 0, 0.764991,-0.0142868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766993,-0.00458417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583015,0.00209467) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40735,0.00140615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206632,-0.00119098) , 
15, 0.0555218, 1, 0, 0.270311,-0.00575538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213377,0.00113734) , 
9, 0.04487, 1, 0, 0.245579,0.00451551) , 
7, 0.276579, 1, 0, 0.295452,0.00977769) , 
11, 0.584739, 1, 0, 0.33766,0.00574548) , 
8, 0.0243706, 1, 0, 0.491935,-0.00148658)    );
  // itree = 1580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419806,2.30384e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890049,0.00583765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852334,0.00306936) , 
14, 0.101976, 1, 0, 0.870755,0.0489514) , 
12, 0.0877989, 1, 0, 0.686825,0.0291584) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920715,-0.00182777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950022,0.00487934) , 
9, 0.0172773, 1, 0, 0.936366,0.00967494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864636,-0.00653937) , 
15, 0.120857, 1, 0, 0.914406,-0.00759144) , 
4, 0.34469, 1, 0, 0.797926,0.0112177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778814,-0.00849571) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5548,0.00503487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33694,-4.51523e-06) , 
13, 0.800334, 1, 0, 0.405194,0.0150993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269101,-0.00204229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212724,-5.33406e-05) , 
15, 0.176253, 1, 0, 0.234439,-0.0131459) , 
9, 0.0317281, 1, 0, 0.290257,-0.00391292) , 
11, 0.555311, 1, 0, 0.3306,-0.0085306) , 
8, 0.0203088, 1, 0, 0.495812,-0.00154903)    );
  // itree = 1581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727603,0.00362457) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970866,0.00373389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907428,-0.00756791) , 
16, 0.116915, 1, 0, 0.9442,-0.00670793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678941,0.002788) , 
11, 0.799271, 1, 0, 0.855548,0.0139776) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646598,0.0005548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421045,-0.00261281) , 
6, 0.241543, 1, 0, 0.526188,-0.0159282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191926,0.000869413) , 
11, 0.844626, 1, 0, 0.347816,-0.00101894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374771,-0.00143258) , 
6, 0.55998, 1, 0, 0.357372,-0.0113075) , 
10, 0.389879, 1, 0, 0.512878,-0.00341481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397312,0.00267134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383499,0.000325038) , 
15, 0.371794, 1, 0, 0.390468,0.0234899) , 
15, 0.290452, 1, 0, 0.487675,0.00212456) , 
9, 0.00782201, 1, 0, 0.509507,0.00510534)    );
  // itree = 1582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982582,-0.00807952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967679,0.00221469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981584,0.0102018) , 
14, 0.0626731, 1, 0, 0.974384,0.0167913) , 
6, 0.141494, 1, 0, 0.978092,0.00641613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828065,-0.00674098) , 
6, 0.313749, 1, 0, 0.947653,-0.0064884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822435,0.00459926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444428,0.000381114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387954,0.00115472) , 
16, 0.302184, 1, 0, 0.415691,0.0107956) , 
7, 0.384352, 1, 0, 0.578767,0.0296512) , 
17, 0.52806, 1, 0, 0.800159,0.00796145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.34183,0.000292735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225276,-0.00120287) , 
9, 0.0344367, 1, 0, 0.26727,-0.0120277) , 
3, 0.583657, 1, 0, 0.49902,-0.00333453)    );
  // itree = 1583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671232,0.001005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919131,-0.00926039) , 
5, 0.0376565, 1, 0, 0.789958,-0.0100627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695943,0.000968092) , 
9, 0.0214286, 1, 0, 0.754332,-0.00365084) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962166,0.00501299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891079,-0.00209015) , 
15, 0.226897, 1, 0, 0.934105,0.00309117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379914,0.00336513) , 
3, 0.387027, 1, 0, 0.659946,0.0251719) , 
14, 0.0607878, 1, 0, 0.703733,0.0118007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162452,-0.000569598) , 
10, 0.764174, 1, 0, 0.545154,0.00595555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210371,-0.0014504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699134,0.000221277) , 
4, 0.154846, 1, 0, 0.392122,-0.0173116) , 
6, 0.543921, 1, 0, 0.494198,-0.00179182)    );
  // itree = 1584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934232,-0.0016943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90998,-0.0155753) , 
5, 0.0181182, 1, 0, 0.922119,-0.0265609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968567,-0.00713258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988954,0.0133875) , 
17, 0.302407, 1, 0, 0.976933,0.00389714) , 
5, 0.0318632, 1, 0, 0.9549,-0.00834586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427605,-0.00249046) , 
3, 0.394362, 1, 0, 0.815673,-0.0171875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125475,0.000471375) , 
17, 0.914975, 1, 0, 0.549519,-0.00818849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463173,0.000384199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510868,0.00262473) , 
6, 0.502949, 1, 0, 0.490601,0.0265062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395699,-0.000114592) , 
6, 0.628834, 1, 0, 0.434676,0.00942308) , 
6, 0.41484, 1, 0, 0.498397,-0.000348878)    );
  // itree = 1585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981938,0.000645488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453698,-0.00626877) , 
11, 0.557651, 1, 0, 0.732861,-0.0266818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719381,-0.00300887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471131,0.00158542) , 
6, 0.198968, 1, 0, 0.594875,0.00124807) , 
14, 0.0371443, 1, 0, 0.670171,-0.0139927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558856,0.00148938) , 
6, 0.317107, 1, 0, 0.643901,-0.00685311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453972,-0.00348592) , 
6, 0.475701, 1, 0, 0.59902,-0.0192678) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460631,0.00240446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205182,-0.00111906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86002,0.00130634) , 
12, 0.114146, 1, 0, 0.383624,-0.00904149) , 
14, 0.104384, 1, 0, 0.398447,-0.00180799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610563,0.002786) , 
14, 0.241446, 1, 0, 0.425211,0.00247292) , 
14, 0.0861099, 1, 0, 0.509109,-0.00802131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.441222,0.000962361) , 
13, 1.28053, 1, 0, 0.497907,-0.00315854)    );
  // itree = 1586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157447,-0.000252881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404297,0.00312348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334494,0.00270796) , 
14, 0.0966144, 1, 0, 0.36341,0.0401442) , 
12, 0.0512713, 1, 0, 0.254382,0.0172481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910499,-0.0061526) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981427,0.00859541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856179,-0.00163048) , 
6, 0.176993, 1, 0, 0.924892,0.00197534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825225,0.0033822) , 
6, 0.311272, 1, 0, 0.891842,0.0135069) , 
9, 0.0177364, 1, 0, 0.898158,0.00160845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681441,-0.00453147) , 
15, 0.267041, 1, 0, 0.863702,-0.00816611) , 
5, 0.0157456, 1, 0, 0.583923,0.00350325) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45767,-0.00347853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296682,-0.00134721) , 
11, 0.922371, 1, 0, 0.357483,-0.0349101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403521,0.000325889) , 
6, 0.660093, 1, 0, 0.378475,-0.0155769) , 
13, 0.988203, 1, 0, 0.501854,-0.00411856)    );
  // itree = 1587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707742,0.00504755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9655,-0.00381516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962054,0.00711035) , 
10, 0.321546, 1, 0, 0.964108,0.00580721) , 
12, 0.138817, 1, 0, 0.890481,0.0172351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234823,-0.00174856) , 
16, 0.302985, 1, 0, 0.65809,0.00368046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234581,-0.000803363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857896,-0.00596983) , 
2, 0.0260433, 1, 0, 0.432633,-0.0198625) , 
14, 0.0751817, 1, 0, 0.560349,-0.00652599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509896,0.00137881) , 
6, 0.426996, 1, 0, 0.548913,-0.000395228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392646,-0.000797428) , 
6, 0.6222, 1, 0, 0.50548,-0.00518921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425603,0.00189749) , 
14, 0.166715, 1, 0, 0.49716,-0.0017064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524371,-0.00210929) , 
14, 0.229801, 1, 0, 0.499049,-0.00366452)    );
  // itree = 1588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856488,-0.00137161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908398,0.00538628) , 
16, 0.0936081, 1, 0, 0.879571,0.0111008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765584,-0.00375272) , 
15, 0.0683051, 1, 0, 0.849808,-0.00268716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555832,-0.00272427) , 
8, 0.0386115, 1, 0, 0.784909,-0.0127952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819215,-0.00119566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636796,0.00251229) , 
16, 0.0982676, 1, 0, 0.720004,0.0167485) , 
14, 0.0683106, 1, 0, 0.765115,-0.00378544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54112,-0.00421181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752624,0.00118693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391624,-0.00129581) , 
10, 0.541693, 1, 0, 0.495605,-0.012945) , 
15, 0.222075, 1, 0, 0.507181,-0.0274461) , 
15, 0.174231, 1, 0, 0.65845,-0.01357) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203743,0.000759786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110222,-0.000854774) , 
9, 0.0316451, 1, 0, 0.140223,-0.0040998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570709,0.00255587) , 
5, 0.0169403, 1, 0, 0.233397,0.00541739) , 
16, 0.238704, 1, 0, 0.496445,-0.00633316)    );
  // itree = 1589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255765,-0.000669423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121164,0.00123717) , 
7, 0.533079, 1, 0, 0.1704,0.00463251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340074,-0.00142943) , 
2, 0.0131926, 1, 0, 0.20333,-0.00197396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945595,-0.00423664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624286,0.00184386) , 
3, 0.379931, 1, 0, 0.737068,0.0223717) , 
0, 0.0869261, 1, 0, 0.363648,0.00533871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902172,-1.2696e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755119,-0.00257301) , 
8, 0.0213767, 1, 0, 0.829894,-0.0182592) , 
12, 0.170069, 1, 0, 0.423893,0.00228951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.943159,0.00149948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808597,-0.00588405) , 
8, 0.0146076, 1, 0, 0.876967,-0.0248815) , 
1, 0.406431, 1, 0, 0.509875,-0.00286685)    );
  // itree = 1590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97922,-0.00525404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98821,0.0108719) , 
10, 0.273213, 1, 0, 0.984693,0.00733289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783419,-0.00181642) , 
6, 0.284865, 1, 0, 0.923024,-0.0011654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587194,0.00237884) , 
11, 0.718722, 1, 0, 0.795148,0.0163997) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50491,2.22826e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766173,-0.00552326) , 
12, 0.128305, 1, 0, 0.642309,-0.0334919) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900018,0.0015844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478914,-0.00195691) , 
10, 0.339609, 1, 0, 0.680896,-0.0159028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0965322,8.51795e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396387,0.00130312) , 
2, 0.0025865, 1, 0, 0.183484,0.00830729) , 
10, 0.509449, 1, 0, 0.27871,0.00367244) , 
7, 0.260069, 1, 0, 0.339843,-0.00257612) , 
8, 0.0201428, 1, 0, 0.495413,0.00390759)    );
  // itree = 1591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227931,-0.00147625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114525,0.000359656) , 
10, 0.652043, 1, 0, 0.152654,-0.00536498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466788,0.00172054) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862278,0.00158851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83717,-0.00390523) , 
5, 0.0373165, 1, 0, 0.850489,-0.00793388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932377,0.00519717) , 
5, 0.0560644, 1, 0, 0.871102,0.00312488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757213,-0.00309543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905842,0.0011257) , 
12, 0.197192, 1, 0, 0.817674,-0.020548) , 
14, 0.0702596, 1, 0, 0.850921,-0.00581699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789211,0.00186844) , 
9, 0.0526608, 1, 0, 0.838717,0.00113591) , 
4, 0.141079, 1, 0, 0.75993,0.00808636) , 
4, 0.0719469, 1, 0, 0.499284,0.00231298)    );
  // itree = 1592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988256,0.00901625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95279,-0.0058235) , 
14, 0.0665024, 1, 0, 0.971876,-0.000768089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281351,-0.000997051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772533,-0.00408747) , 
12, 0.115094, 1, 0, 0.469746,-0.0317892) , 
3, 0.309414, 1, 0, 0.688253,-0.01829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18641,0.000379981) , 
10, 0.660689, 1, 0, 0.478181,-0.00838275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942124,0.00371984) , 
12, 0.280661, 1, 0, 0.526985,-0.0054309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41388,0.00114317) , 
11, 1.19048, 1, 0, 0.5035,0.000842721)    );
  // itree = 1593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999268,0.0153112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951881,-0.00911015) , 
3, 0.141294, 1, 0, 0.978675,-0.00583568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988489,0.011) , 
16, 0.126266, 1, 0, 0.982342,0.00175624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947155,0.00764613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618937,-0.000374673) , 
16, 0.124686, 1, 0, 0.788856,0.023569) , 
3, 0.240214, 1, 0, 0.905361,0.0104347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217961,-0.000112963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717011,-0.00302981) , 
12, 0.134509, 1, 0, 0.324347,-0.0122481) , 
3, 0.471192, 1, 0, 0.590954,-0.00183972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293717,0.00145863) , 
3, 0.828655, 1, 0, 0.511944,0.00603473)    );
  // itree = 1594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418238,0.00392056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261332,0.000719048) , 
9, 0.0358657, 1, 0, 0.319236,0.0251112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114029,-0.0004195) , 
3, 0.693093, 1, 0, 0.1963,0.00651141) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320684,-0.0012061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557024,-0.00380801) , 
5, 0.0261218, 1, 0, 0.398854,-0.0421418) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974439,-0.00472125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968429,0.00641087) , 
13, 0.694587, 1, 0, 0.971702,0.00471569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978984,0.00279831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888519,-0.00649362) , 
13, 0.61578, 1, 0, 0.934537,-0.0158221) , 
9, 0.0274254, 1, 0, 0.95387,-0.00513834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747169,-0.00560999) , 
3, 0.428212, 1, 0, 0.910586,-0.0196776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651302,0.000988143) , 
3, 0.619301, 1, 0, 0.836814,-0.00754048) , 
12, 0.10426, 1, 0, 0.719497,-0.0168092) , 
2, 0.0152423, 1, 0, 0.492578,-0.00669466)    );
  // itree = 1595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979293,0.00514356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984519,0.00279909) , 
5, 0.0395567, 1, 0, 0.981911,0.00759033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927154,-0.00821898) , 
10, 0.328449, 1, 0, 0.957737,-0.00738616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965023,0.00768639) , 
9, 0.0383854, 1, 0, 0.959501,0.000667543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63796,0.00424816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30634,0.000724823) , 
16, 0.249747, 1, 0, 0.461131,0.0324056) , 
17, 0.532565, 1, 0, 0.776795,0.012303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357435,-0.00246972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247149,-0.000215215) , 
14, 0.0455713, 1, 0, 0.275698,-0.0117842) , 
11, 0.85514, 1, 0, 0.588889,0.00327055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476953,0.00133263) , 
13, 1.14589, 1, 0, 0.561881,0.00904788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296464,-0.00153189) , 
9, 0.0652654, 1, 0, 0.5127,0.0023987)    );
  // itree = 1596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348999,-0.00306423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26002,-0.00117322) , 
14, 0.0565949, 1, 0, 0.294816,-0.0239783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983683,0.00255799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940318,-0.00609588) , 
10, 0.253959, 1, 0, 0.958077,-0.00915663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925233,0.00471863) , 
16, 0.135418, 1, 0, 0.946061,0.00262673) , 
2, 0.0181503, 1, 0, 0.662733,-0.00894792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613945,0.00323052) , 
15, 0.240594, 1, 0, 0.654565,-0.00221822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655304,0.00428661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588456,-5.59522e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321429,0.00179667) , 
10, 0.518612, 1, 0, 0.419538,0.0177846) , 
9, 0.0145559, 1, 0, 0.455272,0.0245209) , 
13, 0.907046, 1, 0, 0.565082,0.0097877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328461,-0.00130438) , 
9, 0.0571072, 1, 0, 0.504067,0.00153369)    );
  // itree = 1597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981547,0.00755163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959205,-0.00896597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926043,-0.0103163) , 
8, 0.0163206, 1, 0, 0.942592,-0.0216664) , 
15, 0.0197888, 1, 0, 0.956301,-0.00976592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926071,0.00321175) , 
15, 0.126156, 1, 0, 0.944655,-0.000985341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861178,0.00230205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785711,0.00441928) , 
10, 0.440373, 1, 0, 0.823575,0.0442277) , 
6, 0.332066, 1, 0, 0.905501,0.0136355) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210416,-0.00195756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433694,-0.000462056) , 
6, 0.429973, 1, 0, 0.332961,-0.0188125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209514,0.000404094) , 
17, 1.09783, 1, 0, 0.270735,-0.00589215) , 
17, 0.69923, 1, 0, 0.509001,0.00143776)    );
  // itree = 1598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986751,-0.0117126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989071,0.00450779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99777,0.0245554) , 
8, 0.0187929, 1, 0, 0.993416,0.00943624) , 
11, 0.335247, 1, 0, 0.99078,0.00345171) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.415425,0.000630684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86546,0.00118897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75229,-0.00422903) , 
9, 0.031041, 1, 0, 0.804439,-0.0264766) , 
12, 0.111815, 1, 0, 0.663774,-0.0119938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38326,-0.00293546) , 
8, 0.036494, 1, 0, 0.578705,-0.0276341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229176,-0.000351098) , 
16, 0.23499, 1, 0, 0.46557,-0.0203259) , 
3, 0.216171, 1, 0, 0.592478,-0.0145804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198957,0.000248257) , 
8, 0.0563999, 1, 0, 0.489658,-0.00974054)    );
  // itree = 1599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123276,-0.00200188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301153,0.00115287) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977771,0.00321096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932007,-0.00721021) , 
9, 0.0249497, 1, 0, 0.956855,-0.00766574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721578,-0.00327996) , 
11, 0.647904, 1, 0, 0.881633,-0.0193874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948934,0.00361693) , 
12, 0.283311, 1, 0, 0.897287,-0.0115668) , 
4, 0.125227, 1, 0, 0.722997,-0.00356565) , 
12, 0.0525379, 1, 0, 0.584135,-0.00832328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471521,-0.00178177) , 
6, 0.52788, 1, 0, 0.554283,-0.0164209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524613,0.00239359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321418,-1.78219e-05) , 
15, 0.189133, 1, 0, 0.380664,0.00946138) , 
9, 0.048949, 1, 0, 0.492202,-0.00716608)    );
  // itree = 1600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99133,0.0054247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931569,-0.00720506) , 
6, 0.175019, 1, 0, 0.964844,-0.00832876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910697,0.00187163) , 
11, 0.574531, 1, 0, 0.947023,-0.00188065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946088,0.00233384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466819,0.00267287) , 
17, 0.501363, 1, 0, 0.717069,0.0253961) , 
10, 0.458936, 1, 0, 0.871993,0.00701918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222146,-0.00185892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277779,0.00111175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37439,-0.00117917) , 
11, 1.24456, 1, 0, 0.326532,-0.00506702) , 
11, 0.994597, 1, 0, 0.2786,-0.0162686) , 
3, 0.5107, 1, 0, 0.497752,-0.00766796)    );
  // itree = 1601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846254,-0.000468928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492258,-0.00365337) , 
13, 0.87287, 1, 0, 0.679753,-0.0283529) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906888,-0.00377751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478986,-0.000250437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981866,0.0138173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939626,-0.000510817) , 
2, 0.0383734, 1, 0, 0.961352,0.0256978) , 
12, 0.106591, 1, 0, 0.799558,0.0160981) , 
16, 0.0505816, 1, 0, 0.822065,0.00858243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528921,0.00243968) , 
11, 0.926667, 1, 0, 0.7269,0.0217499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28922,-0.00144433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196339,0.000254539) , 
8, 0.0574658, 1, 0, 0.231273,-0.0058097) , 
8, 0.0415695, 1, 0, 0.516365,0.010043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293207,-0.0013702) , 
9, 0.0679224, 1, 0, 0.47305,0.00338) , 
14, 0.020891, 1, 0, 0.502792,-0.00118604)    );
  // itree = 1602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116749,-0.0013535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168777,-0.000187884) , 
15, 0.202377, 1, 0, 0.141019,-0.0112789) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889963,-0.000629167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394686,0.00206462) , 
3, 0.452091, 1, 0, 0.514845,0.0346789) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995455,0.00929901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968232,-0.00493942) , 
10, 0.341225, 1, 0, 0.982451,-0.000526963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981066,0.00962632) , 
17, 0.3458, 1, 0, 0.982038,0.00654982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865348,-0.00249527) , 
13, 0.847627, 1, 0, 0.95181,-0.000623132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743356,-0.00317565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685473,-0.000844699) , 
10, 0.440136, 1, 0, 0.710342,-0.0309773) , 
17, 0.551142, 1, 0, 0.868862,-0.0110503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738072,0.00169371) , 
8, 0.0406408, 1, 0, 0.850786,-0.00540609) , 
12, 0.115304, 1, 0, 0.736715,0.00820507) , 
2, 0.00300529, 1, 0, 0.500997,0.00049521)    );
  // itree = 1603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924722,0.004548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559718,-0.00132407) , 
16, 0.109317, 1, 0, 0.683793,-0.000719308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728563,0.00543242) , 
14, 0.0230781, 1, 0, 0.699375,0.0187073) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142293,-0.000501169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201957,0.00183193) , 
12, 0.049948, 1, 0, 0.175699,0.0130148) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91974,0.00612915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696438,-0.000974266) , 
7, 0.163948, 1, 0, 0.810293,0.0180063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987259,0.00712644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861484,-0.00560535) , 
6, 0.211861, 1, 0, 0.922026,-0.0166993) , 
12, 0.166947, 1, 0, 0.86611,0.000668996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52927,-0.00147807) , 
11, 0.968927, 1, 0, 0.761705,-0.010348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379148,-0.00227251) , 
10, 0.680149, 1, 0, 0.650319,-0.0211422) , 
12, 0.0688484, 1, 0, 0.445443,-0.00639788) , 
15, 0.056052, 1, 0, 0.505317,-0.000478347)    );
  // itree = 1604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998668,0.0183505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970536,-0.0140226) , 
6, 0.147644, 1, 0, 0.985561,-0.0041095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918957,0.00352588) , 
3, 0.209542, 1, 0, 0.96029,0.00664177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796535,-0.0018235) , 
9, 0.0430211, 1, 0, 0.913391,3.55725e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563668,-5.9303e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56828,0.00279837) , 
16, 0.109291, 1, 0, 0.565994,0.0261226) , 
11, 0.701547, 1, 0, 0.743836,0.0127679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297082,-0.00219573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206776,-0.00157942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145179,0.000800423) , 
14, 0.0818739, 1, 0, 0.173395,-0.00397052) , 
16, 0.253343, 1, 0, 0.204632,-0.0136804) , 
7, 0.398158, 1, 0, 0.503992,0.00100336)    );
  // itree = 1605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989304,0.00440096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885476,-0.00686101) , 
11, 0.453393, 1, 0, 0.948554,-0.00973868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625207,0.00444734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378827,0.000234369) , 
11, 0.865286, 1, 0, 0.476317,0.0189559) , 
11, 0.607183, 1, 0, 0.655428,0.00807253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492539,-0.00372657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494299,-0.00107031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49113,0.000655779) , 
9, 0.0393762, 1, 0, 0.492968,-0.00437514) , 
9, 0.0354404, 1, 0, 0.492841,-0.014685) , 
9, 0.0319904, 1, 0, 0.596704,-0.000147244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22387,0.000881684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887397,0.00541719) , 
4, 0.150349, 1, 0, 0.420479,0.0263191) , 
9, 0.0479856, 1, 0, 0.539191,0.00849031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343455,-0.000881053) , 
6, 0.733947, 1, 0, 0.502142,0.00309564)    );
  // itree = 1606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990918,0.00415025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973469,0.0132792) , 
10, 0.209518, 1, 0, 0.98243,0.0113291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939731,-0.00795416) , 
15, 0.0935303, 1, 0, 0.963501,-0.00296262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751108,0.00361303) , 
10, 0.508852, 1, 0, 0.917825,0.0038088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27017,-0.0016086) , 
11, 0.682106, 1, 0, 0.752604,-0.00220987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473205,-0.00230586) , 
6, 0.370207, 1, 0, 0.692187,-0.00913962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633123,0.00465845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353717,0.000796383) , 
9, 0.0304166, 1, 0, 0.441487,0.0240208) , 
13, 0.849253, 1, 0, 0.599927,0.00306375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255858,-0.000986228) , 
11, 0.993946, 1, 0, 0.516251,-0.00171001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458089,0.00146571) , 
11, 1.2673, 1, 0, 0.507387,0.00359137)    );
  // itree = 1607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160634,0.00134993) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507012,-0.00345752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897408,-0.00234938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977489,0.0022156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843333,0.00273536) , 
6, 0.336941, 1, 0, 0.915497,0.0194023) , 
9, 0.0159204, 1, 0, 0.909171,0.00769591) , 
12, 0.117813, 1, 0, 0.823095,-0.00862537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537791,0.00199127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293194,0.00121904) , 
16, 0.323541, 1, 0, 0.404233,0.0247066) , 
7, 0.380886, 1, 0, 0.694924,0.00157415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758452,0.00035502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244757,-0.00118961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670962,-0.00374213) , 
0, 0.128751, 1, 0, 0.346128,-0.0318643) , 
16, 0.0865898, 1, 0, 0.457323,-0.0220941) , 
15, 0.145543, 1, 0, 0.58323,-0.00955213) , 
12, 0.0522438, 1, 0, 0.493992,-0.00402221)    );
  // itree = 1608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735235,0.0017486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670402,0.00393356) , 
14, 0.0496398, 1, 0, 0.702221,0.0413412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692087,-0.000650154) , 
14, 0.120554, 1, 0, 0.698774,0.0244727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622856,-0.00274172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141114,0.00045048) , 
10, 0.546229, 1, 0, 0.241345,-0.00143598) , 
16, 0.204641, 1, 0, 0.41135,0.00819305) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950489,0.000192792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834665,-0.00545998) , 
10, 0.263732, 1, 0, 0.902318,-0.019435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869285,0.00179954) , 
10, 0.373622, 1, 0, 0.892011,-0.00781901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711599,-0.00285304) , 
10, 0.529344, 1, 0, 0.854139,-0.0154961) , 
2, 0.0335331, 1, 0, 0.574283,-0.000523854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702178,0.000314263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220936,-0.00122714) , 
3, 0.547976, 1, 0, 0.360221,-0.0152886) , 
9, 0.0530208, 1, 0, 0.508776,-0.00504211)    );
  // itree = 1609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417957,-0.00297547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874164,0.00281361) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846837,-0.00286844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955567,0.00495058) , 
4, 0.445662, 1, 0, 0.885549,-0.0109063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85655,-0.0067714) , 
12, 0.272724, 1, 0, 0.876989,-0.0225145) , 
2, 0.0269831, 1, 0, 0.876453,-0.0126488) , 
12, 0.10391, 1, 0, 0.768672,-0.0235916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841628,0.00145044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56601,0.00304006) , 
10, 0.423475, 1, 0, 0.701874,0.0350373) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526021,-0.002451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237183,-4.55811e-05) , 
16, 0.325671, 1, 0, 0.37583,-0.0186011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.146426,6.57692e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685897,0.00282056) , 
4, 0.107392, 1, 0, 0.234076,0.0101531) , 
15, 0.0995238, 1, 0, 0.282319,0.000367348) , 
7, 0.284568, 1, 0, 0.351081,0.00604954) , 
7, 0.194803, 1, 0, 0.498292,-0.00439969)    );
  // itree = 1610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180991,-0.00270557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195829,0.000871361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182577,-0.0011006) , 
15, 0.260361, 1, 0, 0.190272,3.09774e-05) , 
9, 0.027377, 1, 0, 0.188205,-0.00910973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616553,-0.00254612) , 
4, 0.107446, 1, 0, 0.245989,-0.0141362) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950761,-0.0064137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978954,0.00469059) , 
1, 0.406812, 1, 0, 0.963658,-0.00501831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949677,0.0031396) , 
10, 0.302681, 1, 0, 0.957405,0.00292992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817367,-0.00215403) , 
10, 0.514566, 1, 0, 0.921445,-0.00404402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738532,0.00236883) , 
11, 0.899206, 1, 0, 0.869618,0.0103708) , 
12, 0.115304, 1, 0, 0.492165,-0.00446215)    );
  // itree = 1611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803035,-0.00324598) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949394,0.00157316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453069,-0.00193364) , 
11, 0.648582, 1, 0, 0.692734,-0.0175344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422462,0.000876543) , 
8, 0.0289093, 1, 0, 0.572548,-0.0040691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998913,0.0152201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933187,-0.0022121) , 
6, 0.156827, 1, 0, 0.965558,0.000487986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843977,0.00339277) , 
6, 0.296235, 1, 0, 0.908248,0.0213689) , 
5, 0.0330965, 1, 0, 0.732067,0.00801862) , 
9, 0.010422, 1, 0, 0.742721,0.00312937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418891,-0.00244478) , 
9, 0.0590591, 1, 0, 0.678937,-0.00630848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499685,0.0033338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134571,-0.000152127) , 
16, 0.223748, 1, 0, 0.241635,0.0170792) , 
8, 0.0446794, 1, 0, 0.504627,0.00301386)    );
  // itree = 1612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995618,0.00209417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979084,-0.023175) , 
6, 0.117664, 1, 0, 0.987146,-0.00604151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957635,0.00117217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919206,0.0045364) , 
15, 0.0709538, 1, 0, 0.938296,0.0114078) , 
3, 0.134657, 1, 0, 0.960143,0.00360399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576242,-0.00437985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149508,-0.000917864) , 
8, 0.0341528, 1, 0, 0.226253,-0.0204388) , 
3, 0.361498, 1, 0, 0.556459,-0.00962099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557536,0.00220006) , 
6, 0.429013, 1, 0, 0.556682,-0.00119244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414468,-0.00129658) , 
6, 0.64352, 1, 0, 0.527944,-0.0069111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348686,0.000851922) , 
9, 0.0625761, 1, 0, 0.4933,-0.00281267)    );
  // itree = 1613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743476,-0.0040214) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996268,0.0118232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929202,-0.00650603) , 
11, 0.430005, 1, 0, 0.96408,-0.00613698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978499,0.00656829) , 
9, 0.031677, 1, 0, 0.970096,0.00400447) , 
1, 0.203445, 1, 0, 0.920148,-0.00511634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905053,0.00274433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49074,0.00285043) , 
17, 0.726939, 1, 0, 0.699157,0.0308131) , 
11, 0.664558, 1, 0, 0.860883,0.00451923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103651,-0.000524309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479574,-0.00204755) , 
12, 0.0715888, 1, 0, 0.243995,-0.0202195) , 
3, 0.535259, 1, 0, 0.52681,-0.0088779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404792,0.0010517) , 
6, 0.746759, 1, 0, 0.504845,-0.00306741)    );
  // itree = 1614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98281,-0.00266858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998919,0.0190647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992763,0.01525) , 
3, 0.125342, 1, 0, 0.996083,0.0110911) , 
15, 0.0387179, 1, 0, 0.991449,0.00637361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818281,-0.00511436) , 
3, 0.228318, 1, 0, 0.947935,-0.00533099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263818,0.00142916) , 
3, 0.363882, 1, 0, 0.634422,0.005983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381999,-0.00201369) , 
6, 0.486805, 1, 0, 0.587147,-0.00146166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711033,-9.77917e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423102,0.00264631) , 
7, 0.164096, 1, 0, 0.531691,0.0273026) , 
13, 0.969602, 1, 0, 0.572985,0.00588416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250871,-0.00122524) , 
3, 0.883809, 1, 0, 0.499702,-0.00110132)    );
  // itree = 1615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885641,0.000384777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708822,-0.00485017) , 
7, 0.11175, 1, 0, 0.803206,-0.0293599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532136,-0.00112566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456536,0.00338222) , 
14, 0.0262514, 1, 0, 0.495773,0.0140194) , 
16, 0.154763, 1, 0, 0.648705,-0.00755954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808931,-0.00248072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313979,-0.00292431) , 
11, 0.718255, 1, 0, 0.467301,-0.0428497) , 
9, 0.0337993, 1, 0, 0.576697,-0.0215678) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407938,-0.00231987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164047,-0.000192449) , 
7, 0.340906, 1, 0, 0.231025,-0.0148319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323971,0.00176183) , 
15, 0.297402, 1, 0, 0.265926,0.00110186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974937,0.00391017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793113,0.0033069) , 
11, 0.521484, 1, 0, 0.880281,0.0343532) , 
12, 0.120485, 1, 0, 0.433545,0.0101741) , 
14, 0.0836827, 1, 0, 0.50416,-0.0054836)    );
  // itree = 1616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783457,-0.00228288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408158,0.00152959) , 
11, 0.765078, 1, 0, 0.582104,0.00544341) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515105,-0.00200536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164621,-0.000962744) , 
7, 0.336703, 1, 0, 0.254721,-0.0199822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770239,-0.00522349) , 
12, 0.118694, 1, 0, 0.353467,-0.0279907) , 
9, 0.023466, 1, 0, 0.415098,-0.0189782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529888,0.00098137) , 
14, 0.189944, 1, 0, 0.433638,-0.0138107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23537,0.000408774) , 
3, 0.818606, 1, 0, 0.364451,-0.00631623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826029,-0.00189792) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977219,-0.00560676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978857,0.00818877) , 
17, 0.23626, 1, 0, 0.978044,0.00435241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860171,0.0040826) , 
3, 0.34364, 1, 0, 0.929223,0.0260088) , 
5, 0.0261725, 1, 0, 0.903102,0.0144499) , 
12, 0.172956, 1, 0, 0.496381,-0.00123006)    );
  // itree = 1617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709662,0.00199618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958269,-0.0141464) , 
5, 0.0189474, 1, 0, 0.856457,-0.00561865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659731,-0.00565831) , 
9, 0.0466253, 1, 0, 0.796811,-0.0182044) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729524,0.00353084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90596,-0.00136633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986829,0.0108624) , 
5, 0.0511212, 1, 0, 0.946624,0.00787734) , 
5, 0.033723, 1, 0, 0.863295,0.0212193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171208,-0.000296367) , 
3, 0.536666, 1, 0, 0.46058,0.00633749) , 
13, 0.599991, 1, 0, 0.557251,-0.000718685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433619,0.00191142) , 
13, 1.05516, 1, 0, 0.532578,0.00564698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38937,-0.000952266) , 
11, 1.20919, 1, 0, 0.504884,0.000377192)    );
  // itree = 1618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978083,-0.0053824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967396,0.00663091) , 
17, 0.284107, 1, 0, 0.972685,0.0100939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942823,-0.0048641) , 
16, 0.140221, 1, 0, 0.962278,0.00155108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773884,0.00478714) , 
11, 0.846925, 1, 0, 0.915473,0.0217229) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183372,-0.000313512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588792,-0.00455736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814485,-0.00228814) , 
2, 0.0421236, 1, 0, 0.711444,-0.0581751) , 
5, 0.0265179, 1, 0, 0.339874,-0.02075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664448,0.00279325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199199,-0.000897888) , 
7, 0.194803, 1, 0, 0.329181,0.00136051) , 
15, 0.202377, 1, 0, 0.334981,-0.010633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9018,0.00295583) , 
12, 0.245177, 1, 0, 0.394503,-0.00695711) , 
10, 0.329427, 1, 0, 0.505279,-0.000858746)    );
  // itree = 1619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929004,0.00153391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.407163,-0.00260208) , 
16, 0.151614, 1, 0, 0.597053,-0.0160955) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959617,-0.00465591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981142,0.00610615) , 
15, 0.105235, 1, 0, 0.968181,-0.00106772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963952,0.00736762) , 
7, 0.178336, 1, 0, 0.967047,0.00514263) , 
5, 0.0292269, 1, 0, 0.802548,-0.00429984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338064,0.00162871) , 
11, 0.837311, 1, 0, 0.726864,-7.84206e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564254,-0.000524291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37934,-0.0020473) , 
16, 0.111701, 1, 0, 0.459014,-0.0282494) , 
6, 0.443865, 1, 0, 0.609627,-0.0124088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210643,0.000828158) , 
10, 0.752977, 1, 0, 0.504368,-0.00583252)    );
  // itree = 1620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755829,0.00411718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128377,-0.000300029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374965,0.000896221) , 
12, 0.0680232, 1, 0, 0.183753,0.000685126) , 
11, 0.62095, 1, 0, 0.241869,0.00421159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925795,0.00497257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.939065,-0.000273627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853506,-0.005234) , 
8, 0.0173951, 1, 0, 0.89432,-0.0206466) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836237,-0.00125268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79567,0.0023557) , 
7, 0.12497, 1, 0, 0.817994,0.00806934) , 
10, 0.350976, 1, 0, 0.860687,-0.00799289) , 
9, 0.0090927, 1, 0, 0.87215,-0.000715864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600141,-0.0038018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540572,-0.00168068) , 
15, 0.115507, 1, 0, 0.55884,-0.0443792) , 
10, 0.526465, 1, 0, 0.758174,-0.0165997) , 
2, 0.0179887, 1, 0, 0.49491,-0.00598799)    );
  // itree = 1621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902165,0.00530647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957172,-0.00596561) , 
5, 0.03963, 1, 0, 0.928625,0.00449607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649731,0.00228228) , 
6, 0.430158, 1, 0, 0.823098,0.0188749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420108,-0.00130227) , 
8, 0.0446084, 1, 0, 0.728406,0.0090145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269438,0.00267995) , 
10, 0.652204, 1, 0, 0.603917,0.016912) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683054,-0.00118497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768005,0.00378786) , 
14, 0.132714, 1, 0, 0.732419,0.0192007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325698,-0.00276755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218855,0.000344546) , 
11, 0.836936, 1, 0, 0.255331,-0.00947059) , 
8, 0.0203088, 1, 0, 0.417713,0.000287993) , 
14, 0.0861099, 1, 0, 0.513949,0.00887977)    );
  // itree = 1622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994909,0.00940624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968452,-0.0194113) , 
4, 0.472712, 1, 0, 0.983683,-0.00351968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965918,0.00695784) , 
6, 0.206794, 1, 0, 0.978224,0.0065117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806638,-0.00183844) , 
11, 0.493238, 1, 0, 0.918811,-0.00138352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492708,-0.00240155) , 
8, 0.0343907, 1, 0, 0.810122,-0.00866733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133459,0.000476306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433924,0.00180031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751795,0.000426315) , 
4, 0.203209, 1, 0, 0.547393,0.0279128) , 
2, 0.00300529, 1, 0, 0.312596,0.0159023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73578,-0.00151753) , 
12, 0.221075, 1, 0, 0.349005,0.0122177) , 
11, 0.718722, 1, 0, 0.51118,0.00487241)    );
  // itree = 1623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125998,-0.00134571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16962,0.000106855) , 
15, 0.194492, 1, 0, 0.147225,-0.00862795) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954433,-0.0188781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.907228,0.000458997) , 
6, 0.168775, 1, 0, 0.924853,-0.00655572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969716,0.00205577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984508,0.00792924) , 
9, 0.021118, 1, 0, 0.977091,0.0122397) , 
12, 0.201554, 1, 0, 0.948657,0.00200897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755863,0.00454885) , 
10, 0.59031, 1, 0, 0.915371,0.0104223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542355,-0.00384541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548337,-0.000264576) , 
11, 0.860067, 1, 0, 0.545494,-0.0328107) , 
11, 0.745267, 1, 0, 0.811066,-0.00176939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57854,0.0028186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545017,0.000569938) , 
11, 1.23484, 1, 0, 0.558627,0.0303932) , 
11, 0.999823, 1, 0, 0.736262,0.00776116) , 
5, 0.00309822, 1, 0, 0.496817,0.00109895)    );
  // itree = 1624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242582,0.00159602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97603,0.00640108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864877,-0.00330783) , 
7, 0.176752, 1, 0, 0.923532,1.20291e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558025,-0.00182448) , 
11, 0.807964, 1, 0, 0.766147,-0.0160048) , 
2, 0.0120212, 1, 0, 0.604146,-0.00422118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43321,-0.000865065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344192,-0.00244365) , 
14, 0.101404, 1, 0, 0.377458,-0.0326093) , 
9, 0.0423041, 1, 0, 0.506002,-0.0165117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191451,0.000401638) , 
8, 0.0569214, 1, 0, 0.406085,-0.00927117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968193,0.00162137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913218,-0.00528556) , 
10, 0.420319, 1, 0, 0.945961,-0.00771012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826817,0.00416194) , 
17, 0.538974, 1, 0, 0.912112,0.0137336) , 
12, 0.210496, 1, 0, 0.497597,-0.0051109)    );
  // itree = 1625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243591,0.00181683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264829,-0.000324336) , 
15, 0.23429, 1, 0, 0.250491,0.0179701) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910044,-0.00105687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858143,-0.00564763) , 
14, 0.109775, 1, 0, 0.891655,-0.0183536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975948,0.000755693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920187,0.00514292) , 
17, 0.370968, 1, 0, 0.955433,0.0163478) , 
2, 0.0411492, 1, 0, 0.921532,-0.00209749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602904,-0.00146242) , 
17, 0.756899, 1, 0, 0.837516,-0.0108367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783136,0.00182859) , 
16, 0.223296, 1, 0, 0.830972,-0.00682084) , 
4, 0.103268, 1, 0, 0.576472,0.00404824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16103,-0.00159894) , 
10, 0.815054, 1, 0, 0.494129,-0.00155872)    );
  // itree = 1626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992745,0.00657068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875541,-0.00332001) , 
6, 0.199471, 1, 0, 0.934585,-0.0095279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905096,0.00289723) , 
8, 0.0239805, 1, 0, 0.92513,-0.00176696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596443,0.00460109) , 
10, 0.496502, 1, 0, 0.846818,0.0105415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872956,0.00205099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430394,-0.00213699) , 
13, 0.655368, 1, 0, 0.633776,-0.0135412) , 
14, 0.100578, 1, 0, 0.760674,0.00080359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611364,0.000463471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517521,0.00407229) , 
8, 0.0299703, 1, 0, 0.564783,0.0373676) , 
11, 0.88823, 1, 0, 0.710039,0.0102548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107174,0.000214937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330664,-0.00131576) , 
0, 0.0656546, 1, 0, 0.197439,-0.0108823) , 
17, 1.01664, 1, 0, 0.503233,0.00172713)    );
  // itree = 1627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790196,-0.00265179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221563,0.00154768) , 
16, 0.254682, 1, 0, 0.395285,0.0078398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314487,-0.00120514) , 
6, 0.340767, 1, 0, 0.359453,-0.00558298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277907,0.0011625) , 
9, 0.048949, 1, 0, 0.325524,0.00439269) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984687,0.00729684) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.848655,-0.000732024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692535,-0.00374427) , 
7, 0.176721, 1, 0, 0.78308,-0.0296834) , 
6, 0.2117, 1, 0, 0.860148,-0.0141838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868457,0.00298218) , 
15, 0.122351, 1, 0, 0.861887,-0.00494351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740426,-0.00302003) , 
9, 0.0421287, 1, 0, 0.82818,-0.0160342) , 
5, 0.0300877, 1, 0, 0.495399,-0.00251067)    );
  // itree = 1628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971693,0.00382059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888229,-0.00788805) , 
7, 0.110886, 1, 0, 0.9287,-0.0087671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636578,0.00222744) , 
11, 0.773759, 1, 0, 0.820318,0.00760544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335515,-0.00181683) , 
8, 0.0440109, 1, 0, 0.665787,-0.00389382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57327,0.003516) , 
14, 0.0566187, 1, 0, 0.649121,0.00526626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334324,-0.00205019) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609232,0.00167449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191673,0.000582854) , 
16, 0.17318, 1, 0, 0.323797,0.0147656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205668,0.00023977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57057,-0.00263589) , 
12, 0.0801451, 1, 0, 0.305333,-0.0102554) , 
15, 0.262749, 1, 0, 0.314506,0.00217512) , 
15, 0.14835, 1, 0, 0.318696,-0.00480529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956074,-0.00234212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698494,-0.00396625) , 
17, 0.394342, 1, 0, 0.823584,-0.0387737) , 
12, 0.170389, 1, 0, 0.408509,-0.0108478) , 
15, 0.0962559, 1, 0, 0.495318,-0.00503411)    );
  // itree = 1629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999128,0.0162811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886675,-0.00594532) , 
3, 0.194688, 1, 0, 0.949178,-0.0130134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697685,0.00200458) , 
11, 0.598935, 1, 0, 0.850117,0.00581262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821245,-0.00146767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639378,-0.00355097) , 
15, 0.109232, 1, 0, 0.736903,-0.0334871) , 
7, 0.114625, 1, 0, 0.809886,-0.00815267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929406,0.00302274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606644,0.00271219) , 
6, 0.324695, 1, 0, 0.768836,0.0274199) , 
16, 0.143312, 1, 0, 0.79757,0.00252024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234954,-0.00141092) , 
7, 0.487373, 1, 0, 0.675023,-0.00272722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432704,-0.00208915) , 
15, 0.32771, 1, 0, 0.640287,-0.0072099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208794,0.000942093) , 
17, 1.09879, 1, 0, 0.500263,0.000145899)    );
  // itree = 1630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969635,-0.000605182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50336,0.00390036) , 
11, 0.602747, 1, 0, 0.743582,0.0190218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683826,-0.00252554) , 
9, 0.0184986, 1, 0, 0.71993,0.0050996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582754,-0.00128815) , 
6, 0.372621, 1, 0, 0.667615,-0.00585553) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573903,0.00147027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527382,0.000306707) , 
15, 0.0801819, 1, 0, 0.550772,0.0110646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528805,0.00345105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494029,0.00214721) , 
14, 0.0793879, 1, 0, 0.508764,0.0347796) , 
15, 0.10044, 1, 0, 0.527687,0.024097) , 
14, 0.0487787, 1, 0, 0.606176,0.00729589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916276,0.0042977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301352,-0.000141679) , 
8, 0.0278029, 1, 0, 0.54021,0.00667765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288462,-0.00199789) , 
13, 0.87796, 1, 0, 0.401328,-0.0177586) , 
15, 0.146358, 1, 0, 0.529195,-0.00211949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241873,0.000886269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671313,0.00317524) , 
2, 0.0152382, 1, 0, 0.386115,0.0251368) , 
15, 0.298571, 1, 0, 0.504862,0.00251581)    );
  // itree = 1631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98077,-0.000455359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988363,0.00931242) , 
14, 0.0202592, 1, 0, 0.984564,0.00690124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970548,0.00220324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904297,-0.00545982) , 
8, 0.0155125, 1, 0, 0.938907,-0.00931602) , 
14, 0.051666, 1, 0, 0.959019,-0.00217239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519601,0.000208343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316893,0.00317906) , 
15, 0.124405, 1, 0, 0.40091,0.0284308) , 
17, 0.523936, 1, 0, 0.752407,0.00915687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172374,-0.00174416) , 
11, 0.870902, 1, 0, 0.634742,0.00264042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320198,0.00193146) , 
13, 0.962267, 1, 0, 0.5568,0.00845244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540267,-0.00181014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487972,-0.000347153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273156,0.000351734) , 
7, 0.243504, 1, 0, 0.370922,8.45426e-05) , 
15, 0.0867844, 1, 0, 0.413231,-0.00886431) , 
6, 0.47593, 1, 0, 0.500231,0.00162934)    );
  // itree = 1632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998421,0.0193632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975665,-0.00291961) , 
10, 0.203763, 1, 0, 0.983771,0.00104103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994232,0.0130798) , 
12, 0.26312, 1, 0, 0.986741,0.00480648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567732,-0.00315212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126086,-0.000688734) , 
16, 0.270571, 1, 0, 0.264595,-0.0197182) , 
3, 0.262908, 1, 0, 0.56373,-0.00955936) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619964,0.000870335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577103,0.00335835) , 
9, 0.0186347, 1, 0, 0.598498,0.0338709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505656,-0.000655876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229204,0.0010799) , 
16, 0.157688, 1, 0, 0.359384,0.00278737) , 
9, 0.035199, 1, 0, 0.438129,0.0130238) , 
6, 0.342264, 1, 0, 0.498655,0.00214119)    );
  // itree = 1633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899566,0.00753326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820922,-0.00278704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201505,0.000622995) , 
10, 0.485979, 1, 0, 0.41164,-0.000144633) , 
7, 0.159448, 1, 0, 0.531382,0.0146473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35836,-0.00239921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201087,0.000561293) , 
17, 1.03023, 1, 0, 0.247005,-0.00674133) , 
11, 0.856829, 1, 0, 0.361297,0.00185478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916305,0.00478685) , 
12, 0.206864, 1, 0, 0.420004,0.00564817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850526,-0.00394943) , 
12, 0.329691, 1, 0, 0.445023,0.00335434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964796,0.00135603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739595,-0.00328322) , 
6, 0.332671, 1, 0, 0.860844,-0.0217441) , 
5, 0.05109, 1, 0, 0.497664,0.00017698)    );
  // itree = 1634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675873,-0.0027304) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644189,0.00272561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931348,0.00234567) , 
4, 0.295841, 1, 0, 0.785985,0.0305453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576812,-0.00109964) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582476,0.00312618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392503,0.00155016) , 
16, 0.212169, 1, 0, 0.47737,0.0338784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211314,-0.00186854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167918,0.00115593) , 
16, 0.354555, 1, 0, 0.184127,-0.00121221) , 
16, 0.273692, 1, 0, 0.281466,0.0104358) , 
16, 0.161636, 1, 0, 0.339256,0.00431547) , 
7, 0.176888, 1, 0, 0.446497,0.0106122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944125,0.00142183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814821,-0.00299688) , 
8, 0.0156308, 1, 0, 0.873787,-0.0151741) , 
5, 0.0472087, 1, 0, 0.516965,0.00635957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352049,-0.00196198) , 
15, 0.276624, 1, 0, 0.498465,0.00221539) , 
14, 0.0068774, 1, 0, 0.516611,-0.000807423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403402,0.00185329) , 
15, 0.350812, 1, 0, 0.504466,0.00228113)    );
  // itree = 1635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974669,0.00557384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99527,0.00865531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830155,-0.00322485) , 
3, 0.230389, 1, 0, 0.922464,-0.0114823) , 
9, 0.018456, 1, 0, 0.939605,-0.00348257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873161,-0.0117691) , 
8, 0.0212678, 1, 0, 0.925534,-0.0149881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518269,-0.00256708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672734,0.00360396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287371,0.000579445) , 
3, 0.539413, 1, 0, 0.357208,0.0163479) , 
13, 0.617019, 1, 0, 0.382828,0.00915504) , 
17, 0.536213, 1, 0, 0.605832,-0.000765684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253085,-0.000829025) , 
3, 0.787409, 1, 0, 0.494211,-0.00553744)    );
  // itree = 1636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953413,-0.00416077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962538,0.00665273) , 
14, 0.0421684, 1, 0, 0.957205,0.00292159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580347,-0.00448005) , 
10, 0.45778, 1, 0, 0.869528,-0.00673132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692372,-0.00519232) , 
15, 0.153658, 1, 0, 0.834672,-0.0147582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447365,0.00248794) , 
11, 0.751168, 1, 0, 0.764426,-0.00679819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282031,-0.00217223) , 
11, 0.851175, 1, 0, 0.62574,-0.0135008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642814,0.00414101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349125,-0.000249389) , 
9, 0.0411, 1, 0, 0.4211,0.00646327) , 
15, 0.223929, 1, 0, 0.56049,-0.00713519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255701,0.00153201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653261,-0.000975983) , 
12, 0.109726, 1, 0, 0.371264,0.0147121) , 
11, 1.05853, 1, 0, 0.502095,-0.000393111)    );
  // itree = 1637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956071,-0.00520053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929725,0.00675939) , 
13, 0.473911, 1, 0, 0.943374,0.0113973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973187,0.000179794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926929,-0.0126647) , 
7, 0.0853332, 1, 0, 0.950986,-0.0152064) , 
4, 0.378684, 1, 0, 0.946879,-0.000851701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552202,-0.0019145) , 
6, 0.440705, 1, 0, 0.797269,-0.016105) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609739,-0.00234179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229651,0.00109023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119285,-0.000783907) , 
10, 0.673916, 1, 0, 0.152592,-0.00209416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662181,0.00188222) , 
2, 0.020529, 1, 0, 0.205293,0.00228531) , 
7, 0.132602, 1, 0, 0.258238,-0.00272292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868204,0.00419161) , 
2, 0.0402769, 1, 0, 0.308703,0.0015518) , 
10, 0.47641, 1, 0, 0.49139,-0.00505049)    );
  // itree = 1638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617301,-0.000650866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624478,0.000615514) , 
8, 0.0185315, 1, 0, 0.620655,-0.00099438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821948,-0.00779452) , 
1, 0.244189, 1, 0, 0.687438,-0.0233804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985507,0.0104541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986547,0.00565102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79976,-0.00238299) , 
13, 0.807441, 1, 0, 0.910023,-0.00886698) , 
16, 0.0538409, 1, 0, 0.932975,0.00344438) , 
4, 0.330066, 1, 0, 0.81825,-0.00908928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6961,0.00191293) , 
8, 0.0363547, 1, 0, 0.796569,-0.00217761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419712,-0.00399038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454864,0.00136795) , 
16, 0.286362, 1, 0, 0.436903,-0.0296807) , 
7, 0.392294, 1, 0, 0.722386,-0.00785026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689868,4.16651e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427469,0.00292841) , 
7, 0.153195, 1, 0, 0.517049,0.0376597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132356,4.1348e-06) , 
16, 0.238704, 1, 0, 0.272658,0.0137703) , 
10, 0.611794, 1, 0, 0.52269,0.00175006)    );
  // itree = 1639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178005,-0.00153246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700045,0.0035321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921357,0.00158866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819076,-0.00270048) , 
16, 0.10541, 1, 0, 0.87362,-0.00737081) , 
5, 0.0248697, 1, 0, 0.824319,0.007567) , 
5, 0.0115556, 1, 0, 0.642353,-0.000808012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941975,-0.00190719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30027,-0.00234169) , 
17, 0.477194, 1, 0, 0.457923,-0.0310052) , 
9, 0.0293952, 1, 0, 0.572086,-0.0123129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895942,-0.00566855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461489,0.00203175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227591,0.000313878) , 
3, 0.636343, 1, 0, 0.300228,0.0140746) , 
17, 0.456852, 1, 0, 0.392231,0.0072911) , 
9, 0.0394522, 1, 0, 0.494467,-0.00385251)    );
  // itree = 1640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892733,0.00151436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615574,-0.000969106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80425,-0.00613071) , 
5, 0.0353572, 1, 0, 0.721953,-0.0416362) , 
10, 0.335886, 1, 0, 0.797305,-0.0188358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769451,0.00182527) , 
14, 0.137776, 1, 0, 0.79028,-0.00901271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755436,0.000793515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569927,0.00322463) , 
10, 0.47641, 1, 0, 0.665481,0.0362459) , 
8, 0.0228057, 1, 0, 0.749739,0.00568961) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300832,-0.00307753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855305,-0.000689593) , 
1, 0.20525, 1, 0, 0.502056,-0.0404376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507141,-0.00236809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145853,0.000264905) , 
17, 0.925063, 1, 0, 0.234912,-0.00390249) , 
16, 0.229578, 1, 0, 0.314915,-0.0148439) , 
16, 0.144548, 1, 0, 0.500375,-0.00608605)    );
  // itree = 1641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868092,-0.00645265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980751,-0.00451518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970662,0.00625258) , 
11, 0.367503, 1, 0, 0.974802,0.00989534) , 
12, 0.157614, 1, 0, 0.941652,-0.00229668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735509,0.00463487) , 
8, 0.0316604, 1, 0, 0.894996,0.00571791) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50853,0.000935089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147449,-0.00102661) , 
7, 0.530406, 1, 0, 0.279912,-0.00161625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716281,-0.00422499) , 
4, 0.271471, 1, 0, 0.381026,-0.0165406) , 
11, 0.719109, 1, 0, 0.584424,-0.00773208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637307,-0.0017752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338142,0.00164659) , 
13, 0.687118, 1, 0, 0.406213,0.0175545) , 
9, 0.042236, 1, 0, 0.514183,0.00223448)    );
  // itree = 1642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996369,0.00172683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997229,0.0200799) , 
3, 0.130215, 1, 0, 0.996757,0.00541028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823109,-0.00354276) , 
3, 0.221368, 1, 0, 0.920663,-0.0108327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662979,0.00172815) , 
13, 1.04549, 1, 0, 0.835106,0.00381286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615774,-0.00304195) , 
15, 0.241322, 1, 0, 0.78183,-0.00824418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.513677,-0.00298029) , 
8, 0.0364121, 1, 0, 0.740107,-0.0160361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55622,0.00259767) , 
7, 0.313593, 1, 0, 0.716444,-0.00832428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260416,-0.001696) , 
7, 0.410107, 1, 0, 0.628737,-0.0126066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287353,0.00192827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142724,-0.000427149) , 
15, 0.121503, 1, 0, 0.203188,0.00645543) , 
16, 0.278488, 1, 0, 0.493049,-0.00652863)    );
  // itree = 1643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989072,-0.0152724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580698,0.00167047) , 
3, 0.152741, 1, 0, 0.820363,0.0024552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800951,-0.000497722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317943,-0.0035194) , 
13, 0.662027, 1, 0, 0.515398,-0.0242583) , 
6, 0.157089, 1, 0, 0.678934,-0.00993332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482092,0.00386044) , 
6, 0.222544, 1, 0, 0.633991,0.000572453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874038,0.00289427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.216118,-0.000808749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76315,-0.00643116) , 
1, 0.209529, 1, 0, 0.348454,-0.0277737) , 
16, 0.0755242, 1, 0, 0.423937,-0.0198233) , 
6, 0.263956, 1, 0, 0.523975,-0.0101098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42732,0.00107179) , 
6, 0.611911, 1, 0, 0.498279,-0.00149477)    );
  // itree = 1644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775594,-0.000930517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58074,-0.0042602) , 
6, 0.262684, 1, 0, 0.674632,-0.0360674) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977333,-0.00314494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747714,0.00301453) , 
3, 0.328307, 1, 0, 0.868387,0.0204629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646972,-0.00299848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767749,-0.000418193) , 
16, 0.126615, 1, 0, 0.7073,-0.0258289) , 
7, 0.141471, 1, 0, 0.80608,0.00255764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502774,-0.00219498) , 
9, 0.0562322, 1, 0, 0.717652,-0.00991302) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14063,-0.000335785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770156,0.0018561) , 
4, 0.103352, 1, 0, 0.28083,0.00225435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27183,0.00193708) , 
11, 0.958179, 1, 0, 0.276531,0.0165404) , 
7, 0.288602, 1, 0, 0.47687,0.00452636) , 
15, 0.0243007, 1, 0, 0.50596,-0.00144488)    );
  // itree = 1645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979361,0.0103657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940185,-0.00555181) , 
12, 0.208975, 1, 0, 0.959059,0.00509379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886113,-0.00558353) , 
9, 0.0247805, 1, 0, 0.933815,-0.00691841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923861,0.00639397) , 
9, 0.0382987, 1, 0, 0.931351,0.00383726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309783,0.000295548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160526,-0.00249544) , 
15, 0.0962937, 1, 0, 0.22114,-0.0210534) , 
7, 0.395717, 1, 0, 0.606211,-0.00755788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347887,0.00147977) , 
15, 0.233875, 1, 0, 0.557378,-0.00221587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4355,0.00217252) , 
13, 1.11228, 1, 0, 0.537501,0.00346613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517015,-0.00323161) , 
14, 0.205011, 1, 0, 0.535184,-0.00129648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354304,-0.00147338) , 
6, 0.65331, 1, 0, 0.490404,-0.00908757)    );
  // itree = 1646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886403,-0.00340156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928428,0.00469255) , 
13, 0.595493, 1, 0, 0.903721,0.00217554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377867,-0.00114112) , 
3, 0.474222, 1, 0, 0.583353,-0.0133503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934062,0.00403526) , 
12, 0.231747, 1, 0, 0.633785,-0.00789558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887512,-0.00676172) , 
4, 0.514016, 1, 0, 0.672167,-0.0118889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735185,0.00358708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629364,-0.000857235) , 
15, 0.265853, 1, 0, 0.677735,0.0125544) , 
14, 0.13429, 1, 0, 0.673235,-0.00720234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2739,-0.000794905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206039,0.00142668) , 
11, 0.895513, 1, 0, 0.230262,0.0104937) , 
10, 0.680576, 1, 0, 0.50442,-0.000458483)    );
  // itree = 1647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98736,-0.00439191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978391,0.00776895) , 
6, 0.174337, 1, 0, 0.983574,0.00696608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779307,-0.00348311) , 
11, 0.54554, 1, 0, 0.90856,-0.00545203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53191,0.00124672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346995,0.00211416) , 
15, 0.0609876, 1, 0, 0.409996,0.0208208) , 
8, 0.0334287, 1, 0, 0.704372,0.00530808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216832,-0.00201154) , 
11, 0.993678, 1, 0, 0.599759,-0.00188119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521608,0.00128249) , 
6, 0.558932, 1, 0, 0.578255,0.00606545) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420185,-0.00326699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868717,-0.000304335) , 
4, 0.178828, 1, 0, 0.625086,-0.0343325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224038,0.000204613) , 
8, 0.0282, 1, 0, 0.360987,-0.00957921) , 
15, 0.194405, 1, 0, 0.498615,0.000330899)    );
  // itree = 1648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542612,0.00275938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378911,0.00142109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113273,-0.000317342) , 
10, 0.575359, 1, 0, 0.171605,0.00292963) , 
11, 0.663916, 1, 0, 0.21037,0.00642388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579388,-0.00250323) , 
12, 0.094954, 1, 0, 0.248147,0.00116149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7817,0.00291486) , 
2, 0.0339583, 1, 0, 0.315332,0.00651862) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994754,0.00481714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947922,-0.00633956) , 
17, 0.286002, 1, 0, 0.971387,-0.00676666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950773,0.00418091) , 
13, 0.705105, 1, 0, 0.962836,0.00424935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783771,-0.000176912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641672,-0.00365374) , 
15, 0.0867844, 1, 0, 0.705252,-0.0417355) , 
11, 0.666999, 1, 0, 0.855995,-0.0148242) , 
12, 0.134521, 1, 0, 0.503667,-0.000915949)    );
  // itree = 1649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994914,0.0106507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984342,-0.0182918) , 
5, 0.0380589, 1, 0, 0.989654,-0.000795477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824964,-0.00425459) , 
3, 0.219704, 1, 0, 0.942804,-0.010265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556472,-0.000512242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931135,0.00515792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514873,0.00458749) , 
10, 0.406608, 1, 0, 0.687395,0.05401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582846,0.000631107) , 
11, 0.857052, 1, 0, 0.653008,0.0395329) , 
6, 0.22034, 1, 0, 0.628154,0.0281288) , 
11, 0.525646, 1, 0, 0.769405,0.0108933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100169,-0.000978931) , 
17, 1.01523, 1, 0, 0.547512,0.00305401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474178,-0.00333932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346173,-0.000467379) , 
3, 0.727073, 1, 0, 0.388528,-0.0274814) , 
6, 0.561874, 1, 0, 0.496,-0.00683957)    );
  // itree = 1650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995614,0.00136105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879927,-0.0039081) , 
3, 0.152892, 1, 0, 0.928353,-0.0154645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94067,-0.00108599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793183,0.00365425) , 
17, 0.401329, 1, 0, 0.887228,0.0147166) , 
10, 0.372885, 1, 0, 0.909088,-0.00132642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402846,-0.00219072) , 
17, 0.660265, 1, 0, 0.741417,-0.01551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280872,-0.0019346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144177,0.000405624) , 
17, 0.952653, 1, 0, 0.171047,-0.00165089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718487,0.00323461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783983,0.000509885) , 
12, 0.16161, 1, 0, 0.750041,0.0361853) , 
12, 0.101738, 1, 0, 0.304246,0.00705342) , 
8, 0.0337234, 1, 0, 0.501312,-0.00311761)    );
  // itree = 1651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971947,-0.00312308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924371,0.000560252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819915,0.00374322) , 
14, 0.0639886, 1, 0, 0.87245,0.0197418) , 
17, 0.277921, 1, 0, 0.91998,0.00789301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500951,-0.00200457) , 
11, 0.79768, 1, 0, 0.777648,-0.00909101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766508,0.00636359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485011,-0.000639592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474027,0.00059046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36244,0.00239516) , 
11, 0.886592, 1, 0, 0.408236,0.0284371) , 
8, 0.0360889, 1, 0, 0.42568,0.0199411) , 
8, 0.0320546, 1, 0, 0.50453,0.0290738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204805,-0.000385883) , 
8, 0.0549189, 1, 0, 0.371241,0.0134022) , 
8, 0.0195863, 1, 0, 0.50735,0.00586905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490787,-0.00294859) , 
14, 0.217575, 1, 0, 0.506022,0.00222271)    );
  // itree = 1652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984777,-0.00464721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979888,0.00846422) , 
11, 0.409574, 1, 0, 0.98239,0.00911581) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646956,0.000146506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82279,-0.00289234) , 
12, 0.131407, 1, 0, 0.741591,-0.0151467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576624,-0.00306143) , 
15, 0.0840264, 1, 0, 0.677713,-0.0310103) , 
17, 0.410389, 1, 0, 0.795613,-0.0154828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853327,0.00302995) , 
14, 0.113952, 1, 0, 0.804522,-0.0087975) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507563,0.00307768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806054,-0.000879149) , 
5, 0.0356627, 1, 0, 0.626036,0.0289726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169337,-0.000501664) , 
16, 0.204641, 1, 0, 0.396392,0.0106265) , 
10, 0.484389, 1, 0, 0.627317,-0.000363863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526032,-0.00180009) , 
15, 0.306379, 1, 0, 0.617044,-0.00301979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212882,0.00108252) , 
10, 0.748633, 1, 0, 0.502367,0.00244382)    );
  // itree = 1653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832736,0.00259564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35092,-0.00113133) , 
8, 0.0200694, 1, 0, 0.519319,-0.00259118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243866,0.00122564) , 
11, 0.795147, 1, 0, 0.365651,0.0101092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136495,-0.000793653) , 
16, 0.380752, 1, 0, 0.304743,0.0050231) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999678,0.0190713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979066,-0.0081438) , 
6, 0.14402, 1, 0, 0.989756,-0.00105653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934823,0.00345901) , 
3, 0.206666, 1, 0, 0.9681,0.0071784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834061,-0.00285637) , 
10, 0.485979, 1, 0, 0.935275,-0.00127817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658253,-0.00316271) , 
11, 0.795157, 1, 0, 0.862121,-0.0160673) , 
2, 0.0243877, 1, 0, 0.517652,-0.00303306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439166,0.00114768) , 
11, 1.2673, 1, 0, 0.504951,0.00161672)    );
  // itree = 1654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298996,-0.00220338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974856,-0.00258265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968582,0.00981444) , 
10, 0.286835, 1, 0, 0.972509,0.00791373) , 
0, 0.0927697, 1, 0, 0.77048,-0.00297827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695906,0.00337436) , 
15, 0.148058, 1, 0, 0.747031,0.00630108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48989,-0.00124351) , 
9, 0.048949, 1, 0, 0.667789,-0.000354022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313779,-0.000315024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401914,0.00251163) , 
6, 0.293604, 1, 0, 0.37172,0.0228775) , 
13, 0.834854, 1, 0, 0.572325,0.00713673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507991,-0.0013777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249644,0.000572015) , 
7, 0.321359, 1, 0, 0.385982,-0.0108324) , 
13, 1.01376, 1, 0, 0.504899,0.000634819)    );
  // itree = 1655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959235,-0.00456948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801693,0.00479099) , 
16, 0.122693, 1, 0, 0.877771,0.0064657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717693,-0.00374737) , 
14, 0.0454552, 1, 0, 0.817708,-0.00470415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632799,0.00319691) , 
13, 0.871959, 1, 0, 0.775082,0.00312556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29428,-0.0023601) , 
11, 0.942654, 1, 0, 0.656865,-0.00628089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511693,0.00180866) , 
13, 1.17027, 1, 0, 0.622588,0.00386089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454512,-0.00302556) , 
15, 0.128792, 1, 0, 0.60431,-0.000810182) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185998,0.00224465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283819,0.000724993) , 
14, 0.165302, 1, 0, 0.220558,0.0236293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458911,-0.000877862) , 
2, 0.0152079, 1, 0, 0.286315,0.0125919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903691,0.0021361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776385,0.00349656) , 
10, 0.518692, 1, 0, 0.834764,0.0405205) , 
2, 0.0209624, 1, 0, 0.419191,0.0193584) , 
15, 0.149286, 1, 0, 0.514765,0.00894565)    );
  // itree = 1656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971537,0.00319619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650689,-0.00282495) , 
13, 0.766509, 1, 0, 0.76942,-0.0261463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935716,0.00304028) , 
2, 0.055768, 1, 0, 0.817135,-0.0137828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776855,0.00039233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7101,0.00365769) , 
16, 0.0815351, 1, 0, 0.748917,0.0241474) , 
14, 0.103332, 1, 0, 0.791195,0.000640471) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936127,-0.0082457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736953,0.00110732) , 
15, 0.108253, 1, 0, 0.838573,-0.00550458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422179,-0.0016962) , 
13, 0.79331, 1, 0, 0.588118,-0.0238815) , 
7, 0.189031, 1, 0, 0.70333,-0.00996942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322484,0.00170355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130633,0.000196864) , 
7, 0.643623, 1, 0, 0.188075,0.00961509) , 
7, 0.459085, 1, 0, 0.496323,-0.00210119)    );
  // itree = 1657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999348,0.0159923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998004,0.0138309) , 
6, 0.124079, 1, 0, 0.998674,0.0066921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969294,-0.0058947) , 
11, 0.39671, 1, 0, 0.98614,0.000234849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884373,0.00251812) , 
3, 0.236597, 1, 0, 0.950214,0.00753753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485132,-0.00437762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29137,-0.0010211) , 
14, 0.0693959, 1, 0, 0.351532,-0.0276986) , 
17, 0.550057, 1, 0, 0.719439,-0.00604499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635016,0.00418011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338307,0.000325649) , 
3, 0.673998, 1, 0, 0.42681,0.0210041) , 
11, 0.840294, 1, 0, 0.604284,0.00459938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186855,-0.000666542) , 
17, 1.16913, 1, 0, 0.49756,0.000517231)    );
  // itree = 1658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726469,-0.00237632) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919084,0.00403487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764957,-0.00166341) , 
6, 0.211631, 1, 0, 0.857704,0.000672865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802348,0.00439749) , 
9, 0.0359259, 1, 0, 0.841163,0.00777498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164252,-0.00179638) , 
11, 0.767195, 1, 0, 0.610259,-0.00247974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534998,0.00220736) , 
6, 0.415159, 1, 0, 0.591117,0.00618884) , 
9, 0.0137836, 1, 0, 0.617189,0.00181778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231339,-0.000928358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72333,-0.00296888) , 
5, 0.0191406, 1, 0, 0.371056,-0.0207873) , 
9, 0.0502119, 1, 0, 0.53555,-0.00568002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390724,0.00109914) , 
11, 1.11727, 1, 0, 0.498868,0.00153714)    );
  // itree = 1659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992843,0.00722274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917898,-0.0111446) , 
13, 0.639239, 1, 0, 0.957572,-0.0136532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892187,0.00532089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502973,-0.000751372) , 
16, 0.225106, 1, 0, 0.733909,0.0117402) , 
7, 0.14693, 1, 0, 0.838772,-0.000165386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226362,-0.00288601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145891,-0.00114451) , 
9, 0.0187147, 1, 0, 0.168121,-0.0217629) , 
11, 0.728478, 1, 0, 0.51314,-0.010652) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462816,-0.001309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188027,0.000555191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64753,0.00175789) , 
12, 0.0866852, 1, 0, 0.320925,0.0172896) , 
16, 0.100535, 1, 0, 0.353792,0.00685874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838499,0.00348585) , 
12, 0.180565, 1, 0, 0.419969,0.012953) , 
6, 0.370518, 1, 0, 0.466894,0.00106446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847262,-0.00548638) , 
12, 0.327557, 1, 0, 0.489685,-0.00162712)    );
  // itree = 1660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696135,0.000849046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627852,0.00429335) , 
14, 0.0440138, 1, 0, 0.661918,0.0471509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461306,-0.000645883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23572,0.00172417) , 
16, 0.264, 1, 0, 0.293704,0.0135182) , 
16, 0.170429, 1, 0, 0.417683,0.0248424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571531,-0.00211731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180583,-0.000124232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717738,0.00226869) , 
4, 0.124123, 1, 0, 0.261422,0.00470818) , 
16, 0.0886631, 1, 0, 0.308263,-0.00120795) , 
14, 0.086338, 1, 0, 0.355439,0.0100235) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968404,-0.00348293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912979,0.00570463) , 
17, 0.358333, 1, 0, 0.948153,0.0156544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795848,-0.00269169) , 
8, 0.0213741, 1, 0, 0.900399,0.00100055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781037,-0.00521975) , 
9, 0.0432006, 1, 0, 0.870052,-0.0150172) , 
12, 0.156731, 1, 0, 0.501743,0.00290443)    );
  // itree = 1661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132786,-0.00189486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618102,-0.00176398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686266,0.00248679) , 
15, 0.106688, 1, 0, 0.645679,-0.00243927) , 
1, 0.0715461, 1, 0, 0.34349,-0.016667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83011,-0.0052485) , 
4, 0.264829, 1, 0, 0.428801,-0.0223026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900098,-0.00195953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949681,0.00625279) , 
9, 0.0184036, 1, 0, 0.921676,0.00790414) , 
4, 0.375175, 1, 0, 0.569425,-0.0136843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889162,-0.00329832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178911,0.000515513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722889,0.00237803) , 
1, 0.128848, 1, 0, 0.304531,0.0177075) , 
17, 0.496452, 1, 0, 0.399505,0.0116026) , 
9, 0.0391101, 1, 0, 0.493466,-0.00238038)    );
  // itree = 1662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87482,-0.00305308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530804,0.00404934) , 
11, 0.799138, 1, 0, 0.732139,0.0188583) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982111,0.00367663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684068,-0.004007) , 
10, 0.382236, 1, 0, 0.848251,-0.0119015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641977,0.0040592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950039,0.000959734) , 
1, 0.35603, 1, 0, 0.809431,0.0275509) , 
13, 0.56649, 1, 0, 0.82472,0.0120127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458489,-0.00144816) , 
11, 0.842085, 1, 0, 0.750073,0.00492032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352582,-0.0014645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181553,-0.000282577) , 
8, 0.040798, 1, 0, 0.254634,-0.015585) , 
3, 0.60099, 1, 0, 0.464743,-0.00688896) , 
9, 0.0143463, 1, 0, 0.499122,-0.00357867)    );
  // itree = 1663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996824,0.0132903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946331,-0.0154006) , 
17, 0.237106, 1, 0, 0.968965,-0.0113073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918543,0.00607628) , 
3, 0.328263, 1, 0, 0.955184,0.00464245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737893,-0.0043325) , 
8, 0.0316256, 1, 0, 0.897571,-0.00723616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541402,0.00370143) , 
16, 0.288004, 1, 0, 0.837403,0.00110505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276447,-0.00137527) , 
3, 0.620136, 1, 0, 0.561259,-0.0120121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483663,0.00215844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347186,-0.000233226) , 
14, 0.101404, 1, 0, 0.402963,0.0110967) , 
9, 0.0416592, 1, 0, 0.496925,-0.00262033)    );
  // itree = 1664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545259,0.00291779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222469,-0.00164819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171946,0.00029474) , 
11, 0.823316, 1, 0, 0.185995,-0.00295098) , 
8, 0.0203088, 1, 0, 0.23949,0.00477668) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945372,-0.0100519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986398,-0.000827096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990611,0.013491) , 
17, 0.248467, 1, 0, 0.988353,0.00861848) , 
5, 0.0361665, 1, 0, 0.973074,-0.00176682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70407,-0.00368906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71431,-0.00128039) , 
15, 0.0879462, 1, 0, 0.709942,-0.0397473) , 
3, 0.356133, 1, 0, 0.843432,-0.0204794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830948,0.00211875) , 
16, 0.174625, 1, 0, 0.840841,-0.0113191) , 
4, 0.154846, 1, 0, 0.496565,-0.00210418)    );
  // itree = 1665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984857,0.0100289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974237,0.00259408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829678,-0.00522041) , 
10, 0.280711, 1, 0, 0.902594,-0.0162097) , 
13, 0.501594, 1, 0, 0.937159,-0.0044208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936887,0.0055649) , 
13, 0.730897, 1, 0, 0.937099,0.00276695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62361,0.00126996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368148,-0.00218586) , 
6, 0.259394, 1, 0, 0.46785,-0.0191224) , 
10, 0.493678, 1, 0, 0.752543,-0.00584212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822196,-0.00369419) , 
13, 0.931911, 1, 0, 0.760901,-0.00975709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35708,0.0016738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229425,0.000131203) , 
9, 0.0352534, 1, 0, 0.275705,0.0122319) , 
3, 0.608375, 1, 0, 0.498353,0.00214149)    );
  // itree = 1666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959821,0.00502717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985691,0.000530616) , 
1, 0.281321, 1, 0, 0.976413,0.00715276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910586,-0.00271017) , 
13, 0.702619, 1, 0, 0.955025,0.000667622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873741,0.0040138) , 
13, 0.895866, 1, 0, 0.938459,0.00880493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507424,-0.00152449) , 
17, 0.572, 1, 0, 0.784967,-0.00545799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563611,0.00172417) , 
8, 0.0335169, 1, 0, 0.741181,0.00114907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401717,-0.00257078) , 
8, 0.0406998, 1, 0, 0.702392,-0.00397107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327537,0.00143437) , 
8, 0.0518925, 1, 0, 0.611702,0.00342038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103579,-0.00060859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349192,-0.00266678) , 
2, 0.0138288, 1, 0, 0.162988,-0.0167023) , 
16, 0.320702, 1, 0, 0.49955,-0.00160907)    );
  // itree = 1667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772189,0.00131666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722253,-0.00261224) , 
7, 0.110485, 1, 0, 0.755087,-0.000260238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672271,0.00371392) , 
7, 0.201243, 1, 0, 0.727791,0.0167159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412456,-0.00199911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385298,-0.000360148) , 
16, 0.298595, 1, 0, 0.398607,-0.0159091) , 
16, 0.216003, 1, 0, 0.620122,0.00604497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186132,-0.00138505) , 
17, 0.969828, 1, 0, 0.464024,-0.0045888) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971943,-0.021294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936853,0.00189679) , 
3, 0.181249, 1, 0, 0.958503,-0.00735656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716752,-0.00356875) , 
3, 0.379845, 1, 0, 0.862607,-0.0285953) , 
12, 0.176988, 1, 0, 0.589582,-0.0121511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220257,0.00126719) , 
17, 1.17766, 1, 0, 0.49844,-0.0037474)    );
  // itree = 1668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949192,-0.00253143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593172,0.0024615) , 
10, 0.34785, 1, 0, 0.780546,0.00604549) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.876788,-0.00125306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266705,-0.00425794) , 
11, 0.690521, 1, 0, 0.591882,-0.0311083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899537,-0.00837257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285423,-2.4755e-05) , 
3, 0.331154, 1, 0, 0.452662,-0.00861525) , 
14, 0.0862419, 1, 0, 0.506802,-0.0173624) , 
9, 0.0215194, 1, 0, 0.592081,-0.0100702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264338,0.00102931) , 
11, 1.02794, 1, 0, 0.542105,-0.00624097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464348,0.00178725) , 
13, 1.14589, 1, 0, 0.530051,-0.000458505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350507,-0.00132185) , 
6, 0.743491, 1, 0, 0.495951,-0.00638051)    );
  // itree = 1669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90365,-0.00745365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952656,0.00323918) , 
9, 0.0162445, 1, 0, 0.925557,-0.0127016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935216,0.00493532) , 
8, 0.0243762, 1, 0, 0.928523,-0.00163199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192931,-0.00309727) , 
7, 0.483279, 1, 0, 0.670865,-0.0158369) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981932,0.00475876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639478,-0.00408961) , 
10, 0.413599, 1, 0, 0.81835,-0.0122627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682092,0.00206642) , 
6, 0.301387, 1, 0, 0.764871,0.00174112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202129,0.00170878) , 
8, 0.0417424, 1, 0, 0.505667,0.0114875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349908,-0.0013459) , 
9, 0.059144, 1, 0, 0.465924,0.00369435) , 
9, 0.025106, 1, 0, 0.539863,-0.00335219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379192,-0.00132274) , 
6, 0.591184, 1, 0, 0.492926,-0.0106853)    );
  // itree = 1670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453765,-0.0037609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929956,0.00195239) , 
4, 0.34469, 1, 0, 0.666931,-0.0241958) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916437,-0.00548425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583213,-0.00120546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570853,0.00430421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432555,0.000979205) , 
15, 0.116529, 1, 0, 0.498156,0.0227945) , 
9, 0.024828, 1, 0, 0.525983,0.0119508) , 
8, 0.0163565, 1, 0, 0.626996,0.00376529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337134,-0.00247517) , 
15, 0.18638, 1, 0, 0.552679,-0.00577381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.311637,0.0016318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691572,-0.000978141) , 
5, 0.0361053, 1, 0, 0.40998,0.017656) , 
13, 0.969602, 1, 0, 0.488605,0.00474655) , 
14, 0.0242517, 1, 0, 0.527018,-0.00148789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346699,-0.00170061) , 
14, 0.137434, 1, 0, 0.499473,-0.00525566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539665,0.00199356) , 
14, 0.189442, 1, 0, 0.504,-0.0016754)    );
  // itree = 1671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312143,0.00135567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185298,-0.0017152) , 
14, 0.0523466, 1, 0, 0.228905,-0.00871152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338702,0.00195976) , 
15, 0.242852, 1, 0, 0.262055,0.0015188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28915,0.00152059) , 
6, 0.41484, 1, 0, 0.273982,0.0131596) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994514,-0.0136578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934644,-0.00564973) , 
3, 0.152471, 1, 0, 0.964674,-0.00993084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805719,0.00194755) , 
6, 0.332239, 1, 0, 0.900675,0.00532338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958521,0.00247656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650282,-0.00161965) , 
11, 0.668801, 1, 0, 0.777992,-0.0149433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599815,-0.00305577) , 
14, 0.114696, 1, 0, 0.734285,-0.0262265) , 
8, 0.0170577, 1, 0, 0.807222,-0.0123966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653653,0.0024557) , 
16, 0.233238, 1, 0, 0.786493,-0.00593896) , 
5, 0.0185893, 1, 0, 0.503048,0.00462352)    );
  // itree = 1672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276804,0.00174102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993182,-0.00171989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781881,-0.00532262) , 
3, 0.175453, 1, 0, 0.927154,-0.011954) , 
2, 0.0131213, 1, 0, 0.762536,-0.00434484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530341,-0.00254411) , 
6, 0.231914, 1, 0, 0.716449,-0.00782425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612545,0.00440576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556974,2.85956e-05) , 
6, 0.348643, 1, 0, 0.582908,0.0206342) , 
6, 0.281617, 1, 0, 0.678086,0.000351028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524192,-0.00182997) , 
13, 0.931911, 1, 0, 0.652678,-0.00373044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536481,-0.00203877) , 
6, 0.495291, 1, 0, 0.627416,-0.0107972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301973,0.000627353) , 
3, 0.828655, 1, 0, 0.545963,-0.00510138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366188,0.0016596) , 
9, 0.0625761, 1, 0, 0.510753,0.00136118)    );
  // itree = 1673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1983,-0.000217488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212929,0.00242589) , 
15, 0.136897, 1, 0, 0.205872,0.0157444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213883,-0.000938966) , 
15, 0.303565, 1, 0, 0.207784,0.00859425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421626,-0.000297792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638372,-0.00472448) , 
12, 0.110904, 1, 0, 0.501913,-0.0349116) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977366,-0.014993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978153,0.00850848) , 
6, 0.163973, 1, 0, 0.97768,0.000825714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847011,-0.00336914) , 
6, 0.278758, 1, 0, 0.929484,-0.0110606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750868,0.00170791) , 
17, 0.690098, 1, 0, 0.885662,-0.000128112) , 
4, 0.242669, 1, 0, 0.732647,-0.0139976) , 
5, 0.0154911, 1, 0, 0.500743,-0.00401567)    );
  // itree = 1674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973578,0.00917027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737792,-0.00314545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966987,0.00558439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903367,-0.00778702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978689,0.00423974) , 
5, 0.0404643, 1, 0, 0.947036,-0.0114678) , 
5, 0.0298297, 1, 0, 0.952712,-0.0029113) , 
0, 0.126354, 1, 0, 0.884854,-0.0107706) , 
9, 0.0122373, 1, 0, 0.899772,-0.00598723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497524,0.00381243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362971,-0.00119919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298834,0.00126825) , 
14, 0.0885196, 1, 0, 0.321784,0.00696976) , 
9, 0.019555, 1, 0, 0.355802,0.0161253) , 
3, 0.444177, 1, 0, 0.591836,0.00653045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250034,-0.00107469) , 
3, 0.839007, 1, 0, 0.504028,-0.00057382)    );
  // itree = 1675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199787,0.000194745) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769806,-0.00705208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993296,0.000540553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938114,0.00380014) , 
3, 0.190504, 1, 0, 0.971306,0.00711081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920177,-0.00721608) , 
12, 0.288586, 1, 0, 0.95604,-0.00310841) , 
4, 0.245798, 1, 0, 0.914011,-0.0174855) , 
4, 0.108613, 1, 0, 0.577523,-0.00818489) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692622,-0.000158703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556337,0.00269844) , 
8, 0.0223267, 1, 0, 0.634173,0.0180172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19683,-0.000152137) , 
16, 0.20651, 1, 0, 0.444273,0.00922486) , 
6, 0.337368, 1, 0, 0.516141,-0.000165055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377325,-0.00148586) , 
11, 1.29387, 1, 0, 0.49447,-0.00563443)    );
  // itree = 1676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155041,0.000772563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209496,-0.000809881) , 
12, 0.0561148, 1, 0, 0.180242,-0.00135422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611457,0.0022944) , 
4, 0.0894347, 1, 0, 0.225676,0.00374382) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997091,0.016714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961229,-0.00477529) , 
14, 0.061201, 1, 0, 0.978873,0.00418822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710709,-0.00361246) , 
6, 0.358281, 1, 0, 0.86321,-0.0243653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859504,0.00343156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775778,0.00100648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.805696,-0.00243062) , 
2, 0.0316454, 1, 0, 0.793521,-0.0113417) , 
16, 0.11536, 1, 0, 0.81575,0.00572985) , 
16, 0.0852641, 1, 0, 0.837021,-0.0077585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613988,-0.00405789) , 
16, 0.255801, 1, 0, 0.812473,-0.0140146) , 
12, 0.0960868, 1, 0, 0.492861,-0.00434208)    );
  // itree = 1677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882307,-0.0035023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990883,0.00102097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906787,0.00434691) , 
3, 0.199141, 1, 0, 0.94329,0.0196503) , 
16, 0.0526604, 1, 0, 0.918909,0.00269896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833412,-0.00442935) , 
16, 0.111904, 1, 0, 0.896817,-0.0071442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929785,0.00719876) , 
16, 0.178352, 1, 0, 0.901882,-0.0010136) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481011,-0.00335624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370056,-0.000565224) , 
7, 0.374353, 1, 0, 0.43594,-0.0461238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305326,-0.00058777) , 
17, 0.897413, 1, 0, 0.349612,-0.0236715) , 
17, 0.668139, 1, 0, 0.600553,-0.0133762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129632,0.00121426) , 
7, 0.707208, 1, 0, 0.495835,-0.00697709)    );
  // itree = 1678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535129,-0.0024823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76232,0.00270827) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975097,-0.00410537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983571,0.00825231) , 
10, 0.231723, 1, 0, 0.978754,0.00481741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93785,-0.00601056) , 
10, 0.337655, 1, 0, 0.96585,-0.00207111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725082,-0.002255) , 
6, 0.422085, 1, 0, 0.893795,-0.0132419) , 
4, 0.186101, 1, 0, 0.8706,-0.0033329) , 
2, 0.0173799, 1, 0, 0.794401,-0.0120592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594632,0.00191855) , 
10, 0.492015, 1, 0, 0.767884,-0.00657558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395705,-0.0027339) , 
10, 0.545501, 1, 0, 0.705407,-0.0132903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643238,-0.00106532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190306,0.00100324) , 
17, 0.762479, 1, 0, 0.257805,0.0106584) , 
10, 0.618261, 1, 0, 0.504121,-0.00252063)    );
  // itree = 1679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85927,0.00370668) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974272,-0.00444832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975997,0.00813188) , 
17, 0.291827, 1, 0, 0.975231,0.0108507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976738,-0.000346587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833031,-0.0061516) , 
6, 0.224179, 1, 0, 0.90976,-0.023812) , 
15, 0.0873893, 1, 0, 0.942659,-0.00639415) , 
5, 0.0180318, 1, 0, 0.927691,0.000100282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250486,-0.00240382) , 
17, 0.620195, 1, 0, 0.750443,-0.0100468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771074,0.00379787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458537,-0.00104825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408784,0.00253842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19479,-0.000173585) , 
17, 0.984383, 1, 0, 0.240045,0.00699179) , 
8, 0.0262293, 1, 0, 0.282636,0.00130385) , 
10, 0.312325, 1, 0, 0.326821,0.00651058) , 
11, 0.778615, 1, 0, 0.498063,-0.000182429)    );
  // itree = 1680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889272,-0.009828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988991,0.000688722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673569,0.00282931) , 
17, 0.342827, 1, 0, 0.843261,0.00985693) , 
9, 0.0162766, 1, 0, 0.855574,0.00161966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563025,-0.00219503) , 
6, 0.263848, 1, 0, 0.752212,-0.00852634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558074,0.00279458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830152,0.00193021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347235,-0.00189236) , 
10, 0.430935, 1, 0, 0.516218,-0.00971838) , 
6, 0.269967, 1, 0, 0.531654,0.00216564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299375,0.00137528) , 
15, 0.182139, 1, 0, 0.438312,0.009908) , 
13, 0.72199, 1, 0, 0.566917,0.00235546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266674,-0.00173898) , 
11, 1.07045, 1, 0, 0.521627,-0.00245512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424291,0.00101077) , 
11, 1.26965, 1, 0, 0.506179,0.00153008)    );
  // itree = 1681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945571,-0.0072193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96528,0.00229955) , 
16, 0.126002, 1, 0, 0.955118,-0.00731942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913662,-0.0120386) , 
12, 0.228037, 1, 0, 0.941944,-0.0186122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223873,-0.00205727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943432,0.00530852) , 
5, 0.0166508, 1, 0, 0.534797,-0.00681526) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334816,0.00150732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35091,0.00163512) , 
6, 0.249582, 1, 0, 0.34513,0.0197055) , 
13, 0.801211, 1, 0, 0.446562,0.00552247) , 
10, 0.353624, 1, 0, 0.614885,-0.00267809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38656,-0.0018546) , 
6, 0.454614, 1, 0, 0.551945,-0.010539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203435,-0.000479404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711393,0.00248684) , 
1, 0.158822, 1, 0, 0.367033,0.0113197) , 
11, 1.05779, 1, 0, 0.4958,-0.00390212)    );
  // itree = 1682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986754,0.00658855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974374,-0.015496) , 
2, 0.0492432, 1, 0, 0.981672,0.000583902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946845,0.00676013) , 
11, 0.513108, 1, 0, 0.968015,0.0140365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562948,-0.000779613) , 
3, 0.504399, 1, 0, 0.806905,0.00180959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904876,-0.00159714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493335,0.00270858) , 
17, 0.423355, 1, 0, 0.627096,0.0332876) , 
15, 0.223265, 1, 0, 0.756085,0.0107063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.343959,0.000660685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290026,-8.48818e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124376,-0.00164649) , 
3, 0.633635, 1, 0, 0.172546,-0.0178879) , 
15, 0.072902, 1, 0, 0.212071,-0.0116346) , 
7, 0.389606, 1, 0, 0.510422,0.000617748)    );
  // itree = 1683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968317,-0.00302425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928322,0.00748966) , 
13, 0.586912, 1, 0, 0.948289,0.0224728) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919244,-0.00496452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950426,0.000531758) , 
8, 0.0131643, 1, 0, 0.936167,-0.00908496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483179,-0.00287308) , 
17, 0.577538, 1, 0, 0.719786,-0.0348903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730503,0.00329454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516105,-0.000267824) , 
15, 0.104758, 1, 0, 0.600029,0.0156726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131415,-0.00115027) , 
16, 0.240913, 1, 0, 0.318182,-0.00357065) , 
10, 0.475925, 1, 0, 0.47093,-0.0154829) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208931,0.00186508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734628,-0.000100923) , 
0, 0.088789, 1, 0, 0.392668,0.0173974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362884,-0.000406813) , 
15, 0.381344, 1, 0, 0.38394,0.0103852) , 
15, 0.222614, 1, 0, 0.441055,-0.00659922) , 
10, 0.235305, 1, 0, 0.50204,-0.00310391)    );
  // itree = 1684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182779,0.00234543) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817924,-0.0029153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964369,0.00309933) , 
2, 0.0287462, 1, 0, 0.893551,-0.00477485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474931,0.00298058) , 
11, 0.748458, 1, 0, 0.757463,0.00976531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943362,-0.00957525) , 
5, 0.0446125, 1, 0, 0.808415,0.00113266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497356,-0.00215016) , 
9, 0.0563147, 1, 0, 0.73338,-0.00710241) , 
12, 0.0530965, 1, 0, 0.586511,0.00198093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436002,0.00228127) , 
13, 1.03022, 1, 0, 0.559245,0.00792332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448112,0.000182642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2865,-0.00177696) , 
14, 0.0632138, 1, 0, 0.346104,-0.0219872) , 
11, 1.09031, 1, 0, 0.499515,-0.000458715)    );
  // itree = 1685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853997,0.000765524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605422,0.00461458) , 
6, 0.16019, 1, 0, 0.727771,0.0191754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612742,-0.00207715) , 
6, 0.263552, 1, 0, 0.684347,0.0038312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870919,0.00243182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9432,-0.00956089) , 
5, 0.0297089, 1, 0, 0.912902,-0.00791913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202781,-0.00350093) , 
3, 0.460089, 1, 0, 0.538074,-0.0305476) , 
9, 0.0179432, 1, 0, 0.59274,-0.0176993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280593,0.00110803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823462,-0.00248607) , 
2, 0.0209624, 1, 0, 0.424855,0.00491037) , 
9, 0.0457557, 1, 0, 0.538429,-0.010385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302636,0.00100215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71411,-0.000870451) , 
4, 0.217177, 1, 0, 0.423709,0.00972045) , 
6, 0.560069, 1, 0, 0.503924,-0.00433788)    );
  // itree = 1686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994983,0.00918961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915368,-0.00597227) , 
11, 0.435506, 1, 0, 0.959144,-0.00493456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29348,0.000598245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801332,0.00439502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845516,0.00254794) , 
4, 0.359734, 1, 0, 0.824069,0.0500701) , 
2, 0.0240423, 1, 0, 0.502049,0.0251353) , 
11, 0.600299, 1, 0, 0.647368,0.0155756) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711284,0.00375958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865577,-0.00151763) , 
2, 0.030164, 1, 0, 0.80401,0.011719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655819,-0.00209308) , 
8, 0.0212988, 1, 0, 0.754761,-0.00260375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512204,-0.00328967) , 
15, 0.351939, 1, 0, 0.697949,-0.0151679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254443,0.00160921) , 
7, 0.394575, 1, 0, 0.560112,-0.00242586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150764,-0.00148434) , 
17, 1.06747, 1, 0, 0.406206,-0.0106654) , 
14, 0.0683371, 1, 0, 0.500678,-0.000385785)    );
  // itree = 1687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530813,0.00316688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756266,0.00239688) , 
2, 0.0148673, 1, 0, 0.649272,0.0446084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865554,-0.00378693) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996063,0.013032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927133,-0.00291799) , 
13, 0.662377, 1, 0, 0.961534,-0.00130501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79123,0.00296727) , 
11, 0.822376, 1, 0, 0.918808,0.011879) , 
5, 0.0314542, 1, 0, 0.906207,0.00227626) , 
4, 0.164514, 1, 0, 0.833136,0.0143153) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729969,-0.0018321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435989,0.00193073) , 
16, 0.0935236, 1, 0, 0.521364,0.0188415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117982,-0.00128021) , 
16, 0.265004, 1, 0, 0.30956,-0.000282728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242792,-0.00203532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528738,0.00145408) , 
14, 0.235964, 1, 0, 0.302396,-0.0221941) , 
14, 0.125346, 1, 0, 0.30669,-0.00906127) , 
10, 0.47641, 1, 0, 0.499133,-0.00051591)    );
  // itree = 1688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579305,-0.0020775) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982069,-0.00103529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963884,0.00646314) , 
17, 0.249011, 1, 0, 0.97285,0.0147362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957042,-0.00330677) , 
7, 0.134054, 1, 0, 0.966602,0.00597879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742406,-0.00143016) , 
17, 0.577538, 1, 0, 0.910398,-0.00128266) , 
4, 0.171159, 1, 0, 0.814569,-0.0115846) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344945,-0.00162332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232352,0.00054802) , 
13, 0.859909, 1, 0, 0.285918,-0.00533605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451805,0.00307444) , 
14, 0.150868, 1, 0, 0.330686,0.00584261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332723,-0.00125254) , 
6, 0.390387, 1, 0, 0.331307,-0.00194093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383917,0.0016015) , 
6, 0.6222, 1, 0, 0.346803,0.00836512) , 
10, 0.442374, 1, 0, 0.506876,0.0015382)    );
  // itree = 1689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953931,0.00365554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823011,-0.00516195) , 
6, 0.195828, 1, 0, 0.889158,-0.0144878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313607,0.00233382) , 
16, 0.304601, 1, 0, 0.711277,-0.00158182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546132,-0.00378327) , 
15, 0.0867284, 1, 0, 0.669256,-0.00985848) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.918079,0.00268849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793325,-0.00240242) , 
9, 0.0405776, 1, 0, 0.853041,-0.00493586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974627,0.00509913) , 
4, 0.389505, 1, 0, 0.892969,0.00109059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219766,0.00223092) , 
3, 0.447398, 1, 0, 0.510462,0.0179294) , 
9, 0.025106, 1, 0, 0.570231,0.0074702) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532722,-0.00247115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250232,-0.000616208) , 
7, 0.280606, 1, 0, 0.372599,-0.0267772) , 
6, 0.475701, 1, 0, 0.514103,-0.0022562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467603,0.00185554) , 
13, 1.27203, 1, 0, 0.506194,0.00517812)    );
  // itree = 1690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359187,-0.00150928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267095,-0.00172625) , 
15, 0.0962993, 1, 0, 0.311182,-0.0173845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984812,0.00867686) , 
0, 0.113631, 1, 0, 0.599831,-0.00418419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444779,-0.00225884) , 
6, 0.324479, 1, 0, 0.545442,-0.0138397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328464,0.00152639) , 
13, 0.955262, 1, 0, 0.478614,-0.00249379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345407,-0.00142568) , 
11, 1.13739, 1, 0, 0.440689,-0.0106501) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91383,-0.00275706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9072,0.0016635) , 
8, 0.000816503, 1, 0, 0.9105,-0.00134308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902373,0.00552139) , 
7, 0.175379, 1, 0, 0.907955,0.016297) , 
0, 0.214638, 1, 0, 0.545817,-0.00458738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665755,-0.000702508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192147,0.00135249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689398,0.00284291) , 
4, 0.0876371, 1, 0, 0.316185,0.0285117) , 
16, 0.0878799, 1, 0, 0.392335,0.0202027) , 
15, 0.233875, 1, 0, 0.504606,0.0020689)    );
  // itree = 1691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91056,-0.00316131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929693,0.00670865) , 
9, 0.0123809, 1, 0, 0.922406,0.00978349) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45322,-0.00386418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960772,0.00400503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861776,-0.00432554) , 
16, 0.0836719, 1, 0, 0.912175,-0.00781093) , 
2, 0.0263309, 1, 0, 0.688256,-0.0282054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581539,0.00118241) , 
15, 0.304613, 1, 0, 0.661898,-0.0174524) , 
15, 0.0720892, 1, 0, 0.749098,-0.0083358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753809,0.000330595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588235,0.00361607) , 
17, 0.806917, 1, 0, 0.661027,0.0417937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25795,0.000405551) , 
10, 0.61129, 1, 0, 0.449711,0.0234091) , 
11, 0.802858, 1, 0, 0.623211,0.00501233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185421,-0.000954743) , 
17, 1.14256, 1, 0, 0.497953,-0.00119741)    );
  // itree = 1692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.868836,-0.00570916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847055,0.00295799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775231,0.00161997) , 
9, 0.0103524, 1, 0, 0.811192,0.0216471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639657,-0.00263522) , 
14, 0.0466215, 1, 0, 0.752262,0.00262132) , 
16, 0.0706245, 1, 0, 0.781986,-0.00730397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190076,-0.00372641) , 
16, 0.327461, 1, 0, 0.626926,-0.0186782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663162,-0.00162523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527587,0.00276822) , 
6, 0.279466, 1, 0, 0.581519,0.0222954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165847,0.000929049) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649268,-0.000754142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721107,0.00268018) , 
15, 0.214739, 1, 0, 0.682861,0.00958599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247391,-0.00182397) , 
10, 0.606462, 1, 0, 0.428426,-0.0170729) , 
12, 0.0552738, 1, 0, 0.343796,-0.00771402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897937,0.00336818) , 
12, 0.201369, 1, 0, 0.407887,-0.00317143) , 
15, 0.122491, 1, 0, 0.455756,0.00384962) , 
9, 0.019555, 1, 0, 0.503872,-0.00248291)    );
  // itree = 1693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999413,0.01554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992933,0.0101302) , 
3, 0.138682, 1, 0, 0.996717,0.00768825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962089,-0.00738453) , 
11, 0.43569, 1, 0, 0.98665,0.00241984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708816,-0.0028904) , 
3, 0.272048, 1, 0, 0.914527,-0.00707275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823118,0.00439968) , 
6, 0.348874, 1, 0, 0.89778,0.00207858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342496,-0.00161034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743809,-0.000238086) , 
0, 0.149621, 1, 0, 0.467368,-0.0270665) , 
6, 0.468228, 1, 0, 0.681318,-0.012579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123658,-2.8652e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67812,0.000664418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495714,0.00315778) , 
15, 0.0861214, 1, 0, 0.574437,0.0361455) , 
4, 0.0673156, 1, 0, 0.254389,0.0102302) , 
16, 0.216474, 1, 0, 0.500166,-0.00290076)    );
  // itree = 1694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982916,0.00268798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679681,-0.0049476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446294,-0.000732864) , 
17, 0.677823, 1, 0, 0.521295,-0.0355163) , 
3, 0.291829, 1, 0, 0.658765,-0.0240263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965952,-0.00306076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887369,0.00485471) , 
17, 0.332123, 1, 0, 0.936442,0.0150181) , 
4, 0.425199, 1, 0, 0.744639,-0.0119516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526565,0.00143323) , 
10, 0.688147, 1, 0, 0.712884,-0.00655483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443723,-0.0012314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296238,-0.003635) , 
16, 0.229479, 1, 0, 0.360458,-0.0399058) , 
16, 0.193125, 1, 0, 0.630273,-0.0143725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120549,-5.75883e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57279,0.00236976) , 
12, 0.0792259, 1, 0, 0.201687,0.00628057) , 
16, 0.281417, 1, 0, 0.494158,-0.0078133)    );
  // itree = 1695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592816,-0.00349438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648425,0.000297358) , 
14, 0.118157, 1, 0, 0.621822,-0.0235043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973244,-0.00392274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846476,0.00134027) , 
13, 0.785277, 1, 0, 0.905013,0.0055133) , 
2, 0.0329793, 1, 0, 0.793249,-0.0059388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731263,-0.000484322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610504,0.00458755) , 
10, 0.436726, 1, 0, 0.669603,0.0410921) , 
8, 0.0241495, 1, 0, 0.75927,0.00698578) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.355724,0.000541398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176972,-0.00231688) , 
14, 0.0739966, 1, 0, 0.232672,-0.0205385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187463,0.000555119) , 
13, 0.917926, 1, 0, 0.210415,-0.00588983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911407,-0.000827907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608478,-0.00468733) , 
11, 0.746473, 1, 0, 0.762201,-0.0484923) , 
12, 0.120485, 1, 0, 0.331434,-0.0152335) , 
16, 0.1279, 1, 0, 0.490123,-0.00699207)    );
  // itree = 1696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350034,-0.000725589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773729,0.004059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897909,0.00433145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731548,-0.00262766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715135,0.000711598) , 
8, 0.0261501, 1, 0, 0.723299,-0.0125383) , 
8, 0.0162309, 1, 0, 0.782697,0.00315775) , 
5, 0.0183853, 1, 0, 0.780345,0.0160068) , 
2, 0.0149549, 1, 0, 0.625556,0.00592414) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991468,0.00327538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817765,-0.00361986) , 
3, 0.243496, 1, 0, 0.910989,-0.0168912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898648,0.0028234) , 
10, 0.370898, 1, 0, 0.90704,-0.00431218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718895,-0.00399452) , 
10, 0.525442, 1, 0, 0.862235,-0.0181166) , 
5, 0.0360635, 1, 0, 0.724187,-0.00409437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379522,-0.00252702) , 
8, 0.0459894, 1, 0, 0.658877,-0.0131951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151724,0.000833809) , 
7, 0.577204, 1, 0, 0.491855,-0.00504318)    );
  // itree = 1697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189779,0.000968998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138351,-0.0011358) , 
6, 0.305955, 1, 0, 0.15899,-0.00644486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564318,3.55279e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349885,0.0016353) , 
8, 0.0339983, 1, 0, 0.429987,0.020026) , 
12, 0.0671697, 1, 0, 0.245084,0.00196469) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583539,-0.00297994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750595,-0.00147847) , 
12, 0.133371, 1, 0, 0.669795,-0.0402728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971401,-0.000655957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791787,-0.00477512) , 
6, 0.231537, 1, 0, 0.881755,-0.0264907) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930357,0.00339378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858615,-0.00314262) , 
14, 0.068196, 1, 0, 0.890495,-0.00622444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894066,0.00534188) , 
16, 0.130115, 1, 0, 0.891397,0.00942729) , 
9, 0.0175536, 1, 0, 0.88819,-0.00251779) , 
4, 0.25459, 1, 0, 0.828357,-0.0128615) , 
12, 0.10381, 1, 0, 0.501634,-0.00455655)    );
  // itree = 1698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405973,0.00189773) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996242,0.00989457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93684,-0.00699317) , 
6, 0.173777, 1, 0, 0.968565,-0.00705109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964884,0.00424919) , 
10, 0.364277, 1, 0, 0.966961,0.00225115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739421,-0.00510542) , 
17, 0.473475, 1, 0, 0.916991,-0.00938779) , 
5, 0.0146283, 1, 0, 0.80558,-0.00314716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556437,0.000496626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482091,0.00252044) , 
8, 0.0243288, 1, 0, 0.524337,0.0272311) , 
6, 0.46665, 1, 0, 0.688392,0.00951084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.27113,3.40016e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201401,-0.00141559) , 
11, 0.853835, 1, 0, 0.220964,-0.0172962) , 
8, 0.0443142, 1, 0, 0.498683,-0.00136896)    );
  // itree = 1699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93757,-0.00559804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980836,0.0124264) , 
14, 0.0378204, 1, 0, 0.960709,0.0110379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816077,-0.00262767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911949,-0.0072849) , 
4, 0.376032, 1, 0, 0.864019,-0.0238912) , 
8, 0.0156712, 1, 0, 0.915095,-0.0054401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66775,0.00555151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367069,0.000642434) , 
14, 0.0432133, 1, 0, 0.469913,0.0205597) , 
8, 0.03074, 1, 0, 0.725924,0.00560796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567166,-0.00357427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530028,0.000590816) , 
15, 0.322029, 1, 0, 0.550014,-0.0153954) , 
14, 0.137776, 1, 0, 0.680571,0.00019295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464074,-0.00293418) , 
6, 0.548399, 1, 0, 0.64153,-0.00922022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280686,0.0008715) , 
3, 0.729572, 1, 0, 0.50126,0.000605345)    );
  // itree = 1700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499636,0.00490713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915423,-0.00690743) , 
5, 0.0243769, 1, 0, 0.718931,0.0100832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660844,-0.000715505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402297,-0.0039479) , 
6, 0.270984, 1, 0, 0.50975,-0.0362458) , 
9, 0.0246119, 1, 0, 0.607507,-0.0145949) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967695,-0.0109947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737742,0.00476071) , 
3, 0.205016, 1, 0, 0.836934,0.0293345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287686,0.00136771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235608,-0.000652858) , 
6, 0.275383, 1, 0, 0.252603,-0.00207388) , 
10, 0.579742, 1, 0, 0.449529,0.00851106) , 
14, 0.0843981, 1, 0, 0.52282,-0.00220859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499416,-0.00203431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27332,-0.000815456) , 
17, 0.952, 1, 0, 0.348302,-0.0252373) , 
13, 1.06595, 1, 0, 0.467765,-0.00947344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945854,0.0068554) , 
2, 0.0599624, 1, 0, 0.492083,-0.00733277)    );
  // itree = 1701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550944,-0.0022385) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98143,0.00331898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935466,-0.00721953) , 
10, 0.361504, 1, 0, 0.958763,-0.00819175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86019,0.00319269) , 
6, 0.338882, 1, 0, 0.921876,0.0091665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906886,-0.00424317) , 
2, 0.0526698, 1, 0, 0.917,-0.0010642) , 
12, 0.104113, 1, 0, 0.832722,-0.0102647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928904,0.00106552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449199,0.00400184) , 
10, 0.44203, 1, 0, 0.708682,0.0302293) , 
16, 0.15434, 1, 0, 0.7956,0.00185404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195248,-0.00144697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253095,6.18153e-05) , 
3, 0.844846, 1, 0, 0.218896,-0.0131302) , 
17, 0.879345, 1, 0, 0.490618,-0.00607018)    );
  // itree = 1702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324573,-0.00260275) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931133,-0.00438392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977479,0.00389972) , 
4, 0.428369, 1, 0, 0.953412,-0.00508203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891117,0.00330164) , 
11, 0.637159, 1, 0, 0.939233,0.002548) , 
12, 0.0867607, 1, 0, 0.832215,-0.00555696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185509,0.00137535) , 
7, 0.523058, 1, 0, 0.619774,0.00177943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.861214,-0.000590316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269957,-0.00374073) , 
7, 0.19276, 1, 0, 0.544335,-0.0311855) , 
14, 0.163385, 1, 0, 0.604806,-0.00476102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297181,0.00247067) , 
11, 0.984891, 1, 0, 0.543673,0.00389887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532892,-9.53536e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251207,-0.0016012) , 
16, 0.128922, 1, 0, 0.381943,-0.0170728) , 
13, 1.06851, 1, 0, 0.49262,-0.00272114)    );
  // itree = 1703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842913,-0.00651013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912729,-0.00168232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611618,0.00414178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402099,0.000988208) , 
15, 0.0434042, 1, 0, 0.506974,0.0271778) , 
8, 0.0139058, 1, 0, 0.628352,0.0163923) , 
13, 0.658939, 1, 0, 0.705412,0.000967338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400681,-0.00226613) , 
11, 1.07808, 1, 0, 0.626459,-0.0113109) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360026,-0.00156625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298664,0.000132252) , 
15, 0.178903, 1, 0, 0.323258,-0.00671322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958536,0.00582151) , 
4, 0.291283, 1, 0, 0.436778,-0.000681368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336978,0.00130024) , 
11, 1.05493, 1, 0, 0.402381,0.00830071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944351,0.00777876) , 
12, 0.247272, 1, 0, 0.455441,0.0136729) , 
9, 0.0302334, 1, 0, 0.52305,0.00379598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346916,-0.00178931) , 
15, 0.369535, 1, 0, 0.506165,0.000590249)    );
  // itree = 1704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873297,6.92793e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818848,0.00350212) , 
10, 0.329609, 1, 0, 0.84928,0.0170684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476901,-0.00105708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413001,0.00132755) , 
14, 0.0279587, 1, 0, 0.444564,0.00262957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815631,-0.00427449) , 
5, 0.0323265, 1, 0, 0.573963,-0.013277) , 
16, 0.124178, 1, 0, 0.700277,0.000645299) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411336,0.000584035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530368,-0.00184403) , 
15, 0.201478, 1, 0, 0.454892,-0.00291535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807839,-0.00568269) , 
2, 0.0312161, 1, 0, 0.579443,-0.0218032) , 
14, 0.0679021, 1, 0, 0.645663,-0.00950077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494638,0.00104676) , 
9, 0.0516768, 1, 0, 0.604707,-0.00214867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17322,-0.00158932) , 
10, 0.764174, 1, 0, 0.495447,-0.00785005)    );
  // itree = 1705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910127,-0.00949317) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749345,0.00486445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470895,-0.00158992) , 
6, 0.202918, 1, 0, 0.619315,0.0041968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624507,0.00375042) , 
6, 0.356884, 1, 0, 0.62157,0.0292708) , 
10, 0.178775, 1, 0, 0.685385,0.0148464) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143091,-0.000734661) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727182,0.00314465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470898,0.00130589) , 
16, 0.148703, 1, 0, 0.588452,0.0368207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563838,-0.00184574) , 
2, 0.0189357, 1, 0, 0.579826,0.0128704) , 
1, 0.0684167, 1, 0, 0.287795,-0.00275303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879172,-0.000445556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644027,-0.00241795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753588,-0.00706667) , 
12, 0.155339, 1, 0, 0.695932,-0.0656598) , 
16, 0.0722738, 1, 0, 0.752314,-0.0466329) , 
2, 0.0269375, 1, 0, 0.400019,-0.0133541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899981,0.00352948) , 
5, 0.0524847, 1, 0, 0.438351,-0.00995318) , 
14, 0.0417821, 1, 0, 0.500446,-0.00371956)    );
  // itree = 1706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998504,0.0189891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787806,-0.00538482) , 
3, 0.223012, 1, 0, 0.916178,-0.0162427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139583,-0.000362257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964859,0.00554095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78535,-0.000980418) , 
6, 0.302537, 1, 0, 0.888542,0.00322672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661966,0.00425044) , 
16, 0.227526, 1, 0, 0.824793,0.0179571) , 
1, 0.0715461, 1, 0, 0.45812,0.00589241) , 
8, 0.015179, 1, 0, 0.555688,0.00117754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387928,-0.00144091) , 
13, 1.06392, 1, 0, 0.517104,-0.00491127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382646,0.000879544) , 
6, 0.747891, 1, 0, 0.492667,-0.000431351)    );
  // itree = 1707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728444,-0.00111004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34622,-0.00322071) , 
11, 0.657314, 1, 0, 0.500598,-0.0391437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131706,-0.000159676) , 
17, 0.879345, 1, 0, 0.22591,-0.011714) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498671,0.00111923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746766,0.00417039) , 
2, 0.0262102, 1, 0, 0.599317,0.0444899) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958691,-0.00628302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859614,0.00293942) , 
6, 0.309529, 1, 0, 0.913696,0.0105929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79539,-0.00380684) , 
7, 0.225034, 1, 0, 0.878044,-0.00502645) , 
4, 0.234821, 1, 0, 0.755096,0.0168156) , 
5, 0.0175562, 1, 0, 0.45046,0.00039201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982055,0.00417436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714155,-0.00489969) , 
11, 0.597686, 1, 0, 0.861203,-0.030353) , 
5, 0.0526698, 1, 0, 0.497672,-0.00314189)    );
  // itree = 1708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862116,-0.00285152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436427,-0.00124408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902216,-0.000564252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874909,0.00412853) , 
10, 0.410266, 1, 0, 0.8899,0.0188003) , 
12, 0.115757, 1, 0, 0.729822,0.00337938) , 
16, 0.0525925, 1, 0, 0.768475,-0.00351463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92363,0.00170487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389042,-0.00248981) , 
3, 0.458706, 1, 0, 0.579618,-0.0332514) , 
16, 0.107291, 1, 0, 0.685161,-0.0166329) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567922,-0.000321407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458377,0.00170972) , 
16, 0.261202, 1, 0, 0.514668,0.00832188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243055,-0.00243683) , 
16, 0.332474, 1, 0, 0.37757,-0.0118753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16685,0.00151349) , 
8, 0.0543188, 1, 0, 0.266968,0.00561179) , 
16, 0.202662, 1, 0, 0.500461,-0.00680824)    );
  // itree = 1709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854829,-0.00352448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833767,-0.000484853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579451,0.00266767) , 
13, 0.907046, 1, 0, 0.721421,0.0224512) , 
16, 0.0842628, 1, 0, 0.767036,0.00559593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940033,-0.00643996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771949,0.00191068) , 
11, 0.396606, 1, 0, 0.847366,0.00199743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228591,-0.00107061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700718,-0.00343035) , 
4, 0.236262, 1, 0, 0.324489,-0.0288861) , 
11, 0.648746, 1, 0, 0.477247,-0.0198635) , 
9, 0.023466, 1, 0, 0.562165,-0.012403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197947,0.00122943) , 
16, 0.358121, 1, 0, 0.493906,-0.0072354)    );
  // itree = 1710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999349,0.0149141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97831,-0.00540686) , 
7, 0.133367, 1, 0, 0.989243,0.000651525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940085,0.00462535) , 
3, 0.209642, 1, 0, 0.969366,0.0116181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536554,0.000482316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70951,-0.00285183) , 
4, 0.201947, 1, 0, 0.60961,-0.0149882) , 
17, 0.577538, 1, 0, 0.816333,0.000300297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367677,0.000260228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380987,0.00444714) , 
13, 0.784901, 1, 0, 0.376589,0.0372933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263665,7.28013e-05) , 
11, 0.999023, 1, 0, 0.325768,0.0210744) , 
10, 0.47641, 1, 0, 0.564143,0.0109799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772775,-0.0050246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36143,-0.000115111) , 
13, 0.57014, 1, 0, 0.471033,-0.00927559) , 
14, 0.135804, 1, 0, 0.542867,0.00635145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289705,-0.00124178) , 
9, 0.0681696, 1, 0, 0.499612,0.0016158)    );
  // itree = 1711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988624,0.0026624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880981,-0.00786642) , 
6, 0.164393, 1, 0, 0.931682,-0.0225279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885265,0.00158734) , 
17, 0.423399, 1, 0, 0.917031,-0.0116698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965983,0.00309382) , 
2, 0.05109, 1, 0, 0.933661,-0.0045177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654248,-0.00327857) , 
17, 0.568292, 1, 0, 0.860677,-0.015852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315917,0.000570649) , 
17, 0.828096, 1, 0, 0.726207,-0.00965569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218154,0.00173477) , 
10, 0.662795, 1, 0, 0.530032,0.00333823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511484,-0.00286869) , 
14, 0.188019, 1, 0, 0.527691,-0.00139273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340753,-0.00151202) , 
6, 0.71419, 1, 0, 0.490136,-0.00799951)    );
  // itree = 1712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956049,-0.00434524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944896,0.00326907) , 
13, 0.652814, 1, 0, 0.950452,0.000425043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725669,-0.00212431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55726,-0.00314602) , 
7, 0.118789, 1, 0, 0.638162,-0.0492338) , 
13, 0.85369, 1, 0, 0.78516,-0.0258588) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839035,0.0014989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673897,-0.00245932) , 
8, 0.0173951, 1, 0, 0.745854,-0.0151911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537677,0.00272909) , 
10, 0.494442, 1, 0, 0.656295,0.0116919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356661,0.000211609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768058,-0.00256146) , 
12, 0.0971379, 1, 0, 0.553966,-0.014182) , 
14, 0.114837, 1, 0, 0.604585,-0.00138293) , 
14, 0.0509266, 1, 0, 0.666072,-0.00971707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577012,0.00313683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139036,-0.000165875) , 
7, 0.546868, 1, 0, 0.230171,0.00600011) , 
16, 0.238704, 1, 0, 0.496983,-0.00362028)    );
  // itree = 1713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965507,-0.0213251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957883,-0.00864908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930877,0.00260531) , 
10, 0.176433, 1, 0, 0.940983,0.0001522) , 
11, 0.341296, 1, 0, 0.947769,-0.00592189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962618,0.00609528) , 
13, 0.748669, 1, 0, 0.950972,0.000592958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550363,-0.00230107) , 
3, 0.427751, 1, 0, 0.819445,-0.0133452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293031,0.00146139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229809,-0.00156201) , 
15, 0.0889996, 1, 0, 0.256652,-0.0046723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150126,0.00063984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704043,0.0026906) , 
12, 0.0830028, 1, 0, 0.307221,0.019551) , 
14, 0.104455, 1, 0, 0.284135,0.00849219) , 
10, 0.529344, 1, 0, 0.513481,-0.000863752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456343,0.00189834) , 
11, 1.29285, 1, 0, 0.50549,0.00536408)    );
  // itree = 1714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977574,0.00837787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596737,-5.43161e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518796,-0.00565345) , 
15, 0.0231325, 1, 0, 0.554323,-0.0317786) , 
10, 0.229468, 1, 0, 0.700542,-0.0128442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.159703,0.000126117) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941437,0.000676155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964263,0.00806832) , 
16, 0.0651428, 1, 0, 0.952026,0.0190438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865108,-0.00306522) , 
7, 0.166143, 1, 0, 0.925638,0.0066772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549593,0.00267091) , 
17, 0.671802, 1, 0, 0.791811,0.0238464) , 
1, 0.0715461, 1, 0, 0.466039,0.0124386) , 
15, 0.065542, 1, 0, 0.528018,0.00575633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390727,-0.0012069) , 
13, 1.23404, 1, 0, 0.500975,-0.000698019)    );
  // itree = 1715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92204,-0.00253464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585766,0.00359956) , 
11, 0.717183, 1, 0, 0.777466,0.0134518) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973982,-0.00835219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875585,0.00212319) , 
3, 0.259701, 1, 0, 0.932237,0.00361398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304413,-0.00222797) , 
17, 0.711647, 1, 0, 0.643924,-0.0143776) , 
9, 0.0175536, 1, 0, 0.690844,-0.00459968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613943,0.00376022) , 
14, 0.089755, 1, 0, 0.674692,0.00384139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253681,-0.00056624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681556,-0.00363283) , 
5, 0.0174151, 1, 0, 0.41438,-0.0252896) , 
15, 0.199048, 1, 0, 0.580371,-0.00671393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302027,0.00137969) , 
3, 0.828655, 1, 0, 0.503919,0.00249314)    );
  // itree = 1716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656289,0.000912795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239817,-0.00155371) , 
11, 0.647414, 1, 0, 0.315155,-0.0232792) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901325,0.00484636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.869805,-0.00587703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908165,-0.000117762) , 
15, 0.019403, 1, 0, 0.893608,-0.0151323) , 
12, 0.169554, 1, 0, 0.896046,0.00380693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927261,0.00697932) , 
15, 0.0989553, 1, 0, 0.903303,0.0156889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853595,0.000776739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758614,-0.00361836) , 
2, 0.036211, 1, 0, 0.802288,-0.0238792) , 
15, 0.152931, 1, 0, 0.871793,0.00334622) , 
4, 0.180211, 1, 0, 0.609368,-0.00920623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350849,-0.000660274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148202,0.00131036) , 
13, 0.711241, 1, 0, 0.190933,0.0119761) , 
16, 0.313187, 1, 0, 0.49841,-0.00358923)    );
  // itree = 1717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987566,0.000364705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973511,0.00577496) , 
17, 0.310607, 1, 0, 0.981273,0.00591289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947326,-0.00767835) , 
13, 0.651007, 1, 0, 0.969876,-0.00223375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.86735,-0.00982362) , 
16, 0.180002, 1, 0, 0.94324,-0.0128035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34331,0.0012049) , 
3, 0.343223, 1, 0, 0.710431,-0.000564101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56398,-0.00438095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879354,-0.000267053) , 
12, 0.183374, 1, 0, 0.733754,-0.034133) , 
13, 0.830067, 1, 0, 0.71602,-0.00860951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478513,0.0013697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178324,0.000398151) , 
7, 0.34174, 1, 0, 0.284373,0.0150574) , 
3, 0.648512, 1, 0, 0.505072,0.00295664)    );
  // itree = 1718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654438,0.00538715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996235,0.00451534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984831,0.0113032) , 
3, 0.137225, 1, 0, 0.990687,0.0088872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89536,-0.00368452) , 
6, 0.263163, 1, 0, 0.96059,-0.000823088) , 
4, 0.261658, 1, 0, 0.865999,0.0142368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386941,-0.0032454) , 
11, 0.9102, 1, 0, 0.775083,0.00253478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586086,0.00205835) , 
13, 1.14589, 1, 0, 0.728585,0.0123144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223097,-0.00102063) , 
8, 0.0529529, 1, 0, 0.579046,0.00377082) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758025,-0.00030619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501324,-0.0039237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305281,-0.00198876) , 
16, 0.128663, 1, 0, 0.380525,-0.0498761) , 
8, 0.0172044, 1, 0, 0.501946,-0.0348899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212106,-0.000319009) , 
10, 0.715972, 1, 0, 0.358232,-0.0201676) , 
15, 0.174167, 1, 0, 0.487601,-0.00614275)    );
  // itree = 1719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515355,-0.00150262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995733,0.00994776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940208,0.00706217) , 
3, 0.169101, 1, 0, 0.969664,0.0261831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973864,0.00238076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945532,-0.00495139) , 
8, 0.0156806, 1, 0, 0.961369,-0.00360296) , 
2, 0.0383636, 1, 0, 0.965263,0.0103797) , 
1, 0.12925, 1, 0, 0.876013,0.00438534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452108,0.00392376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446934,0.0025016) , 
14, 0.120873, 1, 0, 0.449208,0.0385371) , 
10, 0.588447, 1, 0, 0.756833,0.0139218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13768,0.000789555) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762218,0.00103647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545391,-0.0010697) , 
11, 1.05269, 1, 0, 0.622906,-0.0108796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379862,-0.00260757) , 
7, 0.346969, 1, 0, 0.51913,-0.0303092) , 
5, 0.00902632, 1, 0, 0.316361,-0.00830876) , 
11, 0.791846, 1, 0, 0.50032,0.000975618)    );
  // itree = 1720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940718,4.54388e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992861,0.0143109) , 
4, 0.421619, 1, 0, 0.960323,0.00758132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866728,-0.00555039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4104,-9.50045e-05) , 
7, 0.16694, 1, 0, 0.615771,-0.0166122) , 
10, 0.343236, 1, 0, 0.794053,-0.00409372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560724,0.00145587) , 
11, 0.898402, 1, 0, 0.722672,0.00522967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449729,-0.00222894) , 
14, 0.103225, 1, 0, 0.68413,-0.000159595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768506,0.000678034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398334,0.00294944) , 
7, 0.169521, 1, 0, 0.563234,0.0278445) , 
14, 0.125346, 1, 0, 0.647714,0.0082756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193646,-0.000592346) , 
17, 1.09879, 1, 0, 0.501973,0.00226665)    );
  // itree = 1721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926684,-0.0135546) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938427,0.00311817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911916,-0.00211066) , 
14, 0.0658694, 1, 0, 0.92834,0.00344473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785412,-0.00439841) , 
10, 0.422399, 1, 0, 0.875918,-0.0107868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363956,-0.00121259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32278,0.00196483) , 
9, 0.0316072, 1, 0, 0.339671,0.00940929) , 
8, 0.0300858, 1, 0, 0.604849,-0.000577805) , 
10, 0.143645, 1, 0, 0.63984,-0.00458064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230521,-0.000800634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643546,-0.0019788) , 
12, 0.121419, 1, 0, 0.346274,-0.0229777) , 
11, 1.02781, 1, 0, 0.54052,-0.0108048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230673,-0.00019153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840344,0.00359658) , 
4, 0.144629, 1, 0, 0.380091,0.00941907) , 
15, 0.240321, 1, 0, 0.497441,-0.00537419)    );
  // itree = 1722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9562,0.00846335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813172,-0.00245012) , 
15, 0.0673965, 1, 0, 0.884881,0.00297517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691271,0.00297512) , 
6, 0.306598, 1, 0, 0.792623,0.0208689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32567,0.00173308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179863,-0.00125717) , 
9, 0.017182, 1, 0, 0.217478,-0.00739421) , 
16, 0.266526, 1, 0, 0.502555,0.00661471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418215,0.00320924) , 
14, 0.11584, 1, 0, 0.483774,0.014522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487319,-0.000714722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415422,-0.00168789) , 
15, 0.338084, 1, 0, 0.44814,-0.0168818) , 
14, 0.168796, 1, 0, 0.477154,0.00868779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906008,0.000245172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.894649,-0.00627209) , 
12, 0.176505, 1, 0, 0.899484,-0.0187746) , 
5, 0.0487754, 1, 0, 0.543117,0.00439847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366218,-0.000848072) , 
6, 0.679901, 1, 0, 0.50179,-0.00113709)    );
  // itree = 1723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975782,0.00368757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889229,-0.00837031) , 
13, 0.73154, 1, 0, 0.938176,-0.013854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952157,0.00490703) , 
14, 0.0626718, 1, 0, 0.942872,-0.00240156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560695,0.00147656) , 
3, 0.492827, 1, 0, 0.764512,0.0131876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645034,-0.00119425) , 
14, 0.122938, 1, 0, 0.739547,0.00687323) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744695,-0.000877401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310268,-0.00250073) , 
11, 0.70319, 1, 0, 0.440878,-0.0309305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126315,9.13198e-05) , 
7, 0.646928, 1, 0, 0.256411,-0.0120895) , 
16, 0.19892, 1, 0, 0.514877,-0.00194491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409303,0.00190292) , 
15, 0.348333, 1, 0, 0.502914,0.00161)    );
  // itree = 1724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742965,-0.00035524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877688,-0.00609561) , 
5, 0.0391141, 1, 0, 0.805887,-0.0206296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.384969,-0.00406364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963968,0.00139841) , 
2, 0.0206917, 1, 0, 0.67708,-0.0181729) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501885,0.00419208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500254,-0.00232399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243557,-0.00043001) , 
16, 0.160646, 1, 0, 0.319049,-0.0178837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790108,0.00105493) , 
2, 0.0340804, 1, 0, 0.45933,-0.00804937) , 
6, 0.244425, 1, 0, 0.466872,0.000492613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38206,0.00175316) , 
9, 0.0436705, 1, 0, 0.436334,0.0109538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256991,-0.00069457) , 
15, 0.298571, 1, 0, 0.40229,0.00656588) , 
6, 0.189763, 1, 0, 0.45156,0.00213022) , 
8, 0.00379476, 1, 0, 0.504217,-0.00125216)    );
  // itree = 1725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99528,0.0172293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964918,-0.0102127) , 
14, 0.0217381, 1, 0, 0.980767,-0.000640538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554523,-0.00509881) , 
3, 0.279838, 1, 0, 0.807592,-0.0237621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90321,0.00221119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765188,-0.00241839) , 
14, 0.0934509, 1, 0, 0.818963,-0.00926386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218202,0.0010245) , 
7, 0.371545, 1, 0, 0.552481,0.00102758) , 
15, 0.085285, 1, 0, 0.657115,-0.00913992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753954,0.00325604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210125,0.000283942) , 
10, 0.4869, 1, 0, 0.328166,0.0147349) , 
11, 0.892505, 1, 0, 0.537792,-0.000479545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48532,-0.00271846) , 
14, 0.189442, 1, 0, 0.531339,-0.0045995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398655,0.00146654) , 
6, 0.74664, 1, 0, 0.507279,0.00231756)    );
  // itree = 1726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994994,0.0103643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842595,-0.00327664) , 
6, 0.187785, 1, 0, 0.905739,-0.0148838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909506,0.00461544) , 
7, 0.219452, 1, 0, 0.906874,-0.00242137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182839,-0.00242417) , 
7, 0.486637, 1, 0, 0.642654,-0.0145505) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948155,-0.00148527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673162,-0.00296501) , 
11, 0.591622, 1, 0, 0.831881,-0.0214459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375018,0.00338391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231237,0.000385183) , 
13, 0.82212, 1, 0, 0.285809,0.019659) , 
10, 0.521472, 1, 0, 0.467424,0.00598817) , 
9, 0.0300686, 1, 0, 0.54017,-0.00253844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404919,0.00126819) , 
6, 0.68442, 1, 0, 0.510235,0.00409247)    );
  // itree = 1727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962434,-0.00359534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985951,0.0118946) , 
8, 0.0143742, 1, 0, 0.974968,0.00923709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.853434,-0.00325994) , 
8, 0.0261823, 1, 0, 0.936303,0.000405287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70823,0.00247423) , 
13, 0.907046, 1, 0, 0.859084,0.0150173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393333,-0.00162086) , 
10, 0.506843, 1, 0, 0.723672,0.00414358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388856,-0.000517312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780175,-0.00426761) , 
5, 0.031038, 1, 0, 0.526331,-0.0228452) , 
15, 0.122657, 1, 0, 0.665472,-0.00381603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375077,0.00146427) , 
15, 0.20856, 1, 0, 0.616608,0.000823076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179238,-0.00119049) , 
8, 0.0580645, 1, 0, 0.51117,-0.00393409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726537,-0.00198056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315502,0.00199692) , 
10, 0.574348, 1, 0, 0.43741,0.015781) , 
14, 0.146237, 1, 0, 0.494613,0.000491457)    );
  // itree = 1728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249175,0.00153073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975134,0.00229827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51658,-0.00295446) , 
10, 0.442374, 1, 0, 0.800331,-0.0161409) , 
5, 0.0120212, 1, 0, 0.566879,-0.00150351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527216,-0.000266503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318343,-0.00260968) , 
16, 0.118217, 1, 0, 0.415905,-0.028469) , 
6, 0.392442, 1, 0, 0.497088,-0.0139689) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972121,0.00358032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916942,-0.00852007) , 
12, 0.293078, 1, 0, 0.951544,-0.00652812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829613,0.00245804) , 
11, 0.696039, 1, 0, 0.91184,0.00705093) , 
0, 0.177403, 1, 0, 0.638636,-0.00679512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214078,0.00076772) , 
17, 1.09348, 1, 0, 0.498534,-0.000239565)    );
  // itree = 1729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187933,0.0018436) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903,-0.00565284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927934,-0.00604244) , 
14, 0.0238511, 1, 0, 0.915409,-0.0259939) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961049,0.00467877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758429,-0.00400614) , 
13, 0.825626, 1, 0, 0.88545,-0.00785862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691415,0.00261673) , 
13, 1.10182, 1, 0, 0.823205,0.0107742) , 
10, 0.234119, 1, 0, 0.851893,-0.000665603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455793,-0.00223464) , 
8, 0.0453332, 1, 0, 0.763156,-0.0108878) , 
12, 0.0692064, 1, 0, 0.580705,0.000457063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230685,-0.00225553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847704,0.000871662) , 
4, 0.153365, 1, 0, 0.414118,-0.0213728) , 
15, 0.20358, 1, 0, 0.541037,-0.00474117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34195,0.00100873) , 
9, 0.0643824, 1, 0, 0.503825,-0.000670735)    );
  // itree = 1730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154637,0.000837844) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97457,-0.00794112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928909,-0.0217719) , 
12, 0.250752, 1, 0, 0.958209,-0.0191348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460268,0.0022394) , 
3, 0.334839, 1, 0, 0.765479,-0.000461961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733717,-0.000595385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393165,-0.00303342) , 
6, 0.249424, 1, 0, 0.57052,-0.0242454) , 
14, 0.0835641, 1, 0, 0.676703,-0.0112919) , 
12, 0.052624, 1, 0, 0.542929,-0.0060052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819282,0.00578131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520751,0.00125106) , 
9, 0.031288, 1, 0, 0.605935,0.0418688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278871,0.000404969) , 
17, 1.03807, 1, 0, 0.446718,0.0254504) , 
6, 0.424024, 1, 0, 0.501294,0.00760704)    );
  // itree = 1731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74635,-0.00359742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991229,0.00978427) , 
4, 0.292363, 1, 0, 0.898359,-0.00329518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929647,0.00782792) , 
9, 0.0342445, 1, 0, 0.909329,0.00796978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255512,-0.00104148) , 
10, 0.61129, 1, 0, 0.711617,0.00171107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304071,0.00331103) , 
13, 0.878592, 1, 0, 0.597936,0.0122477) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615754,0.00256007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240498,8.76205e-05) , 
17, 0.893393, 1, 0, 0.326017,0.0113184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712842,-0.00294279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801902,0.000572382) , 
12, 0.191671, 1, 0, 0.762333,-0.0181485) , 
12, 0.134826, 1, 0, 0.477663,0.00107692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284376,-0.00125887) , 
15, 0.27369, 1, 0, 0.428048,-0.00529774) , 
6, 0.312152, 1, 0, 0.502299,0.00237067)    );
  // itree = 1732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925286,-0.0113633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954694,0.00377879) , 
9, 0.0173701, 1, 0, 0.942996,-0.00393136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470827,0.00345095) , 
10, 0.507547, 1, 0, 0.808075,0.0074646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634949,-0.0023545) , 
9, 0.0466253, 1, 0, 0.765331,0.00110294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55107,0.00273067) , 
6, 0.369023, 1, 0, 0.722616,0.00890036) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874991,-0.00464257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745321,0.00073941) , 
11, 0.70923, 1, 0, 0.806423,-0.00799371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664021,-0.00447453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440314,-0.00136945) , 
7, 0.112759, 1, 0, 0.536216,-0.0433479) , 
10, 0.471499, 1, 0, 0.663355,-0.0267129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158137,0.00070999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35153,-0.000480525) , 
6, 0.650076, 1, 0, 0.242006,0.000932578) , 
17, 0.879345, 1, 0, 0.392109,-0.00891595) , 
13, 0.740665, 1, 0, 0.499179,-0.00314423)    );
  // itree = 1733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.379728,-0.0014181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425007,0.0010086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111636,-0.000470275) , 
10, 0.61129, 1, 0, 0.193969,-0.000602922) , 
16, 0.151019, 1, 0, 0.234669,-0.00712424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913494,-0.00197579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759261,0.00298888) , 
11, 0.685461, 1, 0, 0.829856,0.0246931) , 
4, 0.175121, 1, 0, 0.354952,-0.000694139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860223,-0.00568778) , 
4, 0.388313, 1, 0, 0.390023,-0.00344896) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958346,-0.00400024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990317,0.00740153) , 
5, 0.037459, 1, 0, 0.974569,-0.000294502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740688,-0.00342626) , 
3, 0.294711, 1, 0, 0.86293,-0.0249571) , 
12, 0.192955, 1, 0, 0.492613,-0.00811483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509954,-0.00297726) , 
14, 0.223886, 1, 0, 0.493891,-0.0107153)    );
  // itree = 1734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433961,-0.000580339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251521,0.00213463) , 
8, 0.0281546, 1, 0, 0.3058,0.021294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975751,-1.39501e-05) , 
7, 0.681811, 1, 0, 0.204216,0.0108248) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506344,-0.000495592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497811,-0.00396627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869475,-0.00421035) , 
4, 0.243329, 1, 0, 0.655258,-0.0581939) , 
5, 0.0193096, 1, 0, 0.574857,-0.031698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845093,0.0032231) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977209,9.82614e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839529,0.00319154) , 
11, 0.6349, 1, 0, 0.920168,0.017439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775349,-0.00367461) , 
15, 0.0986263, 1, 0, 0.859934,-0.00895001) , 
2, 0.0383151, 1, 0, 0.855952,0.0041472) , 
2, 0.0335331, 1, 0, 0.721657,-0.0129781) , 
5, 0.0152423, 1, 0, 0.494137,-0.00251197)    );
  // itree = 1735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990202,0.00825924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978194,-0.00391507) , 
4, 0.35253, 1, 0, 0.983578,0.00155693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766237,-0.00260008) , 
3, 0.270195, 1, 0, 0.924919,-0.00694194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68263,0.000417298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603354,0.00282745) , 
15, 0.0882156, 1, 0, 0.645055,0.030638) , 
11, 0.695558, 1, 0, 0.800338,0.00978671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402045,-0.00242033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228584,-0.000656163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145825,0.000195628) , 
8, 0.0531266, 1, 0, 0.184298,-0.00370757) , 
3, 0.563231, 1, 0, 0.224817,-0.00997348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769881,-0.00479555) , 
12, 0.223757, 1, 0, 0.275329,-0.0145593) , 
10, 0.524354, 1, 0, 0.500165,-0.00413307)    );
  // itree = 1736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991024,0.0045013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903241,-0.00735945) , 
6, 0.220679, 1, 0, 0.956037,-0.0118068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949382,-0.00071846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860148,0.00637216) , 
6, 0.203013, 1, 0, 0.903376,0.0266518) , 
10, 0.299667, 1, 0, 0.931186,0.00634215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281631,-0.00234459) , 
7, 0.491945, 1, 0, 0.808895,-0.00132034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573996,-0.00186392) , 
6, 0.450187, 1, 0, 0.731137,-0.0125893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777883,0.00360874) , 
14, 0.1673, 1, 0, 0.737604,-0.00603804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29451,0.00166419) , 
17, 1.05634, 1, 0, 0.616282,0.00435488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177827,-0.00128729) , 
10, 0.764174, 1, 0, 0.503073,-0.00197816)    );
  // itree = 1737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303799,0.00233145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594019,-0.00260551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98059,-0.00125104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885486,-0.00671114) , 
6, 0.224607, 1, 0, 0.945748,-0.0151901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797347,0.0013737) , 
17, 0.489359, 1, 0, 0.888195,-0.00128226) , 
12, 0.117977, 1, 0, 0.824076,-0.0107023) , 
2, 0.0154911, 1, 0, 0.704705,-0.000897512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207384,-0.00198857) , 
8, 0.0531266, 1, 0, 0.557681,-0.0103635) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555858,0.0029662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397228,-0.000655266) , 
15, 0.181388, 1, 0, 0.455416,0.00703414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444782,0.00291354) , 
15, 0.276091, 1, 0, 0.452238,0.018828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353379,-0.000743592) , 
15, 0.354951, 1, 0, 0.425567,0.0106028) , 
14, 0.103606, 1, 0, 0.50501,-0.00200478)    );
  // itree = 1738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43657,0.0029322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915325,-0.00321981) , 
12, 0.114096, 1, 0, 0.720856,0.00470259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753765,-0.00418486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738352,0.00195175) , 
9, 0.0365904, 1, 0, 0.746524,-0.00657495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289054,-0.00267707) , 
11, 0.735978, 1, 0, 0.484696,-0.0264386) , 
14, 0.0447452, 1, 0, 0.563527,-0.0160435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408731,0.000889357) , 
15, 0.253596, 1, 0, 0.534683,-0.0106893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967754,-0.000790281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891085,0.00400363) , 
11, 0.494297, 1, 0, 0.932509,0.0162997) , 
12, 0.242456, 1, 0, 0.609878,-0.00558802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427059,-0.00248212) , 
15, 0.369535, 1, 0, 0.590176,-0.00899941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284755,0.00042212) , 
3, 0.802529, 1, 0, 0.500024,-0.00392659)    );
  // itree = 1739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967593,-0.00612819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989858,-0.0159682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931271,0.00381665) , 
3, 0.143992, 1, 0, 0.958496,0.00945322) , 
10, 0.281528, 1, 0, 0.962335,0.00104858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592785,0.00279797) , 
7, 0.291034, 1, 0, 0.855937,0.00898323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269666,-0.00122564) , 
11, 0.743372, 1, 0, 0.700128,0.00260392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705041,-0.00572807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191491,-0.00051484) , 
10, 0.602092, 1, 0, 0.32784,-0.0212248) , 
13, 0.823674, 1, 0, 0.541923,-0.00752217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500916,0.000150516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337082,0.00179497) , 
8, 0.0392429, 1, 0, 0.433137,0.0158523) , 
6, 0.491214, 1, 0, 0.501679,0.00112498)    );
  // itree = 1740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971119,-0.00311598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457458,0.00267582) , 
10, 0.404523, 1, 0, 0.743496,0.00920406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63112,-0.00238473) , 
15, 0.189858, 1, 0, 0.710484,0.00161851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594901,0.00466001) , 
6, 0.221533, 1, 0, 0.679038,0.0130201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438011,-0.00321177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480842,-0.0014289) , 
6, 0.341635, 1, 0, 0.460674,-0.0296974) , 
6, 0.2897, 1, 0, 0.614378,0.000370974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606412,0.00203527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343038,0.000244917) , 
16, 0.136589, 1, 0, 0.483471,0.0237948) , 
6, 0.422144, 1, 0, 0.561174,0.00989098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176434,-0.000907682) , 
17, 1.19868, 1, 0, 0.470464,0.00390131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850364,-0.00379562) , 
5, 0.055768, 1, 0, 0.504968,0.000555312)    );
  // itree = 1741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972913,-0.00585778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871393,0.00476415) , 
17, 0.284226, 1, 0, 0.922446,0.00401994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287062,-0.00225916) , 
8, 0.0362982, 1, 0, 0.667045,-0.00930995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563863,0.00252238) , 
6, 0.28516, 1, 0, 0.639076,0.000320829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526332,-0.00170275) , 
6, 0.440705, 1, 0, 0.605063,-0.00996329) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667294,0.00429341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912866,0.000927165) , 
12, 0.122912, 1, 0, 0.79983,0.0361807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365976,-0.00131775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226224,0.000862426) , 
10, 0.684243, 1, 0, 0.277414,0.000364833) , 
10, 0.486776, 1, 0, 0.408563,0.00935613) , 
9, 0.0358657, 1, 0, 0.499989,0.000367369)    );
  // itree = 1742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579438,-0.000755613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987103,-0.00737688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993104,0.0167824) , 
8, 0.0152603, 1, 0, 0.990013,0.0110368) , 
2, 0.0209941, 1, 0, 0.836066,0.00479566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582596,0.00303797) , 
6, 0.181477, 1, 0, 0.758168,0.0103701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77093,0.0034579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53592,-0.00478437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39244,-0.00209621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359152,-6.44301e-05) , 
6, 0.421951, 1, 0, 0.374335,-0.0129464) , 
9, 0.0312982, 1, 0, 0.400091,-0.0203516) , 
15, 0.060713, 1, 0, 0.466297,-0.0118013) , 
6, 0.23139, 1, 0, 0.580431,-0.00313135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295378,0.00123538) , 
11, 0.98645, 1, 0, 0.520292,0.00165776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370829,-0.000928812) , 
11, 1.19787, 1, 0, 0.490058,-0.00286612)    );
  // itree = 1743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320719,-0.00129247) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984648,0.00853711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935243,-0.00782843) , 
12, 0.211295, 1, 0, 0.95684,-0.00799394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796389,0.00253271) , 
3, 0.421292, 1, 0, 0.89454,0.0117223) , 
12, 0.104113, 1, 0, 0.713132,0.000810681) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581184,-0.000560234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372044,-0.00331361) , 
6, 0.266319, 1, 0, 0.436824,-0.0431962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612309,0.000629634) , 
14, 0.169939, 1, 0, 0.484852,-0.0293336) , 
15, 0.111044, 1, 0, 0.602282,-0.0138271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387734,0.000734221) , 
9, 0.056808, 1, 0, 0.544882,-0.00666971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196244,0.00256497) , 
16, 0.39784, 1, 0, 0.498921,-0.00172272)    );
  // itree = 1744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289036,0.000382406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268936,0.00271801) , 
9, 0.035199, 1, 0, 0.2756,0.0320438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122717,-0.000185027) , 
8, 0.0548417, 1, 0, 0.201022,0.0151142) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949433,0.00426113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8398,-0.0041533) , 
16, 0.0511142, 1, 0, 0.883661,-0.0134061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96353,-0.0164666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819647,0.0027751) , 
3, 0.21498, 1, 0, 0.880751,0.0143033) , 
16, 0.0840921, 1, 0, 0.882137,0.00110316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702456,-0.00280731) , 
10, 0.595442, 1, 0, 0.848408,-0.0081634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819108,0.00267747) , 
7, 0.306349, 1, 0, 0.844696,-0.00285746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500964,-0.00232875) , 
7, 0.434007, 1, 0, 0.796521,-0.00977149) , 
4, 0.0939201, 1, 0, 0.507839,0.00229243)    );
  // itree = 1745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900689,-0.00907382) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955952,0.0063886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979375,-0.0109535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993372,0.016348) , 
11, 0.330842, 1, 0, 0.986708,0.00536828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84998,-0.00534114) , 
3, 0.287464, 1, 0, 0.942991,-0.00998278) , 
5, 0.0233467, 1, 0, 0.945987,-0.000223441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60586,0.00186379) , 
3, 0.504399, 1, 0, 0.805683,0.0160259) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258181,-0.0019218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104869,-0.000180173) , 
7, 0.614787, 1, 0, 0.151988,-0.0123814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63755,0.00132427) , 
2, 0.0181055, 1, 0, 0.251162,-0.00487255) , 
7, 0.309554, 1, 0, 0.513941,0.00503092) , 
10, 0.158803, 1, 0, 0.544242,0.00143828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289159,-0.00160062) , 
9, 0.0668737, 1, 0, 0.499253,-0.00378891)    );
  // itree = 1746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982709,-0.00484651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993286,0.0101508) , 
14, 0.047924, 1, 0, 0.988304,0.0018223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844779,-0.00534514) , 
3, 0.218999, 1, 0, 0.948415,-0.00911922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404563,0.00192575) , 
3, 0.372318, 1, 0, 0.784351,0.00251833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173456,-0.00194374) , 
10, 0.692796, 1, 0, 0.626875,-0.00506481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809687,0.00477867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22731,0.00123695) , 
7, 0.243504, 1, 0, 0.381329,0.0274516) , 
13, 0.878794, 1, 0, 0.556197,0.00429468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504054,-0.00158751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31397,7.8198e-05) , 
10, 0.534093, 1, 0, 0.390052,-0.0139848) , 
13, 1.06711, 1, 0, 0.50223,-0.00164289)    );
  // itree = 1747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670273,0.00330438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823676,-0.00339744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960353,0.00654115) , 
4, 0.440576, 1, 0, 0.884453,-0.00774484) , 
5, 0.0300529, 1, 0, 0.811604,0.00939906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264636,-0.00169016) , 
10, 0.559905, 1, 0, 0.64332,-0.000984331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48381,0.00200844) , 
15, 0.111516, 1, 0, 0.606031,0.0060936) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541127,0.00204345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405525,-0.00153733) , 
6, 0.265243, 1, 0, 0.464993,-0.00669219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327498,-0.00286168) , 
9, 0.0461719, 1, 0, 0.409427,-0.0228952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239762,0.000642452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628631,0.000288589) , 
2, 0.015524, 1, 0, 0.386638,0.0076371) , 
15, 0.298161, 1, 0, 0.401813,-0.0126936) , 
14, 0.0861099, 1, 0, 0.506055,-0.00310377)    );
  // itree = 1748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776706,-0.00388929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992605,0.00598877) , 
2, 0.0347599, 1, 0, 0.886208,-0.00619506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752608,0.00636375) , 
6, 0.168972, 1, 0, 0.846802,0.00632581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923719,-0.00212943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315866,-0.00291519) , 
17, 0.512883, 1, 0, 0.606267,-0.0254288) , 
6, 0.215441, 1, 0, 0.753756,-0.00595773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735022,0.00382594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516776,0.000571378) , 
15, 0.110758, 1, 0, 0.612194,0.0221535) , 
6, 0.332958, 1, 0, 0.707397,0.00324822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421146,-0.00113293) , 
6, 0.585558, 1, 0, 0.614162,-0.00609332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220127,0.00130265) , 
10, 0.752977, 1, 0, 0.506137,0.000946402)    );
  // itree = 1749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940949,-0.0108126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.905045,0.0066634) , 
6, 0.166769, 1, 0, 0.923539,0.0034648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612002,-0.00206323) , 
6, 0.327143, 1, 0, 0.76692,-0.0172065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435796,2.63207e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867282,0.00314465) , 
2, 0.033085, 1, 0, 0.619903,0.0145783) , 
14, 0.0497023, 1, 0, 0.710451,-0.00499801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471654,-0.00269175) , 
14, 0.0844947, 1, 0, 0.674682,-0.0107544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50967,0.00177923) , 
14, 0.100216, 1, 0, 0.640071,-0.00282133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388694,-0.00280764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642656,0.000137958) , 
14, 0.210936, 1, 0, 0.477327,-0.0291703) , 
14, 0.138141, 1, 0, 0.598646,-0.00952829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133392,0.00232378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394725,-0.000242835) , 
12, 0.0678255, 1, 0, 0.206242,0.017504) , 
16, 0.318272, 1, 0, 0.498434,-0.0026248)    );
  // itree = 1750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842313,-0.00431763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783383,2.31768e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83558,0.00475749) , 
7, 0.0801944, 1, 0, 0.81186,0.0276055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54332,-0.00136291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914681,0.00210396) , 
12, 0.169162, 1, 0, 0.676829,-0.00881949) , 
14, 0.0866172, 1, 0, 0.735427,0.00698743) , 
9, 0.0183079, 1, 0, 0.761732,-0.00331026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530631,-0.00237016) , 
8, 0.0343625, 1, 0, 0.722048,-0.0104412) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449663,-0.000846963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468432,0.00390207) , 
15, 0.0243989, 1, 0, 0.458064,0.0170052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239608,-0.000993234) , 
14, 0.0438099, 1, 0, 0.326345,-0.00211924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.230143,0.00161398) , 
14, 0.0971542, 1, 0, 0.282589,0.00993778) , 
7, 0.292205, 1, 0, 0.479108,0.000824645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957532,0.00901508) , 
2, 0.0609693, 1, 0, 0.502711,0.00326871)    );
  // itree = 1751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864716,0.00379673) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9066,-0.00476993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984574,-0.00124166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.947186,0.00550693) , 
6, 0.232943, 1, 0, 0.969796,0.0107926) , 
2, 0.038048, 1, 0, 0.947505,-0.00190579) , 
5, 0.0235338, 1, 0, 0.926261,0.00672521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594632,-0.00316056) , 
7, 0.280055, 1, 0, 0.857829,-0.000842641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461086,-0.00353509) , 
11, 0.745434, 1, 0, 0.79391,-0.00865399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708997,0.00132356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429327,0.00434161) , 
7, 0.280513, 1, 0, 0.566292,0.0403773) , 
11, 0.864032, 1, 0, 0.745957,0.00167558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307616,-0.00114646) , 
3, 0.756598, 1, 0, 0.619086,-0.00580624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223097,0.000950922) , 
8, 0.0548417, 1, 0, 0.508009,7.39248e-05)    );
  // itree = 1752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835158,-0.00655251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867229,0.00138079) , 
9, 0.0260714, 1, 0, 0.852582,-0.0093603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593703,0.0028268) , 
13, 0.710773, 1, 0, 0.772762,0.0035884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53506,0.00246104) , 
11, 0.807483, 1, 0, 0.689774,0.0165837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196211,-0.000552211) , 
10, 0.67417, 1, 0, 0.499109,0.00704455) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981442,-0.00119578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980217,0.00682945) , 
17, 0.22855, 1, 0, 0.980768,0.00769044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764911,-0.00508926) , 
17, 0.4163, 1, 0, 0.889899,-0.0216331) , 
5, 0.0359775, 1, 0, 0.627483,-0.00237599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.310515,0.000859415) , 
3, 0.839007, 1, 0, 0.549799,0.002374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291017,-0.0017572) , 
9, 0.0664871, 1, 0, 0.503971,-0.00358874)    );
  // itree = 1753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896192,-0.00709143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971747,0.00480844) , 
4, 0.423036, 1, 0, 0.941857,-0.00754615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627221,0.00224867) , 
6, 0.500474, 1, 0, 0.806722,0.0158744) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875138,-0.000778936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442694,-0.00411429) , 
11, 0.727484, 1, 0, 0.651165,-0.0350399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153593,-0.000238116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719808,0.00111521) , 
4, 0.12887, 1, 0, 0.263856,0.0011581) , 
8, 0.0364943, 1, 0, 0.379201,-0.00962205) , 
16, 0.135108, 1, 0, 0.555605,0.000898291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493186,0.000468356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435654,0.00278807) , 
15, 0.213174, 1, 0, 0.457697,0.0270315) , 
14, 0.116659, 1, 0, 0.530697,0.00754668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351337,-0.00105573) , 
15, 0.330637, 1, 0, 0.506092,0.00417757)    );
  // itree = 1754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582474,-0.000494445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451553,-0.00379766) , 
15, 0.180422, 1, 0, 0.509771,-0.0442962) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289349,-0.00200497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108656,-0.000215686) , 
10, 0.624649, 1, 0, 0.159657,-0.0117982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626013,0.0011308) , 
12, 0.0844045, 1, 0, 0.24862,-0.00562195) , 
16, 0.11259, 1, 0, 0.298367,-0.0129891) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980904,-0.00424725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953759,0.00396336) , 
6, 0.181272, 1, 0, 0.967815,0.00551096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833687,-0.0035078) , 
8, 0.0218835, 1, 0, 0.9287,-0.00492844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793309,0.00240588) , 
6, 0.462283, 1, 0, 0.8856,0.00973506) , 
12, 0.134521, 1, 0, 0.499127,-0.0052203)    );
  // itree = 1755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.369476,0.00119616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754511,-0.00530156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8928,0.000620193) , 
2, 0.0365078, 1, 0, 0.830751,-0.0255035) , 
5, 0.0188567, 1, 0, 0.61961,-0.00656154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520866,-0.00315982) , 
9, 0.0184047, 1, 0, 0.594442,-0.0154091) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6495,-0.0018213) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906935,-0.00173577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429749,0.00202858) , 
11, 0.582947, 1, 0, 0.542125,0.024881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462455,-0.00036101) , 
15, 0.253971, 1, 0, 0.516181,0.0149405) , 
14, 0.0473364, 1, 0, 0.536614,0.00939958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165328,-0.00108062) , 
10, 0.76992, 1, 0, 0.422305,0.00130288) , 
9, 0.023466, 1, 0, 0.473685,-0.00368533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854753,-0.00606557) , 
5, 0.0601059, 1, 0, 0.493524,-0.00570072)    );
  // itree = 1756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990976,0.00425548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647936,-0.00243421) , 
3, 0.250823, 1, 0, 0.775532,-0.0244737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96963,0.00279916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812018,-0.0026365) , 
6, 0.257831, 1, 0, 0.901158,-0.008955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483815,0.00139868) , 
10, 0.462234, 1, 0, 0.731363,0.00433909) , 
7, 0.149446, 1, 0, 0.751193,-0.00859623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141333,0.000240731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607459,0.00129283) , 
4, 0.110207, 1, 0, 0.231619,0.00905851) , 
17, 0.863112, 1, 0, 0.442227,0.00190222) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990663,0.00493222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886313,0.00460204) , 
3, 0.224943, 1, 0, 0.94026,0.0240953) , 
4, 0.468549, 1, 0, 0.503899,0.00465041)    );
  // itree = 1757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.343326,-0.000847656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238623,0.00258573) , 
16, 0.24733, 1, 0, 0.294141,0.00800282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101081,-0.00112105) , 
10, 0.710738, 1, 0, 0.189214,-0.00435141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490053,-0.00225124) , 
5, 0.0149954, 1, 0, 0.237146,-0.0101099) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971116,-0.0100038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986088,0.00924465) , 
13, 0.592199, 1, 0, 0.979562,0.00223732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866885,-0.00502012) , 
6, 0.268922, 1, 0, 0.946807,-0.00835073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831788,0.00320032) , 
3, 0.432328, 1, 0, 0.919266,0.00381183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825128,-0.00460041) , 
14, 0.148109, 1, 0, 0.902873,-0.00409334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570251,0.00172944) , 
3, 0.648512, 1, 0, 0.79085,0.011087) , 
2, 0.0179887, 1, 0, 0.501108,-4.86651e-06)    );
  // itree = 1758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920583,-0.00667104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994787,0.0108935) , 
1, 0.357685, 1, 0, 0.960821,-0.00437672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341958,0.00283075) , 
11, 0.571518, 1, 0, 0.66609,0.0124664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626871,-0.00362236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239245,-0.00124982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858388,0.00178849) , 
12, 0.117615, 1, 0, 0.44033,-0.00688975) , 
9, 0.0158231, 1, 0, 0.471525,-0.0124919) , 
6, 0.233527, 1, 0, 0.549181,-0.00253031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955374,0.00687918) , 
12, 0.315744, 1, 0, 0.585533,0.000746903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33573,-0.00149516) , 
9, 0.0537985, 1, 0, 0.509831,-0.00644806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456719,0.0013949) , 
11, 1.2673, 1, 0, 0.501461,-0.000435061)    );
  // itree = 1759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998636,0.0174945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987216,-0.00318873) , 
4, 0.413733, 1, 0, 0.993485,0.00269201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885879,-0.00432216) , 
3, 0.183217, 1, 0, 0.955231,-0.00684708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857843,0.00295861) , 
11, 0.651289, 1, 0, 0.929257,0.00234332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525705,-0.00188046) , 
11, 0.968723, 1, 0, 0.820094,-0.0101135) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784223,0.000523665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662002,0.00580624) , 
16, 0.0800178, 1, 0, 0.737025,0.040854) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573084,0.00448162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187763,0.000579236) , 
17, 0.92425, 1, 0, 0.257934,0.0187905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209157,-0.000347326) , 
15, 0.199048, 1, 0, 0.234919,0.00718021) , 
16, 0.110296, 1, 0, 0.341578,0.0143333) , 
10, 0.442161, 1, 0, 0.50263,0.00610534)    );
  // itree = 1760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901105,0.00674281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.957546,0.00111975) , 
4, 0.299844, 1, 0, 0.934325,0.0261552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813646,0.000807214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314749,-0.00105895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291248,-0.00282581) , 
6, 0.24094, 1, 0, 0.300193,-0.0362365) , 
16, 0.130061, 1, 0, 0.48763,-0.0198963) , 
10, 0.297958, 1, 0, 0.655917,-0.0025469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579322,0.00524301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527336,0.00032844) , 
15, 0.0980344, 1, 0, 0.547466,0.0269885) , 
14, 0.0613902, 1, 0, 0.625882,0.00563295) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391812,0.0021867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143589,-0.00121168) , 
11, 0.805692, 1, 0, 0.221852,-0.00461424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483845,-0.00364282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858727,-0.00122509) , 
4, 0.268047, 1, 0, 0.6574,-0.0449589) , 
5, 0.0181055, 1, 0, 0.376356,-0.0189259) , 
15, 0.136145, 1, 0, 0.495465,-0.00720288)    );
  // itree = 1761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97121,-0.00708753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566816,0.0033156) , 
3, 0.252199, 1, 0, 0.720457,0.0248229) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685797,-0.00376708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779054,0.00105531) , 
14, 0.155446, 1, 0, 0.724537,-0.0240367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976366,-0.00211962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92399,0.00468879) , 
11, 0.472211, 1, 0, 0.953021,0.0136059) , 
1, 0.284625, 1, 0, 0.853589,-0.0027755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450833,0.00372912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265573,0.000381823) , 
3, 0.638525, 1, 0, 0.317337,0.0212005) , 
17, 0.712671, 1, 0, 0.570602,0.00987694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184843,-0.000884758) , 
17, 1.17246, 1, 0, 0.467012,0.00297695) , 
9, 0.015644, 1, 0, 0.50511,0.0062608)    );
  // itree = 1762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977304,0.00117039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925958,0.00543757) , 
17, 0.282647, 1, 0, 0.957781,0.0158085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866156,-0.00571541) , 
7, 0.113965, 1, 0, 0.922706,-0.00133442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790595,0.00558712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376659,0.000207977) , 
8, 0.0404837, 1, 0, 0.544702,0.018275) , 
8, 0.0307006, 1, 0, 0.789297,0.00558633) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579516,0.00431401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410943,0.00178693) , 
15, 0.0835119, 1, 0, 0.470344,0.0367199) , 
11, 0.856204, 1, 0, 0.694615,0.0148284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462647,-0.00101232) , 
15, 0.284015, 1, 0, 0.650542,0.0091792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254129,-0.000719718) , 
3, 0.751618, 1, 0, 0.505308,0.000765462)    );
  // itree = 1763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947025,-0.0057987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956211,0.00630334) , 
16, 0.126002, 1, 0, 0.950747,-0.00150054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317826,-0.0025484) , 
3, 0.442317, 1, 0, 0.65996,-0.0188814) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908951,0.0040282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938377,-0.00395721) , 
1, 0.277961, 1, 0, 0.926022,0.00349845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514815,-0.00230878) , 
8, 0.0259463, 1, 0, 0.758475,-0.0106399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225524,0.00129771) , 
3, 0.540735, 1, 0, 0.453057,0.00693569) , 
14, 0.0626731, 1, 0, 0.527603,-0.00236611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36072,-0.00134069) , 
11, 1.14873, 1, 0, 0.489378,-0.00855969)    );
  // itree = 1764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738406,-0.0016172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78597,0.00102276) , 
15, 0.00994111, 1, 0, 0.762213,-0.00228052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590803,-0.00232356) , 
6, 0.264423, 1, 0, 0.674554,-0.0194707) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225772,0.00158627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413012,-0.00194524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895633,0.00316603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824625,-0.00154766) , 
15, 0.152399, 1, 0, 0.858273,0.00330944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860771,0.00381571) , 
16, 0.140546, 1, 0, 0.859059,0.0161292) , 
4, 0.149132, 1, 0, 0.700433,-0.00425506) , 
2, 0.0116899, 1, 0, 0.490441,0.00860171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157932,-0.00112813) , 
10, 0.800038, 1, 0, 0.405156,0.00184026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919496,0.00515182) , 
2, 0.0496825, 1, 0, 0.457712,0.00608625) , 
14, 0.0332118, 1, 0, 0.501265,0.000953125)    );
  // itree = 1765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.773141,-0.00331217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979098,0.0036338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96928,-0.011734) , 
4, 0.427098, 1, 0, 0.975114,-0.00152066) , 
12, 0.121631, 1, 0, 0.914288,-0.00894052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607618,0.00284361) , 
10, 0.554814, 1, 0, 0.851036,-0.000911055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612242,-0.00382455) , 
13, 0.800033, 1, 0, 0.785007,-0.0132067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620865,0.00259939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71376,0.00168163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368661,0.00142735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171716,-0.000422068) , 
17, 0.978392, 1, 0, 0.208866,-0.00109055) , 
10, 0.423475, 1, 0, 0.27575,0.00288965) , 
7, 0.183231, 1, 0, 0.343755,0.0126082) , 
11, 0.742972, 1, 0, 0.50517,0.00316485)    );
  // itree = 1766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978877,-0.0055327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613061,0.00459553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538103,0.00241092) , 
9, 0.0097593, 1, 0, 0.567385,0.0448317) , 
3, 0.252199, 1, 0, 0.72189,0.0262491) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219547,-0.000149949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819866,-0.00618918) , 
2, 0.0271179, 1, 0, 0.405563,-0.0164611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951624,0.00533262) , 
0, 0.207431, 1, 0, 0.531221,-0.00710714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444681,0.00287873) , 
14, 0.0965188, 1, 0, 0.508299,0.00356663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3724,-0.0019378) , 
14, 0.122763, 1, 0, 0.476143,-0.00329212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459125,0.00209415) , 
14, 0.164973, 1, 0, 0.473806,0.000510987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565116,-0.0029715) , 
14, 0.22905, 1, 0, 0.482795,-0.0027683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347097,-0.00125138) , 
6, 0.593089, 1, 0, 0.438451,-0.0105243) , 
15, 0.0497619, 1, 0, 0.498889,-0.00268314)    );
  // itree = 1767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47095,0.00361418) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982586,0.0032122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90046,-0.00437177) , 
10, 0.288894, 1, 0, 0.940553,-0.00938568) , 
4, 0.105186, 1, 0, 0.788539,0.00553613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181365,-0.00127986) , 
8, 0.0456657, 1, 0, 0.510363,-0.00507384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40882,-0.00259882) , 
6, 0.454852, 1, 0, 0.488109,-0.0135145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362715,0.000358768) , 
13, 1.06595, 1, 0, 0.447108,-0.00667183) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938049,0.0052838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889932,-0.0029356) , 
5, 0.0392485, 1, 0, 0.913333,0.00567761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965046,0.00923833) , 
2, 0.0571667, 1, 0, 0.931725,0.0196553) , 
4, 0.412651, 1, 0, 0.544167,-0.00139901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369273,0.00181069) , 
9, 0.0634562, 1, 0, 0.512408,0.00440048)    );
  // itree = 1768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978226,-0.00528873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999017,0.0131044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998657,0.0187092) , 
7, 0.0841771, 1, 0, 0.998837,0.00940226) , 
12, 0.176988, 1, 0, 0.98995,0.00324891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952872,0.00683504) , 
3, 0.200273, 1, 0, 0.981699,0.00747666) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208406,-0.00107827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228097,0.000181013) , 
11, 0.969636, 1, 0, 0.218594,-0.00639525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671677,-0.00184089) , 
5, 0.0360635, 1, 0, 0.270743,-0.00966256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721443,-0.00157403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74179,-0.00547414) , 
5, 0.0378382, 1, 0, 0.731042,-0.0504505) , 
12, 0.168843, 1, 0, 0.349117,-0.0166074) , 
3, 0.291829, 1, 0, 0.494191,-0.011084)    );
  // itree = 1769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975915,0.0018908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819432,-0.00464346) , 
10, 0.250912, 1, 0, 0.905728,-0.00892468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503067,0.00262023) , 
11, 0.798334, 1, 0, 0.702822,0.018035) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680689,-0.00520672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326348,0.00122648) , 
13, 0.785135, 1, 0, 0.532928,-0.0129531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455017,-0.00255327) , 
6, 0.394058, 1, 0, 0.506397,-0.0258418) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936995,0.00196999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180903,-0.00199337) , 
3, 0.404376, 1, 0, 0.445075,-0.0169228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376964,0.000646807) , 
6, 0.47593, 1, 0, 0.412207,-0.00257744) , 
9, 0.0339105, 1, 0, 0.439372,-0.0092871) , 
15, 0.0497619, 1, 0, 0.499273,-0.00307487)    );
  // itree = 1770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995174,0.0104067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986322,-0.00918066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929309,-0.0105911) , 
6, 0.132735, 1, 0, 0.957746,-0.0178683) , 
10, 0.28889, 1, 0, 0.975058,-0.00683722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886956,0.00213611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865991,0.00509099) , 
10, 0.400603, 1, 0, 0.875938,0.0370886) , 
3, 0.259823, 1, 0, 0.939131,0.00908394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671858,-0.00426345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491714,0.000252988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390265,-0.000205341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306321,-0.00163884) , 
13, 0.87048, 1, 0, 0.334587,-0.0227091) , 
16, 0.133306, 1, 0, 0.397233,-0.0113876) , 
17, 0.649821, 1, 0, 0.430619,-0.018127) , 
17, 0.562387, 1, 0, 0.640075,-0.00691886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151505,0.00106467) , 
7, 0.619356, 1, 0, 0.502178,-0.000916336)    );
  // itree = 1771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696144,-0.00753533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986531,-0.00408268) , 
2, 0.0364188, 1, 0, 0.845704,-0.0213514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934366,0.00182686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485222,0.00396539) , 
8, 0.0327103, 1, 0, 0.695899,0.0253654) , 
6, 0.186282, 1, 0, 0.767509,0.00303377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356943,-0.00102304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434038,-0.00322805) , 
6, 0.320854, 1, 0, 0.393917,-0.0271934) , 
13, 0.842309, 1, 0, 0.612524,-0.009506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439828,0.00236037) , 
14, 0.0964657, 1, 0, 0.574294,-0.00145153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35664,-0.00308174) , 
14, 0.136663, 1, 0, 0.537329,-0.00762492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609722,0.00283097) , 
14, 0.205011, 1, 0, 0.544753,-0.00397185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611134,0.00328584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352041,0.00042219) , 
15, 0.122389, 1, 0, 0.448177,0.0299887) , 
6, 0.52788, 1, 0, 0.512788,0.00726828)    );
  // itree = 1772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963048,0.00527554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967055,-0.00338742) , 
12, 0.216906, 1, 0, 0.964572,0.00873269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869719,-0.00527351) , 
13, 0.819178, 1, 0, 0.93973,-0.00286082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56979,0.00192157) , 
3, 0.530285, 1, 0, 0.784181,0.015593) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303298,-0.00119636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498541,-0.00443162) , 
5, 0.0177315, 1, 0, 0.364655,-0.043246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821344,0.000172391) , 
2, 0.0284515, 1, 0, 0.529372,-0.0269158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635503,0.00274982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283701,0.00140276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108077,-0.000844256) , 
10, 0.679265, 1, 0, 0.153907,-0.00334946) , 
7, 0.496646, 1, 0, 0.237475,0.00317804) , 
16, 0.231684, 1, 0, 0.352434,-0.00867397) , 
16, 0.119352, 1, 0, 0.499445,-0.000411022)    );
  // itree = 1773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418408,-0.00291255) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894195,-0.00256413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968829,0.00437554) , 
4, 0.438363, 1, 0, 0.932671,-0.00281263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822686,-0.00518918) , 
10, 0.401569, 1, 0, 0.896237,-0.0187664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843738,-0.000141187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.923496,0.0034637) , 
12, 0.193807, 1, 0, 0.883859,0.0128278) , 
15, 0.131084, 1, 0, 0.891534,-0.00676238) , 
4, 0.162321, 1, 0, 0.763805,-0.0192846) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317768,-0.00269011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253703,-0.000596464) , 
14, 0.0516333, 1, 0, 0.284384,-0.0239385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852509,0.00133976) , 
12, 0.134521, 1, 0, 0.426708,-0.0147123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195724,0.000456503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801913,0.00344512) , 
1, 0.176781, 1, 0, 0.295576,0.0151847) , 
9, 0.0326327, 1, 0, 0.343742,0.00420339) , 
8, 0.0241714, 1, 0, 0.499444,-0.00450279)    );
  // itree = 1774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992959,0.00746773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920902,-0.00579224) , 
6, 0.182697, 1, 0, 0.963601,-0.0069746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900184,0.00408171) , 
11, 0.569151, 1, 0, 0.942866,0.00409235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594107,-0.00163052) , 
11, 0.842686, 1, 0, 0.830115,-0.00792173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725508,0.00327582) , 
10, 0.425989, 1, 0, 0.813829,0.000367451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508326,-0.00340505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353049,0.000135145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403218,-0.00167512) , 
14, 0.0915925, 1, 0, 0.378239,-0.0134685) , 
10, 0.558009, 1, 0, 0.429008,-0.0304391) , 
10, 0.482789, 1, 0, 0.667607,-0.0113383) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283223,0.00277074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2106,-0.000166942) , 
13, 0.82591, 1, 0, 0.229725,0.00766093) , 
10, 0.66547, 1, 0, 0.499722,-0.00405395)    );
  // itree = 1775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803397,0.00460955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789205,-0.00359236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254387,-0.000188258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262419,0.000775715) , 
9, 0.0176449, 1, 0, 0.259889,0.0075073) , 
10, 0.349851, 1, 0, 0.394732,-0.00363979) , 
7, 0.131906, 1, 0, 0.456995,0.00437694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833325,-0.00294844) , 
2, 0.036521, 1, 0, 0.540696,-0.00265227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935662,0.00470906) , 
2, 0.0532173, 1, 0, 0.610314,0.00306278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422009,-0.0030341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410204,-0.000282928) , 
15, 0.182088, 1, 0, 0.41663,-0.0272497) , 
15, 0.144894, 1, 0, 0.5588,-0.00499945) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38862,0.000653248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323131,0.00212195) , 
6, 0.34221, 1, 0, 0.344522,0.028177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530063,-0.00206011) , 
14, 0.227457, 1, 0, 0.388184,0.0150338) , 
15, 0.223929, 1, 0, 0.507041,0.00107787)    );
  // itree = 1776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982634,0.00438713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.962621,-0.00957806) , 
9, 0.0189893, 1, 0, 0.972625,-0.00454707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982972,0.011159) , 
10, 0.277349, 1, 0, 0.976652,0.00539794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827333,0.00417209) , 
3, 0.361583, 1, 0, 0.939331,0.0178026) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882691,-0.000880935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791391,0.000536601) , 
16, 0.0629166, 1, 0, 0.837234,0.000110248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502595,-0.0039675) , 
7, 0.188773, 1, 0, 0.724693,-0.0236387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168179,0.000412168) , 
17, 0.7911, 1, 0, 0.390672,-0.00574632) , 
10, 0.44203, 1, 0, 0.609268,0.00363601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387429,-0.00173778) , 
11, 1.0585, 1, 0, 0.576709,-0.0015707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298603,0.00158735) , 
3, 0.839007, 1, 0, 0.505236,0.00647795)    );
  // itree = 1777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961046,-0.012475) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910755,-0.00129362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916671,0.00777165) , 
9, 0.0210643, 1, 0, 0.913888,0.012117) , 
16, 0.0545769, 1, 0, 0.927612,0.00321161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317939,-0.00350466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219431,-0.00133806) , 
6, 0.188095, 1, 0, 0.253266,-0.0251311) , 
8, 0.0330045, 1, 0, 0.576741,-0.0115355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464228,0.00361507) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780782,0.000991649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239996,-0.00142014) , 
16, 0.142869, 1, 0, 0.467812,-0.00670708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468498,0.00127333) , 
11, 1.01488, 1, 0, 0.468038,0.00286889) , 
6, 0.34904, 1, 0, 0.467198,0.0116771) , 
6, 0.28781, 1, 0, 0.521195,0.000234784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357004,-0.000873739) , 
6, 0.733947, 1, 0, 0.48926,-0.00374882)    );
  // itree = 1778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863327,-0.00489949) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196213,-7.0612e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765593,0.00347553) , 
5, 0.0175771, 1, 0, 0.413062,0.0175637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437391,-0.00180348) , 
14, 0.103332, 1, 0, 0.421451,0.003317) , 
10, 0.231953, 1, 0, 0.501481,-0.00327075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958777,-0.000586248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668723,-0.00451131) , 
11, 0.770302, 1, 0, 0.855903,-0.030755) , 
5, 0.0389756, 1, 0, 0.606886,-0.0114446) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850775,0.00111093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581839,-0.00319589) , 
15, 0.232833, 1, 0, 0.732853,-0.0151712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260353,0.000888656) , 
3, 0.536802, 1, 0, 0.403216,0.00632983) , 
9, 0.036912, 1, 0, 0.503119,-0.00238882)    );
  // itree = 1779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984882,0.0039084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983721,0.0122328) , 
17, 0.355253, 1, 0, 0.984384,0.0131998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884819,-0.00449952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983527,0.00589051) , 
2, 0.0380589, 1, 0, 0.919935,-0.0111149) , 
15, 0.0744372, 1, 0, 0.949853,0.00017225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283596,-0.00196376) , 
3, 0.422198, 1, 0, 0.736903,-0.0096497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560256,0.000731077) , 
6, 0.429358, 1, 0, 0.689685,-0.00385555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493189,-0.00178399) , 
13, 1.16928, 1, 0, 0.657294,-0.00935252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210528,0.00075615) , 
17, 1.06747, 1, 0, 0.497591,-0.00154548)    );
  // itree = 1780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164542,0.00047921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659778,0.00325316) , 
0, 0.0672273, 1, 0, 0.3751,0.0227739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260011,-0.00124265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253989,0.000408616) , 
6, 0.43554, 1, 0, 0.256715,-0.00272013) , 
9, 0.035199, 1, 0, 0.298275,0.00622977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862957,0.00350524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992615,0.0136199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967288,-0.0053559) , 
1, 0.459795, 1, 0, 0.97989,0.0039382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857867,-0.004437) , 
6, 0.275356, 1, 0, 0.938803,-0.00918485) , 
12, 0.122954, 1, 0, 0.923151,-0.0001662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628887,-0.00229769) , 
13, 1.05775, 1, 0, 0.822471,-0.0172405) , 
2, 0.0247858, 1, 0, 0.492289,-0.00245699)    );
  // itree = 1781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975716,-0.00826065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952758,0.0077477) , 
6, 0.174979, 1, 0, 0.967357,0.00427226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361937,-0.000976066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865308,-0.0108384) , 
4, 0.157541, 1, 0, 0.549682,-0.0302131) , 
11, 0.513435, 1, 0, 0.758305,-0.0129881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189986,0.000181229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947657,-0.000734235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822409,0.00413148) , 
3, 0.374917, 1, 0, 0.870752,0.0336679) , 
5, 0.0194389, 1, 0, 0.471213,0.0154786) , 
13, 0.733446, 1, 0, 0.60168,0.00254205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245202,-0.000413728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659015,-0.00322304) , 
4, 0.252296, 1, 0, 0.326116,-0.0190767) , 
11, 0.968632, 1, 0, 0.495118,-0.00581809)    );
  // itree = 1782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484286,-0.000794529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881832,0.00490192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96106,0.00584766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871508,-0.00198017) , 
7, 0.0619592, 1, 0, 0.921106,0.00765578) , 
12, 0.175963, 1, 0, 0.906323,0.0236757) , 
2, 0.0243877, 1, 0, 0.797324,0.0136947) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914457,-0.0010594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771043,-0.00424623) , 
13, 0.525981, 1, 0, 0.842987,-0.0158182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72866,0.00173401) , 
6, 0.295096, 1, 0, 0.803283,-0.00340622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0964475,-0.0010832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437131,-0.00211627) , 
4, 0.0774229, 1, 0, 0.203816,-0.02644) , 
3, 0.53687, 1, 0, 0.377027,-0.0197846) , 
16, 0.110296, 1, 0, 0.505957,-0.00951448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535895,-0.00172629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443179,0.0028189) , 
9, 0.0330813, 1, 0, 0.46542,0.0264028) , 
14, 0.150117, 1, 0, 0.497519,-0.00203742)    );
  // itree = 1783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403818,-0.00221892) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973054,-0.00348823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874582,0.00452901) , 
6, 0.293399, 1, 0, 0.928661,0.0226183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863373,-0.00493878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833324,-6.05616e-05) , 
10, 0.407598, 1, 0, 0.844858,-0.0149692) , 
14, 0.0524994, 1, 0, 0.880144,0.000857301) , 
4, 0.174882, 1, 0, 0.743669,-0.012778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667989,0.0020441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710786,0.0068659) , 
16, 0.144486, 1, 0, 0.688882,0.0637117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703159,-0.00149566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522813,0.00301484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226005,-0.000141693) , 
7, 0.516925, 1, 0, 0.346509,0.0162136) , 
7, 0.360108, 1, 0, 0.44883,0.00653386) , 
16, 0.170456, 1, 0, 0.517577,0.0229086) , 
16, 0.12478, 1, 0, 0.631454,0.00493414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0951439,-0.0017001) , 
7, 0.707836, 1, 0, 0.498145,-0.00186535)    );
  // itree = 1784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9925,0.000577474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981427,0.00869921) , 
6, 0.148496, 1, 0, 0.987925,0.00993759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921122,-0.00455476) , 
17, 0.275362, 1, 0, 0.959788,-0.00182801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70742,0.00252195) , 
17, 0.438863, 1, 0, 0.885634,0.00550722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353963,-0.00285256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293778,-0.00119773) , 
6, 0.234728, 1, 0, 0.320132,-0.0224826) , 
8, 0.035836, 1, 0, 0.675347,-0.00490103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505834,-0.00308242) , 
6, 0.476793, 1, 0, 0.65244,-0.010797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.440043,0.000426602) , 
6, 0.593089, 1, 0, 0.585828,-0.00450613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203916,0.00150879) , 
8, 0.0609264, 1, 0, 0.505679,0.00137143)    );
  // itree = 1785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507095,-0.00104121) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952441,-0.00160367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832184,0.00412834) , 
13, 0.687041, 1, 0, 0.903552,0.0188667) , 
5, 0.0126218, 1, 0, 0.794585,0.00888243) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959084,-0.00690208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96988,0.00581286) , 
8, 0.0169889, 1, 0, 0.964031,0.000639469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791599,-0.00267482) , 
6, 0.381244, 1, 0, 0.917151,-0.00880659) , 
2, 0.0340804, 1, 0, 0.860408,-0.000617318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369921,-0.00177393) , 
17, 0.77531, 1, 0, 0.766742,-0.00698767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295075,0.0018959) , 
17, 0.919563, 1, 0, 0.614843,0.00564577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186082,-0.000817382) , 
17, 1.17246, 1, 0, 0.504839,0.000543401)    );
  // itree = 1786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785704,0.00512906) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980551,-0.00170971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999163,0.0189954) , 
9, 0.0243637, 1, 0, 0.990313,0.00560572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852068,-0.00311173) , 
3, 0.262052, 1, 0, 0.943054,-0.00563189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926236,0.00577648) , 
15, 0.182872, 1, 0, 0.937783,0.00713514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386358,-0.00264281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123366,-7.75665e-05) , 
7, 0.609005, 1, 0, 0.202758,-0.0137503) , 
17, 0.595742, 1, 0, 0.491872,-0.00553525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481326,0.00121194) , 
6, 0.552136, 1, 0, 0.490072,-0.000967095) , 
9, 0.0107597, 1, 0, 0.520756,0.00283274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333985,-0.00149283) , 
6, 0.741037, 1, 0, 0.485328,-0.00428609)    );
  // itree = 1787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948913,-0.00750044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777121,0.00150099) , 
13, 0.800334, 1, 0, 0.863847,0.00256519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739468,-0.00429965) , 
15, 0.0601332, 1, 0, 0.832583,-0.0100203) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906988,-0.00226461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615745,0.00344717) , 
11, 0.710753, 1, 0, 0.760149,0.0275686) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453618,-0.00111398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801145,0.00148481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553118,0.00122091) , 
16, 0.0959791, 1, 0, 0.674643,0.017511) , 
14, 0.167011, 1, 0, 0.554338,-0.00265825) , 
15, 0.187852, 1, 0, 0.634816,0.00916136) , 
15, 0.0902109, 1, 0, 0.70953,0.00191478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158368,-0.00201161) , 
7, 0.545827, 1, 0, 0.615938,-0.00285824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228003,0.00108062) , 
8, 0.0548417, 1, 0, 0.50391,0.00294332)    );
  // itree = 1788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537022,-0.00210132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862742,0.00217991) , 
12, 0.0817694, 1, 0, 0.733573,-0.00234565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197108,-0.00131925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553143,-0.00328639) , 
12, 0.0872162, 1, 0, 0.295055,-0.0378844) , 
10, 0.408668, 1, 0, 0.465027,-0.0241093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.16232,0.000416911) , 
10, 0.672332, 1, 0, 0.312054,-0.00877198) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847759,-0.0039919) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981604,0.00641198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932199,-0.0109901) , 
14, 0.0276131, 1, 0, 0.957729,-0.00961635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972529,0.00725496) , 
15, 0.10833, 1, 0, 0.963312,0.00367658) , 
5, 0.0199225, 1, 0, 0.93741,-0.00476318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770717,0.00190983) , 
13, 1.00052, 1, 0, 0.88159,0.00848154) , 
12, 0.139013, 1, 0, 0.503261,-0.00297956)    );
  // itree = 1789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967545,0.000227773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500303,0.00251633) , 
17, 0.419751, 1, 0, 0.684186,0.0159015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93751,-0.00832139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491638,0.00148538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32263,-0.000648962) , 
6, 0.255701, 1, 0, 0.401842,0.00135509) , 
10, 0.311904, 1, 0, 0.582769,-0.00747963) , 
9, 0.0173481, 1, 0, 0.623094,0.00181722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494954,-0.0014855) , 
6, 0.465776, 1, 0, 0.580586,-0.0084757) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464757,0.00128375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138895,-0.000222319) , 
17, 0.910062, 1, 0, 0.241454,0.00457961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.956948,0.00210463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768033,0.00337993) , 
17, 0.461763, 1, 0, 0.853886,0.0393865) , 
4, 0.174668, 1, 0, 0.39684,0.0134108) , 
15, 0.152931, 1, 0, 0.493058,0.00195001)    );
  // itree = 1790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904415,0.00627408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977855,-0.00578111) , 
4, 0.375969, 1, 0, 0.947562,0.00281754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741118,-0.00389713) , 
6, 0.270963, 1, 0, 0.888534,-0.00913653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377703,0.00182553) , 
8, 0.0379476, 1, 0, 0.712404,0.00165762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574244,-0.00453666) , 
14, 0.134701, 1, 0, 0.688708,-0.00588119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529565,0.00197479) , 
15, 0.298944, 1, 0, 0.65949,-0.000249267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379112,0.0031399) , 
13, 0.835898, 1, 0, 0.612102,0.00609886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504755,-0.000866759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432711,0.00155727) , 
15, 0.0692953, 1, 0, 0.472215,0.00416767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271353,-0.00129241) , 
15, 0.141395, 1, 0, 0.367584,-0.0108572) , 
13, 0.907046, 1, 0, 0.493364,-0.00213501)    );
  // itree = 1791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723506,-0.00213796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964639,0.00438995) , 
12, 0.194687, 1, 0, 0.83814,-0.00650266) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932276,0.00452084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833571,-0.00544406) , 
15, 0.0358674, 1, 0, 0.884303,-0.00803147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845035,0.00462774) , 
15, 0.114328, 1, 0, 0.87117,0.00488294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633039,0.00281783) , 
11, 0.884566, 1, 0, 0.784266,0.0231172) , 
7, 0.0930435, 1, 0, 0.803058,0.0127856) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487625,-8.40717e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329489,-0.00284243) , 
10, 0.584415, 1, 0, 0.391356,-0.0288804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136308,-0.000491104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783697,0.00357125) , 
12, 0.119843, 1, 0, 0.224425,0.00180831) , 
10, 0.657011, 1, 0, 0.272976,-0.00711729) , 
10, 0.529344, 1, 0, 0.502235,0.00149065)    );
  // itree = 1792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980576,-0.00617844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998489,0.0146362) , 
9, 0.0215194, 1, 0, 0.989906,0.00171653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980043,0.0079532) , 
6, 0.202782, 1, 0, 0.986736,0.00610013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788116,-0.00692204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700085,-0.00166606) , 
15, 0.0987393, 1, 0, 0.738163,-0.046231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290011,-0.00127931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711066,0.000551531) , 
0, 0.124562, 1, 0, 0.433278,-0.0157141) , 
17, 0.663726, 1, 0, 0.537557,-0.0261517) , 
3, 0.288228, 1, 0, 0.689241,-0.0152605) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511554,-0.00178775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160384,0.000578631) , 
8, 0.0421441, 1, 0, 0.271534,-0.000504453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273471,0.00167988) , 
6, 0.410719, 1, 0, 0.27219,0.00872447) , 
16, 0.19892, 1, 0, 0.499945,-0.00437391)    );
  // itree = 1793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670716,-0.00341777) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978271,0.00104288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921797,0.00416931) , 
11, 0.407518, 1, 0, 0.957216,0.00865846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656392,-0.0025523) , 
16, 0.147373, 1, 0, 0.842964,-0.00230915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339957,0.00175375) , 
11, 0.740314, 1, 0, 0.725625,0.00332778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427007,-0.00271312) , 
13, 0.782641, 1, 0, 0.679627,-0.00216081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43734,0.00339454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442599,0.000519641) , 
13, 0.959014, 1, 0, 0.440417,0.0208562) , 
13, 0.849253, 1, 0, 0.599064,0.00559108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269678,-0.000813253) , 
11, 0.96735, 1, 0, 0.505534,0.000334237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38515,0.0013577) , 
6, 0.733947, 1, 0, 0.481959,0.00615539) , 
9, 0.00407909, 1, 0, 0.499646,0.0022519)    );
  // itree = 1794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376864,-0.00403781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328963,-0.00042487) , 
14, 0.0575788, 1, 0, 0.354524,-0.0231716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973403,-0.00846814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981906,0.0105997) , 
8, 0.0165957, 1, 0, 0.977389,0.00593477) , 
12, 0.140331, 1, 0, 0.678338,-0.00803986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528132,0.00255067) , 
6, 0.238393, 1, 0, 0.643831,-0.000900205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441498,-0.00403901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.480602,-0.00125323) , 
15, 0.307536, 1, 0, 0.458329,-0.0280458) , 
15, 0.19583, 1, 0, 0.589883,-0.00879477) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450515,0.00111396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487377,0.00321143) , 
6, 0.35365, 1, 0, 0.470374,0.0266588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438752,-0.0012738) , 
6, 0.444759, 1, 0, 0.456911,0.00784963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502297,0.00255937) , 
13, 1.05775, 1, 0, 0.470145,0.0172572) , 
6, 0.303954, 1, 0, 0.537454,0.00261257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.362419,-0.00117593) , 
6, 0.645906, 1, 0, 0.492792,-0.00475192)    );
  // itree = 1795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998375,0.0196488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975557,-0.0031532) , 
9, 0.0278834, 1, 0, 0.98694,0.00342514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791537,-0.00300588) , 
3, 0.270195, 1, 0, 0.917222,-0.00973721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796371,0.00288291) , 
11, 0.722153, 1, 0, 0.895519,-0.000537622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430926,-0.0016385) , 
17, 0.697515, 1, 0, 0.760357,-0.0113185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689402,0.00336836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406858,-0.000876259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247951,-0.00217963) , 
9, 0.014754, 1, 0, 0.314563,-0.02426) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482319,0.00345078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151859,4.52622e-05) , 
10, 0.605682, 1, 0, 0.215159,0.010745) , 
9, 0.0235149, 1, 0, 0.241872,0.00133825) , 
7, 0.344934, 1, 0, 0.30129,0.0074433) , 
7, 0.266539, 1, 0, 0.507098,-0.000967958)    );
  // itree = 1796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745584,-0.00433192) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935201,0.00349739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747693,-0.00506238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332799,-0.000480808) , 
10, 0.529929, 1, 0, 0.540042,-0.0296911) , 
13, 0.583133, 1, 0, 0.717395,-0.0117487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428502,0.00113471) , 
13, 0.901305, 1, 0, 0.614057,-0.000346476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103247,-0.00159724) , 
17, 1.04406, 1, 0, 0.401119,-0.00943203) , 
7, 0.0458078, 1, 0, 0.438115,-0.0136991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97128,0.000308959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885405,0.00358986) , 
6, 0.301929, 1, 0, 0.937906,0.014315) , 
2, 0.0468105, 1, 0, 0.524208,-0.00887349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448078,0.00122058) , 
11, 1.29285, 1, 0, 0.512604,-0.0032694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431658,0.00296811) , 
15, 0.373214, 1, 0, 0.50597,0.000557748)    );
  // itree = 1797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756748,-0.00213172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738607,3.95146e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541848,0.00315608) , 
6, 0.198675, 1, 0, 0.665079,0.0115615) , 
9, 0.00900143, 1, 0, 0.691736,0.00457158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980865,0.0011391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360369,-0.00189671) , 
16, 0.111841, 1, 0, 0.561859,-0.0136029) , 
9, 0.0286925, 1, 0, 0.626031,-0.00462295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368439,-0.00412506) , 
6, 0.289506, 1, 0, 0.577071,-0.0142037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691532,0.00171992) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560987,1.64786e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392167,-0.00216128) , 
8, 0.0294158, 1, 0, 0.471944,-0.0222381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278476,0.000594281) , 
8, 0.0394735, 1, 0, 0.36846,-0.00481507) , 
8, 0.0161559, 1, 0, 0.424144,0.00090226) , 
6, 0.343367, 1, 0, 0.496633,-0.00625818)    );
  // itree = 1798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988882,0.00878542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698239,-0.003759) , 
7, 0.186087, 1, 0, 0.824844,-0.00863477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575445,0.00248489) , 
13, 0.88138, 1, 0, 0.711307,0.0125677) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267004,-0.00319372) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937495,0.000170351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783572,-0.00310034) , 
10, 0.38575, 1, 0, 0.867241,-0.0163809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963159,0.00540441) , 
1, 0.448927, 1, 0, 0.898429,-0.00497268) , 
12, 0.0950115, 1, 0, 0.686171,-0.0206402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817476,0.00433523) , 
14, 0.195539, 1, 0, 0.707561,-0.0121052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206752,0.000827499) , 
8, 0.0444022, 1, 0, 0.531415,-0.00378629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163029,-0.000748791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578309,-0.00249099) , 
4, 0.134631, 1, 0, 0.284569,-0.0267165) , 
11, 0.968172, 1, 0, 0.432079,-0.0130139) , 
15, 0.0497619, 1, 0, 0.491168,-0.0076004)    );
  // itree = 1799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975848,-0.014168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993252,0.0155692) , 
17, 0.263708, 1, 0, 0.983102,-0.000359024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790992,-0.00340856) , 
3, 0.298647, 1, 0, 0.920428,-0.0131337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602068,0.00113011) , 
17, 0.560426, 1, 0, 0.842745,-0.00497356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322156,-0.00391187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858951,-0.00170118) , 
2, 0.0199238, 1, 0, 0.508553,-0.0400881) , 
16, 0.16771, 1, 0, 0.73711,-0.0160729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152918,0.000257894) , 
7, 0.570271, 1, 0, 0.558996,-0.0101185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223128,-6.95011e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.70135,0.00201313) , 
2, 0.0216876, 1, 0, 0.352846,0.0108377) , 
11, 1.02924, 1, 0, 0.491913,-0.00329915)    );
  // itree = 1800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128461,-0.00194719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.313501,0.00143361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14297,0.000540411) , 
16, 0.243823, 1, 0, 0.212168,0.0157438) , 
12, 0.0460379, 1, 0, 0.190623,0.00564395) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999157,0.0164506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98566,-0.0206596) , 
10, 0.320556, 1, 0, 0.992415,-0.00203184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917262,-0.00783604) , 
3, 0.175463, 1, 0, 0.963654,-0.0124632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922068,0.00486163) , 
8, 0.0255839, 1, 0, 0.952377,-0.00223946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765689,-0.00268827) , 
6, 0.36972, 1, 0, 0.91719,-0.0084644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755912,0.00184652) , 
13, 0.959708, 1, 0, 0.887924,-0.00171846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565098,-0.00210249) , 
11, 0.974899, 1, 0, 0.791449,-0.0158708) , 
4, 0.0939201, 1, 0, 0.494401,-0.00523389)    );
  // itree = 1801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193028,0.00103139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537734,-0.00217561) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973309,-0.00365375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845246,0.00330542) , 
13, 0.882653, 1, 0, 0.916663,0.0156692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840488,-0.00190716) , 
16, 0.126266, 1, 0, 0.886473,0.00240244) , 
12, 0.112294, 1, 0, 0.815558,-0.0064342) , 
12, 0.0768694, 1, 0, 0.596773,0.000952212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47594,-0.00199499) , 
9, 0.0434787, 1, 0, 0.574553,-0.00456991) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296789,0.00259156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833792,-0.00106073) , 
4, 0.236262, 1, 0, 0.41841,0.0283129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359772,-0.000205396) , 
15, 0.322143, 1, 0, 0.39727,0.0169559) , 
15, 0.174779, 1, 0, 0.501137,0.00434433)    );
  // itree = 1802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857939,0.00182262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571078,0.00515537) , 
13, 0.858852, 1, 0, 0.748909,0.0234356) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899287,-0.0044853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930662,0.00269658) , 
9, 0.0332428, 1, 0, 0.916687,-0.00097902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621168,0.00329904) , 
11, 0.674057, 1, 0, 0.817259,0.0153033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178213,-0.00118523) , 
10, 0.592127, 1, 0, 0.567397,0.00343823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336513,-0.00186489) , 
13, 0.978178, 1, 0, 0.503749,-0.0058289) , 
15, 0.0393075, 1, 0, 0.564952,0.00147687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.443413,0.00275943) , 
15, 0.250592, 1, 0, 0.549747,0.00610793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346699,-0.00186121) , 
15, 0.32771, 1, 0, 0.518332,0.000830512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389704,-0.00110106) , 
13, 1.21681, 1, 0, 0.491582,-0.00439184)    );
  // itree = 1803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860012,-0.00364923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963232,-0.00399953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929819,0.0028131) , 
10, 0.360366, 1, 0, 0.945697,0.0029013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596697,0.00277466) , 
11, 0.622825, 1, 0, 0.780737,0.0252081) , 
9, 0.0179328, 1, 0, 0.801094,0.0121753) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766435,0.00169746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781361,-0.00417632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434953,-0.000237437) , 
10, 0.385393, 1, 0, 0.593485,-0.0234135) , 
7, 0.236743, 1, 0, 0.642422,-0.0104216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373292,-0.00388139) , 
14, 0.0890516, 1, 0, 0.558902,-0.0295882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296577,1.79954e-05) , 
15, 0.239315, 1, 0, 0.481165,-0.0207254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135457,0.000527405) , 
7, 0.641211, 1, 0, 0.334382,-0.00887775) , 
8, 0.0203088, 1, 0, 0.499605,-0.00142466)    );
  // itree = 1804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986086,0.00211175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951347,0.00787553) , 
11, 0.414868, 1, 0, 0.973879,0.0109063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893079,-0.00510972) , 
13, 0.715357, 1, 0, 0.951862,0.00144574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614628,-0.000958755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236097,0.00252419) , 
13, 0.627566, 1, 0, 0.322454,0.0230818) , 
11, 0.556803, 1, 0, 0.618876,0.0128922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23055,0.00028543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777238,-0.00156316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735058,0.00125762) , 
10, 0.404202, 1, 0, 0.753799,0.00194588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521171,-0.00211189) , 
8, 0.0305985, 1, 0, 0.6433,-0.0218173) , 
5, 0.0180318, 1, 0, 0.42127,-0.00748967) , 
6, 0.3111, 1, 0, 0.504719,0.00111758)    );
  // itree = 1805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880799,-0.00605111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843102,0.00396085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800134,0.000676165) , 
16, 0.0656831, 1, 0, 0.815626,0.0179326) , 
16, 0.0471798, 1, 0, 0.833209,0.00384993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757232,-0.00339521) , 
7, 0.114586, 1, 0, 0.816593,-0.00537661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834537,0.00487969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794592,-0.000274884) , 
7, 0.245018, 1, 0, 0.815092,0.0256745) , 
7, 0.17188, 1, 0, 0.816147,0.00385412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593898,-0.00200098) , 
8, 0.0378403, 1, 0, 0.779493,-0.00263134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45266,-0.00240036) , 
10, 0.631037, 1, 0, 0.709322,-0.0116364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13643,0.000530028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641434,0.00248684) , 
4, 0.0982264, 1, 0, 0.203776,0.0127162) , 
7, 0.438307, 1, 0, 0.499109,-0.00151027)    );
  // itree = 1806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962174,0.000194292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949152,0.00547023) , 
9, 0.0308575, 1, 0, 0.955481,0.0144877) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903797,-0.00806947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982691,0.00624466) , 
2, 0.0371979, 1, 0, 0.942428,-0.013458) , 
8, 0.0100057, 1, 0, 0.948312,-0.000861759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740718,-0.00368389) , 
17, 0.471027, 1, 0, 0.888187,-0.0136644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555664,-4.96245e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560542,0.0041818) , 
8, 0.033192, 1, 0, 0.557948,0.0316779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115745,-0.00101006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325646,0.000635465) , 
6, 0.41307, 1, 0, 0.231323,0.000850577) , 
17, 0.872577, 1, 0, 0.296615,0.00701286) , 
17, 0.649285, 1, 0, 0.495781,5.14022e-05)    );
  // itree = 1807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406198,-0.0023391) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810466,-0.00292113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896456,-0.00115673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971638,0.00707339) , 
0, 0.197531, 1, 0, 0.931812,0.00749417) , 
2, 0.036584, 1, 0, 0.892,-0.0051961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.900508,0.00305978) , 
16, 0.113107, 1, 0, 0.894834,0.00492609) , 
12, 0.0884941, 1, 0, 0.804305,-0.0056543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73436,0.00129136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639046,0.00441053) , 
7, 0.123213, 1, 0, 0.699399,0.0401532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392121,-0.000375309) , 
16, 0.132613, 1, 0, 0.597434,0.0243602) , 
10, 0.462224, 1, 0, 0.710719,0.00792389) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601065,-0.00509675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399541,-0.00246858) , 
16, 0.307319, 1, 0, 0.500811,-0.0449388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230723,0.000145774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127981,-0.000932504) , 
8, 0.0557859, 1, 0, 0.168927,-0.00741076) , 
8, 0.036586, 1, 0, 0.241976,-0.0156708) , 
16, 0.19892, 1, 0, 0.493734,-0.00299829)    );
  // itree = 1808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75515,-0.00532275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616582,-0.000758879) , 
10, 0.383316, 1, 0, 0.67948,-0.0330673) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780621,0.00382843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256788,-0.000987669) , 
16, 0.268734, 1, 0, 0.508911,0.0158692) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491467,0.00178968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145372,-0.000840092) , 
3, 0.57113, 1, 0, 0.209308,-0.00648689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666301,-0.00285891) , 
5, 0.03081, 1, 0, 0.2923,-0.0145604) , 
14, 0.0393119, 1, 0, 0.345724,-0.00705536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279301,0.00147929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387808,-0.000294602) , 
14, 0.208734, 1, 0, 0.316435,0.0140256) , 
14, 0.143212, 1, 0, 0.338487,-0.00184645) , 
7, 0.0974016, 1, 0, 0.3882,-0.00639809) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953609,-0.00362606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958334,0.00381432) , 
15, 0.0525309, 1, 0, 0.956232,0.00388309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840605,0.00298584) , 
6, 0.35513, 1, 0, 0.914355,0.0175133) , 
12, 0.192639, 1, 0, 0.497716,-0.00142111)    );
  // itree = 1809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982359,0.00446279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956683,-0.00651174) , 
15, 0.0646196, 1, 0, 0.970496,-0.00300278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914926,0.00611779) , 
17, 0.488006, 1, 0, 0.952763,0.012931) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866301,-0.00373865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888848,0.0028887) , 
9, 0.0204208, 1, 0, 0.877581,-0.00171059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755899,-0.00382822) , 
9, 0.0416597, 1, 0, 0.835064,-0.0172275) , 
10, 0.311378, 1, 0, 0.895611,-0.00171334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411152,-0.00192435) , 
17, 0.829622, 1, 0, 0.765738,-0.0130304) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626404,0.00401828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381087,0.00132533) , 
9, 0.0407909, 1, 0, 0.444542,0.0365955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822833,-0.00206559) , 
4, 0.387115, 1, 0, 0.523038,0.0241328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126574,-0.000168774) , 
7, 0.535709, 1, 0, 0.300484,0.00924707) , 
10, 0.529344, 1, 0, 0.500572,-0.000333615)    );
  // itree = 1810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984852,0.0060691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935133,-0.00161814) , 
10, 0.401569, 1, 0, 0.960388,0.00169623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571406,-0.00325357) , 
11, 0.627717, 1, 0, 0.833108,-0.018109) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945825,0.00286402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.866048,-0.00319816) , 
9, 0.0188091, 1, 0, 0.907062,-0.00433228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756773,0.00409633) , 
9, 0.0383709, 1, 0, 0.846037,0.0189075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634671,-0.00273614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228609,0.000344541) , 
7, 0.474344, 1, 0, 0.379308,-0.00757044) , 
16, 0.172211, 1, 0, 0.579307,0.00377567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479502,0.00253441) , 
11, 0.992712, 1, 0, 0.552737,0.0153956) , 
16, 0.0727692, 1, 0, 0.616623,0.00776114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179513,-0.000789693) , 
17, 1.17246, 1, 0, 0.502628,0.00223681)    );
  // itree = 1811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858323,0.00197709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920777,-0.00382561) , 
5, 0.0390688, 1, 0, 0.890925,-0.00183856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696295,-0.00482922) , 
9, 0.0427724, 1, 0, 0.82663,-0.0195) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905613,0.00332373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241273,-0.00145193) , 
7, 0.442404, 1, 0, 0.547214,-0.00171022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343792,0.00215847) , 
11, 0.957152, 1, 0, 0.444824,0.0184898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152481,0.000423994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725617,0.000810108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388699,-0.00191917) , 
8, 0.0310763, 1, 0, 0.495027,-0.0259218) , 
5, 0.0116967, 1, 0, 0.29026,-0.00682381) , 
14, 0.080512, 1, 0, 0.354769,0.00374116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908249,0.0061801) , 
2, 0.0425119, 1, 0, 0.414138,0.00969197) , 
8, 0.016247, 1, 0, 0.502472,0.00344058)    );
  // itree = 1812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471572,-0.00214737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541389,-0.000328733) , 
9, 0.0322791, 1, 0, 0.505695,-0.0133452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998973,0.0149613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980767,-0.00742302) , 
10, 0.265377, 1, 0, 0.989351,-0.000240663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946235,0.00534191) , 
3, 0.208722, 1, 0, 0.974121,0.00898887) , 
1, 0.199157, 1, 0, 0.817731,0.00153238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642563,1.66005e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408422,-0.00206067) , 
10, 0.39817, 1, 0, 0.489052,-0.0285018) , 
6, 0.40443, 1, 0, 0.659587,-0.0129185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496864,0.00244557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119621,-0.00072593) , 
16, 0.22518, 1, 0, 0.227469,0.0053126) , 
10, 0.676893, 1, 0, 0.496987,-0.00605842)    );
  // itree = 1813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576523,0.000531346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966582,0.00971939) , 
2, 0.0389756, 1, 0, 0.719694,0.0242184) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982136,-0.0172235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976027,0.00629134) , 
6, 0.168307, 1, 0, 0.979459,0.00183122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746503,-0.00103396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555201,-0.0032824) , 
15, 0.1207, 1, 0, 0.653938,-0.0367482) , 
11, 0.505862, 1, 0, 0.805501,-0.0187855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614465,0.00102856) , 
10, 0.554053, 1, 0, 0.750756,-0.00932627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41733,-0.00333782) , 
8, 0.0319949, 1, 0, 0.682555,-0.0185382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298509,0.00149899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105231,-0.000738719) , 
16, 0.255534, 1, 0, 0.175723,0.00435278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662564,-0.0017757) , 
12, 0.115304, 1, 0, 0.244354,-0.00119499) , 
8, 0.0379476, 1, 0, 0.461054,-0.00977158) , 
15, 0.0218473, 1, 0, 0.495972,-0.0051827)    );
  // itree = 1814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987005,-0.00668208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990139,0.00725665) , 
15, 0.105224, 1, 0, 0.988456,0.00152187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8764,-0.00596153) , 
6, 0.190886, 1, 0, 0.950364,-0.0112758) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779507,-0.00231545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.288108,0.00316333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887445,0.00073137) , 
12, 0.124135, 1, 0, 0.528833,0.0301432) , 
13, 0.584179, 1, 0, 0.601217,0.0174429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410379,-0.00123156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160622,0.000692811) , 
16, 0.29146, 1, 0, 0.265554,-0.00344642) , 
11, 0.841798, 1, 0, 0.42877,0.00671103) , 
11, 0.446739, 1, 0, 0.54463,0.00271568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392309,-0.000944559) , 
13, 1.14589, 1, 0, 0.506035,-0.00308248)    );
  // itree = 1815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965258,0.00559097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825001,-0.00541723) , 
13, 0.66771, 1, 0, 0.899429,-0.00721089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661086,0.00158282) , 
13, 0.896138, 1, 0, 0.799271,0.00650848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282422,-0.00141688) , 
8, 0.0426583, 1, 0, 0.614935,-0.00367111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41225,-0.0032795) , 
15, 0.117427, 1, 0, 0.587486,-0.0100661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785554,0.00500779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278794,-0.000398034) , 
16, 0.132995, 1, 0, 0.461378,0.0191832) , 
14, 0.0743665, 1, 0, 0.55571,-0.00269608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530282,-0.00414578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655492,-0.00285549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267933,-0.000275244) , 
16, 0.0943867, 1, 0, 0.358781,-0.0126976) , 
9, 0.0301937, 1, 0, 0.391745,-0.0198313) , 
14, 0.102506, 1, 0, 0.487753,-0.00979793)    );
  // itree = 1816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916977,-0.00562869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932074,0.00398676) , 
8, 0.0145803, 1, 0, 0.925214,0.000376337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857828,-0.00533454) , 
8, 0.0297438, 1, 0, 0.905535,-0.00906561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251701,0.00258132) , 
17, 0.725996, 1, 0, 0.588454,0.0128159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485337,-0.00189668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387313,-0.00046706) , 
15, 0.0795073, 1, 0, 0.420545,-0.0188084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186338,0.00029672) , 
10, 0.67407, 1, 0, 0.293308,-0.00610872) , 
13, 0.823687, 1, 0, 0.414108,0.00163689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920506,0.00452706) , 
2, 0.0431881, 1, 0, 0.451927,0.003921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952214,0.002629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754779,-0.00542503) , 
10, 0.380624, 1, 0, 0.858855,-0.0288519) , 
5, 0.0539662, 1, 0, 0.495619,0.000402168)    );
  // itree = 1817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60976,-0.00018821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515622,-0.00318703) , 
6, 0.264423, 1, 0, 0.562945,-0.0271957) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153304,0.00111549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419147,-0.000533315) , 
2, 0.0117525, 1, 0, 0.237617,0.00680996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857955,0.00410608) , 
1, 0.181087, 1, 0, 0.360708,0.0153498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881251,-0.00260641) , 
1, 0.329842, 1, 0, 0.43825,0.0101652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50748,-0.00180947) , 
14, 0.209814, 1, 0, 0.446514,0.00607326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2796,-0.000838532) , 
9, 0.066457, 1, 0, 0.404378,0.000843194) , 
9, 0.0179328, 1, 0, 0.433547,-0.00431472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918265,0.00341925) , 
12, 0.283181, 1, 0, 0.477203,-0.00169635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839626,-0.0079731) , 
5, 0.0601755, 1, 0, 0.49606,-0.00464707)    );
  // itree = 1818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959427,-0.00524698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992262,0.0128232) , 
4, 0.462188, 1, 0, 0.973931,-0.00142691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980534,0.00310875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941817,0.00693793) , 
10, 0.226345, 1, 0, 0.959234,0.0162095) , 
8, 0.0172044, 1, 0, 0.966885,0.00702795) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.307689,-0.00130876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130334,0.000234911) , 
10, 0.631031, 1, 0, 0.184017,-0.0054236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849487,-0.000144559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656521,-0.00318217) , 
17, 0.620039, 1, 0, 0.747528,-0.0326382) , 
12, 0.119867, 1, 0, 0.319449,-0.0119642) , 
3, 0.339564, 1, 0, 0.508295,-0.00642453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427235,0.000868565) , 
11, 1.29285, 1, 0, 0.496352,-0.00260183)    );
  // itree = 1819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304849,-0.00401371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314364,-0.000638439) , 
6, 0.24783, 1, 0, 0.311536,-0.0214783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682534,-0.00190751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192905,0.000505977) , 
17, 0.703476, 1, 0, 0.28158,0.00241057) , 
14, 0.0836827, 1, 0, 0.293113,-0.00678683) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978374,0.000386242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929428,0.00528703) , 
13, 0.811673, 1, 0, 0.959883,0.0139621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955297,0.000623065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846293,-0.00502239) , 
10, 0.419019, 1, 0, 0.90379,-0.0194948) , 
9, 0.0298419, 1, 0, 0.934044,-0.00144948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759265,0.00251998) , 
17, 0.739391, 1, 0, 0.892786,0.0111794) , 
4, 0.232269, 1, 0, 0.505618,-0.000420191)    );
  // itree = 1820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.84309,0.00236621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730227,-0.00220693) , 
16, 0.105105, 1, 0, 0.785444,-0.00377494) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400868,0.000420666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352313,0.00397557) , 
14, 0.0197717, 1, 0, 0.374331,0.0304412) , 
16, 0.198534, 1, 0, 0.576884,0.013583) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95581,0.00485166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472368,-0.00273771) , 
7, 0.172548, 1, 0, 0.661236,-0.0115633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501477,0.00241664) , 
9, 0.0478045, 1, 0, 0.589794,0.00773055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421154,-0.00184437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183285,-0.000466647) , 
17, 0.968128, 1, 0, 0.241515,-0.0151718) , 
11, 0.814479, 1, 0, 0.370119,-0.00671493) , 
14, 0.0504199, 1, 0, 0.423342,-0.00149008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851801,-0.00468584) , 
12, 0.22684, 1, 0, 0.449925,-0.00389141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8828,0.000194248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932155,0.00464108) , 
2, 0.0344067, 1, 0, 0.908039,0.0173981) , 
12, 0.269043, 1, 0, 0.498154,-0.0016501)    );
  // itree = 1821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595356,-0.00288917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758488,-0.00108082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385374,0.00197862) , 
16, 0.145724, 1, 0, 0.516173,0.0118778) , 
9, 0.0144937, 1, 0, 0.545155,-0.0044459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941706,0.005143) , 
5, 0.0419737, 1, 0, 0.654882,0.00467227) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.830006,-0.000638083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298775,-0.00298098) , 
10, 0.456804, 1, 0, 0.4815,-0.0324506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20357,0.000583379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486829,-0.00201276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868656,0.00106153) , 
4, 0.289524, 1, 0, 0.62241,-0.0237674) , 
5, 0.0157218, 1, 0, 0.389436,-0.00577817) , 
9, 0.0408744, 1, 0, 0.424649,-0.01598) , 
9, 0.027377, 1, 0, 0.500627,-0.00916462)    );
  // itree = 1822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794694,0.000882274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42865,0.00222031) , 
11, 0.725872, 1, 0, 0.571548,0.0287026) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996151,0.00418435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943156,-0.00833894) , 
3, 0.144114, 1, 0, 0.972269,-0.00925517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.940926,0.00460908) , 
13, 0.767939, 1, 0, 0.959629,0.00512541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730285,-0.0029492) , 
17, 0.595301, 1, 0, 0.90759,-0.00702553) , 
4, 0.28176, 1, 0, 0.752793,0.00943258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543323,-0.00207428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175963,-0.000244304) , 
16, 0.177009, 1, 0, 0.248222,-0.0105685) , 
8, 0.0422911, 1, 0, 0.551785,0.00146466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301671,-0.00175953) , 
9, 0.062247, 1, 0, 0.503646,-0.00470856)    );
  // itree = 1823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.912829,-0.00602087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959817,0.00635264) , 
16, 0.0543687, 1, 0, 0.93654,-0.000643467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592085,-0.00427749) , 
13, 0.883437, 1, 0, 0.793714,-0.0314651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446093,0.000261971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847352,0.00389481) , 
12, 0.0881968, 1, 0, 0.656152,0.0282077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938604,-0.00152793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814065,-0.00490927) , 
10, 0.331079, 1, 0, 0.879421,-0.025925) , 
4, 0.281268, 1, 0, 0.748148,0.00590294) , 
16, 0.0840262, 1, 0, 0.76523,-0.00810613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620696,0.00501211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395277,0.000612002) , 
15, 0.27369, 1, 0, 0.506146,0.0441656) , 
10, 0.582278, 1, 0, 0.689276,0.007218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178456,0.000131338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127393,-0.00147267) , 
8, 0.054591, 1, 0, 0.145135,-0.0135513) , 
7, 0.535709, 1, 0, 0.499446,-2.76214e-05)    );
  // itree = 1824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986221,-0.00521126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987885,0.0106793) , 
6, 0.146736, 1, 0, 0.987098,0.00665373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837268,-0.00224604) , 
6, 0.258057, 1, 0, 0.933429,-0.00294861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911838,-0.0110667) , 
12, 0.235258, 1, 0, 0.928272,-0.0120027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968237,0.00630516) , 
12, 0.315744, 1, 0, 0.935641,-0.00510441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707438,0.00442644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660936,0.000433269) , 
11, 0.896557, 1, 0, 0.690814,0.0412311) , 
17, 0.531048, 1, 0, 0.847799,0.0115204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122206,-0.000231574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491818,-0.0019666) , 
4, 0.0855794, 1, 0, 0.223847,-0.0158573) , 
17, 0.820722, 1, 0, 0.489098,-0.00421865)    );
  // itree = 1825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895839,-0.00220897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.891135,0.00587322) , 
10, 0.30593, 1, 0, 0.893433,0.0183204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980592,0.00313211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61279,-0.00225813) , 
6, 0.343011, 1, 0, 0.797646,-0.019953) , 
16, 0.0704361, 1, 0, 0.83405,-0.005407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698616,0.00222129) , 
8, 0.0385095, 1, 0, 0.81258,0.00106833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750122,-0.00269373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658426,0.000362517) , 
8, 0.00605591, 1, 0, 0.699897,-0.0112436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384613,-0.00219909) , 
8, 0.0257392, 1, 0, 0.542131,-0.02938) , 
10, 0.487619, 1, 0, 0.696855,-0.0119604) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67324,-0.000470975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218801,0.00293177) , 
10, 0.570538, 1, 0, 0.359714,0.0293464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155744,-0.000897907) , 
16, 0.367839, 1, 0, 0.277781,0.0132019) , 
16, 0.199572, 1, 0, 0.508595,-0.000656808)    );
  // itree = 1826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825321,0.000325833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575812,-0.00352156) , 
15, 0.164197, 1, 0, 0.719279,-0.016755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249819,-0.00286777) , 
11, 0.770311, 1, 0, 0.47014,-0.0321962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481457,0.000698498) , 
15, 0.334968, 1, 0, 0.472358,-0.0239756) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995824,0.00402039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960928,0.00455958) , 
3, 0.178796, 1, 0, 0.978538,0.0103859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761233,-0.00308029) , 
17, 0.387704, 1, 0, 0.904784,-0.00827734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918571,0.00487526) , 
16, 0.105221, 1, 0, 0.909521,0.00707408) , 
2, 0.0335331, 1, 0, 0.650952,-0.0112909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192316,0.000821648) , 
8, 0.0531266, 1, 0, 0.515614,-0.00439589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435176,0.0010381) , 
11, 1.2673, 1, 0, 0.502834,2.1528e-05)    );
  // itree = 1827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222455,0.000627864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986866,-0.00258014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989522,0.00787872) , 
11, 0.368814, 1, 0, 0.988143,0.00469991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807843,-0.00438349) , 
11, 0.493132, 1, 0, 0.904857,-0.0128201) , 
5, 0.0156892, 1, 0, 0.642421,-0.00504472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337301,-0.00252569) , 
13, 1.01677, 1, 0, 0.571504,-0.0121852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434655,0.00439705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424304,-0.000341964) , 
14, 0.14033, 1, 0, 0.428389,0.017366) , 
14, 0.114438, 1, 0, 0.532699,-0.00417253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551086,-0.00396511) , 
14, 0.224479, 1, 0, 0.534252,-0.00733344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406744,0.00188238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43475,-0.000298023) , 
11, 1.15689, 1, 0, 0.421138,0.0117609) , 
6, 0.543921, 1, 0, 0.497395,-0.00111173)    );
  // itree = 1828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927859,0.00256617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981809,0.000165169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861021,-0.00814594) , 
13, 0.734055, 1, 0, 0.935831,-0.0207755) , 
0, 0.141555, 1, 0, 0.933428,-0.0102733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646437,0.00204507) , 
17, 0.657739, 1, 0, 0.847707,0.00459722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707836,9.117e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398761,-0.00304736) , 
6, 0.340767, 1, 0, 0.507034,-0.0395631) , 
10, 0.416883, 1, 0, 0.699848,-0.0145692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14465,-0.000419074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821087,0.00386289) , 
4, 0.179867, 1, 0, 0.251792,0.00407583) , 
10, 0.60746, 1, 0, 0.490245,-0.00584698)    );
  // itree = 1829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990188,0.00584888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803844,-0.00399619) , 
11, 0.598566, 1, 0, 0.893017,-0.0169468) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894054,-0.000250661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400086,0.00316609) , 
11, 0.576093, 1, 0, 0.568391,0.0274967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392667,-0.00162553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29654,0.000833413) , 
3, 0.70095, 1, 0, 0.317958,0.00646791) , 
11, 0.871488, 1, 0, 0.40807,0.0140346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70695,-0.00208806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519571,0.00120952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201429,-0.000307148) , 
8, 0.0349632, 1, 0, 0.289326,0.00196358) , 
8, 0.016247, 1, 0, 0.363498,-0.00314077) , 
15, 0.199048, 1, 0, 0.388265,0.00640297) , 
10, 0.244516, 1, 0, 0.448763,0.00360433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980411,0.00119946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767151,-0.00584186) , 
11, 0.470129, 1, 0, 0.880152,-0.031244) , 
4, 0.475222, 1, 0, 0.499877,-0.000524757)    );
  // itree = 1830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96483,0.00492228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267627,-0.00243955) , 
10, 0.349849, 1, 0, 0.658877,-0.00526541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451388,0.00206121) , 
15, 0.114018, 1, 0, 0.598967,0.00346283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332637,-0.00211242) , 
13, 0.926458, 1, 0, 0.509869,-0.00850801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394094,0.00172827) , 
14, 0.0972911, 1, 0, 0.480599,-0.000764266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303644,-0.00327811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52567,-0.000485624) , 
14, 0.176509, 1, 0, 0.419447,-0.0267069) , 
14, 0.134105, 1, 0, 0.462936,-0.00825769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373324,0.00113603) , 
11, 1.12396, 1, 0, 0.439178,0.000268229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960503,-0.00419202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718906,-0.00446197) , 
3, 0.321388, 1, 0, 0.851516,-0.0367042) , 
12, 0.227664, 1, 0, 0.504791,-0.00561502)    );
  // itree = 1831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187017,-0.00122697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158007,0.00152149) , 
11, 0.914888, 1, 0, 0.171085,0.00519128) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.940478,-0.00159775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604404,-0.00275231) , 
11, 0.681911, 1, 0, 0.77226,-0.0292947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881962,-0.00589022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972933,-0.0029688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872258,0.00618568) , 
6, 0.337668, 1, 0, 0.933177,0.0319525) , 
14, 0.0197046, 1, 0, 0.918524,0.0126208) , 
2, 0.0361053, 1, 0, 0.849711,-0.00709918) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731457,0.00136823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314483,-0.00134973) , 
7, 0.217502, 1, 0, 0.452492,-0.0143926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654846,-0.00450751) , 
5, 0.0359775, 1, 0, 0.514316,-0.0347084) , 
10, 0.517672, 1, 0, 0.716906,-0.0180315) , 
12, 0.0707953, 1, 0, 0.495787,-0.00862367)    );
  // itree = 1832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999297,0.0186143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929827,-0.00393831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861766,-0.00898574) , 
16, 0.0702179, 1, 0, 0.898848,-0.0311394) , 
3, 0.140412, 1, 0, 0.936684,-0.0181132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858163,-0.00159438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772069,0.00405024) , 
13, 0.50068, 1, 0, 0.812796,0.0144119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128391,-0.000695953) , 
3, 0.504189, 1, 0, 0.379211,-0.000759268) , 
16, 0.1279, 1, 0, 0.568483,-0.00665121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483128,0.00212715) , 
6, 0.417297, 1, 0, 0.554892,-0.000950538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366784,-0.00168664) , 
6, 0.560069, 1, 0, 0.517053,-0.00709272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434864,0.00069632) , 
13, 1.21681, 1, 0, 0.500634,-0.00263679)    );
  // itree = 1833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977603,-0.0059175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980461,0.0101662) , 
13, 0.700123, 1, 0, 0.978908,0.00874005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934907,-0.00399085) , 
15, 0.0961059, 1, 0, 0.958763,-0.00176002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838403,-0.00348995) , 
17, 0.474727, 1, 0, 0.929258,-0.0087168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577801,0.0017919) , 
17, 0.65436, 1, 0, 0.856613,-0.00167655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45014,-0.00157681) , 
6, 0.608921, 1, 0, 0.739885,-0.0120521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320421,-0.00271378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184729,0.00120305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76474,0.00385458) , 
2, 0.0313784, 1, 0, 0.27072,0.0257287) , 
13, 0.705165, 1, 0, 0.278228,0.0163824) , 
10, 0.582278, 1, 0, 0.51135,0.00202387)    );
  // itree = 1834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719367,-0.00362881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934505,0.00254749) , 
0, 0.16229, 1, 0, 0.840475,-0.0117575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960355,-0.00218333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698921,0.000698815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704168,0.00558049) , 
8, 0.0278802, 1, 0, 0.701574,0.0545596) , 
11, 0.568741, 1, 0, 0.825737,0.0258531) , 
14, 0.0426828, 1, 0, 0.832493,0.00861216) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732232,-0.00197271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475602,0.00158624) , 
13, 0.814416, 1, 0, 0.560477,0.0137217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157118,-0.00180539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125852,-0.000294494) , 
3, 0.707419, 1, 0, 0.138277,-0.0141565) , 
7, 0.367268, 1, 0, 0.265996,-0.00572316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739176,-0.00431849) , 
5, 0.0404446, 1, 0, 0.309612,-0.0109334) , 
10, 0.470611, 1, 0, 0.500854,-0.00378466)    );
  // itree = 1835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228846,-0.00231404) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972934,0.00615985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954257,-0.0139651) , 
5, 0.0347953, 1, 0, 0.961164,-0.00872666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909099,0.00397863) , 
13, 0.808451, 1, 0, 0.944456,0.00477147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593008,-0.00171716) , 
11, 0.838509, 1, 0, 0.836401,-0.00867815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796285,0.00310048) , 
7, 0.198935, 1, 0, 0.829048,0.000642289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583705,-0.00272616) , 
7, 0.307446, 1, 0, 0.794583,-0.00707441) , 
2, 0.0120212, 1, 0, 0.695012,-0.0137162) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465155,0.00422531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138817,0.000923514) , 
13, 0.652398, 1, 0, 0.194321,0.0185665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654992,-0.00153419) , 
5, 0.0193445, 1, 0, 0.261424,0.0124858) , 
16, 0.202662, 1, 0, 0.497138,-0.00175854)    );
  // itree = 1836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902139,0.00306294) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949693,-0.00315814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989318,0.00709968) , 
2, 0.039271, 1, 0, 0.975434,0.00286221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838416,-0.00437393) , 
11, 0.55685, 1, 0, 0.931169,-0.0105582) , 
5, 0.0247858, 1, 0, 0.925468,-0.0047549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777942,0.00261318) , 
17, 0.627048, 1, 0, 0.901556,0.00189309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428626,-0.0026808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165391,-0.000833031) , 
7, 0.458078, 1, 0, 0.258504,-0.0307768) , 
17, 0.761421, 1, 0, 0.536481,-0.0166543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441234,-0.00250057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446855,-0.00130063) , 
15, 0.292855, 1, 0, 0.444586,-0.0184288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335049,0.000845872) , 
6, 0.36841, 1, 0, 0.37955,0.00189545) , 
15, 0.222087, 1, 0, 0.489772,-0.0111331)    );
  // itree = 1837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754553,-0.0036719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944459,0.00070084) , 
12, 0.212386, 1, 0, 0.850653,-0.0185055) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831751,-0.00159127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577337,5.18568e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566879,0.00161898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494662,0.00249202) , 
9, 0.0164492, 1, 0, 0.525596,0.0339459) , 
6, 0.241358, 1, 0, 0.548559,0.0190449) , 
16, 0.105541, 1, 0, 0.609908,0.0117746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416692,-0.00316843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429353,-0.000362707) , 
9, 0.0326733, 1, 0, 0.424332,-0.0189803) , 
9, 0.0289294, 1, 0, 0.551144,0.00203589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441301,0.00334319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421313,0.0005799) , 
9, 0.0418122, 1, 0, 0.432064,0.0274022) , 
9, 0.0368861, 1, 0, 0.521337,0.00838547) , 
7, 0.0442397, 1, 0, 0.572793,0.00418369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37595,-0.00214833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319996,3.78602e-05) , 
9, 0.0654139, 1, 0, 0.345806,-0.0149214) , 
9, 0.0508431, 1, 0, 0.494854,-0.00237633)    );
  // itree = 1838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479997,0.00200663) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901577,-0.00360997) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941778,-0.00993977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978325,0.00496413) , 
4, 0.378749, 1, 0, 0.958691,-0.00889507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818653,0.00280788) , 
3, 0.381456, 1, 0, 0.910996,0.00705447) , 
8, 0.0130803, 1, 0, 0.907855,-0.00185601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.884025,-0.000995939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757422,-0.00337652) , 
10, 0.465034, 1, 0, 0.821085,-0.0242038) , 
15, 0.164944, 1, 0, 0.884088,-0.00797719) , 
2, 0.0120212, 1, 0, 0.835108,-0.00304758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295671,-0.00151742) , 
17, 0.908878, 1, 0, 0.654813,-0.012499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13579,-0.000147749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745882,0.00387545) , 
0, 0.114532, 1, 0, 0.228127,0.00964778) , 
10, 0.688147, 1, 0, 0.502847,-0.00461132)    );
  // itree = 1839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41502,0.00104321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103068,-0.000651821) , 
10, 0.604209, 1, 0, 0.163756,-0.00363502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91967,-0.000457453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366804,-0.0028688) , 
10, 0.408345, 1, 0, 0.556948,-0.0395981) , 
12, 0.0716065, 1, 0, 0.297884,-0.015903) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994764,0.000206392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995917,0.0133816) , 
17, 0.214272, 1, 0, 0.995432,0.00510396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901629,-0.00501305) , 
3, 0.200285, 1, 0, 0.96881,-0.00377379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862754,0.00240931) , 
3, 0.327522, 1, 0, 0.932893,0.00670095) , 
4, 0.243481, 1, 0, 0.537668,-0.00736759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43726,0.0011265) , 
6, 0.606304, 1, 0, 0.510356,0.000957541)    );
  // itree = 1840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909129,-0.00654689) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999398,0.0180123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925522,0.00939252) , 
3, 0.162033, 1, 0, 0.964066,0.0215874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917066,-0.00280905) , 
13, 0.768212, 1, 0, 0.949383,0.0107321) , 
13, 0.487702, 1, 0, 0.939006,0.00337485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336332,0.00282904) , 
3, 0.450651, 1, 0, 0.73388,0.0155281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945439,0.00259065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231093,-0.00172404) , 
11, 0.502682, 1, 0, 0.483526,-0.0143113) , 
15, 0.199048, 1, 0, 0.656635,0.00632133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577497,-0.00385057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424004,-0.000385495) , 
9, 0.0391101, 1, 0, 0.487024,-0.0287352) , 
6, 0.445969, 1, 0, 0.604807,-0.00439094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.287942,0.000822891) , 
3, 0.792626, 1, 0, 0.506626,0.00184714)    );
  // itree = 1841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184204,0.0012669) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994033,0.00290287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971141,-0.0127878) , 
12, 0.233639, 1, 0, 0.982543,-0.00628744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987824,0.00869723) , 
17, 0.30126, 1, 0, 0.984609,-0.00138843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671877,0.0029449) , 
3, 0.260703, 1, 0, 0.900488,0.00909859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903093,-0.000369399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521582,-0.00366027) , 
3, 0.445636, 1, 0, 0.70203,-0.0344742) , 
6, 0.281985, 1, 0, 0.821721,-0.00819529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666827,0.000930786) , 
6, 0.553127, 1, 0, 0.787065,-0.00225372) , 
5, 0.00901588, 1, 0, 0.563222,0.00485758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253239,-0.000920962) , 
3, 0.864683, 1, 0, 0.491191,-0.000562257)    );
  // itree = 1842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979473,-0.00332594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993334,0.0129661) , 
12, 0.247784, 1, 0, 0.985614,0.00766639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880163,-0.00617116) , 
17, 0.453917, 1, 0, 0.954206,-0.00313482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332099,0.00152735) , 
3, 0.430561, 1, 0, 0.678692,0.00790986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360112,-0.00164286) , 
15, 0.144927, 1, 0, 0.614685,0.0017905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442687,-0.0010536) , 
13, 1.11844, 1, 0, 0.562007,-0.00540794) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822186,0.00170296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581285,-0.00165275) , 
16, 0.0693816, 1, 0, 0.70248,-0.00517163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607357,-0.000450021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212833,0.00172953) , 
3, 0.527663, 1, 0, 0.302664,0.0202098) , 
16, 0.104088, 1, 0, 0.41126,0.0133158) , 
14, 0.103606, 1, 0, 0.501703,0.0020822)    );
  // itree = 1843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897662,0.00338279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787337,-0.00391184) , 
15, 0.030387, 1, 0, 0.848639,-0.00461247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959721,-0.00317303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731108,0.00347561) , 
6, 0.285771, 1, 0, 0.832512,0.0288464) , 
14, 0.0513899, 1, 0, 0.841535,0.0101252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751944,0.00125229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268101,-0.00169661) , 
16, 0.140481, 1, 0, 0.453556,-0.0110763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428153,-0.00233834) , 
14, 0.0975581, 1, 0, 0.445103,-0.0222034) , 
10, 0.454847, 1, 0, 0.690351,-0.00220369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246409,0.00193894) , 
10, 0.662795, 1, 0, 0.55085,0.00725527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248256,-0.00172874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497634,0.000515201) , 
14, 0.193937, 1, 0, 0.347412,-0.0146091) , 
15, 0.262168, 1, 0, 0.503012,0.00211398)    );
  // itree = 1844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549019,0.0017111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983475,-0.00969014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982045,0.00640607) , 
6, 0.156685, 1, 0, 0.98275,0.00205431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887281,-0.0048505) , 
10, 0.456148, 1, 0, 0.958167,-0.00595813) , 
4, 0.148842, 1, 0, 0.870252,-0.000713359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213199,-0.00189535) , 
16, 0.292734, 1, 0, 0.647274,-0.00808051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515744,0.00389667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490365,-8.92188e-05) , 
6, 0.402738, 1, 0, 0.501526,0.0173222) , 
6, 0.332962, 1, 0, 0.613683,-0.00222594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311092,-0.00235327) , 
13, 0.9672, 1, 0, 0.535795,-0.0104725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434214,0.00178634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41877,-0.000298174) , 
13, 1.20408, 1, 0, 0.427001,0.0137776) , 
6, 0.530659, 1, 0, 0.499671,-0.00242065)    );
  // itree = 1845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957303,0.00398817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958646,-0.00697407) , 
5, 0.0347599, 1, 0, 0.958133,-0.00506672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731429,0.0032625) , 
6, 0.331067, 1, 0, 0.867414,0.0164734) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932128,0.00403525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169365,-0.000688588) , 
10, 0.49305, 1, 0, 0.402198,-0.00250997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38295,0.0017364) , 
6, 0.353153, 1, 0, 0.398154,0.00300169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283509,-0.00137614) , 
6, 0.467513, 1, 0, 0.362624,-0.00518844) , 
8, 0.0189738, 1, 0, 0.52598,0.00182159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385669,-0.000815242) , 
11, 1.21068, 1, 0, 0.498658,-0.00210993)    );
  // itree = 1846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419599,-0.00256818) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265626,0.00162212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141709,-0.000441276) , 
8, 0.0494627, 1, 0, 0.181829,0.00350545) , 
8, 0.0284323, 1, 0, 0.224062,-0.00542263) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988714,0.00109461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967666,-0.0230972) , 
2, 0.034368, 1, 0, 0.977366,-0.010877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944152,0.00510685) , 
3, 0.208914, 1, 0, 0.965814,0.00381816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761737,-0.00264599) , 
17, 0.547071, 1, 0, 0.915693,-0.00527404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712275,0.00199334) , 
13, 0.974993, 1, 0, 0.843691,0.0112935) , 
12, 0.102996, 1, 0, 0.457234,0.000867803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868891,-0.00380473) , 
5, 0.0548723, 1, 0, 0.497235,-0.00200432)    );
  // itree = 1847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866229,0.00373273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739889,-0.00514179) , 
9, 0.0185653, 1, 0, 0.799799,-0.00791446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721832,0.00289678) , 
9, 0.0394522, 1, 0, 0.778962,-0.00177934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564348,-0.00314948) , 
6, 0.229299, 1, 0, 0.738936,-0.00691211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299977,0.00145225) , 
13, 0.86891, 1, 0, 0.627598,-0.000599921) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325592,-0.00261211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258903,-0.000263351) , 
15, 0.174167, 1, 0, 0.292775,-0.0195633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330672,-1.01321e-05) , 
6, 0.529926, 1, 0, 0.312251,-0.00961847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85394,-3.96648e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67697,-0.00415066) , 
7, 0.130202, 1, 0, 0.76819,-0.0354582) , 
12, 0.168533, 1, 0, 0.402711,-0.0147451) , 
6, 0.27196, 1, 0, 0.486485,-0.00947582)    );
  // itree = 1848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810211,0.00166542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992707,0.00343405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810688,-0.00350858) , 
3, 0.235175, 1, 0, 0.907369,-0.0171494) , 
5, 0.0335331, 1, 0, 0.87426,-0.00611439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770119,0.00244172) , 
10, 0.54889, 1, 0, 0.848965,0.00202929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840125,-0.0071443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64415,-0.00282403) , 
9, 0.031041, 1, 0, 0.741577,-0.0438028) , 
8, 0.018558, 1, 0, 0.819195,-0.0106761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741091,0.00258386) , 
8, 0.0326375, 1, 0, 0.802696,-0.00178361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298882,-0.00272029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313911,-0.00185823) , 
16, 0.311261, 1, 0, 0.305886,-0.0363419) , 
7, 0.424354, 1, 0, 0.695897,-0.00921258) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202158,0.00209426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228976,0.000252586) , 
3, 0.78151, 1, 0, 0.217299,0.0159034) , 
17, 1.01664, 1, 0, 0.500094,0.0010628)    );
  // itree = 1849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967205,-0.00382402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988204,0.00699193) , 
16, 0.0476321, 1, 0, 0.97754,-0.00014215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687019,0.00214827) , 
3, 0.353524, 1, 0, 0.840796,0.0174605) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143565,0.000327126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200445,-0.000772145) , 
12, 0.0593778, 1, 0, 0.164838,-0.00238442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58601,0.00156913) , 
4, 0.0890871, 1, 0, 0.222725,0.00228505) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,-0.0287848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930751,0.00314389) , 
3, 0.139069, 1, 0, 0.951714,0.0046119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585782,-0.00332021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73535,-0.00133064) , 
12, 0.187524, 1, 0, 0.646604,-0.0534897) , 
13, 0.811681, 1, 0, 0.794494,-0.0253272) , 
4, 0.156677, 1, 0, 0.416145,-0.00705573) , 
16, 0.0783637, 1, 0, 0.499589,-0.00223826)    );
  // itree = 1850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988833,0.0094909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341894,-0.000571526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787848,-0.00435408) , 
5, 0.0240423, 1, 0, 0.527108,-0.0232503) , 
11, 0.555786, 1, 0, 0.718065,-0.00987634) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22316,0.00268031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979818,0.00668946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671031,-0.000958667) , 
17, 0.507457, 1, 0, 0.875534,0.00499705) , 
12, 0.0801007, 1, 0, 0.569553,0.0181753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397558,-0.000692875) , 
9, 0.0576844, 1, 0, 0.516743,0.00977422) , 
9, 0.0258384, 1, 0, 0.588873,0.00273384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307823,0.00207277) , 
11, 1.08904, 1, 0, 0.550115,0.00657108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365712,-0.000943402) , 
6, 0.645906, 1, 0, 0.502665,-0.000452607)    );
  // itree = 1851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504235,-0.00304915) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985027,0.00675059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939818,-0.00714279) , 
12, 0.208125, 1, 0, 0.963198,-0.00531267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785616,0.00184172) , 
3, 0.396313, 1, 0, 0.903433,0.00592198) , 
2, 0.0182908, 1, 0, 0.81593,-0.00509831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45187,0.00220857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92521,0.00476701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807955,-0.00244916) , 
15, 0.151365, 1, 0, 0.864058,0.0012109) , 
12, 0.110944, 1, 0, 0.673188,0.0191541) , 
9, 0.03449, 1, 0, 0.748085,0.00642879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497612,-0.00304191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240671,-7.66115e-05) , 
16, 0.162951, 1, 0, 0.317962,-0.0195874) , 
8, 0.0411643, 1, 0, 0.621111,-0.00125129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218812,0.00134202) , 
10, 0.741082, 1, 0, 0.504752,0.00494645)    );
  // itree = 1852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97763,-0.0183449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963793,0.00272319) , 
6, 0.16607, 1, 0, 0.969595,-0.000681644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865547,-0.00859807) , 
10, 0.268699, 1, 0, 0.93631,-0.0161128) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953449,-0.0011917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885759,0.00588894) , 
6, 0.237274, 1, 0, 0.922423,0.0234447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20779,-0.000700873) , 
17, 0.607856, 1, 0, 0.555486,0.0056695) , 
10, 0.360629, 1, 0, 0.701432,-0.0026783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286128,0.00245744) , 
11, 0.866576, 1, 0, 0.613651,0.00497616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227147,-0.00164904) , 
11, 1.02781, 1, 0, 0.545778,-0.000290101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428727,0.00110945) , 
6, 0.605067, 1, 0, 0.51416,0.00611693)    );
  // itree = 1853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.968509,-0.0105618) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9882,0.00928806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872278,-0.00189588) , 
17, 0.395583, 1, 0, 0.934418,0.00526845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525072,0.00258694) , 
10, 0.527073, 1, 0, 0.833804,0.0122945) , 
11, 0.346453, 1, 0, 0.872146,0.00473257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318357,-0.000412378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769311,-0.00475702) , 
5, 0.0249929, 1, 0, 0.477875,-0.024065) , 
11, 0.736221, 1, 0, 0.723725,-0.00610807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291499,0.000930209) , 
3, 0.704039, 1, 0, 0.544385,0.00348559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.307504,-0.00153787) , 
9, 0.0652654, 1, 0, 0.502501,-0.00187521)    );
  // itree = 1854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845493,-0.00247535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885557,0.00387127) , 
9, 0.0113717, 1, 0, 0.866188,0.00340233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385093,-0.00313903) , 
8, 0.0362982, 1, 0, 0.677206,-0.0160205) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143853,4.84606e-05) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.850723,-0.000720664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799862,0.00263753) , 
9, 0.0347885, 1, 0, 0.82379,0.0128531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727772,-0.0019442) , 
16, 0.103112, 1, 0, 0.786153,-0.00224213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657813,0.00427006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303493,0.000241912) , 
16, 0.238523, 1, 0, 0.441219,0.0313845) , 
7, 0.292205, 1, 0, 0.644165,0.0115999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476142,0.00240271) , 
9, 0.0576444, 1, 0, 0.591985,0.0220426) , 
12, 0.059966, 1, 0, 0.422922,0.0139726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862787,-0.00242959) , 
12, 0.278026, 1, 0, 0.454496,0.0114828) , 
14, 0.034444, 1, 0, 0.501221,0.00571251)    );
  // itree = 1855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739167,0.00223715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800489,-0.00620112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826585,-0.00301374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718387,0.00158235) , 
15, 0.0908571, 1, 0, 0.76996,-0.00109967) , 
9, 0.0179411, 1, 0, 0.781556,-0.0129921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523414,-0.00382825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253896,-0.00177879) , 
8, 0.0341955, 1, 0, 0.332806,-0.0429735) , 
11, 0.824686, 1, 0, 0.557687,-0.027949) , 
9, 0.00811509, 1, 0, 0.593656,-0.0182454) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947289,-0.00333486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82796,0.00417537) , 
17, 0.414047, 1, 0, 0.902652,0.0116973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265297,-0.00127122) , 
17, 0.659898, 1, 0, 0.53865,-0.00730659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24874,0.00112127) , 
3, 0.744945, 1, 0, 0.415946,0.00435415) , 
9, 0.03449, 1, 0, 0.494381,-0.00562049)    );
  // itree = 1856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864731,0.00101574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749179,0.00373188) , 
10, 0.322118, 1, 0, 0.805122,0.0318692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587311,-0.000657932) , 
9, 0.0380848, 1, 0, 0.695115,0.0103151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508641,-0.00316895) , 
16, 0.229664, 1, 0, 0.658906,0.00111754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190441,0.000973146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684287,0.00280744) , 
12, 0.0847793, 1, 0, 0.322052,0.02555) , 
8, 0.0371464, 1, 0, 0.487408,0.0135565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139526,-0.000800578) , 
10, 0.782662, 1, 0, 0.386141,0.00615249) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970874,-0.0049648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865069,0.00235509) , 
13, 0.769996, 1, 0, 0.917279,0.00967312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875817,-0.00379913) , 
12, 0.267913, 1, 0, 0.898134,-0.00730398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737556,-0.00513895) , 
7, 0.245531, 1, 0, 0.863366,-0.0206822) , 
12, 0.172956, 1, 0, 0.506706,-0.000626954)    );
  // itree = 1857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514303,-0.00327282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54831,-0.00227945) , 
15, 0.11817, 1, 0, 0.530395,-0.0495192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874176,0.00356278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954595,-0.0117712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967126,0.000127406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992371,0.0144828) , 
12, 0.212014, 1, 0, 0.979992,0.0103574) , 
10, 0.200099, 1, 0, 0.971719,-0.000316171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740727,-0.00278985) , 
13, 0.930356, 1, 0, 0.906343,-0.0126729) , 
4, 0.252606, 1, 0, 0.900233,-0.00357304) , 
4, 0.165423, 1, 0, 0.792822,-0.0169171) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135108,0.00104563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325371,-0.000639555) , 
12, 0.0642879, 1, 0, 0.21019,0.00290899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932163,0.00132103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804632,0.00339191) , 
17, 0.54222, 1, 0, 0.867461,0.0333665) , 
4, 0.252296, 1, 0, 0.328241,0.00837937) , 
10, 0.485968, 1, 0, 0.507618,-0.00138769)    );
  // itree = 1858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287616,-0.000365932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630843,0.00321312) , 
12, 0.0555256, 1, 0, 0.436823,0.0169703) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992219,0.00400548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936809,-0.00635726) , 
11, 0.432796, 1, 0, 0.966127,-0.00712173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970375,0.00535319) , 
10, 0.375233, 1, 0, 0.96786,0.00202326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.837105,-0.00386885) , 
7, 0.28446, 1, 0, 0.942609,-0.00470071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788007,-0.00456241) , 
6, 0.418056, 1, 0, 0.915135,-0.0131651) , 
12, 0.0884941, 1, 0, 0.786925,-0.0050874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327928,0.00215852) , 
3, 0.584109, 1, 0, 0.659072,0.00556614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170494,-0.00104627) , 
3, 0.744771, 1, 0, 0.522234,-0.00066217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445166,0.00114199) , 
11, 1.29285, 1, 0, 0.510765,0.00328711)    );
  // itree = 1859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98273,-0.0167979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998298,0.0174528) , 
6, 0.142649, 1, 0, 0.991101,0.00304384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97855,-0.0126573) , 
13, 0.573975, 1, 0, 0.986325,-0.00182551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90464,-0.00546545) , 
3, 0.200663, 1, 0, 0.96502,-0.00819053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670219,-0.000788023) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702843,0.00534167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64747,0.00192401) , 
13, 0.930707, 1, 0, 0.667889,0.0534428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284836,0.000436227) , 
16, 0.172943, 1, 0, 0.433601,0.0250308) , 
7, 0.0847605, 1, 0, 0.484364,0.0168932) , 
3, 0.300998, 1, 0, 0.651986,0.00814562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190424,-0.000748051) , 
17, 1.09289, 1, 0, 0.501598,0.00131564)    );
  // itree = 1860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919319,0.00279868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867646,0.000432005) , 
16, 0.0524188, 1, 0, 0.893554,0.00905054) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767577,-0.00412724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784108,0.000704815) , 
7, 0.167105, 1, 0, 0.774448,-0.0236489) , 
16, 0.0763825, 1, 0, 0.827722,-0.00902286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935257,-0.00385564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592402,0.0025618) , 
17, 0.383633, 1, 0, 0.72632,0.0227492) , 
14, 0.0840331, 1, 0, 0.780841,0.00566629) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664746,-0.000637394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422046,-0.00354408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344295,-0.00154206) , 
14, 0.102362, 1, 0, 0.377015,-0.0470645) , 
15, 0.0874208, 1, 0, 0.459782,-0.0362421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370939,-0.00249242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296474,0.00107877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110048,-0.000624476) , 
7, 0.682848, 1, 0, 0.175414,0.000709007) , 
11, 0.782805, 1, 0, 0.22068,-0.00584655) , 
16, 0.232103, 1, 0, 0.293897,-0.0151542) , 
7, 0.243504, 1, 0, 0.497256,-0.00645909)    );
  // itree = 1861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973448,0.00312812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457426,-0.00410009) , 
10, 0.297313, 1, 0, 0.703176,-0.019028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984675,0.000232714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.442461,0.00421098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354243,0.000939294) , 
15, 0.136379, 1, 0, 0.402435,0.0298542) , 
3, 0.201683, 1, 0, 0.579703,0.0208226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500615,-0.00269937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346962,0.000127269) , 
6, 0.283658, 1, 0, 0.426476,-0.0111904) , 
9, 0.0378827, 1, 0, 0.498933,0.00394764) , 
15, 0.0486013, 1, 0, 0.553665,-0.00220925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678942,0.002382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33763,0.000654119) , 
17, 0.88092, 1, 0, 0.445021,0.0223254) , 
6, 0.466724, 1, 0, 0.509771,0.00770311)    );
  // itree = 1862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.855061,0.00311026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63304,-0.00307459) , 
6, 0.171978, 1, 0, 0.741404,-0.00807802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572301,0.00461585) , 
6, 0.313249, 1, 0, 0.69371,0.010693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359283,-0.00341217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155681,-0.00118415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546726,0.00109306) , 
2, 0.0181097, 1, 0, 0.272061,-0.00624448) , 
11, 0.867099, 1, 0, 0.296066,-0.0177046) , 
13, 0.741152, 1, 0, 0.410662,-0.00952081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562598,0.00348289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.353833,0.000248513) , 
9, 0.0375755, 1, 0, 0.422862,0.0159015) , 
14, 0.149424, 1, 0, 0.413649,-0.00329642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976789,0.000141108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845518,0.00360893) , 
13, 0.873577, 1, 0, 0.916442,0.0227022) , 
2, 0.0419878, 1, 0, 0.504574,0.00140518)    );
  // itree = 1863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862805,0.000361844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739683,-0.00424484) , 
16, 0.062297, 1, 0, 0.805449,-0.0212027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80107,0.00126449) , 
16, 0.0836121, 1, 0, 0.803956,-0.00930828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608112,-0.00413011) , 
7, 0.183139, 1, 0, 0.756111,-0.0239321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885244,0.00658848) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588523,-0.00129792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40527,0.00198227) , 
14, 0.0537167, 1, 0, 0.477036,0.0133659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189302,-0.00116339) , 
8, 0.0416934, 1, 0, 0.281803,-0.00777884) , 
11, 0.607421, 1, 0, 0.359065,-0.00281279) , 
16, 0.133263, 1, 0, 0.500055,-0.0103122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.954713,0.0059938) , 
4, 0.542157, 1, 0, 0.540135,-0.00706692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358326,0.00141565) , 
9, 0.0605952, 1, 0, 0.50319,-0.000760295)    );
  // itree = 1864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256004,0.000406306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538146,0.00333807) , 
12, 0.0552967, 1, 0, 0.435968,0.0407841) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948122,-0.00945221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972458,-0.0104061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960029,0.00448865) , 
6, 0.176475, 1, 0, 0.966214,0.00149396) , 
8, 0.00872018, 1, 0, 0.960334,-0.00619496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864707,0.00282212) , 
3, 0.416234, 1, 0, 0.94077,0.00196033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656702,-0.00133069) , 
17, 0.742548, 1, 0, 0.876074,-0.00501788) , 
4, 0.156677, 1, 0, 0.707711,0.0125037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253636,-0.00195471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195774,2.92864e-05) , 
10, 0.761286, 1, 0, 0.215731,-0.0100914) , 
10, 0.658855, 1, 0, 0.507004,0.00328586)    );
  // itree = 1865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201165,-0.00110749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119789,0.000715098) , 
16, 0.278306, 1, 0, 0.154117,-0.00322298) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981876,-0.000524405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960457,0.00637724) , 
6, 0.200187, 1, 0, 0.971602,0.0160012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.870676,0.00111314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617849,-0.00248839) , 
15, 0.153131, 1, 0, 0.757119,-0.0169128) , 
17, 0.468569, 1, 0, 0.859775,-0.00115954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481245,0.00176663) , 
17, 0.796647, 1, 0, 0.676355,0.0189238) , 
5, 0.001632, 1, 0, 0.428899,0.00842984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952042,-0.00768931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749832,-0.00411717) , 
17, 0.377565, 1, 0, 0.854765,-0.0375836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.928242,0.00163274) , 
1, 0.540919, 1, 0, 0.884382,-0.0190726) , 
4, 0.405802, 1, 0, 0.511095,0.00346679)    );
  // itree = 1866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760347,-0.00350692) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998812,0.0130085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.93305,-0.00598096) , 
3, 0.153906, 1, 0, 0.967985,-0.00820268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963126,0.00428477) , 
17, 0.332416, 1, 0, 0.966153,-0.000175277) , 
2, 0.0231733, 1, 0, 0.911234,-0.00767636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775242,-0.000909289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629101,0.00371338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487124,0.000629731) , 
9, 0.0258539, 1, 0, 0.534843,0.0312031) , 
10, 0.285428, 1, 0, 0.59399,0.0206976) , 
11, 0.675186, 1, 0, 0.752685,0.0065041) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.179938,-0.00227877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135259,-0.00040743) , 
10, 0.758304, 1, 0, 0.154561,-0.0190931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722173,0.00122868) , 
5, 0.0216876, 1, 0, 0.248942,-0.0122425) , 
10, 0.582278, 1, 0, 0.49568,-0.00306028)    );
  // itree = 1867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94108,-0.00528981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913556,0.00458214) , 
7, 0.177914, 1, 0, 0.928276,0.00122354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343267,-0.00167021) , 
3, 0.504399, 1, 0, 0.607595,-0.0164397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989914,0.0095672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.425202,-0.00346036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371839,-0.00193109) , 
14, 0.127622, 1, 0, 0.396964,-0.0370447) , 
17, 0.381281, 1, 0, 0.631711,-0.0163137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247256,0.00102703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767411,-0.00117518) , 
0, 0.154337, 1, 0, 0.33513,0.011792) , 
13, 0.7254, 1, 0, 0.422396,0.00352214) , 
14, 0.0670523, 1, 0, 0.495941,-0.004405)    );
  // itree = 1868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524977,0.00136977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405725,-0.00150104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124473,0.000341066) , 
10, 0.551107, 1, 0, 0.197581,-0.00425023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164274,-0.00174617) , 
14, 0.126428, 1, 0, 0.185545,-0.0125078) , 
8, 0.0187352, 1, 0, 0.226644,-0.0081962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814734,-0.00465302) , 
4, 0.166348, 1, 0, 0.307771,-0.0130651) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9811,0.00721241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952493,-0.0047526) , 
9, 0.0167074, 1, 0, 0.967152,-0.00078059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80231,0.00238126) , 
13, 0.908585, 1, 0, 0.900493,0.0138329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807497,-0.00265452) , 
9, 0.0315585, 1, 0, 0.871736,0.00032333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818731,0.00224597) , 
9, 0.0459862, 1, 0, 0.858462,0.00787969) , 
5, 0.0299812, 1, 0, 0.492189,-0.006051)    );
  // itree = 1869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353201,5.75588e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972437,0.0111304) , 
12, 0.122588, 1, 0, 0.58723,0.0177641) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992563,0.00635336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939651,-0.0036035) , 
10, 0.347726, 1, 0, 0.969581,-0.00266064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845561,-0.00536024) , 
11, 0.525561, 1, 0, 0.923894,-0.0172516) , 
2, 0.0305468, 1, 0, 0.773935,-0.00165479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654665,-0.00501137) , 
14, 0.199232, 1, 0, 0.758765,-0.00742397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547058,-0.00269924) , 
6, 0.52201, 1, 0, 0.724059,-0.0137594) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142533,-9.32102e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616771,0.00139246) , 
0, 0.0933333, 1, 0, 0.271361,0.00801723) , 
3, 0.648512, 1, 0, 0.503141,-0.00313234)    );
  // itree = 1870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182671,0.000295728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204193,0.00172539) , 
6, 0.37332, 1, 0, 0.193381,0.0163168) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967983,-0.00263258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783643,0.00292363) , 
3, 0.398224, 1, 0, 0.890751,0.0187444) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845686,-0.00159431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686233,-0.00391365) , 
10, 0.449201, 1, 0, 0.771354,-0.0375229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782031,0.000964411) , 
15, 0.225826, 1, 0, 0.775349,-0.0187173) , 
14, 0.0594546, 1, 0, 0.824841,-0.00265125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744268,-0.00310676) , 
16, 0.149296, 1, 0, 0.81145,-0.00917214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75062,0.00189528) , 
16, 0.205789, 1, 0, 0.804739,-0.00552257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479742,-0.00284865) , 
16, 0.291548, 1, 0, 0.770381,-0.0102392) , 
4, 0.0814414, 1, 0, 0.507891,0.00184174)    );
  // itree = 1871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169503,-0.00087169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259533,0.00183035) , 
14, 0.103332, 1, 0, 0.20977,0.00431237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229372,0.00246042) , 
6, 0.40794, 1, 0, 0.218547,0.0211013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341133,-0.00178725) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975145,-0.0107214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990861,0.00960205) , 
13, 0.62928, 1, 0, 0.981729,-0.00247718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829722,-0.00711596) , 
3, 0.274515, 1, 0, 0.941912,-0.017814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77616,0.000894849) , 
11, 0.717723, 1, 0, 0.896027,-0.00885726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731547,-0.00264261) , 
10, 0.606668, 1, 0, 0.869711,-0.0139062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64501,0.00229836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77606,0.000531721) , 
0, 0.155833, 1, 0, 0.702848,0.0287649) , 
8, 0.0343883, 1, 0, 0.824865,-0.0024378) , 
12, 0.0916134, 1, 0, 0.726486,-0.00962432) , 
5, 0.0149906, 1, 0, 0.504787,0.00378637)    );
  // itree = 1872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988803,0.00290342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948521,-0.0108215) , 
17, 0.256602, 1, 0, 0.968796,-0.00968635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757605,0.00157491) , 
17, 0.46739, 1, 0, 0.920745,-0.00455984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.580729,-0.00424424) , 
13, 0.813414, 1, 0, 0.853173,-0.0135578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775363,-0.00154612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625603,0.00148751) , 
14, 0.0625104, 1, 0, 0.679028,0.0097155) , 
6, 0.321214, 1, 0, 0.777729,-0.00347526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276328,0.00151376) , 
17, 0.916946, 1, 0, 0.618885,0.00568339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180599,-0.00078669) , 
17, 1.16913, 1, 0, 0.503692,0.000594147)    );
  // itree = 1873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749789,-0.00157394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546284,-0.00346872) , 
6, 0.297403, 1, 0, 0.651849,-0.032146) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218048,-0.00120623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72952,0.000311131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464645,0.00291548) , 
11, 0.696123, 1, 0, 0.57275,0.0353655) , 
12, 0.0588457, 1, 0, 0.421939,0.0128743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817077,-0.00379425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981187,-0.00161984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849499,-0.00410788) , 
6, 0.214216, 1, 0, 0.915393,-0.0198087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950276,0.00798889) , 
7, 0.109722, 1, 0, 0.927587,0.00211015) , 
4, 0.328826, 1, 0, 0.88694,-0.0127772) , 
12, 0.12005, 1, 0, 0.655532,-1.17031e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103136,-0.00182529) , 
17, 1.04362, 1, 0, 0.473871,-0.00858824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418219,0.00108231) , 
11, 1.26163, 1, 0, 0.46489,-0.00335584) , 
15, 0.0248809, 1, 0, 0.492224,-0.00756512)    );
  // itree = 1874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944321,0.00262061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840857,-0.000686058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601886,-0.0039463) , 
6, 0.246347, 1, 0, 0.716994,-0.0282568) , 
7, 0.0916155, 1, 0, 0.777057,-0.0178012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390436,0.00142029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19467,-0.000161814) , 
17, 1.04166, 1, 0, 0.265811,0.00802583) , 
3, 0.547179, 1, 0, 0.428477,-0.000191718) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962058,-0.0117938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.941093,0.0023217) , 
13, 0.718963, 1, 0, 0.951484,-0.00323253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686318,-0.00439422) , 
17, 0.497515, 1, 0, 0.859925,-0.0280734) , 
12, 0.211391, 1, 0, 0.512206,-0.00560256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406727,0.00225773) , 
15, 0.315909, 1, 0, 0.497045,0.000148082)    );
  // itree = 1875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976416,-0.0155034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982726,-0.0054383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994357,0.0128732) , 
14, 0.0455526, 1, 0, 0.988725,0.00401663) , 
7, 0.073971, 1, 0, 0.984342,-0.00192214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344861,0.00161424) , 
3, 0.24867, 1, 0, 0.727353,0.00633108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800201,0.000997573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515096,-0.00447062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875079,-0.00137276) , 
2, 0.0317779, 1, 0, 0.67675,-0.045219) , 
6, 0.325857, 1, 0, 0.714859,-0.0286756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251087,-0.00032037) , 
3, 0.555921, 1, 0, 0.453918,-0.0154252) , 
6, 0.2571, 1, 0, 0.571813,-0.00604474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52953,0.00184397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.263391,1.73303e-05) , 
17, 1.11, 1, 0, 0.374903,0.0155987) , 
11, 1.02861, 1, 0, 0.505993,0.00118984)    );
  // itree = 1876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144643,-0.00094353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.380644,0.000186716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372851,0.00179531) , 
14, 0.0987393, 1, 0, 0.376518,0.0171265) , 
12, 0.0511052, 1, 0, 0.285948,0.00582362) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862919,-0.00310132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937469,0.00407671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.883912,-0.00264985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944423,0.00255089) , 
1, 0.448191, 1, 0, 0.913943,-0.00471816) , 
5, 0.0363867, 1, 0, 0.919784,0.00229327) , 
5, 0.0264691, 1, 0, 0.90725,-0.00371005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66501,-0.00354771) , 
7, 0.347206, 1, 0, 0.870303,-0.0114647) , 
12, 0.10426, 1, 0, 0.570773,-0.00260303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239887,-0.00156008) , 
3, 0.864683, 1, 0, 0.492908,-0.00939323)    );
  // itree = 1877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94378,-0.00168194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.37542,-0.00212192) , 
17, 0.618921, 1, 0, 0.652629,-0.0207743) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627462,-0.00156189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976878,0.00414714) , 
0, 0.128228, 1, 0, 0.844187,-0.000339338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94597,0.00174873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812205,0.0041192) , 
3, 0.416898, 1, 0, 0.875073,0.0320621) , 
13, 0.71289, 1, 0, 0.856653,0.0127384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328061,-0.000542575) , 
3, 0.605057, 1, 0, 0.619692,0.00218668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241142,0.00203254) , 
8, 0.0493319, 1, 0, 0.474831,0.0133746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55596,-0.00243382) , 
14, 0.235093, 1, 0, 0.481017,0.0100404) , 
15, 0.0248809, 1, 0, 0.506813,0.00540844)    );
  // itree = 1878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988486,0.00598955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931699,-0.00509688) , 
10, 0.425264, 1, 0, 0.96437,-0.00370405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769787,-0.00624673) , 
11, 0.516988, 1, 0, 0.90327,-0.0219123) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95683,0.000103622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618835,0.00212368) , 
11, 0.55181, 1, 0, 0.751687,0.0120465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759732,0.00617646) , 
13, 0.766092, 1, 0, 0.754198,0.0295829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.449456,-0.00198619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514852,-0.000279527) , 
14, 0.165678, 1, 0, 0.474887,-0.0197055) , 
14, 0.0954744, 1, 0, 0.630402,0.00773733) , 
8, 0.0161143, 1, 0, 0.722406,-0.00225978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227928,-0.00175198) , 
3, 0.660897, 1, 0, 0.591432,-0.00944596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285227,0.000980867) , 
3, 0.802529, 1, 0, 0.50191,-0.0012093)    );
  // itree = 1879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999204,0.0250818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793606,-0.00606915) , 
3, 0.129822, 1, 0, 0.898498,-0.016246) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93651,-0.00147297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658059,0.00355441) , 
11, 0.694801, 1, 0, 0.787849,0.0307293) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942882,-0.00298607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439895,0.00217318) , 
17, 0.435386, 1, 0, 0.675907,0.0120005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465012,-0.00195689) , 
6, 0.453642, 1, 0, 0.573106,-0.0140765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678,0.00271501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305871,0.000409772) , 
16, 0.116393, 1, 0, 0.438208,0.0204011) , 
9, 0.0390444, 1, 0, 0.49878,0.00491998) , 
15, 0.0430347, 1, 0, 0.56309,0.0106618) , 
13, 0.548609, 1, 0, 0.612339,0.00671089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157603,-0.0014593) , 
16, 0.349251, 1, 0, 0.514345,0.00140801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339136,-0.00264092) , 
15, 0.365802, 1, 0, 0.497073,-0.00296092)    );
  // itree = 1880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985317,-0.00772249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916266,0.00238464) , 
3, 0.206433, 1, 0, 0.958958,0.00354875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616849,-0.00574346) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174842,-0.0004701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634773,-0.00408296) , 
4, 0.0961757, 1, 0, 0.287505,-0.0221179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925143,0.00156856) , 
4, 0.25817, 1, 0, 0.480407,-0.0124326) , 
9, 0.0179328, 1, 0, 0.50311,-0.0182238) , 
10, 0.317779, 1, 0, 0.638828,-0.0117415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230472,0.00131003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6995,-0.00121724) , 
5, 0.0329793, 1, 0, 0.316004,0.0121051) , 
11, 0.908203, 1, 0, 0.522325,-0.00313554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333979,-0.0016013) , 
6, 0.747891, 1, 0, 0.487958,-0.00942069)    );
  // itree = 1881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752166,0.00437452) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.416134,0.00176052) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995355,0.00665763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992961,0.00997266) , 
6, 0.112338, 1, 0, 0.994152,0.00607853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922503,-0.00721313) , 
6, 0.179042, 1, 0, 0.964391,-0.00738491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84603,0.0016955) , 
3, 0.322656, 1, 0, 0.932976,-0.00012834) , 
4, 0.141776, 1, 0, 0.749744,0.00868276) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176983,-0.000357962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672811,-0.00460234) , 
5, 0.0226217, 1, 0, 0.254406,-0.016629) , 
11, 0.790293, 1, 0, 0.49569,-0.00429941) , 
9, 0.00782201, 1, 0, 0.517607,-0.00134464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44198,0.000880802) , 
13, 1.22718, 1, 0, 0.503636,0.00241272)    );
  // itree = 1882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969528,-0.00160963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943444,-0.00862314) , 
10, 0.176592, 1, 0, 0.956731,-0.0125553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714642,-0.00496866) , 
17, 0.56017, 1, 0, 0.872396,-0.0310123) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975176,-9.44921e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856591,-0.00743216) , 
11, 0.354951, 1, 0, 0.927478,-0.0189289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655404,0.0014359) , 
11, 0.502851, 1, 0, 0.850336,-0.00801535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374448,-0.00326249) , 
11, 0.641138, 1, 0, 0.708167,-0.0203505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515099,0.00207972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288725,-0.000479297) , 
3, 0.673427, 1, 0, 0.346595,0.000944094) , 
11, 0.778531, 1, 0, 0.488943,-0.00743942) , 
10, 0.272916, 1, 0, 0.563033,-0.0119941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201291,0.000955605) , 
8, 0.0607162, 1, 0, 0.487888,-0.00633673)    );
  // itree = 1883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995073,0.00627742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.942818,-0.0110485) , 
11, 0.433005, 1, 0, 0.97108,-0.00875515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890001,0.00121609) , 
6, 0.221622, 1, 0, 0.93575,-0.00135859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665748,0.00187816) , 
13, 0.932517, 1, 0, 0.85712,0.00959498) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837873,-0.00381126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509856,0.00119585) , 
11, 0.607851, 1, 0, 0.686154,-0.00392467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268682,-0.00185571) , 
3, 0.569465, 1, 0, 0.423505,-0.024077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200954,-0.000132082) , 
10, 0.731709, 1, 0, 0.326904,-0.0144983) , 
10, 0.424541, 1, 0, 0.495307,-0.00684604)    );
  // itree = 1884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992576,0.00975919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897004,-0.00582755) , 
17, 0.231546, 1, 0, 0.938161,-0.0124136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974806,0.00812267) , 
8, 0.0182909, 1, 0, 0.951788,0.00047278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.333634,-0.00311307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139698,-0.0014552) , 
16, 0.314676, 1, 0, 0.206758,-0.0280139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361659,0.00103909) , 
6, 0.370385, 1, 0, 0.243464,-0.0179076) , 
17, 0.562339, 1, 0, 0.554135,-0.00984598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437884,0.00144259) , 
14, 0.152886, 1, 0, 0.539068,-0.00647122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433898,-0.00273247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358074,-0.00087863) , 
6, 0.687008, 1, 0, 0.387951,-0.0312176) , 
6, 0.495661, 1, 0, 0.483427,-0.0155828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582026,0.00260463) , 
14, 0.236315, 1, 0, 0.489583,-0.0124751)    );
  // itree = 1885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993824,0.0104936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.969482,-0.026438) , 
9, 0.0286925, 1, 0, 0.983244,-0.00536319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459959,0.00452774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321937,0.00103924) , 
9, 0.0184545, 1, 0, 0.361522,0.0230318) , 
3, 0.2122, 1, 0, 0.642739,0.0101882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28692,-0.00124455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139811,6.56493e-06) , 
7, 0.461197, 1, 0, 0.202672,-0.0114292) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776087,0.00106998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813797,-0.00134551) , 
12, 0.170492, 1, 0, 0.797045,-0.00124172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672038,-0.00329672) , 
9, 0.0396144, 1, 0, 0.75142,-0.0233553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59518,-0.0042169) , 
16, 0.169202, 1, 0, 0.71598,-0.0375919) , 
4, 0.144169, 1, 0, 0.402858,-0.0216324) , 
6, 0.27196, 1, 0, 0.487476,-0.0104076)    );
  // itree = 1886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296041,-0.00232901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673559,-0.00040298) , 
2, 0.0147665, 1, 0, 0.468518,-0.026513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294692,0.000968033) , 
16, 0.218308, 1, 0, 0.398355,-0.0110864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681277,-0.00512741) , 
5, 0.0191747, 1, 0, 0.448404,-0.0203387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8223,0.00231077) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980054,0.0031287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802931,-0.00393539) , 
6, 0.256107, 1, 0, 0.892796,-0.0196882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976093,-0.00299741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842105,0.00180839) , 
11, 0.523305, 1, 0, 0.910786,0.00923369) , 
2, 0.0522543, 1, 0, 0.901645,-0.00546241) , 
4, 0.309692, 1, 0, 0.878892,0.00492545) , 
2, 0.0289666, 1, 0, 0.66687,-0.0075175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192779,0.0012425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719207,-0.000980399) , 
4, 0.180211, 1, 0, 0.265893,0.0137778) , 
8, 0.0406176, 1, 0, 0.501676,0.00125569)    );
  // itree = 1887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926304,0.0057477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981083,0.00306533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936807,-0.00464859) , 
10, 0.333638, 1, 0, 0.965881,-0.0024525) , 
5, 0.024435, 1, 0, 0.9555,0.00645367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547877,-0.00373396) , 
10, 0.500464, 1, 0, 0.867486,-0.00269749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25799,-0.00222599) , 
8, 0.0434573, 1, 0, 0.69257,-0.0102844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483565,0.00156431) , 
13, 0.906042, 1, 0, 0.633874,-0.00122813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504988,-0.00286659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260783,-0.000680218) , 
10, 0.445471, 1, 0, 0.321338,-0.0254229) , 
11, 0.968131, 1, 0, 0.508037,-0.0109697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400974,0.0014969) , 
15, 0.305863, 1, 0, 0.490329,-0.00525519)    );
  // itree = 1888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798297,0.00026025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759677,-0.00755091) , 
9, 0.00890155, 1, 0, 0.779272,-0.015502) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931041,0.0068052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335705,-0.00138136) , 
11, 0.671413, 1, 0, 0.724075,0.00683505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433188,0.00370202) , 
13, 0.807991, 1, 0, 0.636433,0.0158927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524753,-0.000846397) , 
15, 0.197048, 1, 0, 0.600301,0.00794277) , 
15, 0.0370145, 1, 0, 0.645929,0.00196561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367244,-0.00184047) , 
13, 0.981186, 1, 0, 0.57691,-0.0050745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391589,0.00156468) , 
9, 0.057385, 1, 0, 0.53963,0.000198269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347424,-0.00136373) , 
6, 0.598695, 1, 0, 0.503169,-0.00477881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426003,0.000620343) , 
11, 1.26965, 1, 0, 0.491012,-0.00176677)    );
  // itree = 1889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784132,0.00126092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534266,0.0033964) , 
11, 0.672481, 1, 0, 0.654483,0.0379109) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866225,-0.0076299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875312,0.000375851) , 
10, 0.380136, 1, 0, 0.870711,-0.0246316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958269,0.00721842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986745,0.00448679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.841816,-0.00292996) , 
6, 0.265955, 1, 0, 0.920649,-0.0103212) , 
5, 0.0471243, 1, 0, 0.937118,0.0119106) , 
2, 0.0335331, 1, 0, 0.914417,-0.000581222) , 
12, 0.122789, 1, 0, 0.829357,0.0120149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0992184,-0.000184759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242911,-0.00169299) , 
12, 0.0617924, 1, 0, 0.14663,-0.0114641) , 
7, 0.503886, 1, 0, 0.529332,0.00169708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350567,-0.00125199) , 
6, 0.71419, 1, 0, 0.491938,-0.00469101)    );
  // itree = 1890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978712,-0.00299118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972904,0.00684282) , 
16, 0.104023, 1, 0, 0.975955,0.00319695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867529,-0.00449254) , 
9, 0.0394522, 1, 0, 0.939803,-0.00554262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901459,0.0047283) , 
13, 0.716887, 1, 0, 0.927726,0.00566951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623378,-0.00265676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659312,-0.00296536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152428,-0.00134158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730059,0.00129201) , 
0, 0.0854636, 1, 0, 0.352479,-0.00711296) , 
16, 0.104042, 1, 0, 0.421326,-0.0165046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308044,0.000435204) , 
3, 0.809644, 1, 0, 0.377001,-0.00650846) , 
15, 0.0185073, 1, 0, 0.402716,-0.0101528) , 
11, 0.590626, 1, 0, 0.55456,-0.00557669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180836,0.00159077) , 
16, 0.379012, 1, 0, 0.493141,-0.00153663)    );
  // itree = 1891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983311,0.00285675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737835,-0.00245634) , 
11, 0.496572, 1, 0, 0.866917,-0.0130716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832,0.00328435) , 
14, 0.0835641, 1, 0, 0.850773,0.0067238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907655,0.00209859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647346,-0.00302486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529522,-0.00193642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45486,0.00106762) , 
16, 0.125391, 1, 0, 0.491523,-0.00798707) , 
15, 0.126295, 1, 0, 0.547674,-0.0234064) , 
10, 0.293114, 1, 0, 0.643321,-0.0137671) , 
8, 0.0161063, 1, 0, 0.718952,-0.00629678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145669,0.00055173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677076,0.00350005) , 
4, 0.109546, 1, 0, 0.217932,0.0155756) , 
7, 0.413176, 1, 0, 0.502314,0.00316072)    );
  // itree = 1892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989067,0.00480388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956163,-0.000808103) , 
10, 0.323831, 1, 0, 0.97288,0.0012997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902822,-0.00571787) , 
13, 0.713427, 1, 0, 0.94489,-0.00999496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888632,0.00304503) , 
16, 0.122089, 1, 0, 0.926245,-0.00125481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636164,0.00268262) , 
6, 0.465791, 1, 0, 0.849541,0.0111152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454715,-0.00321762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.349277,-0.000952103) , 
16, 0.296711, 1, 0, 0.388798,-0.0224031) , 
16, 0.230616, 1, 0, 0.720621,0.00173651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457285,-0.00123104) , 
13, 1.17382, 1, 0, 0.658656,-0.00545801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122135,0.00130057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.47438,0.00210385) , 
2, 0.012725, 1, 0, 0.236705,0.0244923) , 
10, 0.688147, 1, 0, 0.501288,0.0057121)    );
  // itree = 1893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962223,0.0039022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.955417,-0.00977129) , 
1, 0.409474, 1, 0, 0.959468,6.56019e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670349,-0.00354974) , 
10, 0.341951, 1, 0, 0.864358,-0.01102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260467,0.00109634) , 
10, 0.544986, 1, 0, 0.688575,-0.0040886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50932,0.00442747) , 
14, 0.102816, 1, 0, 0.655991,0.00565155) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925476,-0.000255364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260149,-0.0019117) , 
17, 0.458689, 1, 0, 0.504215,-0.0189598) , 
14, 0.134453, 1, 0, 0.612999,-0.00131976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479255,0.00237568) , 
13, 0.983051, 1, 0, 0.586299,0.00601632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38947,-0.00190209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234771,-0.000144837) , 
8, 0.0493319, 1, 0, 0.313059,-0.0215798) , 
11, 0.999023, 1, 0, 0.490116,-0.00369775)    );
  // itree = 1894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437258,-0.00217431) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936529,-0.0116512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987977,0.00531764) , 
2, 0.049861, 1, 0, 0.957019,-0.0156776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833771,0.00381971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823848,-0.000274762) , 
12, 0.200088, 1, 0, 0.829125,0.0262305) , 
6, 0.296235, 1, 0, 0.895642,0.00443431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845164,-0.00438582) , 
14, 0.117949, 1, 0, 0.884658,-0.00482076) , 
12, 0.0960868, 1, 0, 0.790436,-0.0130788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544376,0.00119203) , 
9, 0.0586651, 1, 0, 0.738548,-0.00572554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515084,-0.00360098) , 
7, 0.339512, 1, 0, 0.717036,-0.0106209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563546,0.00422546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141099,9.1384e-05) , 
10, 0.566963, 1, 0, 0.210453,0.0113513) , 
7, 0.41227, 1, 0, 0.492655,-0.000888736)    );
  // itree = 1895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712827,-0.00104356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454915,-0.00362272) , 
16, 0.100137, 1, 0, 0.563715,-0.0385739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231921,-0.00350499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156041,0.000269636) , 
6, 0.223552, 1, 0, 0.176478,-0.00751332) , 
16, 0.19643, 1, 0, 0.293382,-0.0168903) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95817,0.00420981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933939,0.00125419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.919285,-0.00524347) , 
5, 0.0438648, 1, 0, 0.92668,-0.00813554) , 
16, 0.0659742, 1, 0, 0.940627,0.00265777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890772,-0.00568959) , 
16, 0.146295, 1, 0, 0.928363,-0.00560887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789135,0.00333221) , 
10, 0.560329, 1, 0, 0.900497,0.00533563) , 
2, 0.0204796, 1, 0, 0.549925,-0.00749851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256413,0.00175028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661318,-0.000233953) , 
12, 0.108425, 1, 0, 0.385719,0.021028) , 
11, 1.07864, 1, 0, 0.504106,0.000461315)    );
  // itree = 1896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982149,-0.00419481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566874,0.00542676) , 
3, 0.227708, 1, 0, 0.823395,0.0211094) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820326,-0.00120645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277109,-0.00315474) , 
11, 0.763913, 1, 0, 0.504049,-0.0281431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508174,0.000720512) , 
13, 1.08556, 1, 0, 0.505912,-0.0089852) , 
13, 0.762576, 1, 0, 0.636682,0.00341071) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962546,-0.00729886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966934,0.00461716) , 
17, 0.28654, 1, 0, 0.964702,-0.000968911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536863,-0.00329551) , 
3, 0.332543, 1, 0, 0.732769,-0.0342186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093057,-0.00149459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406378,0.000169654) , 
4, 0.0186415, 1, 0, 0.206447,-0.0119535) , 
17, 0.812182, 1, 0, 0.396882,-0.0200095) , 
9, 0.031677, 1, 0, 0.487894,-0.0111209)    );
  // itree = 1897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461185,-0.00283077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463406,-0.00115576) , 
15, 0.0194705, 1, 0, 0.462266,-0.0280219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939637,0.00367879) , 
4, 0.34469, 1, 0, 0.665296,-0.00855693) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580211,0.00363606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227126,0.00239061) , 
16, 0.192674, 1, 0, 0.354114,0.0443032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.866353,0.0013806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791759,-0.00183264) , 
14, 0.0581061, 1, 0, 0.826794,-0.00608191) , 
5, 0.0274328, 1, 0, 0.551585,0.0232538) , 
15, 0.0522636, 1, 0, 0.6055,0.00817096) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14453,-0.000552722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542576,0.00229215) , 
2, 0.00887514, 1, 0, 0.227356,0.00131285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948591,0.00131471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48813,-0.00230246) , 
17, 0.465726, 1, 0, 0.669585,-0.0289738) , 
2, 0.0181055, 1, 0, 0.390289,-0.00984583) , 
14, 0.0854214, 1, 0, 0.495443,-0.0010427)    );
  // itree = 1898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755687,-0.00218809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583392,0.00356759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255607,-0.000369507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184857,0.00120621) , 
8, 0.0531266, 1, 0, 0.21933,0.00629445) , 
3, 0.58481, 1, 0, 0.28629,0.0152233) , 
13, 0.56265, 1, 0, 0.348713,0.0113504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454465,-0.00185928) , 
14, 0.220682, 1, 0, 0.359039,0.00753343) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902955,-0.0089159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927894,-0.00259142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960033,0.00387562) , 
9, 0.0166323, 1, 0, 0.945078,0.00278561) , 
1, 0.420612, 1, 0, 0.931761,-0.0106798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.953682,0.00518428) , 
9, 0.0385612, 1, 0, 0.93715,-0.00105838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674558,-0.00270791) , 
17, 0.690098, 1, 0, 0.884643,-0.0114523) , 
4, 0.309692, 1, 0, 0.498941,0.00247994)    );
  // itree = 1899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742138,-0.00167095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404034,0.00303511) , 
13, 0.813799, 1, 0, 0.589237,0.0126449) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833105,0.000927174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514682,-0.00291308) , 
6, 0.228281, 1, 0, 0.683073,-0.015229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39333,0.00258082) , 
13, 0.616816, 1, 0, 0.555025,0.00726001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235681,-0.00125388) , 
13, 0.767268, 1, 0, 0.362111,-0.00950814) , 
15, 0.0774359, 1, 0, 0.417947,-0.00406211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376101,0.00113278) , 
13, 1.18584, 1, 0, 0.408798,0.00210345) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973045,0.00263236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916956,-0.00649015) , 
12, 0.291599, 1, 0, 0.943392,-0.0120996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706719,-0.00287669) , 
17, 0.492927, 1, 0, 0.864432,-0.0248652) , 
12, 0.211391, 1, 0, 0.491499,-0.00279155)    );
  // itree = 1900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.930818,0.00595326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32647,-0.00159708) , 
17, 0.542872, 1, 0, 0.568766,-0.00193421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332873,0.00175408) , 
11, 0.787145, 1, 0, 0.458171,0.0131988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.753378,-0.0036056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946035,-0.00363452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903172,0.000332724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926096,0.00455857) , 
15, 0.124619, 1, 0, 0.914111,0.0182535) , 
10, 0.322545, 1, 0, 0.928406,0.00492742) , 
12, 0.130823, 1, 0, 0.884845,-0.00770298) , 
5, 0.028889, 1, 0, 0.650999,0.0037526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105742,-0.00144524) , 
17, 1.06599, 1, 0, 0.486176,-0.00350732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432272,0.00107879) , 
11, 1.29387, 1, 0, 0.478206,0.000635437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84084,-0.00533849) , 
12, 0.350827, 1, 0, 0.49673,-0.00170531)    );
  // itree = 1901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.998632,0.0118297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964149,-0.0120584) , 
11, 0.426705, 1, 0, 0.983019,-0.00505015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898237,0.00230946) , 
3, 0.227589, 1, 0, 0.952891,0.00351101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588461,-0.00170134) , 
17, 0.61879, 1, 0, 0.84839,-0.00752051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353408,0.00174032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913497,0.00175255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747176,-0.00285175) , 
8, 0.0187046, 1, 0, 0.844186,-0.0105491) , 
4, 0.242736, 1, 0, 0.564821,0.0158337) , 
10, 0.387815, 1, 0, 0.684833,0.00594979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251342,-0.00217296) , 
16, 0.267073, 1, 0, 0.608128,-0.000761623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188439,0.00182572) , 
16, 0.349251, 1, 0, 0.516713,0.00426261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347582,-0.00208497) , 
15, 0.370302, 1, 0, 0.500552,0.00066884)    );
  // itree = 1902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844332,-0.00258551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572301,0.00277056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384673,0.000487312) , 
14, 0.100396, 1, 0, 0.479534,0.0191045) , 
8, 0.0208678, 1, 0, 0.605655,0.00561807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258681,-0.00166235) , 
13, 0.79357, 1, 0, 0.402012,-0.0158) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999444,0.0191041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963531,0.00522543) , 
3, 0.148207, 1, 0, 0.984442,0.0096442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881084,-0.003176) , 
6, 0.229766, 1, 0, 0.953568,0.000299647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834403,0.00255468) , 
6, 0.366204, 1, 0, 0.910691,0.0130806) , 
12, 0.140101, 1, 0, 0.620634,-0.0033876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218497,0.00117953) , 
17, 1.14256, 1, 0, 0.506327,0.00322368)    );
  // itree = 1903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736904,-0.00532809) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98466,0.00343403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972193,-0.0180536) , 
2, 0.0502717, 1, 0, 0.979277,-0.00439602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.968269,0.00699573) , 
11, 0.486908, 1, 0, 0.975901,0.00220986) , 
2, 0.0213392, 1, 0, 0.910007,-0.00823343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475056,0.00252328) , 
10, 0.588346, 1, 0, 0.814855,-0.000516866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148879,-0.00153276) , 
11, 0.794942, 1, 0, 0.577694,-0.00763335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256641,0.0017875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65759,-0.000350362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85355,0.00420157) , 
5, 0.0391523, 1, 0, 0.748901,0.0222278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556851,-0.00155157) , 
9, 0.0379389, 1, 0, 0.65449,-0.00460217) , 
5, 0.0179887, 1, 0, 0.433737,0.0153198) , 
6, 0.342264, 1, 0, 0.500892,0.00461224)    );
  // itree = 1904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505464,-0.0035126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46874,-0.000592849) , 
14, 0.0262151, 1, 0, 0.49244,-0.0320951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997846,0.0202545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785073,-0.00089609) , 
3, 0.298648, 1, 0, 0.895642,-0.00164144) , 
2, 0.0371787, 1, 0, 0.660958,-0.019367) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836468,-0.00255562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958765,0.00514112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254979,0.00277601) , 
11, 0.542626, 1, 0, 0.498963,0.0270593) , 
6, 0.138201, 1, 0, 0.598711,0.0166105) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33233,-0.00201901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397834,0.00109226) , 
6, 0.327934, 1, 0, 0.365167,-0.006531) , 
6, 0.261066, 1, 0, 0.497488,0.00658046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452537,0.00247305) , 
6, 0.416082, 1, 0, 0.486574,0.0141903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360139,-0.000409382) , 
6, 0.606304, 1, 0, 0.445409,0.00666082) , 
14, 0.0417821, 1, 0, 0.499266,0.000157589)    );
  // itree = 1905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999179,0.0180759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981401,-0.0103609) , 
14, 0.0854214, 1, 0, 0.991673,-0.000993807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971501,0.00662394) , 
3, 0.180952, 1, 0, 0.985194,0.0070052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920084,-0.00284623) , 
11, 0.520514, 1, 0, 0.971068,0.00270242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797549,0.00396927) , 
17, 0.535132, 1, 0, 0.936563,0.00923875) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441739,0.000168366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221492,-0.00121403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123368,-0.00115297) , 
17, 1.09175, 1, 0, 0.168006,-0.0186349) , 
10, 0.60746, 1, 0, 0.259702,-0.0112065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710964,-0.00309262) , 
5, 0.0402769, 1, 0, 0.311391,-0.0160226) , 
3, 0.401264, 1, 0, 0.498637,-0.00845651)    );
  // itree = 1906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800112,-0.00640439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473403,-0.00145681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913813,0.00145953) , 
1, 0.159478, 1, 0, 0.734433,-0.00319451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893712,-0.00639502) , 
5, 0.0392527, 1, 0, 0.783354,-0.0127635) , 
16, 0.0540007, 1, 0, 0.787025,-0.0229482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960761,0.00475095) , 
1, 0.54227, 1, 0, 0.821253,-0.0152696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412785,-0.00128948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140674,0.000953403) , 
7, 0.521823, 1, 0, 0.217032,0.00318983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933522,0.00727541) , 
4, 0.232292, 1, 0, 0.313908,0.0101613) , 
8, 0.0297041, 1, 0, 0.542709,-0.00130744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432686,-0.00240511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297333,-0.000985896) , 
3, 0.808002, 1, 0, 0.335833,-0.0280121) , 
11, 1.08827, 1, 0, 0.48416,-0.00886524)    );
  // itree = 1907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991086,0.0067108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728273,-0.00285634) , 
8, 0.0211303, 1, 0, 0.864219,-0.00504351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611375,0.00250671) , 
13, 0.713484, 1, 0, 0.763103,0.00434729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607208,-0.00307361) , 
6, 0.31065, 1, 0, 0.723156,-0.00601646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718104,0.00219624) , 
13, 1.01077, 1, 0, 0.722268,0.000569586) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.934095,-0.00476965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764465,0.00262328) , 
10, 0.474619, 1, 0, 0.873003,-0.00188348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272359,-0.00214523) , 
3, 0.430653, 1, 0, 0.467905,-0.025592) , 
9, 0.031288, 1, 0, 0.569064,-0.0151876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281585,0.000343055) , 
3, 0.844783, 1, 0, 0.495967,-0.0096338)    );
  // itree = 1908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687081,-0.00390905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98839,0.00514973) , 
12, 0.139527, 1, 0, 0.886605,-0.00575446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511208,0.00318618) , 
13, 0.809512, 1, 0, 0.776425,0.00545307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655042,-0.0020642) , 
6, 0.312569, 1, 0, 0.74552,-0.00124749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588101,0.00326213) , 
15, 0.182882, 1, 0, 0.716476,0.00498254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545741,-0.0015431) , 
15, 0.259102, 1, 0, 0.683106,0.000404387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539193,-0.00221122) , 
6, 0.483062, 1, 0, 0.662933,-0.00502241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522463,0.00176314) , 
6, 0.615931, 1, 0, 0.635385,0.00293896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173583,-0.00147681) , 
17, 1.1286, 1, 0, 0.499467,-0.00534831)    );
  // itree = 1909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742777,0.00240294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963031,0.00606149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885895,-0.00470829) , 
15, 0.0867844, 1, 0, 0.926071,-0.000817624) , 
12, 0.176988, 1, 0, 0.845122,0.0133845) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785863,-0.00148946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560263,0.00137017) , 
9, 0.0358657, 1, 0, 0.679111,0.00300824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828726,-0.00635402) , 
5, 0.0476155, 1, 0, 0.711097,-0.00950507) , 
7, 0.0843921, 1, 0, 0.770845,0.000699127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52078,0.000234335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367387,0.00297326) , 
11, 0.814203, 1, 0, 0.420166,0.0345737) , 
8, 0.0334475, 1, 0, 0.625961,0.0146945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190422,-0.000599206) , 
8, 0.0568647, 1, 0, 0.511007,0.00824087)    );
  // itree = 1910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952414,-0.00645739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963275,0.00440455) , 
13, 0.674047, 1, 0, 0.957818,0.000804424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553979,-0.00348076) , 
11, 0.624517, 1, 0, 0.831925,-0.00993891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765769,0.00293938) , 
9, 0.0360855, 1, 0, 0.813616,-0.00281458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232715,0.0017691) , 
11, 0.837842, 1, 0, 0.639754,0.00485282) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428602,-0.00399743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550051,-0.00100798) , 
14, 0.133545, 1, 0, 0.487215,-0.0262926) , 
14, 0.100391, 1, 0, 0.598051,-0.00366213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469747,0.0017485) , 
15, 0.269538, 1, 0, 0.574443,0.000854275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371024,-0.0019352) , 
6, 0.456568, 1, 0, 0.519864,-0.00848584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423323,0.000837248) , 
13, 1.14589, 1, 0, 0.494952,-0.00180212)    );
  // itree = 1911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635419,-0.00214645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938903,0.00174517) , 
4, 0.342318, 1, 0, 0.818176,-0.00905147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863858,0.00301005) , 
16, 0.124807, 1, 0, 0.829963,3.71391e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751565,0.00236902) , 
10, 0.436543, 1, 0, 0.8064,0.00947107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97504,0.0015598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43299,-0.00194217) , 
3, 0.284733, 1, 0, 0.562978,-0.0302846) , 
15, 0.144178, 1, 0, 0.690707,-0.00942392) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119976,-0.00119613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634326,0.00149732) , 
2, 0.012569, 1, 0, 0.305964,-0.00218192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209542,0.00204283) , 
9, 0.0421935, 1, 0, 0.264402,0.011404) , 
16, 0.19892, 1, 0, 0.495842,9.65699e-05)    );
  // itree = 1912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725053,0.00334747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879356,0.00010391) , 
5, 0.0349916, 1, 0, 0.808468,0.0199287) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634839,-0.00410312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411041,-0.000379766) , 
7, 0.311961, 1, 0, 0.535042,-0.0342669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881397,0.00177013) , 
5, 0.0360832, 1, 0, 0.632668,-0.0202206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435552,0.00306124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225183,-0.000450925) , 
8, 0.0482588, 1, 0, 0.271502,0.00410686) , 
8, 0.0380008, 1, 0, 0.411526,-0.00532491) , 
16, 0.0900719, 1, 0, 0.488391,-0.000434759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851911,-0.00429365) , 
5, 0.055768, 1, 0, 0.529069,-0.00431658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.394354,0.00266275) , 
14, 0.131543, 1, 0, 0.514152,0.000586699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346896,-0.00278397) , 
14, 0.159737, 1, 0, 0.497247,-0.00353447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570889,0.00225118) , 
14, 0.20891, 1, 0, 0.503948,-0.00055772)    );
  // itree = 1913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963727,0.00677079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743315,-0.00174921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.662575,0.00212705) , 
16, 0.123695, 1, 0, 0.712003,-0.00131196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192289,-0.00212889) , 
16, 0.242652, 1, 0, 0.487831,-0.0136126) , 
10, 0.19494, 1, 0, 0.582576,-0.00539896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.863455,-0.00573477) , 
12, 0.30088, 1, 0, 0.620044,-0.0100278) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954136,0.00414233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682819,-0.00131489) , 
16, 0.0823054, 1, 0, 0.792768,-0.00168173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202659,0.00167307) , 
16, 0.233238, 1, 0, 0.470473,0.0112352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.378021,-0.00124934) , 
15, 0.35674, 1, 0, 0.453955,0.00621509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405268,0.00190979) , 
6, 0.560069, 1, 0, 0.437128,0.0173673) , 
15, 0.101188, 1, 0, 0.508269,0.00671255)    );
  // itree = 1914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171586,0.000780435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590825,0.00282312) , 
1, 0.0715461, 1, 0, 0.290154,0.0208777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771194,-0.00129396) , 
12, 0.104978, 1, 0, 0.366559,0.0148496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469607,0.00109168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166081,-0.00107392) , 
3, 0.640648, 1, 0, 0.265912,-0.00722754) , 
9, 0.0391101, 1, 0, 0.315196,0.00358299) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985971,-0.00898721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980245,0.00703741) , 
6, 0.168939, 1, 0, 0.983433,0.0053567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921015,0.000451521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.839728,-0.00417574) , 
9, 0.0208893, 1, 0, 0.87944,-0.0194252) , 
13, 0.698785, 1, 0, 0.929035,-0.00760661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635798,-0.00248851) , 
17, 0.686971, 1, 0, 0.851958,-0.0193291) , 
12, 0.137281, 1, 0, 0.500538,-0.00432849)    );
  // itree = 1915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967974,0.00451865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4922,-0.00265096) , 
10, 0.343762, 1, 0, 0.783481,-0.00257695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561487,0.00235267) , 
13, 0.960401, 1, 0, 0.695065,0.014598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406816,-0.00251822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145761,-0.000193929) , 
10, 0.544823, 1, 0, 0.20225,-0.0130312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953871,-0.011663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676096,0.00177077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814568,-0.00118222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823768,0.00135296) , 
14, 0.101997, 1, 0, 0.818354,-0.00144208) , 
12, 0.137695, 1, 0, 0.771687,0.00984772) , 
6, 0.150635, 1, 0, 0.806315,0.00380106) , 
12, 0.0958397, 1, 0, 0.438807,-0.00643952) , 
14, 0.0417821, 1, 0, 0.50344,-0.00113348)    );
  // itree = 1916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984266,0.00204616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938383,-0.0125233) , 
9, 0.0308575, 1, 0, 0.960678,-0.0154538) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697984,-0.00190384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730617,0.00245958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172462,0.000756176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741912,-0.00251196) , 
4, 0.109546, 1, 0, 0.316366,-0.000624194) , 
16, 0.175146, 1, 0, 0.403568,0.00643671) , 
16, 0.1093, 1, 0, 0.461869,-0.000323509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896045,0.00380624) , 
2, 0.0499857, 1, 0, 0.520437,0.00440198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578648,-0.00063499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.309464,0.00176034) , 
11, 0.692518, 1, 0, 0.363486,0.0227706) , 
9, 0.0454464, 1, 0, 0.457399,0.0117797) , 
17, 0.249725, 1, 0, 0.510796,0.00889019)    );
  // itree = 1917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304643,-0.00235638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857169,-0.00478796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.927595,0.00347778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848346,-0.00410104) , 
16, 0.108516, 1, 0, 0.893281,-0.000506998) , 
14, 0.00812592, 1, 0, 0.88143,-0.0127105) , 
1, 0.220308, 1, 0, 0.630753,-0.0244998) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564779,0.00283067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584112,-0.00136961) , 
14, 0.100559, 1, 0, 0.575309,0.00440303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48063,0.00260175) , 
6, 0.309788, 1, 0, 0.527601,0.024008) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417283,-0.00367326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34333,-0.00158066) , 
15, 0.23776, 1, 0, 0.376019,-0.0308322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342142,0.000448937) , 
6, 0.497839, 1, 0, 0.359645,-0.0116434) , 
9, 0.0418312, 1, 0, 0.43642,0.0046534) , 
14, 0.0518028, 1, 0, 0.498009,-0.00458593)    );
  // itree = 1918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781252,0.00296778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163985,0.000176824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350669,-0.00164276) , 
0, 0.0644979, 1, 0, 0.241406,-0.0137441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144014,0.000844375) , 
10, 0.74399, 1, 0, 0.196401,-0.00169078) , 
10, 0.325401, 1, 0, 0.249563,0.00190951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832083,0.00578894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.852115,-0.000361787) , 
4, 0.26309, 1, 0, 0.842357,0.0405773) , 
4, 0.168347, 1, 0, 0.356543,0.00888776) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948476,-0.00688748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963175,0.00420277) , 
7, 0.0830362, 1, 0, 0.955534,-0.00327462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973813,0.00790572) , 
14, 0.0850471, 1, 0, 0.96167,0.00829496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865163,-0.00430276) , 
16, 0.153481, 1, 0, 0.937619,-0.000837789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674426,-0.00205783) , 
13, 1.09675, 1, 0, 0.864308,-0.0124952) , 
12, 0.153739, 1, 0, 0.508769,0.00247721)    );
  // itree = 1919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466766,-0.00105742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989155,0.0125906) , 
12, 0.157872, 1, 0, 0.747407,0.00502761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559913,-0.003799) , 
6, 0.290329, 1, 0, 0.658827,-0.0262583) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900523,-0.00202167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885666,0.00129968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627075,0.00243298) , 
13, 0.751199, 1, 0, 0.740999,0.028759) , 
10, 0.288591, 1, 0, 0.791559,0.0161855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473865,-0.000588542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283378,0.00106146) , 
13, 0.658787, 1, 0, 0.35624,0.00629262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244837,-0.00222553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270102,-0.00014226) , 
11, 0.972129, 1, 0, 0.259142,-0.0163821) , 
13, 0.839973, 1, 0, 0.29222,-0.00865754) , 
10, 0.507527, 1, 0, 0.455224,-0.000547803) , 
14, 0.0345352, 1, 0, 0.498112,-0.00596367)    );
  // itree = 1920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963805,0.00398706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687761,-0.00150149) , 
13, 0.85369, 1, 0, 0.8545,-0.00446669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285193,-0.00423481) , 
10, 0.476732, 1, 0, 0.656818,-0.0242728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29639,0.00313136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12276,-0.0001555) , 
11, 0.809389, 1, 0, 0.169907,0.00968438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309171,-0.00234134) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858562,1.77197e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699125,0.00227964) , 
6, 0.349343, 1, 0, 0.772881,0.0242976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868453,-0.00132891) , 
5, 0.0404829, 1, 0, 0.805424,0.012236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670557,-0.00162222) , 
15, 0.255263, 1, 0, 0.775182,0.00337014) , 
12, 0.086883, 1, 0, 0.676608,-0.00700714) , 
2, 0.0120351, 1, 0, 0.451153,0.000419705) , 
14, 0.0341686, 1, 0, 0.4953,-0.00488064)    );
  // itree = 1921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914102,0.00367656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673635,-0.00187794) , 
13, 0.685332, 1, 0, 0.790754,-0.00236587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820285,0.00742814) , 
15, 0.0406889, 1, 0, 0.79967,0.0108121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568914,-0.00406135) , 
15, 0.0741126, 1, 0, 0.724932,-0.0036183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539817,0.00545153) , 
13, 0.944682, 1, 0, 0.689865,0.00911546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456086,-0.00100011) , 
13, 1.12047, 1, 0, 0.619235,-3.29061e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740727,0.00435471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272342,0.00155525) , 
16, 0.157626, 1, 0, 0.459906,0.0382598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434649,-0.000174674) , 
14, 0.125902, 1, 0, 0.451218,0.0243071) , 
15, 0.121928, 1, 0, 0.549088,0.010129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712001,0.001196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229734,-0.00174919) , 
8, 0.0183392, 1, 0, 0.353437,-0.0187198) , 
15, 0.259102, 1, 0, 0.501821,0.00315941)    );
  // itree = 1922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572978,-0.0028924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476271,0.00160218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424062,-0.00199399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364896,0.000586642) , 
9, 0.0420936, 1, 0, 0.394474,-0.00685431) , 
9, 0.0233171, 1, 0, 0.413616,-0.00162899) , 
14, 0.0297926, 1, 0, 0.451263,-0.00616985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243412,-0.0011692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747253,-0.00564058) , 
4, 0.199284, 1, 0, 0.340435,-0.0317184) , 
6, 0.353657, 1, 0, 0.39957,-0.0180862) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94756,-0.00365093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921351,0.00528471) , 
10, 0.398409, 1, 0, 0.938293,0.00695973) , 
2, 0.03963, 1, 0, 0.51267,-0.012828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497585,0.00119276) , 
14, 0.189944, 1, 0, 0.510808,-0.00935718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447975,0.000774389) , 
13, 1.28053, 1, 0, 0.500601,-0.0049501)    );
  // itree = 1923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432268,-0.00204581) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982203,-0.00430219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976293,0.00801122) , 
17, 0.330053, 1, 0, 0.979237,0.00709061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929389,-0.00518227) , 
13, 0.661647, 1, 0, 0.961815,-0.00191077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872677,0.00455197) , 
3, 0.3656, 1, 0, 0.946608,0.00743103) , 
12, 0.0686403, 1, 0, 0.870287,0.0021611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177681,-0.00122249) , 
3, 0.502822, 1, 0, 0.561074,-0.00731671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519102,0.00204171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327372,-0.000135692) , 
15, 0.122643, 1, 0, 0.414431,0.0156708) , 
13, 1.01376, 1, 0, 0.507739,0.0010439)    );
  // itree = 1924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.797912,0.00142195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136312,-0.00153471) , 
11, 0.75622, 1, 0, 0.405234,-0.00828601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42546,0.000828954) , 
6, 0.374583, 1, 0, 0.414776,0.00320262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364271,0.00367289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464349,0.00104398) , 
15, 0.321157, 1, 0, 0.403796,0.0384628) , 
15, 0.222087, 1, 0, 0.412116,0.0117446) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928912,-0.00646243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990638,0.00526607) , 
2, 0.0361224, 1, 0, 0.960408,-0.00925835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934949,0.00490386) , 
13, 0.803504, 1, 0, 0.952308,0.00399566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692069,-0.00291992) , 
11, 0.823704, 1, 0, 0.88075,-0.01145) , 
0, 0.177403, 1, 0, 0.541462,0.00534273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304366,-0.00110922) , 
9, 0.0652654, 1, 0, 0.498626,0.000766349)    );
  // itree = 1925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962113,-0.00590672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88414,0.00128189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760691,0.002217) , 
15, 0.0873893, 1, 0, 0.814739,0.0223904) , 
11, 0.359361, 1, 0, 0.869806,0.00942454) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962259,0.00126062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85452,-0.00370579) , 
7, 0.26068, 1, 0, 0.911162,-0.00735833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756691,0.00230609) , 
14, 0.0966144, 1, 0, 0.855821,0.00336361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436816,-0.00370411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556814,-0.00155236) , 
11, 0.84464, 1, 0, 0.495543,-0.0437419) , 
13, 0.791403, 1, 0, 0.711803,-0.0154665) , 
7, 0.105513, 1, 0, 0.779207,-0.00484796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.333636,0.00163413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208451,0.000342943) , 
17, 1.06062, 1, 0, 0.2463,0.0129461) , 
17, 0.89901, 1, 0, 0.508282,0.00419835)    );
  // itree = 1926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963745,-0.0153201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923051,-0.00271086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983798,0.00606948) , 
12, 0.19588, 1, 0, 0.950477,0.00065661) , 
15, 0.0526122, 1, 0, 0.955181,-0.00632334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350166,0.0026928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255312,-0.00074026) , 
6, 0.214461, 1, 0, 0.301912,0.0093513) , 
11, 0.557897, 1, 0, 0.614988,0.0018393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596769,-0.00433352) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644732,-0.000927963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20926,-0.00241168) , 
11, 0.717052, 1, 0, 0.363295,-0.0260441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436026,0.000360949) , 
6, 0.479089, 1, 0, 0.393246,-0.0127508) , 
9, 0.0186081, 1, 0, 0.431903,-0.0207894) , 
6, 0.295616, 1, 0, 0.528243,-0.00888214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400731,0.000805854) , 
6, 0.655519, 1, 0, 0.497059,-0.00235976)    );
  // itree = 1927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720094,-0.00438892) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972627,0.00352897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864597,-0.00344349) , 
10, 0.223614, 1, 0, 0.919922,-0.00649122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411504,0.00396495) , 
10, 0.422389, 1, 0, 0.681346,0.0178616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809795,0.000325748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304987,-0.00188297) , 
13, 0.582549, 1, 0, 0.441469,-0.0192229) , 
9, 0.0341769, 1, 0, 0.56509,-0.000111319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331984,-0.00249276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28159,-0.000837068) , 
15, 0.0853997, 1, 0, 0.30197,-0.0292088) , 
11, 0.974955, 1, 0, 0.451106,-0.0127165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30242,0.0008818) , 
9, 0.0645582, 1, 0, 0.423136,-0.00748457) , 
7, 0.0487008, 1, 0, 0.455829,-0.0122207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949205,0.00551979) , 
4, 0.541961, 1, 0, 0.490697,-0.00965038)    );
  // itree = 1928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518553,-0.000654926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.374197,-0.00253429) , 
9, 0.0229094, 1, 0, 0.417332,-0.0393497) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904595,-0.00926172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969562,0.00461316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950285,-0.00649718) , 
2, 0.0370534, 1, 0, 0.958277,-0.00427288) , 
12, 0.153048, 1, 0, 0.945235,-0.0129192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863781,0.00373459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.699634,-0.000150619) , 
10, 0.388141, 1, 0, 0.784317,0.0225244) , 
11, 0.71198, 1, 0, 0.88864,-0.000453588) , 
12, 0.106193, 1, 0, 0.719916,-0.014378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.146267,1.00466e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771606,0.00268788) , 
4, 0.154846, 1, 0, 0.265045,0.00856946) , 
10, 0.582278, 1, 0, 0.493725,-0.00296708)    );
  // itree = 1929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993252,0.00921854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791823,0.00374207) , 
3, 0.276929, 1, 0, 0.909785,0.0250088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801336,-0.00231894) , 
8, 0.0301742, 1, 0, 0.879709,0.0114224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691449,-0.00287502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42197,0.000332176) , 
8, 0.0274337, 1, 0, 0.569811,-0.0178093) , 
10, 0.389495, 1, 0, 0.748836,-0.000922437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385566,0.0011808) , 
8, 0.0466437, 1, 0, 0.653942,0.00456299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880528,-0.00504924) , 
12, 0.315744, 1, 0, 0.675752,0.00103691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.533895,-0.00274109) , 
15, 0.259539, 1, 0, 0.656545,-0.0044741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317359,0.00236516) , 
10, 0.685019, 1, 0, 0.59577,0.00301161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166065,-0.00128563) , 
10, 0.794016, 1, 0, 0.498048,-0.00213525)    );
  // itree = 1930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173246,0.000373409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.327967,0.00181088) , 
12, 0.0589296, 1, 0, 0.237625,0.0176191) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979969,0.00104848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880116,0.00388538) , 
13, 0.804154, 1, 0, 0.934018,0.0190194) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969581,0.00174162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732251,-0.00218058) , 
11, 0.524876, 1, 0, 0.863818,-0.0130921) , 
9, 0.0246377, 1, 0, 0.893773,0.00061016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910584,0.00657804) , 
8, 0.0198826, 1, 0, 0.896486,0.00839692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621703,-0.00327388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782373,0.000639809) , 
5, 0.0357037, 1, 0, 0.684912,-0.0327416) , 
8, 0.0327103, 1, 0, 0.832931,-0.0039607) , 
4, 0.0939201, 1, 0, 0.581815,0.00514224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172015,-0.000989499) , 
10, 0.819852, 1, 0, 0.504963,0.00138105)    );
  // itree = 1931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693563,0.000866835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478695,-0.00282441) , 
8, 0.0180373, 1, 0, 0.573464,-0.0245447) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977247,-0.00876504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985702,0.00727695) , 
12, 0.280202, 1, 0, 0.980686,-0.00024424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.884111,0.00467167) , 
3, 0.306697, 1, 0, 0.939543,0.0226367) , 
1, 0.321583, 1, 0, 0.755789,-0.00104613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48443,0.00396825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854197,0.00175527) , 
12, 0.121327, 1, 0, 0.644123,0.0468448) , 
7, 0.274841, 1, 0, 0.732552,0.0089195) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116299,-0.00171273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147778,0.000267401) , 
6, 0.291866, 1, 0, 0.134385,-0.00687509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549467,-0.00292936) , 
4, 0.122783, 1, 0, 0.193386,-0.0149247) , 
7, 0.41227, 1, 0, 0.496278,-0.00152953)    );
  // itree = 1932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489084,0.00113206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236172,-0.00152793) , 
7, 0.255364, 1, 0, 0.337378,-0.00477851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735296,-0.00385601) , 
4, 0.16086, 1, 0, 0.427967,-0.0160769) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988167,0.00817877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95659,-0.00460228) , 
14, 0.0425235, 1, 0, 0.972911,-0.000601938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843276,-0.00308595) , 
13, 0.861927, 1, 0, 0.93631,-0.00848399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.936952,0.00305635) , 
9, 0.0387163, 1, 0, 0.936497,-0.000884227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781684,0.00296571) , 
17, 0.698047, 1, 0, 0.906714,0.0101218) , 
12, 0.122789, 1, 0, 0.697314,-0.00133733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316848,0.0021211) , 
8, 0.0517211, 1, 0, 0.620472,0.00589195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179018,-0.000853391) , 
17, 1.14874, 1, 0, 0.499878,0.000275469)    );
  // itree = 1933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128199,-0.00119359) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473084,0.00263199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244991,0.000447998) , 
16, 0.144179, 1, 0, 0.30933,0.0201429) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922868,-0.00580721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851865,0.00269522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954483,0.000835771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895474,-0.00301813) , 
15, 0.1482, 1, 0, 0.929178,-0.00745139) , 
4, 0.273737, 1, 0, 0.901757,0.00597552) , 
14, 0.028349, 1, 0, 0.907415,-0.00124554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601366,-0.00169253) , 
13, 1.07612, 1, 0, 0.818274,-0.0125771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929631,0.00426204) , 
2, 0.0579208, 1, 0, 0.836863,-0.00579325) , 
4, 0.154846, 1, 0, 0.60098,0.00580394) , 
12, 0.0514981, 1, 0, 0.504993,0.00154491)    );
  // itree = 1934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.841983,0.00351581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962253,0.00341504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.921284,-0.00479626) , 
16, 0.110287, 1, 0, 0.944348,-0.00237051) , 
5, 0.0217034, 1, 0, 0.912991,0.00936402) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8988,0.00216005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519133,-0.00335211) , 
13, 0.837383, 1, 0, 0.691818,-0.0327453) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672357,-0.00199225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603559,-0.00424572) , 
15, 0.213633, 1, 0, 0.638325,-0.0345077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515661,0.00179901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186753,-0.00045937) , 
16, 0.170726, 1, 0, 0.309969,0.0090771) , 
11, 0.695027, 1, 0, 0.394121,-0.00209296) , 
10, 0.464372, 1, 0, 0.485615,-0.0115136) , 
10, 0.306178, 1, 0, 0.59109,-0.0063611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203874,0.00130362) , 
10, 0.780811, 1, 0, 0.497589,-0.000182484)    );
  // itree = 1935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854348,-0.00190978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622902,-0.00358573) , 
6, 0.256957, 1, 0, 0.734765,-0.0306563) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980046,-0.000218593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913205,0.00410384) , 
13, 0.680355, 1, 0, 0.945868,0.0160496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872417,-0.0038066) , 
7, 0.170261, 1, 0, 0.917242,0.00155332) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53066,-0.00134818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359089,-0.00335198) , 
9, 0.0409432, 1, 0, 0.445128,-0.0324004) , 
10, 0.450265, 1, 0, 0.677074,-0.0157191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476833,-0.000685842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404054,0.00226202) , 
16, 0.146925, 1, 0, 0.444003,0.0101914) , 
11, 0.912785, 1, 0, 0.593364,-0.0064131) , 
14, 0.0169755, 1, 0, 0.614456,-0.0100294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218545,0.000965301) , 
10, 0.740771, 1, 0, 0.502472,-0.00315602)    );
  // itree = 1936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905764,0.00591606) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.935031,-0.00157468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9906,-0.00111573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.949337,0.00506026) , 
3, 0.1784, 1, 0, 0.971278,0.0115151) , 
2, 0.0302556, 1, 0, 0.958659,0.00508161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944501,-0.0110671) , 
2, 0.055109, 1, 0, 0.955236,-0.00212037) , 
12, 0.122588, 1, 0, 0.944897,0.00728088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460167,-0.00293125) , 
7, 0.368899, 1, 0, 0.862975,9.44311e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483987,-0.00391195) , 
11, 0.804129, 1, 0, 0.788904,-0.0110918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364977,0.00163246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241449,0.000151876) , 
9, 0.0366159, 1, 0, 0.292602,0.0134706) , 
3, 0.572661, 1, 0, 0.504383,0.00298938)    );
  // itree = 1937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302281,-0.00200472) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887487,0.00596689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908147,-0.00384662) , 
1, 0.398315, 1, 0, 0.899443,0.016006) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962025,-0.0108633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975774,-4.20549e-05) , 
17, 0.249492, 1, 0, 0.969096,-0.00915767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867205,0.0023649) , 
3, 0.274041, 1, 0, 0.930719,0.00372543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539938,-0.00141088) , 
17, 0.669893, 1, 0, 0.808269,-0.00777879) , 
15, 0.0419017, 1, 0, 0.835809,-0.000594444) , 
5, 0.0123929, 1, 0, 0.749168,-0.00706998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493304,0.00249864) , 
7, 0.42911, 1, 0, 0.716847,-0.00135765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331165,-0.00187348) , 
10, 0.692796, 1, 0, 0.636362,-0.0085587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145776,0.00102533) , 
7, 0.625305, 1, 0, 0.494143,-0.00210675)    );
  // itree = 1938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873423,-0.00110295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887739,0.00502295) , 
8, 0.00742444, 1, 0, 0.879385,0.0115369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99932,0.0242474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.733749,-0.00630666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616396,-0.00150358) , 
8, 0.0339085, 1, 0, 0.684426,-0.0503939) , 
3, 0.144114, 1, 0, 0.777519,-0.0332839) , 
7, 0.111838, 1, 0, 0.819816,-0.0146732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79487,-0.000741586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314078,0.00270952) , 
16, 0.1279, 1, 0, 0.495237,0.0211899) , 
10, 0.529344, 1, 0, 0.7133,-0.00290412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196077,-0.00216124) , 
8, 0.0502677, 1, 0, 0.551298,-0.0128044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706149,-0.00197983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242844,0.00100406) , 
17, 0.745554, 1, 0, 0.371385,0.00546759) , 
9, 0.0508431, 1, 0, 0.490466,-0.00662629)    );
  // itree = 1939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952686,-0.000323758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970101,0.00846389) , 
14, 0.0224454, 1, 0, 0.961707,0.0149619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575953,0.00107687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45459,-0.00194979) , 
9, 0.0142874, 1, 0, 0.500131,-0.00946502) , 
7, 0.201366, 1, 0, 0.69943,0.001082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619688,0.00437642) , 
14, 0.0602492, 1, 0, 0.685446,0.0080245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820993,-0.00501061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315044,-0.000317645) , 
16, 0.128449, 1, 0, 0.477163,-0.016648) , 
15, 0.105957, 1, 0, 0.610456,-0.000858487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339102,0.0018764) , 
15, 0.200147, 1, 0, 0.560888,0.00435184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466724,0.00131141) , 
13, 1.20355, 1, 0, 0.539312,0.00979718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340271,-0.00199016) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481881,-0.00215762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4982,0.000927175) , 
15, 0.347754, 1, 0, 0.491219,-0.00392079) , 
14, 0.181823, 1, 0, 0.420019,-0.0158006) , 
14, 0.138141, 1, 0, 0.509834,0.0034717)    );
  // itree = 1940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984709,0.00945891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903225,-0.00449397) , 
8, 0.0137359, 1, 0, 0.943451,-0.000145392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855925,-0.00617343) , 
9, 0.0421287, 1, 0, 0.920719,-0.0100428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600696,0.00156325) , 
6, 0.472681, 1, 0, 0.802223,0.00547929) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499844,-0.00294418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420088,-0.00453843) , 
14, 0.0145235, 1, 0, 0.460279,-0.0495742) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386842,-0.00165696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389321,0.00188782) , 
9, 0.0285788, 1, 0, 0.388527,0.0112029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294589,-0.00225941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217311,-0.000534509) , 
13, 0.814101, 1, 0, 0.244324,-0.0176146) , 
14, 0.0786181, 1, 0, 0.288686,-0.0087493) , 
14, 0.0322048, 1, 0, 0.316599,-0.0153902) , 
8, 0.0259463, 1, 0, 0.49337,-0.00779352)    );
  // itree = 1941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267357,-0.00143363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683842,0.00450034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181617,-0.00029641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202217,0.00131799) , 
6, 0.31115, 1, 0, 0.194526,0.0118631) , 
10, 0.491988, 1, 0, 0.265526,0.0200242) , 
15, 0.0974478, 1, 0, 0.266012,0.00934581) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80116,0.00357885) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978048,-0.00312267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976292,0.00927934) , 
7, 0.119617, 1, 0, 0.977157,0.0091207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.918852,-0.00541426) , 
14, 0.0628311, 1, 0, 0.951518,-0.00515567) , 
4, 0.221847, 1, 0, 0.91839,0.00501645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682068,4.67195e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529027,-0.00278801) , 
9, 0.0231626, 1, 0, 0.582913,-0.0393923) , 
13, 0.945271, 1, 0, 0.77276,-0.0142614) , 
5, 0.0182908, 1, 0, 0.504236,-0.00175201)    );
  // itree = 1942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857843,-0.00606308) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993032,-0.00586678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974763,0.00699491) , 
3, 0.157798, 1, 0, 0.983611,0.0103969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951253,-0.00546975) , 
7, 0.15695, 1, 0, 0.97457,0.00379607) , 
4, 0.241868, 1, 0, 0.947986,-0.00589318) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160659,0.00124464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491069,-0.000472605) , 
5, 0.00830711, 1, 0, 0.247009,0.0102987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.856622,0.00454398) , 
2, 0.0199238, 1, 0, 0.34613,0.0166035) , 
17, 0.508319, 1, 0, 0.57609,0.00800787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293608,-1.40535e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673599,-0.00265325) , 
5, 0.0371787, 1, 0, 0.384662,-0.0120773) , 
13, 1.01376, 1, 0, 0.507746,0.000837043)    );
  // itree = 1943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.960535,-0.00371407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.981729,0.00500084) , 
12, 0.240325, 1, 0, 0.969446,-0.000739983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87474,0.00325685) , 
11, 0.543635, 1, 0, 0.942713,0.00793209) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804684,-0.00534939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930636,-0.00050358) , 
2, 0.036584, 1, 0, 0.858336,-0.0283704) , 
8, 0.0174404, 1, 0, 0.902567,-0.00934037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560931,0.00270073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192808,0.000693349) , 
7, 0.545942, 1, 0, 0.303971,0.019717) , 
17, 0.725996, 1, 0, 0.698138,0.000583156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190884,-0.00144048) , 
3, 0.703986, 1, 0, 0.522369,-0.00749349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385515,0.00086801) , 
6, 0.749165, 1, 0, 0.49825,-0.00267387)    );
  // itree = 1944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896374,-0.00536491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.963345,0.000848457) , 
2, 0.0410926, 1, 0, 0.930396,-0.0127408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.981134,0.00371823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87656,0.00449178) , 
6, 0.307378, 1, 0, 0.944889,0.0211397) , 
15, 0.0480254, 1, 0, 0.938925,0.00719741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.858014,0.000626664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640804,-0.00214542) , 
6, 0.335871, 1, 0, 0.749945,-0.0165145) , 
10, 0.44203, 1, 0, 0.870463,-0.00139281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435616,0.00142919) , 
17, 0.741723, 1, 0, 0.761715,0.00575204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24517,-0.000506788) , 
17, 0.94573, 1, 0, 0.556033,-0.000310565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188204,0.00234705) , 
16, 0.406755, 1, 0, 0.507107,0.00351447)    );
  // itree = 1945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94634,0.00796188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.797883,-0.00265048) , 
14, 0.0688879, 1, 0, 0.854604,-0.00225009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668693,0.00472975) , 
13, 0.565131, 1, 0, 0.799771,0.00981261) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892407,-0.00552026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82515,0.00252415) , 
10, 0.375652, 1, 0, 0.859729,-0.00271495) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304903,-0.0024617) , 
17, 0.704812, 1, 0, 0.584634,-0.0231125) , 
13, 0.640495, 1, 0, 0.678093,-0.00880926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965505,0.00679262) , 
12, 0.295402, 1, 0, 0.718743,-0.00339289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206435,0.00176481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410233,0.000108603) , 
13, 1.2311, 1, 0, 0.283742,0.0173772) , 
3, 0.656615, 1, 0, 0.50839,0.00665088)    );
  // itree = 1946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973132,-0.0133727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795117,0.00348067) , 
3, 0.163181, 1, 0, 0.871657,0.0171159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131286,-8.03434e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445756,-0.00316037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.508264,-0.00117883) , 
15, 0.189467, 1, 0, 0.479283,-0.0379666) , 
5, 0.0133063, 1, 0, 0.241019,-0.0126802) , 
10, 0.452409, 1, 0, 0.383709,-0.00593842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31354,0.000758714) , 
11, 1.14873, 1, 0, 0.366696,-0.000579605) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.880315,0.00131948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715809,-0.0040591) , 
9, 0.0319595, 1, 0, 0.799796,-0.023022) , 
5, 0.0357207, 1, 0, 0.436691,-0.00420662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932415,6.41597e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.874877,0.00372396) , 
10, 0.39874, 1, 0, 0.909641,0.0167627) , 
2, 0.0509681, 1, 0, 0.498841,-0.00145104)    );
  // itree = 1947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128539,-0.00104246) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985402,0.00822605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950016,-0.00643571) , 
9, 0.0189667, 1, 0, 0.966421,-0.00317555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83801,0.000720966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793515,0.00478674) , 
9, 0.0200169, 1, 0, 0.816324,0.0281199) , 
11, 0.576686, 1, 0, 0.905199,0.00958943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60041,-0.00130837) , 
11, 1.04613, 1, 0, 0.841148,0.00166065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522646,0.00262069) , 
8, 0.0490654, 1, 0, 0.785223,0.00996969) , 
2, 0.00609693, 1, 0, 0.561736,0.00170027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363162,-0.00144042) , 
9, 0.0537483, 1, 0, 0.514648,-0.0044252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385792,0.00144645) , 
15, 0.323452, 1, 0, 0.496267,-0.000685225)    );
  // itree = 1948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280574,0.00138614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107302,-0.000835147) , 
13, 0.769021, 1, 0, 0.156027,-0.00314342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452099,0.00344145) , 
2, 0.0147881, 1, 0, 0.190989,0.00431735) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619137,-0.00281021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54811,-0.000519929) , 
15, 0.134758, 1, 0, 0.580452,-0.0267228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.871144,0.00375234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78385,-0.00262313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9058,0.000942036) , 
4, 0.32998, 1, 0, 0.840475,-0.0142377) , 
12, 0.159993, 1, 0, 0.85075,0.00425402) , 
12, 0.132893, 1, 0, 0.712532,-0.0115861) , 
12, 0.0797353, 1, 0, 0.416467,-0.00255815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91089,0.00473015) , 
12, 0.239225, 1, 0, 0.449711,0.000435842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980131,0.000822361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773188,-0.00465865) , 
11, 0.468757, 1, 0, 0.882814,-0.0253213) , 
4, 0.4696, 1, 0, 0.503139,-0.00274156)    );
  // itree = 1949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89608,-0.00297073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.908735,0.00816788) , 
9, 0.0358657, 1, 0, 0.900484,0.00309505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958699,0.000581511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381457,-0.0017195) , 
7, 0.233975, 1, 0, 0.610646,-0.0125021) , 
6, 0.181717, 1, 0, 0.747408,-0.00514248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689064,0.00317577) , 
13, 0.801211, 1, 0, 0.73561,0.00235491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653157,-0.00251879) , 
6, 0.370703, 1, 0, 0.725001,-0.00174114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660114,0.00320053) , 
6, 0.461145, 1, 0, 0.715706,0.00453242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172762,-0.00130839) , 
3, 0.700638, 1, 0, 0.537596,-0.00336517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415384,0.000939725) , 
6, 0.65331, 1, 0, 0.508895,0.00223302)    );
  // itree = 1950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.925632,-0.00341599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980404,0.00393756) , 
12, 0.201248, 1, 0, 0.952289,-0.00387997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90052,0.00364552) , 
10, 0.500311, 1, 0, 0.938259,0.00456428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790093,-0.00663325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547525,0.00100866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303087,-0.0018494) , 
11, 0.685017, 1, 0, 0.41046,-0.00817581) , 
11, 0.557275, 1, 0, 0.529929,-0.0194602) , 
7, 0.189324, 1, 0, 0.747752,-0.00664434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233873,-0.00195872) , 
11, 0.798576, 1, 0, 0.591302,-0.0129566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449488,0.00108128) , 
13, 1.04226, 1, 0, 0.568504,-0.00810254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327373,0.00196437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40436,-8.84556e-05) , 
11, 1.21784, 1, 0, 0.369956,0.0134602) , 
11, 1.01819, 1, 0, 0.500122,-0.000676038)    );
  // itree = 1951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.985214,0.00649041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952392,-0.0102642) , 
9, 0.0185278, 1, 0, 0.968203,-0.00652349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966838,0.00699133) , 
10, 0.282974, 1, 0, 0.967571,0.00437686) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171385,-0.00150644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69009,-0.00703968) , 
5, 0.0232231, 1, 0, 0.284745,-0.0395211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4398,-0.000266153) , 
13, 1.10086, 1, 0, 0.354463,-0.0241878) , 
3, 0.364786, 1, 0, 0.541011,-0.0154965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892707,-0.00551333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270465,0.0010884) , 
17, 0.472211, 1, 0, 0.383926,0.0098172) , 
15, 0.233391, 1, 0, 0.496684,-0.00835331)    );
  // itree = 1952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972225,-0.0104073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927859,0.00491302) , 
14, 0.030472, 1, 0, 0.944216,0.00562086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707561,-0.00226892) , 
6, 0.264522, 1, 0, 0.871363,-0.00329734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873898,0.00503983) , 
14, 0.172676, 1, 0, 0.871831,0.00294719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832873,-0.000390566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416416,-0.00296737) , 
10, 0.469156, 1, 0, 0.568921,-0.0308135) , 
13, 0.813414, 1, 0, 0.7597,-0.0095502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578669,0.00157781) , 
6, 0.562372, 1, 0, 0.717852,7.00094e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269948,-0.00185164) , 
17, 1.03717, 1, 0, 0.606905,-0.00981779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133065,0.00102777) , 
7, 0.721505, 1, 0, 0.501352,-0.00462012)    );
  // itree = 1953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921984,-0.00934968) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193083,0.00170329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238172,-0.000216744) , 
15, 0.154022, 1, 0, 0.217686,0.00831877) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.977628,0.00275694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934159,-0.00335162) , 
15, 0.122043, 1, 0, 0.959395,-0.00202617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771352,-0.00292003) , 
13, 0.843003, 1, 0, 0.913271,-0.00977497) , 
12, 0.106193, 1, 0, 0.52663,0.000282445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49761,0.0036759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49712,0.0011044) , 
6, 0.489177, 1, 0, 0.497318,0.030843) , 
6, 0.398447, 1, 0, 0.518187,0.00908486) , 
10, 0.158803, 1, 0, 0.550881,0.00580316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371934,-0.00118096) , 
6, 0.655519, 1, 0, 0.506825,-0.00212857)    );
  // itree = 1954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96032,-0.00925865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917471,0.00348707) , 
13, 0.467199, 1, 0, 0.934126,0.00372563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950201,-0.00876597) , 
4, 0.4696, 1, 0, 0.939571,-0.00405871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754314,0.00547145) , 
11, 0.609572, 1, 0, 0.902129,0.00600597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561104,-0.0010959) , 
6, 0.388526, 1, 0, 0.799329,-0.000934355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640539,0.00214952) , 
11, 0.942089, 1, 0, 0.772369,0.00558815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118651,-0.000829889) , 
7, 0.59681, 1, 0, 0.5318,-0.00055611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395569,0.000998388) , 
6, 0.733947, 1, 0, 0.504719,0.00408051)    );
  // itree = 1955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433202,-3.49727e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189718,0.00137971) , 
11, 0.699402, 1, 0, 0.249934,0.0145362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77638,0.00442919) , 
2, 0.0173799, 1, 0, 0.392774,0.0256829) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999651,0.0223786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92926,-0.00185647) , 
3, 0.143089, 1, 0, 0.963581,-0.00237749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903029,0.00496999) , 
11, 0.58611, 1, 0, 0.943218,0.0145205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915167,-0.00532033) , 
5, 0.0491733, 1, 0, 0.933164,0.000825344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790169,-0.00343281) , 
8, 0.0335832, 1, 0, 0.905254,-0.00660048) , 
12, 0.120162, 1, 0, 0.646519,0.00969833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147213,-0.00140804) , 
10, 0.800038, 1, 0, 0.53208,0.00272901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351809,-0.00126405) , 
6, 0.712512, 1, 0, 0.494989,-0.00389809)    );
  // itree = 1956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131176,-0.00103536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761133,-0.00167007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623434,0.00318687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476132,0.00173533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169801,-9.6903e-05) , 
7, 0.378752, 1, 0, 0.274217,0.0099476) , 
10, 0.480002, 1, 0, 0.323096,0.0166131) , 
10, 0.351365, 1, 0, 0.392956,0.0108249) , 
12, 0.0522438, 1, 0, 0.308309,0.00324747) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.987394,0.000944692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846573,0.00294966) , 
3, 0.286225, 1, 0, 0.922077,0.0183167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.902193,-0.00592928) , 
12, 0.2023, 1, 0, 0.914205,-0.000641035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948584,0.00172592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604892,-0.00263997) , 
17, 0.479507, 1, 0, 0.734159,-0.0331748) , 
10, 0.408698, 1, 0, 0.831365,-0.0156099) , 
2, 0.0269831, 1, 0, 0.493845,-0.00344153)    );
  // itree = 1957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134089,-0.000708287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.346146,0.00183376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158415,0.000604723) , 
16, 0.249042, 1, 0, 0.245671,0.021819) , 
12, 0.049872, 1, 0, 0.208827,0.0117911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.500217,-0.00272715) , 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821315,-0.0039296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869494,0.000394669) , 
14, 0.0850969, 1, 0, 0.846268,-0.0176022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950198,0.00453826) , 
2, 0.042427, 1, 0, 0.882638,-0.00323425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939461,0.00646442) , 
16, 0.115159, 1, 0, 0.898102,0.00973275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890586,0.000528169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636949,-0.00388376) , 
10, 0.44344, 1, 0, 0.773893,-0.0343269) , 
8, 0.0202596, 1, 0, 0.857355,-0.00472093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717267,0.00266) , 
7, 0.367268, 1, 0, 0.834798,0.00352267) , 
12, 0.10353, 1, 0, 0.788684,-0.0046213) , 
12, 0.0877067, 1, 0, 0.487221,0.00391135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94314,0.00673864) , 
2, 0.0601059, 1, 0, 0.51104,0.00576018)    );
  // itree = 1958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96673,-0.0106509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98202,0.00572138) , 
10, 0.224721, 1, 0, 0.972889,-0.00458027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758484,0.00281586) , 
3, 0.324256, 1, 0, 0.895501,0.0139842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68822,-0.00270199) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103775,-0.00114869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236878,0.000598014) , 
12, 0.0556246, 1, 0, 0.171268,-0.00155963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708074,0.000407759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76265,-0.00365345) , 
2, 0.0290486, 1, 0, 0.738819,-0.0252614) , 
12, 0.105076, 1, 0, 0.310255,-0.00736392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848327,0.00169795) , 
2, 0.05109, 1, 0, 0.351406,-0.00521289) , 
10, 0.398774, 1, 0, 0.380662,-0.00803431) , 
10, 0.337085, 1, 0, 0.491951,-0.00327472)    );
  // itree = 1959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144955,-0.001765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136386,0.000170225) , 
14, 0.0776659, 1, 0, 0.139747,-0.00823386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89106,-0.00412408) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517195,0.00303558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678519,0.000713207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474559,-0.000403288) , 
14, 0.06078, 1, 0, 0.551554,-0.00094398) , 
2, 0.0161858, 1, 0, 0.541625,0.0136298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764301,0.00422725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.877157,0.00123101) , 
0, 0.158844, 1, 0, 0.829167,0.0371575) , 
2, 0.0284649, 1, 0, 0.662997,0.0235609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922541,0.0031375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796298,-0.00376275) , 
15, 0.0777556, 1, 0, 0.870589,-0.00633119) , 
5, 0.0421228, 1, 0, 0.720231,0.0153196) , 
16, 0.0511602, 1, 0, 0.741353,0.010321) , 
12, 0.0701653, 1, 0, 0.513484,0.003293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736765,0.000340381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268372,-0.00208766) , 
16, 0.120831, 1, 0, 0.435349,-0.0204154) , 
14, 0.17222, 1, 0, 0.501125,-0.000457137)    );
  // itree = 1960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964087,-0.00194272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51236,-0.0032295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201531,-0.00139858) , 
8, 0.0370661, 1, 0, 0.300745,-0.0328512) , 
3, 0.275362, 1, 0, 0.4597,-0.0258521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204928,0.000637863) , 
16, 0.368007, 1, 0, 0.395591,-0.0175639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96953,-0.00768178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924222,0.00514668) , 
11, 0.493502, 1, 0, 0.950333,0.00795457) , 
2, 0.0365815, 1, 0, 0.549543,-0.010482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293383,0.00216624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817859,-0.00136244) , 
12, 0.0831418, 1, 0, 0.509797,0.0123261) , 
14, 0.154998, 1, 0, 0.541114,-0.00564481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405373,0.00190388) , 
13, 1.0993, 1, 0, 0.52054,4.70447e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415178,-0.00103402) , 
13, 1.30385, 1, 0, 0.504119,-0.00377111)    );
  // itree = 1961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758912,0.00297613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624968,-0.00247997) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.820651,0.00145216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749634,-0.00190095) , 
14, 0.0562763, 1, 0, 0.792536,-0.000174497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612722,0.00228811) , 
10, 0.488936, 1, 0, 0.733715,0.0126199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212085,-0.0014146) , 
16, 0.247698, 1, 0, 0.545394,0.0013291) , 
15, 0.0308566, 1, 0, 0.560319,-0.00401077) , 
9, 0.012343, 1, 0, 0.600121,0.00161352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784117,0.00147949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204447,-0.00193524) , 
3, 0.530285, 1, 0, 0.365088,-0.021504) , 
14, 0.0844151, 1, 0, 0.510105,-0.0072403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306805,0.001577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807594,-0.00109926) , 
4, 0.139375, 1, 0, 0.456092,0.0133122) , 
14, 0.153759, 1, 0, 0.499045,-0.00303168)    );
  // itree = 1962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748832,-0.000296929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605392,-0.00222449) , 
16, 0.0754658, 1, 0, 0.678008,-0.0200392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946853,0.00555567) , 
12, 0.197826, 1, 0, 0.757387,-0.00475333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767521,0.00342657) , 
14, 0.153759, 1, 0, 0.759814,0.00542604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67673,0.00254673) , 
16, 0.106915, 1, 0, 0.740348,0.0135803) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754758,0.000301032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414883,-0.00226434) , 
15, 0.122389, 1, 0, 0.549447,-0.0254162) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691352,0.00116002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.343095,-0.00256665) , 
8, 0.0268594, 1, 0, 0.486838,-0.0177539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175268,0.000499011) , 
8, 0.0382181, 1, 0, 0.256018,0.000667576) , 
16, 0.191669, 1, 0, 0.319182,-0.00494727) , 
16, 0.132995, 1, 0, 0.465762,0.00150097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849406,-0.00397779) , 
12, 0.28826, 1, 0, 0.497986,-0.00145419)    );
  // itree = 1963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989374,0.00991966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.933933,-0.00424427) , 
10, 0.196284, 1, 0, 0.956084,-0.000526445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44484,0.00276039) , 
3, 0.382369, 1, 0, 0.695658,0.0190711) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965022,0.00512815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848053,-0.00228027) , 
14, 0.0669517, 1, 0, 0.903408,-0.00195687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.895818,0.00574921) , 
14, 0.143443, 1, 0, 0.901191,0.00714741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532884,-0.00246478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143879,-0.000353245) , 
7, 0.384803, 1, 0, 0.25608,-0.0174687) , 
3, 0.434898, 1, 0, 0.463844,-0.00954088) , 
9, 0.0215194, 1, 0, 0.539105,-0.000251615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329044,-0.00131136) , 
6, 0.74664, 1, 0, 0.499409,-0.00595894)    );
  // itree = 1964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994305,0.00555047) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622183,-0.00402209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373594,-0.000438908) , 
13, 0.612522, 1, 0, 0.449043,-0.0180121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860055,-0.0135089) , 
4, 0.352304, 1, 0, 0.541735,-0.0301025) , 
3, 0.169097, 1, 0, 0.670888,-0.0209849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971529,0.00727567) , 
12, 0.261219, 1, 0, 0.731259,-0.0115908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7432,0.00494645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361967,0.000531815) , 
3, 0.567577, 1, 0, 0.428227,0.0189351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191343,-0.000291592) , 
17, 1.17983, 1, 0, 0.330143,0.00900682) , 
11, 0.801585, 1, 0, 0.49971,0.00029942)    );
  // itree = 1965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677661,-0.000294571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.965421,0.00771818) , 
1, 0.160228, 1, 0, 0.829807,0.0158434) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974246,-0.0145546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978528,0.00487853) , 
13, 0.621274, 1, 0, 0.976699,-0.000978773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850625,-0.00394493) , 
3, 0.323203, 1, 0, 0.943416,-0.0094267) , 
1, 0.314294, 1, 0, 0.896166,0.00108321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321337,-0.00249277) , 
8, 0.0470072, 1, 0, 0.78535,-0.00652738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221593,0.00145389) , 
3, 0.610519, 1, 0, 0.547921,0.00506362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383593,-0.00050469) , 
6, 0.617531, 1, 0, 0.503422,0.000758834)    );
  // itree = 1966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966349,-0.00755982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973451,-0.00465472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.961572,0.00835079) , 
11, 0.288224, 1, 0, 0.966259,0.0131783) , 
10, 0.258151, 1, 0, 0.966293,0.00369307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587965,-0.00241079) , 
3, 0.353192, 1, 0, 0.815639,-0.0130387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430666,0.00195459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276409,0.000555694) , 
16, 0.316904, 1, 0, 0.334527,0.0129457) , 
16, 0.252531, 1, 0, 0.690153,-0.00626129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381782,-0.00335162) , 
11, 0.977292, 1, 0, 0.644155,-0.0133178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123278,-0.000301463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503303,0.00119376) , 
2, 0.0162775, 1, 0, 0.272884,0.00874479) , 
3, 0.720569, 1, 0, 0.493777,-0.00438167)    );
  // itree = 1967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728063,0.00244763) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999439,0.0220215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724945,-0.00590392) , 
3, 0.132465, 1, 0, 0.866984,-0.0178787) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419204,0.00479055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925356,0.00100877) , 
5, 0.0268967, 1, 0, 0.675199,0.0300814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396032,0.000282869) , 
15, 0.155916, 1, 0, 0.519208,0.0156281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.917388,-0.00373507) , 
5, 0.0527627, 1, 0, 0.590163,0.00949613) , 
13, 0.54614, 1, 0, 0.660188,0.00257137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517572,-0.00283322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235585,-0.00222863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260151,0.000728216) , 
3, 0.794011, 1, 0, 0.248806,-0.0101773) , 
10, 0.450365, 1, 0, 0.303993,-0.0210745) , 
11, 0.86843, 1, 0, 0.481047,-0.00932084) , 
9, 0.00738239, 1, 0, 0.503676,-0.00628699)    );
  // itree = 1968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821936,0.00132542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284723,-0.00250971) , 
17, 0.609122, 1, 0, 0.483717,-0.0241527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150787,0.000839557) , 
17, 0.913705, 1, 0, 0.245703,0.00179773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650811,-0.000440589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572467,0.00415317) , 
16, 0.145724, 1, 0, 0.606812,0.0362871) , 
5, 0.0179688, 1, 0, 0.310258,0.00796338) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980583,0.000144161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812159,-0.00324753) , 
13, 0.637491, 1, 0, 0.900655,-0.0179598) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982552,0.0104618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.929536,-0.00151711) , 
0, 0.265092, 1, 0, 0.956337,0.00854709) , 
1, 0.450689, 1, 0, 0.925005,-0.00636841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615028,-0.00222128) , 
17, 0.649285, 1, 0, 0.819347,-0.0209975) , 
2, 0.0270476, 1, 0, 0.498346,-0.00273653)    );
  // itree = 1969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976026,0.00306973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851243,-0.00444164) , 
6, 0.160512, 1, 0, 0.909953,-0.0134423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616564,0.00149269) , 
11, 0.585804, 1, 0, 0.770603,0.00196239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248332,-0.00310067) , 
10, 0.600327, 1, 0, 0.539517,-0.0190923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205447,0.00120659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330167,-0.000660997) , 
6, 0.535047, 1, 0, 0.271689,0.000532704) , 
11, 0.878751, 1, 0, 0.395303,-0.00852508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995805,0.00693055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914656,0.00636281) , 
3, 0.227674, 1, 0, 0.958708,0.0272399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.794004,-9.2647e-05) , 
10, 0.42355, 1, 0, 0.891194,0.0155368) , 
2, 0.0389756, 1, 0, 0.49451,-0.0037113)    );
  // itree = 1970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97189,-0.00323846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986789,0.0112944) , 
10, 0.329398, 1, 0, 0.979406,0.00821152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564458,-0.00166388) , 
6, 0.40618, 1, 0, 0.785707,-0.0106876) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.973065,0.00429478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.931886,-0.00284814) , 
8, 0.0212322, 1, 0, 0.952347,-0.000581828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760266,0.00265158) , 
10, 0.34511, 1, 0, 0.868872,0.00959492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401309,0.00222907) , 
3, 0.547179, 1, 0, 0.63988,0.025168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249472,-0.000413792) , 
8, 0.0533816, 1, 0, 0.509133,0.0144273) , 
16, 0.0900011, 1, 0, 0.593745,0.00674397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166987,-0.000718786) , 
10, 0.800038, 1, 0, 0.497087,0.0027419)    );
  // itree = 1971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.862417,-0.00204623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690804,0.00378783) , 
6, 0.141105, 1, 0, 0.772275,0.00832902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917827,0.00109702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315388,-0.00275381) , 
17, 0.699149, 1, 0, 0.596247,-0.0200629) , 
6, 0.232142, 1, 0, 0.689333,-0.00504891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94196,0.0066581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387948,-0.00091968) , 
16, 0.134006, 1, 0, 0.62732,0.00779797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368777,0.00190211) , 
13, 0.740822, 1, 0, 0.482262,0.0191108) , 
9, 0.0340848, 1, 0, 0.575205,0.00826685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692637,0.00295085) , 
13, 1.07949, 1, 0, 0.589119,0.0133957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261284,-0.000750228) , 
3, 0.858883, 1, 0, 0.507821,0.00631129)    );
  // itree = 1972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.819235,-0.00477353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537266,0.000850335) , 
11, 0.77529, 1, 0, 0.660372,-0.00192487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15448,-0.0020463) , 
10, 0.505327, 1, 0, 0.326893,-0.0208142) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.9955,0.00577542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972916,0.00734015) , 
3, 0.184353, 1, 0, 0.986112,0.0109715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759511,-0.00275099) , 
13, 0.980363, 1, 0, 0.910803,-0.00664929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.896094,0.0048737) , 
7, 0.20105, 1, 0, 0.906508,0.00800157) , 
4, 0.251814, 1, 0, 0.565658,-0.0089439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196255,0.000166313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803551,0.00257872) , 
4, 0.123967, 1, 0, 0.379011,0.0137178) , 
9, 0.0508431, 1, 0, 0.501536,-0.0011585)    );
  // itree = 1973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999332,0.0148992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.999112,0.0241735) , 
7, 0.156461, 1, 0, 0.999236,0.00526953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944429,-0.00672022) , 
3, 0.145359, 1, 0, 0.980956,-0.00208499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333731,0.00187634) , 
3, 0.23914, 1, 0, 0.661613,0.00988039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.175591,0.000471175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542147,-0.00332116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88114,0.000456226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702309,-0.00284451) , 
11, 0.825493, 1, 0, 0.807325,-0.0177529) , 
5, 0.0263591, 1, 0, 0.704878,-0.0353059) , 
12, 0.0802907, 1, 0, 0.41214,-0.011894) , 
6, 0.267663, 1, 0, 0.516581,-0.00277815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460004,0.00125926) , 
13, 1.22718, 1, 0, 0.505827,0.00290982)    );
  // itree = 1974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988724,-0.00383329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984598,0.00877043) , 
11, 0.505291, 1, 0, 0.987101,0.00420014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.915562,0.00615462) , 
3, 0.280302, 1, 0, 0.967898,0.0177394) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737593,0.00214015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545619,-0.00288262) , 
15, 0.180223, 1, 0, 0.615251,-0.0173024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262502,0.000444515) , 
11, 0.738669, 1, 0, 0.441658,-0.00535779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846771,-0.00578009) , 
2, 0.0491114, 1, 0, 0.496326,-0.0109577) , 
10, 0.346668, 1, 0, 0.656987,-0.0011808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495516,0.00192052) , 
11, 1.01819, 1, 0, 0.619981,0.00764144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167317,-0.00153196) , 
17, 1.16913, 1, 0, 0.50165,-0.00118401)    );
  // itree = 1975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.999038,0.0135664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696005,-0.0042565) , 
3, 0.227195, 1, 0, 0.835514,-0.0286145) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894002,0.00189674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674812,-0.0054368) , 
15, 0.0384746, 1, 0, 0.795805,-0.0124962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667532,0.00256578) , 
14, 0.065529, 1, 0, 0.760096,-0.00358593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346432,0.00203095) , 
11, 0.852011, 1, 0, 0.60066,0.00847441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410454,-0.000966393) , 
11, 1.12727, 1, 0, 0.548498,0.000446037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321767,-0.00290851) , 
15, 0.16363, 1, 0, 0.516629,-0.00578737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482989,0.0018104) , 
14, 0.151917, 1, 0, 0.511566,-0.00133635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180404,0.00106625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733438,0.00209418) , 
4, 0.100453, 1, 0, 0.337973,0.0226523) , 
9, 0.0530281, 1, 0, 0.456414,0.00628502) , 
16, 0.0583095, 1, 0, 0.497246,0.00252608)    );
  // itree = 1976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898709,-0.00194949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922675,0.00360649) , 
7, 0.0518146, 1, 0, 0.91139,0.00511174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818685,-0.00375366) , 
9, 0.0319015, 1, 0, 0.875907,-0.0097178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723801,0.00161897) , 
9, 0.0508431, 1, 0, 0.834333,-0.000969713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713972,-0.00316565) , 
8, 0.025215, 1, 0, 0.816069,-0.00739468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74143,0.00222611) , 
7, 0.220215, 1, 0, 0.799954,-7.38606e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173767,-0.000883116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686521,-0.00449499) , 
4, 0.119521, 1, 0, 0.291349,-0.0253448) , 
7, 0.340336, 1, 0, 0.60789,-0.00957551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205574,0.000617316) , 
17, 1.15082, 1, 0, 0.496388,-0.00399468)    );
  // itree = 1977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723463,-0.00387991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956994,0.00268965) , 
4, 0.428251, 1, 0, 0.847198,-0.0168502) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55515,0.000114547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879808,0.00403168) , 
5, 0.0299885, 1, 0, 0.695932,0.0188837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880587,-0.0012348) , 
5, 0.0463465, 1, 0, 0.753772,0.0098512) , 
16, 0.0576804, 1, 0, 0.788218,6.43813e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588849,-0.0025912) , 
7, 0.176814, 1, 0, 0.745628,-0.00958108) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548497,-0.00235606) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651365,0.000269601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323442,0.00225987) , 
11, 0.777386, 1, 0, 0.418788,0.0264038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555707,0.00232114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185568,-0.000595876) , 
8, 0.034095, 1, 0, 0.255992,-0.00219633) , 
14, 0.0873459, 1, 0, 0.326238,0.0101445) , 
14, 0.0147993, 1, 0, 0.347945,0.00684068) , 
16, 0.1279, 1, 0, 0.49828,0.0006328)    );
  // itree = 1978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96843,-0.00293568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.789655,0.00290256) , 
17, 0.31223, 1, 0, 0.881882,0.0157704) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224694,-0.000726161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816051,0.00241883) , 
4, 0.144361, 1, 0, 0.410984,0.0022348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.811759,-0.00703673) , 
4, 0.334659, 1, 0, 0.511334,-0.0139298) , 
7, 0.120304, 1, 0, 0.619165,-0.0052869) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260269,-0.000721011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.320229,-0.00127206) , 
15, 0.257146, 1, 0, 0.290893,-0.0141704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.878085,0.0052436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956443,-0.0010979) , 
4, 0.27548, 1, 0, 0.921232,0.0188302) , 
2, 0.0174457, 1, 0, 0.545961,-0.000816629) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198648,0.00147365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721369,0.000221366) , 
1, 0.176781, 1, 0, 0.324383,0.0203304) , 
13, 0.866164, 1, 0, 0.426061,0.0106264) , 
14, 0.0688879, 1, 0, 0.502645,0.00431527)    );
  // itree = 1979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722093,-0.00291399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272927,0.00118512) , 
13, 0.540857, 1, 0, 0.396723,0.00631595) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996274,0.0103196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970262,-0.00321398) , 
16, 0.105276, 1, 0, 0.984994,0.00183848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803338,-0.00610761) , 
3, 0.249814, 1, 0, 0.940622,-0.0135977) , 
0, 0.118473, 1, 0, 0.663159,-0.00343902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311682,-0.00377487) , 
13, 0.83588, 1, 0, 0.603101,-0.0108453) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435806,-0.000501074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321324,0.00190976) , 
9, 0.0335927, 1, 0, 0.362831,0.017619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.396857,-0.000535994) , 
13, 1.22719, 1, 0, 0.376391,0.00586314) , 
13, 0.907046, 1, 0, 0.493398,-0.00276022)    );
  // itree = 1980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.959255,-0.00528022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950786,0.00603228) , 
15, 0.144178, 1, 0, 0.955347,0.00329047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523367,-0.00309008) , 
8, 0.0365332, 1, 0, 0.82399,-0.00766735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.364707,0.00213644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94487,-8.87147e-05) , 
5, 0.0262426, 1, 0, 0.634022,0.0176916) , 
13, 0.653886, 1, 0, 0.743295,0.00310474) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46067,-0.00251499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572082,-5.70887e-05) , 
13, 0.904442, 1, 0, 0.514381,-0.0157115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666284,-0.00350762) , 
13, 1.01409, 1, 0, 0.57494,-0.0323685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332085,-0.000207114) , 
3, 0.775032, 1, 0, 0.445841,-0.0175383) , 
13, 0.833709, 1, 0, 0.590904,-0.00747104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210911,0.000960953) , 
10, 0.774301, 1, 0, 0.497516,-0.00207844)    );
  // itree = 1981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576467,-0.00301082) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591241,-0.00107846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540153,0.000396892) , 
16, 0.0808899, 1, 0, 0.563214,-0.00451386) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398295,0.00104454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415611,0.00299755) , 
11, 0.866483, 1, 0, 0.40816,0.0393404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1505,0.000756487) , 
10, 0.712495, 1, 0, 0.276059,0.0249153) , 
8, 0.0235036, 1, 0, 0.337476,0.018621) , 
6, 0.159554, 1, 0, 0.359044,0.0150345) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846764,-0.00342631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945309,0.00341962) , 
2, 0.0426785, 1, 0, 0.892195,-0.00847313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.91301,0.00306602) , 
15, 0.101247, 1, 0, 0.898006,4.43796e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774687,-0.00316865) , 
9, 0.0421287, 1, 0, 0.863722,-0.0119528) , 
12, 0.153739, 1, 0, 0.515032,0.00669316)    );
  // itree = 1982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.980647,0.00914968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96483,-0.0073575) , 
4, 0.360968, 1, 0, 0.973603,0.00626584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552592,-0.00231289) , 
7, 0.315882, 1, 0, 0.851254,-0.00259731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259539,0.00209611) , 
11, 0.740036, 1, 0, 0.683485,0.00561529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450442,-0.00167009) , 
6, 0.350454, 1, 0, 0.613658,-0.00379004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710742,0.00227279) , 
13, 0.881209, 1, 0, 0.631611,0.0030671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211766,-0.0012059) , 
3, 0.705702, 1, 0, 0.436396,-0.00866167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.96511,-0.00467419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85925,0.00454152) , 
17, 0.368529, 1, 0, 0.915722,0.0244271) , 
2, 0.0526698, 1, 0, 0.495527,-0.00457973)    );
  // itree = 1983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775995,0.00172484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630281,0.00369126) , 
13, 0.907046, 1, 0, 0.71758,0.0279537) , 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744113,8.48182e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375031,0.00283762) , 
13, 0.588683, 1, 0, 0.566157,0.018156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948644,-0.00511776) , 
5, 0.0314802, 1, 0, 0.661789,0.010063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292032,-0.00137086) , 
13, 0.769816, 1, 0, 0.509861,-0.00197867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276943,-0.0020124) , 
13, 0.981596, 1, 0, 0.416214,-0.0174932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292061,0.000441395) , 
9, 0.0640115, 1, 0, 0.386182,-0.0113497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.955818,-0.00167307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838268,0.00306987) , 
6, 0.317369, 1, 0, 0.89936,0.0180124) , 
2, 0.0451316, 1, 0, 0.455427,-0.00738778) , 
9, 0.0151488, 1, 0, 0.493052,-0.00231553)    );
  // itree = 1984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577291,0.00344916) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.988508,0.00650788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952612,-0.00310985) , 
10, 0.292598, 1, 0, 0.972568,0.00166041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864428,0.00365467) , 
13, 0.882603, 1, 0, 0.931013,0.0184351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84128,-0.00170054) , 
15, 0.174779, 1, 0, 0.90706,0.00895657) , 
4, 0.154902, 1, 0, 0.834128,0.020627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648092,-0.00434695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392551,0.00230993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291596,-0.000218839) , 
16, 0.309661, 1, 0, 0.344787,0.0183182) , 
7, 0.396002, 1, 0, 0.437147,-0.00363955) , 
7, 0.279942, 1, 0, 0.68716,0.0116432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186535,-0.000668813) , 
17, 1.05521, 1, 0, 0.500337,0.00306555)    );
  // itree = 1985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58878,-0.00256864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.909116,-0.00659086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971779,-0.00740652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886974,0.00350863) , 
6, 0.266833, 1, 0, 0.926616,0.0166347) , 
16, 0.0467993, 1, 0, 0.920818,0.000625883) , 
4, 0.313355, 1, 0, 0.779862,-0.0183706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.972826,-0.00397583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847152,0.00526309) , 
6, 0.23836, 1, 0, 0.909712,0.0270755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600026,-0.00141249) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198972,0.000986998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114125,-0.000641809) , 
10, 0.745839, 1, 0, 0.151954,0.00225139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756357,0.00238932) , 
4, 0.185833, 1, 0, 0.233921,0.00813535) , 
10, 0.50443, 1, 0, 0.292397,0.00301424) , 
10, 0.340288, 1, 0, 0.392153,0.00690247) , 
7, 0.132602, 1, 0, 0.500497,-0.000160003)    );
  // itree = 1986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917583,-0.00850252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970117,-0.016612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98454,-0.00694417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935926,0.00219807) , 
3, 0.185672, 1, 0, 0.959114,0.00355622) , 
6, 0.126275, 1, 0, 0.962781,-0.0034871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.867655,0.00256733) , 
11, 0.571561, 1, 0, 0.940008,0.00223561) , 
9, 0.0143463, 1, 0, 0.93512,-0.00458463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628555,-0.00441669) , 
8, 0.0365559, 1, 0, 0.875315,-0.013535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561652,0.00181079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.158146,0.000774766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270906,-0.000956228) , 
6, 0.388928, 1, 0, 0.218106,-0.00449389) , 
10, 0.538694, 1, 0, 0.310088,0.00687117) , 
3, 0.474222, 1, 0, 0.497902,9.05834e-05)    );
  // itree = 1987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986166,-0.0067119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971034,0.00482829) , 
6, 0.148769, 1, 0, 0.978595,0.00513734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868801,-0.00807642) , 
17, 0.311266, 1, 0, 0.938228,-0.0139533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617969,0.00126424) , 
6, 0.447835, 1, 0, 0.796247,0.00360217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572688,-0.00204671) , 
15, 0.288675, 1, 0, 0.754581,-0.00347788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551746,-0.00279865) , 
16, 0.126683, 1, 0, 0.724881,-0.0095309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687772,0.0029829) , 
16, 0.150255, 1, 0, 0.720994,-0.00421416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901998,0.00401496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383177,-0.00262857) , 
13, 0.67704, 1, 0, 0.56507,-0.0269973) , 
16, 0.178217, 1, 0, 0.68569,-0.00937262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102574,6.70201e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387845,0.00177337) , 
2, 0.00687729, 1, 0, 0.176135,0.00885756) , 
7, 0.504993, 1, 0, 0.503023,-0.0028374)    );
  // itree = 1988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953751,-0.00743625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8912,0.00154347) , 
9, 0.0322791, 1, 0, 0.921149,-0.00194377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340195,0.00344195) , 
7, 0.494868, 1, 0, 0.779956,0.0091383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517679,-0.00182214) , 
13, 0.661612, 1, 0, 0.713189,0.00173181) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910379,0.00671291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628636,0.00292887) , 
10, 0.509813, 1, 0, 0.769761,0.0477131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58721,0.000298791) , 
11, 0.850588, 1, 0, 0.705853,0.0326527) , 
13, 0.749836, 1, 0, 0.710608,0.012608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122161,-0.00162219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332983,5.51606e-05) , 
6, 0.536183, 1, 0, 0.230933,-0.0105662) , 
3, 0.656615, 1, 0, 0.464503,0.000718118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834869,-0.00505771) , 
5, 0.0569643, 1, 0, 0.494407,-0.00306405)    );
  // itree = 1989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176361,7.21083e-05) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.947833,-0.00793526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97979,0.00320299) , 
12, 0.193694, 1, 0, 0.961085,-0.00920293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843683,0.00346646) , 
17, 0.459135, 1, 0, 0.928141,0.00176601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911379,-0.00865893) , 
12, 0.276216, 1, 0, 0.92368,-0.00812936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592655,-0.00325836) , 
11, 0.718548, 1, 0, 0.83805,-0.0188189) , 
5, 0.0120212, 1, 0, 0.646345,-0.0131101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456015,0.00051047) , 
15, 0.277609, 1, 0, 0.607936,-0.00907739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5005,0.0023962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296601,0.000240628) , 
3, 0.716355, 1, 0, 0.346487,0.0125491) , 
11, 0.939654, 1, 0, 0.498076,1.00028e-05)    );
  // itree = 1990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974308,-0.00507016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.889074,0.00330499) , 
6, 0.210621, 1, 0, 0.943167,0.00403174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934391,-0.00753447) , 
0, 0.278309, 1, 0, 0.940772,-0.00401972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.93224,-0.00177089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436276,-0.003727) , 
10, 0.330404, 1, 0, 0.63241,-0.0373261) , 
11, 0.510062, 1, 0, 0.817935,-0.0172875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457956,-0.00223052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29289,0.00175489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157564,-0.000882941) , 
13, 0.770119, 1, 0, 0.194036,-0.00272519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792939,0.00264685) , 
5, 0.0240702, 1, 0, 0.311233,0.00568405) , 
15, 0.0248809, 1, 0, 0.332027,0.000627852) , 
11, 0.702129, 1, 0, 0.536145,-0.00689792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390116,0.000877886) , 
6, 0.733947, 1, 0, 0.507662,-0.00172907)    );
  // itree = 1991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726801,-0.00738928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555275,5.69746e-05) , 
13, 0.606298, 1, 0, 0.644287,-0.0223762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967398,-0.00460145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.94425,0.00680358) , 
17, 0.369465, 1, 0, 0.958944,0.00774432) , 
12, 0.156731, 1, 0, 0.818005,-0.00574703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971741,-0.00289929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547742,0.00166009) , 
3, 0.24682, 1, 0, 0.681016,0.0151678) , 
9, 0.035199, 1, 0, 0.756316,0.00367143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240012,-0.00119332) , 
3, 0.629419, 1, 0, 0.590451,-0.00368252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286203,0.000902872) , 
3, 0.823096, 1, 0, 0.506482,0.00208874)    );
  // itree = 1992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978225,0.000787493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.960378,0.00493163) , 
11, 0.407624, 1, 0, 0.970465,0.00834285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966944,-0.00482472) , 
5, 0.0548892, 1, 0, 0.96939,0.00325856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873181,-0.00410085) , 
17, 0.419437, 1, 0, 0.94702,-0.00411681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437701,0.0024667) , 
17, 0.548496, 1, 0, 0.80516,0.00591114) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661273,-0.00176037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317826,-0.000141949) , 
16, 0.206119, 1, 0, 0.476067,-0.0149151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521051,0.000689111) , 
13, 1.12047, 1, 0, 0.499008,8.79155e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182977,-0.00179144) , 
8, 0.0481859, 1, 0, 0.334683,-0.0150446) , 
11, 0.766497, 1, 0, 0.523829,-0.00661978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381522,0.0014016) , 
15, 0.315909, 1, 0, 0.502357,-0.00240696)    );
  // itree = 1993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200757,0.000447603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974781,-2.39171e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441653,-0.00289167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908183,-0.00658292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.826331,0.00021363) , 
10, 0.375652, 1, 0, 0.869373,-0.0157758) , 
12, 0.127931, 1, 0, 0.696979,-0.0298992) , 
13, 0.514074, 1, 0, 0.781018,-0.0208634) , 
5, 0.0115441, 1, 0, 0.561254,-0.0108527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.948347,-0.00199485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972291,0.00919542) , 
16, 0.0599053, 1, 0, 0.959858,0.00907284) , 
4, 0.464706, 1, 0, 0.640168,-0.0069079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182833,-5.14347e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540093,0.00252711) , 
6, 0.467725, 1, 0, 0.302991,0.0138392) , 
11, 0.926667, 1, 0, 0.532479,-0.000281598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377816,-0.000889594) , 
6, 0.702036, 1, 0, 0.499093,-0.00469271)    );
  // itree = 1994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766193,0.00358782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22679,0.00198865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174841,-0.000384306) , 
6, 0.255286, 1, 0, 0.190128,0.00254265) , 
10, 0.366774, 1, 0, 0.248242,0.00715214) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.754699,0.00218973) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965548,-0.00705445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966312,0.00578497) , 
11, 0.3629, 1, 0, 0.965928,0.00409614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901236,-0.00520997) , 
16, 0.102777, 1, 0, 0.937685,-0.00908818) , 
4, 0.215825, 1, 0, 0.896374,-0.00113333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606748,-0.00328598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558218,-0.00086844) , 
6, 0.534909, 1, 0, 0.572651,-0.0301644) , 
13, 1.01763, 1, 0, 0.776447,-0.0118882) , 
2, 0.0180318, 1, 0, 0.496723,-0.00180492)    );
  // itree = 1995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65365,0.000302963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438826,-0.00290174) , 
16, 0.161332, 1, 0, 0.555499,-0.0160565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155409,0.000854839) , 
7, 0.51495, 1, 0, 0.334521,-0.000833126) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990119,0.00986827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890907,-0.00390926) , 
10, 0.29736, 1, 0, 0.946317,-0.00138239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924051,0.00372998) , 
14, 0.0685904, 1, 0, 0.936444,0.00905972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783307,0.00292222) , 
11, 0.823829, 1, 0, 0.897463,0.0187622) , 
2, 0.0200351, 1, 0, 0.555859,0.00687139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87791,-0.00661356) , 
2, 0.0601059, 1, 0, 0.577492,0.00376379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250747,-0.00121142) , 
3, 0.854198, 1, 0, 0.49568,-0.00331849)    );
  // itree = 1996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529103,0.0016539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.926802,-0.00507916) , 
5, 0.0238641, 1, 0, 0.700642,0.000754519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350246,-0.00211185) , 
13, 0.892666, 1, 0, 0.52308,-0.020101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783987,0.00219992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231666,-0.000883703) , 
7, 0.309404, 1, 0, 0.432697,0.00166932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413847,0.00180818) , 
9, 0.0407224, 1, 0, 0.423594,0.0148233) , 
15, 0.0986276, 1, 0, 0.473658,-0.00275157) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400021,0.000628362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515761,-0.000954817) , 
15, 0.304025, 1, 0, 0.454163,-0.00194683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254014,-0.00186842) , 
9, 0.0548856, 1, 0, 0.327152,-0.0214447) , 
15, 0.218706, 1, 0, 0.421837,-0.00936353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.978655,-0.00709272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851995,0.00295575) , 
3, 0.291122, 1, 0, 0.909661,0.0177756) , 
5, 0.0450794, 1, 0, 0.500035,-0.00501316)    );
  // itree = 1997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420584,0.00172107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87066,-0.00297726) , 
2, 0.023985, 1, 0, 0.68676,-0.00266004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597028,-0.00552363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563584,-0.000957693) , 
9, 0.034192, 1, 0, 0.580513,-0.0377089) , 
15, 0.0296069, 1, 0, 0.635466,-0.0195808) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24329,0.00144501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179557,-0.000436421) , 
9, 0.0359451, 1, 0, 0.196297,0.00034934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544936,-0.00219352) , 
4, 0.109846, 1, 0, 0.239442,-0.00549304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.966646,-0.000780186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781438,0.00219371) , 
3, 0.309228, 1, 0, 0.86011,0.0213488) , 
4, 0.180719, 1, 0, 0.441153,0.00323026) , 
14, 0.0518028, 1, 0, 0.501916,-0.00390292)    );
  // itree = 1998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838197,0.00133905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485105,-0.00344409) , 
13, 0.85369, 1, 0, 0.661756,-0.0250831) , 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964165,-0.00533851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849591,0.00419006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958894,0.00251962) , 
5, 0.0292269, 1, 0, 0.916843,0.0168405) , 
11, 0.330053, 1, 0, 0.930581,0.00905022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594367,-0.00228054) , 
10, 0.593258, 1, 0, 0.856659,-0.000209493) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.684333,-0.000725237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586739,0.00236755) , 
8, 0.0243408, 1, 0, 0.635428,0.011165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486686,0.00291634) , 
14, 0.0978118, 1, 0, 0.562433,0.0317449) , 
11, 0.670645, 1, 0, 0.720206,0.01461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30341,0.000432503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138395,-0.00104121) , 
10, 0.694102, 1, 0, 0.204105,-0.0062923) , 
17, 0.965807, 1, 0, 0.47582,0.00471228) , 
15, 0.0243007, 1, 0, 0.503023,0.000353143)    );
  // itree = 1999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178477,-0.00123342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658553,0.00334113) , 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.962357,-0.00145253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764841,0.00236018) , 
13, 0.922147, 1, 0, 0.904863,0.00930964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705423,-0.00326876) , 
10, 0.415831, 1, 0, 0.849879,-0.0069235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722967,0.00287311) , 
10, 0.55811, 1, 0, 0.830817,0.00119661) , 
5, 0.0180526, 1, 0, 0.801686,0.00970855) , 
2, 0.0120351, 1, 0, 0.643207,0.0022579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175155,-0.0014556) , 
10, 0.711623, 1, 0, 0.514754,-0.00436176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505786,0.000480312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466767,0.00254465) , 
15, 0.259181, 1, 0, 0.485287,0.0215219) , 
14, 0.149881, 1, 0, 0.510644,-0.000752145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.311272,-0.00280494) , 
15, 0.364278, 1, 0, 0.490589,-0.00508049)    );
   return;
};
 
// Clean up
inline void ReadBDTG::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
